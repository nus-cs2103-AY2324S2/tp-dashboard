[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T15-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T15-2/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"## Arona Pro","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"* This is **a sample project given to Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"* The project simulates an ongoing software project for a desktop application (called _AronaPro_) catered for","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"  Computer Science teaching assistants who appreciate an organised and vibrant approach to query,","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"  and manage an array of students and professorsâ€™ contacts with CLI.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"### Main features include:","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"#### View Contact Information","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"Description: `View` command allows you to see all the existing contacts of your students","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"\u003eFormat: `view`","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"#### Add New Contacts","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"Description: `Add` command allows you to add new contacts of your students into the address book","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"\u003eFormat: `id/NUSID n/NAME p/PHONE [e/EMAIL] [t/TAG]`","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"#### Edit Existing Contacts","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"Description: `Edit` command allows you to edit existing contacts of your students in the address book","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"\u003eFormat: `edit id/NUSID [n/NEWNAME] [p/NEWPHONE] [e/NEWEMAIL]`","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"#### Delete Existing Contacts","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"Description: `Delete` command allows you to delete existing contacts in the address book","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"\u003eFormat: `delete id/NUSID`","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"#### Filtering Existing Contacts","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"Description: `Filter` command allows you to filter desired contacts in the address book based on group","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"and tag specified","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"\u003eFormat: `filter [n/NAME] [p/PHONE] [e/EMAIL] [g/GROUP] [t/TAG]`","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"#### Assign contacts a tutorial group","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"Description: `Assign` command allows you to assign students into their respective tutorial groups in the","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"address book","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"\u003eFormat: `assign id/NUSID [g/GROUP] [t/TAG]`","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"#### Add Schedule","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"Description: `Schedyle` command allows you to schedule an appointment with students","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"\u003eFormat: `schedule id/NUSID d/DATE from/FROM [to/TO] [t/TAG] [r/REMARK]`","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheahTJ":41,"hjuntan":1,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"    archiveFileName \u003d \u0027aronapro.jar\u0027","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"run {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheahTJ":5,"hjuntan":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"### Cheah Tze Juen","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"\u003cimg src\u003d\"images/cheahtj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"[[github](https://github.com/cheahTJ)]","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"[[portfolio](team/cheahtj.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"* Roles: Team Lead","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    * Dedicates tasks among team and facilitate coordination among team members","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"### Tan Hong Jun","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"\u003cimg src\u003d\"images/hjuntan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"[[github](http://github.com/hjuntan)]","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"[[portfolio](team/hjuntan.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"* Role: Documentation","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"* Responsibilities: Ensures that all documentation are up-to-date and are specific to the user","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"### Loh Jin Hun","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"\u003cimg src\u003d\"images/ragnapop.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"[[github](http://github.com/Ragnapop)] [[portfolio](team/ragnapop.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"* Role: Testing","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"* Responsibilities: Ensures that all features are properly tested, even on edge cases","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"### Chen Kuan Min","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"\u003cimg src\u003d\"images/rikko1204.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"[[github](http://github.com/Rikko1204)]","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"[[portfolio](team/rikko1204.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"* Role: Scheduling and tracking","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"* Responsibilities: Ensures that the team is on pace with the 2 weeks sprint and helps assign","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"  task equally to members","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"### Guo Yuhao","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"\u003cimg src\u003d\"images/ringoftheking.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"[[github](http://github.com/RingoftheKing)]","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"[[portfolio](team/ringoftheking.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"* Responsibilities: Ensures that the team is focussed on the individual task and is able to deliver the intended feature","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"cheahTJ":31,"hjuntan":2,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"# AronaPro Developer Guide","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"AronaPro is based on the AddressBook Level 3(AB3) sample project created by the [SE_EDU initiative](https://se-education.org) under the CS2103T module in NUS School of Computing.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete id/E0123456`.","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-04-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `ScheduleListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-04-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-T15-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete id/E0123456\")` API call as an example.","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete E0123456` Command\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"hjuntan"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-04-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"hjuntan"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Group` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Group` object per unique group, instead of each `Person` needing their own `Group` objects. Additionally, a `Remark` can also be encapsulated in the `Schedule` class to ensure more OOP-ness while allowing each `Person` to have multiple `Schedules` with its corresponding `Remark`\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"hjuntan"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-04-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Rikko1204"},"content":"### `Add` feature","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"Ragnapop"},"content":"`Add` for a person can be added using the `add` command. The `AddCommand` class is responsible for handling the addition of a person. This command is implemented through `AddCommand` which extends the `Command` class.","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"A new `Person` can be added by specifying `NUSID`, `name`, `phone`, `email`, `tags` and optional `group`.","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"Rikko1204"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"Rikko1204"},"content":"**Note:** There can be 0 or more optional `group`.","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"Rikko1204"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"Ragnapop"},"content":"#### Implementation","lastModifiedDate":"2024-04-13"},{"lineNumber":174,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"Rikko1204"},"content":"Given below is an example usage scenario and how the `AddCommand` mechanism behaves at each step.","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"Rikko1204"},"content":"Step 1. The user executes `add` command.","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"Rikko1204"},"content":"Step 2. The `AddressBookParser` will call `parseCommand` on the user\u0027s input string and return an instance of `AddCommandParser`.","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"Rikko1204"},"content":"Step 3. `AddCommandParser` will call `parse` which create instances of objects for each of the fields and return an instance of `AddCommand`.","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"Rikko1204"},"content":"Step 4. The `LogicManager` calls the `execute` method in `AddCommand`.","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"Rikko1204"},"content":"Step 5. The `execute` method in `AddCommand` executes and calls `Model#addPerson()` to add the person to the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"Rikko1204"},"content":"Step 6. Success message is printed onto the results display to notify user.","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"Rikko1204"},"content":"**Note:** If a command fails its execution, it will not call `Model#addPerson()` and the person will not be added to the address book.","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"Rikko1204"},"content":"The following sequence diagram shows how an add operation goes through the `Logic` component:","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"Rikko1204"},"content":"\u003cpuml src\u003d\"diagrams/AddSequenceDiagram.puml\" alt\u003d\"AddSequenceDiagram\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"cheahTJ"},"content":"The following activity diagram summarizes what happens when a user inputs an add command:","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"Rikko1204"},"content":"\u003cpuml src\u003d\"diagrams/AddDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"Rikko1204"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"Rikko1204"},"content":"**How add executes**","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"cheahTJ"},"content":"* User inputs an `add` command with `NUSID`, `name`, `phone`, `email`, `tags` and optional `group` fields. The inputs are parsed and a `AddCommand` is created.","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"Rikko1204"},"content":"* The instances of the relevant fields are created and the person is added to the model.","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"Rikko1204"},"content":"**Alternative considerations**  ","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"Rikko1204"},"content":"* **Alternative 1 (current choice):** Create instances of objects for each of the fields and add the person to the model.","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"Rikko1204"},"content":"    * Pros: Allow for each field to be validated before adding the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"cheahTJ"},"content":"    * Cons: Additional checks are required.","lastModifiedDate":"2024-04-12"},{"lineNumber":215,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"cheahTJ"},"content":"### `Delete` feature","lastModifiedDate":"2024-04-15"},{"lineNumber":218,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"cheahTJ"},"content":"A person or persons can be deleted using the `Delete` command. The `DeleteCommand` class is responsible for handling the deletion of a person/persons. This command is implemented through `DeleteCommand` which extends the `Command` class.","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"cheahTJ"},"content":"A `Person` can be deleted by specifying `NUSID` or `GROUP`.","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"cheahTJ"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"cheahTJ"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"cheahTJ"},"content":"#### Implementation","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"cheahTJ"},"content":"Given below is an example usage scenario and how the `DeleteCommand` mechanism behaves at each step.","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"cheahTJ"},"content":"Step 1. The user executes `delete` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"cheahTJ"},"content":"Step 2. The `AddressBookParser` will call `parseCommand` on the user\u0027s input string and return an instance of `DeleteCommandParser`.","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"cheahTJ"},"content":"Step 3. `DeleteCommandParser` will call `parse` which create instances of objects for each of the fields and return an instance of `DeleteCommand`.","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"cheahTJ"},"content":"Step 4. The `LogicManager` calls the `execute` method in `DeleteCommand`.","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"cheahTJ"},"content":"Step 5. The `execute` method in `DeleteCommand` executes and calls `Model#deletePerson()` to delete the person/persons from the address book.","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"cheahTJ"},"content":"Step 6. Success message is printed onto the results display to notify user.","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"cheahTJ"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"cheahTJ"},"content":"**Note:** If a command fails its execution, it will not call `Model#deletePerson()` and the person/persons will not be deleted from the address book.","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"cheahTJ"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":248,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"cheahTJ"},"content":"The following sequence diagram shows how a delete operation goes through the `Logic` component:","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"cheahTJ"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"DeleteSequenceDiagram\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"cheahTJ"},"content":"The following activity diagram summarizes what happens when a user inputs a delete command:","lastModifiedDate":"2024-04-15"},{"lineNumber":254,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"cheahTJ"},"content":"\u003cpuml src\u003d\"diagrams/DeleteDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":256,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"cheahTJ"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"cheahTJ"},"content":"**How add executes**","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"cheahTJ"},"content":"* User inputs an `delete` command with either `NUSID` or `GROUP`. The inputs are parsed and a `DeleteCommand` is created.","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"cheahTJ"},"content":"* The instances of the relevant fields are created and the person/person are deleted from the model.","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"cheahTJ"},"content":"**Alternative considerations**","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"cheahTJ"},"content":"* **Alternative 1 (current choice):** Create instances of objects for each of the fields and delete the person/persons from the model.","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"cheahTJ"},"content":"    * Pros: Allow for each field to be validated before deleting the person/persons.","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"cheahTJ"},"content":"    * Cons: Additional checks are required.","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"cheahTJ"},"content":"* **Alternative 2:** Creates separate command to delete either specifically a person or everybody from that group.","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"cheahTJ"},"content":"    * Pros: Allow for user to have separate command so that there is a distinct command carrying out a certain functionality, to prevent confusion from the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"cheahTJ"},"content":"    * Cons: More commands are needed for the user to remember.","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"cheahTJ"},"content":"### `Edit` feature","lastModifiedDate":"2024-04-12"},{"lineNumber":274,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":275,"author":{"gitId":"cheahTJ"},"content":"#### Implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":276,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":277,"author":{"gitId":"cheahTJ"},"content":"`Edit` on a person can be done using the `edit` command. The `EditCommand` class is responsible for handling the editing of a person\u0027s information. This command is implemented through `EditCommand` which extend the `Command` class.","lastModifiedDate":"2024-04-14"},{"lineNumber":278,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":279,"author":{"gitId":"cheahTJ"},"content":"A new `Edit` can be added by specifying a compulsory `NUSID`, while `NAME`, `PHONE_NUMBER`, `EMAIL`, `TAG` and `GROUP` are optional fields but the user needs to enter at least 1 of these optional fields.","lastModifiedDate":"2024-04-14"},{"lineNumber":280,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":281,"author":{"gitId":"cheahTJ"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":282,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":283,"author":{"gitId":"cheahTJ"},"content":"**Note:** Existing values will be replaced by and updated to the new input values.","lastModifiedDate":"2024-04-12"},{"lineNumber":284,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":285,"author":{"gitId":"cheahTJ"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":286,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":287,"author":{"gitId":"cheahTJ"},"content":"Given below is an example usage scenario and how the `EditCommand` mechanism behaves at each step.","lastModifiedDate":"2024-04-12"},{"lineNumber":288,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":289,"author":{"gitId":"cheahTJ"},"content":"Step 1. The user executes `Edit` command.","lastModifiedDate":"2024-04-12"},{"lineNumber":290,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":291,"author":{"gitId":"cheahTJ"},"content":"Step 2. The `AddressBookParser` will call `parseCommand` on the user\u0027s input string and return an instance of `EditCommandParser`.","lastModifiedDate":"2024-04-12"},{"lineNumber":292,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":293,"author":{"gitId":"cheahTJ"},"content":"Step 3. `EditCommandParser` will call `parse` which create instances of objects for each of the fields and return an instance of `EditCommand`.","lastModifiedDate":"2024-04-12"},{"lineNumber":294,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":295,"author":{"gitId":"cheahTJ"},"content":"Step 4. The `LogicManager` calls the `execute` method in `EditCommand`.","lastModifiedDate":"2024-04-12"},{"lineNumber":296,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":297,"author":{"gitId":"cheahTJ"},"content":"Step 5. The `execute` method in `EditCommand` executes and calls `Model#getFilteredPersonListWithNusId()` to get a list of person in the address book and filter to find the relevant person with the given `NUSID`.","lastModifiedDate":"2024-04-14"},{"lineNumber":298,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":299,"author":{"gitId":"cheahTJ"},"content":"Step 6. `Model#setPerson()` is called to update the contact information for that person.","lastModifiedDate":"2024-04-12"},{"lineNumber":300,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":301,"author":{"gitId":"cheahTJ"},"content":"Step 7. `Model#updateFilteredPersonList()` is called to update the person list.","lastModifiedDate":"2024-04-12"},{"lineNumber":302,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":303,"author":{"gitId":"cheahTJ"},"content":"Step 8. Success message is printed onto the results display to notify user.","lastModifiedDate":"2024-04-12"},{"lineNumber":304,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":305,"author":{"gitId":"cheahTJ"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":307,"author":{"gitId":"cheahTJ"},"content":"**Note:** If a command fails its execution, it will not call `Model#setPerson()` and the contact information will not be updated for that person.","lastModifiedDate":"2024-04-12"},{"lineNumber":308,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":309,"author":{"gitId":"cheahTJ"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":310,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":311,"author":{"gitId":"cheahTJ"},"content":"The following sequence diagram shows how a schedule operation goes through the `Logic` component:","lastModifiedDate":"2024-04-12"},{"lineNumber":312,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":313,"author":{"gitId":"cheahTJ"},"content":"\u003cpuml src\u003d\"diagrams/EditSequenceDiagram.puml\" alt\u003d\"EditSequenceDiagram\" /\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":314,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":315,"author":{"gitId":"cheahTJ"},"content":"The following activity diagram summarizes what happens when a user inputs an Edit command:","lastModifiedDate":"2024-04-12"},{"lineNumber":316,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":317,"author":{"gitId":"cheahTJ"},"content":"\u003cpuml src\u003d\"diagrams/EditDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":318,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":319,"author":{"gitId":"cheahTJ"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-12"},{"lineNumber":320,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":321,"author":{"gitId":"cheahTJ"},"content":"**How edit executes**","lastModifiedDate":"2024-04-12"},{"lineNumber":322,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":323,"author":{"gitId":"cheahTJ"},"content":"* User inputs a `Edit` command with `NUSID`, and at least 1 of these optional fields: `NAME`, `PHONE_NUMBER`, `EMAIL`, `TAG` and `GROUP`. The inputs are parsed and a `EditCommand` is created.","lastModifiedDate":"2024-04-14"},{"lineNumber":324,"author":{"gitId":"cheahTJ"},"content":"* A list of persons is retrieved from `model` and the relevant person is found by matching `NUSID`.","lastModifiedDate":"2024-04-14"},{"lineNumber":325,"author":{"gitId":"cheahTJ"},"content":"* The relevant fields are updated for the person and the person is set back into the model.","lastModifiedDate":"2024-04-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":328,"author":{"gitId":"cheahTJ"},"content":"**Alternative considerations**","lastModifiedDate":"2024-04-12"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":330,"author":{"gitId":"cheahTJ"},"content":"* **Alternative 1 (current choice):** Create instances of objects for each of the fields and edits the person\u0027s contact information to the model.","lastModifiedDate":"2024-04-12"},{"lineNumber":331,"author":{"gitId":"cheahTJ"},"content":"    * Pros: Allow for each field to be validated before editing the person.","lastModifiedDate":"2024-04-12"},{"lineNumber":332,"author":{"gitId":"cheahTJ"},"content":"    * Cons: Additional checks are required.","lastModifiedDate":"2024-04-12"},{"lineNumber":333,"author":{"gitId":"Rikko1204"},"content":"    ","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":335,"author":{"gitId":"Rikko1204"},"content":"### `Schedule` feature","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"Ragnapop"},"content":"#### Implementation","lastModifiedDate":"2024-04-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":339,"author":{"gitId":"Ragnapop"},"content":"`Schedule` for a person can be added or removed using the `schedule` command. The `ScheduleCommand` class is responsible for handling the scheduling of events for a person. This command is implemented through `ScheduleCommand` which extends the `Command` class.","lastModifiedDate":"2024-04-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"cheahTJ"},"content":"A new `Schedule` can be added by specifying `NUSID`, `schedule` and `remark`. If the `schedule` and `remark` prefixes are not specified, the schedule will be removed instead.","lastModifiedDate":"2024-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"Rikko1204"},"content":"**Note:** `schedule` and `remark` are either both present or absent.","lastModifiedDate":"2024-04-10"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"Rikko1204"},"content":"Given below is an example usage scenario and how the `ScheduleCommand` mechanism behaves at each step.","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":351,"author":{"gitId":"Rikko1204"},"content":"Step 1. The user executes `Schedule` command.","lastModifiedDate":"2024-04-10"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":353,"author":{"gitId":"Rikko1204"},"content":"Step 2. The `AddressBookParser` will call `parseCommand` on the user\u0027s input string and return an instance of `ScheduleCommandParser`.","lastModifiedDate":"2024-04-02"},{"lineNumber":354,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":355,"author":{"gitId":"Rikko1204"},"content":"Step 3. `ScheduleCommandParser` will call `parse` which create instances of objects for each of the fields and return an instance of `ScheduleCommand`.","lastModifiedDate":"2024-04-02"},{"lineNumber":356,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":357,"author":{"gitId":"Rikko1204"},"content":"Step 4. The `LogicManager` calls the `execute` method in `ScheduleCommand`.","lastModifiedDate":"2024-04-02"},{"lineNumber":358,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":359,"author":{"gitId":"cheahTJ"},"content":"Step 5. The `execute` method in `ScheduleCommand` executes and calls `Model#getFilteredPersonList()` to get a list of person in the address book and filter to find the relevant person with the given `NUSID`. ","lastModifiedDate":"2024-04-14"},{"lineNumber":360,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":361,"author":{"gitId":"Rikko1204"},"content":"Step 6. `Model#setPerson()` is called to update the schedule for that person.","lastModifiedDate":"2024-04-02"},{"lineNumber":362,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":363,"author":{"gitId":"Rikko1204"},"content":"Step 7. Success message is printed onto the results display to notify user.","lastModifiedDate":"2024-04-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":367,"author":{"gitId":"Rikko1204"},"content":"**Note:** If a command fails its execution, it will not call `Model#setPerson()` and the schedule will not be updated for that person.","lastModifiedDate":"2024-04-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":371,"author":{"gitId":"Rikko1204"},"content":"The following sequence diagram shows how a schedule operation goes through the `Logic` component:","lastModifiedDate":"2024-04-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"Rikko1204"},"content":"\u003cpuml src\u003d\"diagrams/ScheduleSequenceDiagram.puml\" alt\u003d\"ScheduleSequenceDiagram\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"Rikko1204"},"content":"The following activity diagram summarizes what happens when a user inputs a schedule command:","lastModifiedDate":"2024-04-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"Rikko1204"},"content":"\u003cpuml src\u003d\"diagrams/ScheduleDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"Rikko1204"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"Rikko1204"},"content":"**How schedule executes**","lastModifiedDate":"2024-04-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"cheahTJ"},"content":"* User inputs a `Schedule` command with `NUSID`, `schedule` and  `remark`. The inputs are parsed and a `ScheduleCommand` is created.","lastModifiedDate":"2024-04-14"},{"lineNumber":384,"author":{"gitId":"cheahTJ"},"content":"* A list of persons is retrieved from `model` and the relevant person is found by matching `NUSID`.","lastModifiedDate":"2024-04-14"},{"lineNumber":385,"author":{"gitId":"Rikko1204"},"content":"* The relevant fields are updated for the person and the person is set back into the model.","lastModifiedDate":"2024-04-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"Rikko1204"},"content":"**Why is it implemented this way?**","lastModifiedDate":"2024-04-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"Rikko1204"},"content":"* The functionality of adding and removing schedule is similar to the `EditCommand`. Both require changes in the `Person` object.","lastModifiedDate":"2024-04-02"},{"lineNumber":390,"author":{"gitId":"Rikko1204"},"content":"* Hence, the approach is similar to how `edit` command works.","lastModifiedDate":"2024-04-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"Rikko1204"},"content":"**Alternative considerations**","lastModifiedDate":"2024-04-02"},{"lineNumber":393,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":394,"author":{"gitId":"Rikko1204"},"content":"* **Alternative 1 (current choice):** Set the schedule for the person by indicating `schedule` and `remark`, otherwise remove schedule.","lastModifiedDate":"2024-04-10"},{"lineNumber":395,"author":{"gitId":"Rikko1204"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2024-04-02"},{"lineNumber":396,"author":{"gitId":"Rikko1204"},"content":"    * Cons: Additional checks are required to check if it is an add or remove schedule command.","lastModifiedDate":"2024-04-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"Rikko1204"},"content":"* **Alternative 2:** Introduce add schedule and remove schedule command as separate commands.","lastModifiedDate":"2024-04-02"},{"lineNumber":399,"author":{"gitId":"Rikko1204"},"content":"    * Pros: There is usage of Single Responsibility Principle.","lastModifiedDate":"2024-04-02"},{"lineNumber":400,"author":{"gitId":"Rikko1204"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-04-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"Rikko1204"},"content":"* **Alternative 3:** Since schedule and edit commands are similar, we could consider adding a generic class which both extend from.","lastModifiedDate":"2024-04-02"},{"lineNumber":403,"author":{"gitId":"Rikko1204"},"content":"    * Pros: It follows the DRY principle.","lastModifiedDate":"2024-04-02"},{"lineNumber":404,"author":{"gitId":"Rikko1204"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-04-02"},{"lineNumber":405,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":406,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":407,"author":{"gitId":"RingoftheKing"},"content":"### `Find` feature","lastModifiedDate":"2024-04-13"},{"lineNumber":408,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":409,"author":{"gitId":"RingoftheKing"},"content":"A `Person` has many details one may query for, this command searches for contacts that matches all the given details.","lastModifiedDate":"2024-04-13"},{"lineNumber":410,"author":{"gitId":"cheahTJ"},"content":"Currently, this command supports finding by `NUSID`, `name`, `phone`, `email`, `group`s, `tag` fields.","lastModifiedDate":"2024-04-14"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":412,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":414,"author":{"gitId":"RingoftheKing"},"content":"**Note:** `find` requires at least one field mentioned above to be an input","lastModifiedDate":"2024-04-13"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":418,"author":{"gitId":"RingoftheKing"},"content":"Given below is an example usage scenario and how the `find` mechanism behaves at each step.","lastModifiedDate":"2024-04-13"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":420,"author":{"gitId":"RingoftheKing"},"content":"Step 1. The user executes `find` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":422,"author":{"gitId":"RingoftheKing"},"content":"Step 2. The `AddressBookParser` will call `parseCommand` on the user\u0027s input string and return an instance of `FindCommandParser`.","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":424,"author":{"gitId":"RingoftheKing"},"content":"Step 3. `FindCommandParser` will call `parse` which create instances of objects for each of the fields and return an instance of `FindCommand`.","lastModifiedDate":"2024-04-14"},{"lineNumber":425,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":426,"author":{"gitId":"RingoftheKing"},"content":"Step 4. The `LogicManager` calls the `execute` method in `FindCommand`.","lastModifiedDate":"2024-04-13"},{"lineNumber":427,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":428,"author":{"gitId":"RingoftheKing"},"content":"Step 5. The `execute` method in `FindCommand` executes and finds the relevant person(s) with the given fields.","lastModifiedDate":"2024-04-13"},{"lineNumber":429,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":430,"author":{"gitId":"RingoftheKing"},"content":"Step 6. `Model#updateFilteredPersonList()` is called to update the list of persons displayed in AronaPro.","lastModifiedDate":"2024-04-13"},{"lineNumber":431,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":432,"author":{"gitId":"RingoftheKing"},"content":"Step 7. Success message is printed onto the results display to notify user.","lastModifiedDate":"2024-04-13"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":436,"author":{"gitId":"RingoftheKing"},"content":"**Note:** If a command fails its execution, it will not call `Model#updateFilteredPersonList()` and the list of persons displayed remains the same.","lastModifiedDate":"2024-04-13"},{"lineNumber":437,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":438,"author":{"gitId":"RingoftheKing"},"content":"**Note:** If a command finds no person, it will display an empty list and not an error message.","lastModifiedDate":"2024-04-13"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":440,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":442,"author":{"gitId":"hjuntan"},"content":"The following sequence diagram shows how a find operation goes through the `Logic` component:","lastModifiedDate":"2024-04-15"},{"lineNumber":443,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":444,"author":{"gitId":"hjuntan"},"content":"\u003cpuml src\u003d\"diagrams/FindSequenceDiagram.puml\" alt\u003d\"FindSequenceDiagram\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":445,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":446,"author":{"gitId":"hjuntan"},"content":"The following activity diagram summarizes what happens when a user inputs a `find` command:","lastModifiedDate":"2024-04-15"},{"lineNumber":447,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":448,"author":{"gitId":"hjuntan"},"content":"\u003cpuml src\u003d\"diagrams/FindActivityDiagram.puml\" alt\u003d\"FindActivityDiagram\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":450,"author":{"gitId":"RingoftheKing"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-13"},{"lineNumber":451,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":452,"author":{"gitId":"RingoftheKing"},"content":"**How find executes**","lastModifiedDate":"2024-04-13"},{"lineNumber":453,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":454,"author":{"gitId":"cheahTJ"},"content":"* User inputs a `find` command with at least one of the fields `NUSID`, `name`, `phone`, `email`, `group` or `tag`. The inputs are parsed and a `FindCommand` is created.","lastModifiedDate":"2024-04-14"},{"lineNumber":455,"author":{"gitId":"RingoftheKing"},"content":"* Each of these fields are made into Java `Predicates` which checks if each field\u0027s input matches any person\u0027s field (Choice of matching can be changed flexibly in each field\u0027s corresponding `Predicate` class) in AronaPro.","lastModifiedDate":"2024-04-13"},{"lineNumber":456,"author":{"gitId":"RingoftheKing"},"content":"* If any field was not required by the user, a special string (not possible for the user to type when using the add or edit commands) is used to default the `Predicate` to True.","lastModifiedDate":"2024-04-13"},{"lineNumber":457,"author":{"gitId":"RingoftheKing"},"content":"* A list of persons is created by chaining these `Predicates` using logical `AND`. A list of relevant person(s) are found.","lastModifiedDate":"2024-04-13"},{"lineNumber":458,"author":{"gitId":"RingoftheKing"},"content":"* The relevant persons are used to update the person list which the model displays.","lastModifiedDate":"2024-04-13"},{"lineNumber":459,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":460,"author":{"gitId":"RingoftheKing"},"content":"**Why is it implemented this way?**","lastModifiedDate":"2024-04-13"},{"lineNumber":461,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":462,"author":{"gitId":"RingoftheKing"},"content":"* The functionality of find is advertised as finding people that matches ALL the supplemented fields. As such logical AND search is relevant to our case.","lastModifiedDate":"2024-04-13"},{"lineNumber":463,"author":{"gitId":"RingoftheKing"},"content":"* Use of predicates is also easily extendable, requiring future programmers to simply create a new `Predicate` for new fields and chaining it with the existing predicates","lastModifiedDate":"2024-04-13"},{"lineNumber":464,"author":{"gitId":"RingoftheKing"},"content":"* The use of a special string to denote a non-specified field, while rudimentary, avoids the hassle required to juggle Java `Optional`s and less transparent Functional Programming paradigms.","lastModifiedDate":"2024-04-13"},{"lineNumber":465,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":466,"author":{"gitId":"RingoftheKing"},"content":"**Alternative considerations**","lastModifiedDate":"2024-04-13"},{"lineNumber":467,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":468,"author":{"gitId":"RingoftheKing"},"content":"* **Alternative 1 (current choice):** Set non-required fields to a special string that makes a field match everyone, otherwise filter based on the input.","lastModifiedDate":"2024-04-13"},{"lineNumber":469,"author":{"gitId":"RingoftheKing"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2024-04-13"},{"lineNumber":470,"author":{"gitId":"RingoftheKing"},"content":"    * Cons: If the user is able to enter this special string in `add` or `edit` commands, it could result in unexpected behaviour.","lastModifiedDate":"2024-04-13"},{"lineNumber":471,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":472,"author":{"gitId":"RingoftheKing"},"content":"* **Alternative 2:** Introduce Java `Optional`s to determine which fields are required.","lastModifiedDate":"2024-04-13"},{"lineNumber":473,"author":{"gitId":"RingoftheKing"},"content":"    * Pros: There is usage of Single Responsibility Principle. (Current implementation has `Predicate` implicitly handling added responsibility of checking optionality)","lastModifiedDate":"2024-04-13"},{"lineNumber":474,"author":{"gitId":"RingoftheKing"},"content":"    * Cons: Harder to debug when using Functional Programming paradigms while passing results across classes.","lastModifiedDate":"2024-04-13"},{"lineNumber":475,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":476,"author":{"gitId":"cheahTJ"},"content":"### `Pin` feature","lastModifiedDate":"2024-04-12"},{"lineNumber":477,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":478,"author":{"gitId":"cheahTJ"},"content":"`Pin` for a person can be done using the `pin` command. The `PinCommand` class is responsible for handling the addition of a person. This command is implemented through `PinCommand` which extend the `Command` class.","lastModifiedDate":"2024-04-14"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":480,"author":{"gitId":"cheahTJ"},"content":"A `Person` can be pinned by specifying `NUSID`.","lastModifiedDate":"2024-04-14"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":482,"author":{"gitId":"cheahTJ"},"content":"#### Implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":484,"author":{"gitId":"cheahTJ"},"content":"Given below is an example usage scenario and how the `PinCommand` mechanism behaves at each step.","lastModifiedDate":"2024-04-12"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":486,"author":{"gitId":"cheahTJ"},"content":"Step 1. The user executes `pin` command.","lastModifiedDate":"2024-04-12"},{"lineNumber":487,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":488,"author":{"gitId":"cheahTJ"},"content":"Step 2. The `AddressBookParser` will call `parseCommand` on the user\u0027s input string and return an instance of `PinCommandParser`.","lastModifiedDate":"2024-04-12"},{"lineNumber":489,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":490,"author":{"gitId":"cheahTJ"},"content":"Step 3. `PinCommandParser` will call `parse` which create instances of objects for each of the fields and return an instance of `PinCommand`.","lastModifiedDate":"2024-04-12"},{"lineNumber":491,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":492,"author":{"gitId":"cheahTJ"},"content":"Step 4. The `LogicManager` calls the `execute` method in `PinCommand`.","lastModifiedDate":"2024-04-12"},{"lineNumber":493,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":494,"author":{"gitId":"cheahTJ"},"content":"Step 5. The `execute` method in `PinCommand` executes and calls `Model#pinPerson()` to add the person to the address book.","lastModifiedDate":"2024-04-12"},{"lineNumber":495,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":496,"author":{"gitId":"cheahTJ"},"content":"Step 6. Success message is printed onto the results display to notify user.","lastModifiedDate":"2024-04-12"},{"lineNumber":497,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":498,"author":{"gitId":"cheahTJ"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":499,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":500,"author":{"gitId":"cheahTJ"},"content":"**Note:** If a command fails its execution, it will not call `Model#pinPerson()` and the person will not be added to the address book.","lastModifiedDate":"2024-04-12"},{"lineNumber":501,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":502,"author":{"gitId":"cheahTJ"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":503,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":504,"author":{"gitId":"cheahTJ"},"content":"The following sequence diagram shows how a pin operation goes through the `Logic` component:","lastModifiedDate":"2024-04-12"},{"lineNumber":505,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":506,"author":{"gitId":"cheahTJ"},"content":"\u003cpuml src\u003d\"diagrams/PinSequenceDiagram.puml\" alt\u003d\"PinSequenceDiagram\" /\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":507,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":508,"author":{"gitId":"cheahTJ"},"content":"The following activity diagram summarizes what happens when a user inputs a pin command:","lastModifiedDate":"2024-04-12"},{"lineNumber":509,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":510,"author":{"gitId":"cheahTJ"},"content":"\u003cpuml src\u003d\"diagrams/PinDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":512,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-12"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":514,"author":{"gitId":"RingoftheKing"},"content":"**How Pin executes**","lastModifiedDate":"2024-04-14"},{"lineNumber":515,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":516,"author":{"gitId":"cheahTJ"},"content":"* User inputs a `pin` command with `NUSID`.The inputs are parsed and a `PinCommand` is created.","lastModifiedDate":"2024-04-14"},{"lineNumber":517,"author":{"gitId":"cheahTJ"},"content":"* The instances of the relevant fields are created and the person is added to the model.","lastModifiedDate":"2024-04-12"},{"lineNumber":518,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":519,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":520,"author":{"gitId":"Ragnapop"},"content":"### `Group` feature","lastModifiedDate":"2024-04-13"},{"lineNumber":521,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":522,"author":{"gitId":"Ragnapop"},"content":"`Group` for a person can be added using the `group` command. The `GroupCommand` class is responsible for handling the grouping and the tagging of a person. This command is implemented through `GroupCommand` which extends the `Command` class.","lastModifiedDate":"2024-04-13"},{"lineNumber":523,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":524,"author":{"gitId":"cheahTJ"},"content":"A new `Person` can be grouped by specifying `NUSID` and either `group` and/or `tag`.","lastModifiedDate":"2024-04-14"},{"lineNumber":525,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":526,"author":{"gitId":"Ragnapop"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":527,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":528,"author":{"gitId":"Ragnapop"},"content":"**Note:** There needs to be at least one `group` and/or `tag` keyword.","lastModifiedDate":"2024-04-13"},{"lineNumber":529,"author":{"gitId":"cheahTJ"},"content":"**Note:** More than one `NUSID` keyword can be used if grouping more than one person at once.","lastModifiedDate":"2024-04-14"},{"lineNumber":530,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":531,"author":{"gitId":"Ragnapop"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":532,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":533,"author":{"gitId":"Ragnapop"},"content":"#### Implementation","lastModifiedDate":"2024-04-13"},{"lineNumber":534,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":535,"author":{"gitId":"Ragnapop"},"content":"Given below is an example usage scenario and how the `GroupCommand` mechanism behaves at each step.","lastModifiedDate":"2024-04-13"},{"lineNumber":536,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":537,"author":{"gitId":"cheahTJ"},"content":"Step 1. The user executes `group` command with `NUSID`, `group` and  `tag`.","lastModifiedDate":"2024-04-14"},{"lineNumber":538,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":539,"author":{"gitId":"Ragnapop"},"content":"Step 2. The `AddressBookParser` will call `parseCommand` on the user\u0027s input string and return an instance of `GroupCommandParser`.","lastModifiedDate":"2024-04-13"},{"lineNumber":540,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":541,"author":{"gitId":"Ragnapop"},"content":"Step 3. `GroupCommandParser` will call `parse` which create instances of objects for each of the fields and return an instance of `GroupCommand`.","lastModifiedDate":"2024-04-13"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":543,"author":{"gitId":"Ragnapop"},"content":"Step 4. The `LogicManager` calls the `execute` method in `GroupCommand`.","lastModifiedDate":"2024-04-13"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":545,"author":{"gitId":"Ragnapop"},"content":"Step 5. The `execute` method in `GroupCommand` executes and creates a list of Persons `personToGroup`. It then calls `Model#setPerson()` on all Persons in the list to modify the group and tag fields of the Persons in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":547,"author":{"gitId":"Ragnapop"},"content":"Step 6. Success message is printed onto the results display to notify user.","lastModifiedDate":"2024-04-13"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":549,"author":{"gitId":"Ragnapop"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":550,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":551,"author":{"gitId":"Ragnapop"},"content":"**Note:** If a command fails its execution, it will not call `Model#setPerson()` and the Persons will not be grouped in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":552,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":553,"author":{"gitId":"Ragnapop"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":554,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":555,"author":{"gitId":"Ragnapop"},"content":"The following sequence diagram shows how a group operation goes through the `Logic` component:","lastModifiedDate":"2024-04-13"},{"lineNumber":556,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":557,"author":{"gitId":"Ragnapop"},"content":"\u003cpuml src\u003d\"diagrams/AddSequenceDiagram.puml\" alt\u003d\"GroupSequenceDiagram\" /\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":558,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":559,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":560,"author":{"gitId":"Ragnapop"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-13"},{"lineNumber":561,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":562,"author":{"gitId":"Ragnapop"},"content":"**How group executes**","lastModifiedDate":"2024-04-13"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":564,"author":{"gitId":"cheahTJ"},"content":"* User inputs an `group` command with `NUSID` and either `tags` and/or `group` fields. The inputs are parsed and a `GroupCommand` is created.","lastModifiedDate":"2024-04-14"},{"lineNumber":565,"author":{"gitId":"Ragnapop"},"content":"* The instances of the relevant fields are created and the person(s) is/are grouped in the model.","lastModifiedDate":"2024-04-13"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":573,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":574,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":575,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":576,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"cheahTJ"},"content":"* Tech-savvy university Computer Science teaching assistants and professors","lastModifiedDate":"2024-04-04"},{"lineNumber":587,"author":{"gitId":"cheahTJ"},"content":"* Manages an array of students, professors and students\u0027 contacts","lastModifiedDate":"2024-04-04"},{"lineNumber":588,"author":{"gitId":"cheahTJ"},"content":"* Appreciates an organised approach to query, and manage contacts with CLI","lastModifiedDate":"2024-04-04"},{"lineNumber":589,"author":{"gitId":"cheahTJ"},"content":"* Prefers desktop apps over other types","lastModifiedDate":"2024-04-04"},{"lineNumber":590,"author":{"gitId":"cheahTJ"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2024-04-04"},{"lineNumber":591,"author":{"gitId":"cheahTJ"},"content":"* Someone who is reasonably comfortable using CLI application","lastModifiedDate":"2024-04-04"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"cheahTJ"},"content":"**Value proposition**: Manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-04-04"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                                                       | I want to â€¦â€‹                                                 | So that I canâ€¦â€‹                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"RingoftheKing"},"content":"|----------|-------------------------------------------------------------------------------|--------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2024-03-04"},{"lineNumber":602,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                                                      | see usage instructions                                       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"RingoftheKing"},"content":"| `* * *`  | Teaching Assistant                                                            | add a new student, prof, TA                                  | know how to contact them                                               |","lastModifiedDate":"2024-03-04"},{"lineNumber":604,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                                          | delete a person                                              | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"RingoftheKing"},"content":"| `* * *`  | Teaching Assistant                                                            | find a student by name or class                              | locate details of persons without having to go through the entire list |","lastModifiedDate":"2024-03-04"},{"lineNumber":606,"author":{"gitId":"cheahTJ"},"content":"| `* * *`  | Teaching Assistant                                                            | group students into classes                                  | know which class my student is in                                      |","lastModifiedDate":"2024-04-12"},{"lineNumber":607,"author":{"gitId":"RingoftheKing"},"content":"| `* * *`  | Teaching assistant                                                            | find my supervisor(s)                                        | Report any admin issues my students would raise                        |","lastModifiedDate":"2024-03-04"},{"lineNumber":608,"author":{"gitId":"cheahTJ"},"content":"| `* * *`  | University student with different friend groups                               | tag or categorize my contacts                                | Search by the friend groups I\u0027m concerned with                         |","lastModifiedDate":"2024-04-12"},{"lineNumber":609,"author":{"gitId":"cheahTJ"},"content":"| `* * *`  | Teaching Assistant who wants to meet up with Profs and students               | schedule events to do so                                     | remind myself to meet up or know my free times.                        |","lastModifiedDate":"2024-04-12"},{"lineNumber":610,"author":{"gitId":"RingoftheKing"},"content":"| `* * *`  | Teaching Assistant with important people to report to or stay in contact with | pin important contacts                                       |                                                                        |","lastModifiedDate":"2024-03-04"},{"lineNumber":611,"author":{"gitId":"RingoftheKing"},"content":"| `* * *`  | Teaching Assistant who needs to announce information to his students          | copy a (group of) student(s)\u0027 contact info onto my clipboard | announce a message efficiently to many students                        |","lastModifiedDate":"2024-03-04"},{"lineNumber":612,"author":{"gitId":"cheahTJ"},"content":"| `* *`    | Forgetful Teaching Assistant                                                  | have a check for addition of duplicate contacts              | can reduce clutter of my list                                          |","lastModifiedDate":"2024-04-12"},{"lineNumber":613,"author":{"gitId":"cheahTJ"},"content":"| `* *`    | Teaching assistant who might mistype                                          | have a Confirm Delete warning when doing deletions           | provide a safety net in case I accidentally delete important info      |","lastModifiedDate":"2024-04-12"},{"lineNumber":614,"author":{"gitId":"cheahTJ"},"content":"| `* *`    | Teaching assistant with many students                                         | personalise contacts with photos                             | attribute names to faces and distinguish similar names.                |","lastModifiedDate":"2024-04-12"},{"lineNumber":615,"author":{"gitId":"cheahTJ"},"content":"| `* *`    | user                                                                          | hide private contact details                                 | minimise chance of someone else seeing them by accident                |","lastModifiedDate":"2024-04-12"},{"lineNumber":616,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book                                    | sort persons by name                                         | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"cheahTJ"},"content":"| `*`      | detail-oriented Teaching Assistant                                            | add a note with additional information about the contact     | remind myself of things I may need to follow up on                     |","lastModifiedDate":"2024-04-12"},{"lineNumber":618,"author":{"gitId":"RingoftheKing"},"content":"| `*`      | Teaching assistant who tires from work                                        | use an app with a cheerful interface                         | feel encouraged / at peace                                             |","lastModifiedDate":"2024-03-04"},{"lineNumber":619,"author":{"gitId":"RingoftheKing"},"content":"| `*`      | Teaching assistant                                                            | import and export contact details to/from the app            | can easily shift to using this app, or another                         |","lastModifiedDate":"2024-03-04"},{"lineNumber":620,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"Ragnapop"},"content":"**Use case: View all contacts**","lastModifiedDate":"2024-03-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"Ragnapop"},"content":"1.  User requests to view all contacts.","lastModifiedDate":"2024-03-04"},{"lineNumber":632,"author":{"gitId":"Ragnapop"},"content":"2.  AddressBook shows a list of contacts added.","lastModifiedDate":"2024-03-04"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"Ragnapop"},"content":"* 1a. User uses the wrong format in his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":639,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":640,"author":{"gitId":"Ragnapop"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":641,"author":{"gitId":"Ragnapop"},"content":"    * 1a2. User uses the correct format as shown in the error message for his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":642,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":643,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":644,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":645,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":646,"author":{"gitId":"Ragnapop"},"content":"**Use case: Add a contact**","lastModifiedDate":"2024-03-04"},{"lineNumber":647,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":648,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":649,"author":{"gitId":"Ragnapop"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":650,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":651,"author":{"gitId":"Ragnapop"},"content":"1.  User requests to add a contact.","lastModifiedDate":"2024-03-04"},{"lineNumber":652,"author":{"gitId":"Ragnapop"},"content":"2.  User inputs all information required to add a contact into AddressBook.","lastModifiedDate":"2024-03-04"},{"lineNumber":653,"author":{"gitId":"Ragnapop"},"content":"3.  AddressBook adds the contact with all relevant information into a list.","lastModifiedDate":"2024-03-04"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"Ragnapop"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":658,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":659,"author":{"gitId":"Ragnapop"},"content":"* 2a. The given information is in an incorrect format.","lastModifiedDate":"2024-03-04"},{"lineNumber":660,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":661,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":662,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":663,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-04"},{"lineNumber":664,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":665,"author":{"gitId":"Ragnapop"},"content":"* 2b. The given information is insufficient to form a contact.","lastModifiedDate":"2024-03-04"},{"lineNumber":666,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":667,"author":{"gitId":"Ragnapop"},"content":"    * 2b1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":668,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":669,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-04"},{"lineNumber":670,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":671,"author":{"gitId":"cheahTJ"},"content":"**Use case: Edit a contact\u0027s information**","lastModifiedDate":"2024-04-14"},{"lineNumber":672,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":673,"author":{"gitId":"Ragnapop"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":674,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":675,"author":{"gitId":"Ragnapop"},"content":"1.  User requests to edit a contact.","lastModifiedDate":"2024-03-04"},{"lineNumber":676,"author":{"gitId":"cheahTJ"},"content":"2.  User inputs new information about the fields he wishes to edit about a specified contact.","lastModifiedDate":"2024-04-14"},{"lineNumber":677,"author":{"gitId":"Ragnapop"},"content":"3.  AddressBook edits the contact by changing all the specified fields into the newly inputted information.","lastModifiedDate":"2024-03-04"},{"lineNumber":678,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":679,"author":{"gitId":"Ragnapop"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":680,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":681,"author":{"gitId":"Ragnapop"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":682,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":683,"author":{"gitId":"Ragnapop"},"content":"* 2a. The given information is in an incorrect format.","lastModifiedDate":"2024-03-04"},{"lineNumber":684,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":685,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":686,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":687,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-04"},{"lineNumber":688,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":689,"author":{"gitId":"Ragnapop"},"content":"* 2a. The contact does not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":690,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":691,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"Ragnapop"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2024-03-04"},{"lineNumber":696,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":697,"author":{"gitId":"Ragnapop"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":698,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":699,"author":{"gitId":"Ragnapop"},"content":"1.  User requests to delete a specific contact.","lastModifiedDate":"2024-03-04"},{"lineNumber":700,"author":{"gitId":"Ragnapop"},"content":"2.  AddressBook deletes the specified contact.","lastModifiedDate":"2024-03-04"},{"lineNumber":701,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":702,"author":{"gitId":"Ragnapop"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":703,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":704,"author":{"gitId":"Ragnapop"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"Ragnapop"},"content":"* 1a. User uses the wrong format in his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":707,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":708,"author":{"gitId":"Ragnapop"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":709,"author":{"gitId":"Ragnapop"},"content":"    * 1a2. User uses the correct format as shown in the error message for his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"Ragnapop"},"content":"* 2a. The contact does not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":714,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":715,"author":{"gitId":"Ragnapop"},"content":"  * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":716,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":717,"author":{"gitId":"Ragnapop"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":718,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":719,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":720,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":721,"author":{"gitId":"RingoftheKing"},"content":"**Use case: Find some specific contact(s)**","lastModifiedDate":"2024-04-11"},{"lineNumber":722,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":723,"author":{"gitId":"Ragnapop"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":724,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":725,"author":{"gitId":"RingoftheKing"},"content":"1.  User requests to find some contact(s).","lastModifiedDate":"2024-04-11"},{"lineNumber":726,"author":{"gitId":"RingoftheKing"},"content":"2.  AronaPro outputs the contact(s) with all relevant information about the contact.","lastModifiedDate":"2024-04-11"},{"lineNumber":727,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":728,"author":{"gitId":"Ragnapop"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":729,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":730,"author":{"gitId":"Ragnapop"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":731,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":732,"author":{"gitId":"Ragnapop"},"content":"* 1a. User uses the wrong format in his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"RingoftheKing"},"content":"    * 1a1. AronaPro shows an error message.","lastModifiedDate":"2024-04-11"},{"lineNumber":735,"author":{"gitId":"Ragnapop"},"content":"    * 1a2. User uses the correct format as shown in the error message for his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"Ragnapop"},"content":"* 2a. The contact does not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":740,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":741,"author":{"gitId":"RingoftheKing"},"content":"    * 2a1. AronaPro shows an empty list, informing that no contacts were found.","lastModifiedDate":"2024-04-11"},{"lineNumber":742,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":743,"author":{"gitId":"Ragnapop"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":744,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":745,"author":{"gitId":"Ragnapop"},"content":"**Use case: Assign an existing contact to a tutorial group**","lastModifiedDate":"2024-03-04"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":747,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":749,"author":{"gitId":"Ragnapop"},"content":"1.  User requests to tag a specific contact to a tutorial group.","lastModifiedDate":"2024-03-04"},{"lineNumber":750,"author":{"gitId":"Ragnapop"},"content":"2.  AddressBook tags the contact to the tutorial group.","lastModifiedDate":"2024-03-04"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":752,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-14"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":754,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":756,"author":{"gitId":"Ragnapop"},"content":"* 1a. User uses the wrong format in his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":757,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":758,"author":{"gitId":"Ragnapop"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":759,"author":{"gitId":"Ragnapop"},"content":"    * 1a2. User uses the correct format as shown in the error message for his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":760,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":761,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":762,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":763,"author":{"gitId":"Ragnapop"},"content":"* 2a. The contact does not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":764,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":765,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":766,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":767,"author":{"gitId":"Ragnapop"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":768,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":769,"author":{"gitId":"Ragnapop"},"content":"* 2a. The tutorial group does not yet exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":770,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":771,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook creates a new tag with the name of the tutorial group.","lastModifiedDate":"2024-03-04"},{"lineNumber":772,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":773,"author":{"gitId":"Ragnapop"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":774,"author":{"gitId":"Ragnapop"},"content":"      ","lastModifiedDate":"2024-03-04"},{"lineNumber":775,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":776,"author":{"gitId":"Ragnapop"},"content":"**Use case: Classify an existing contact (Prof, TA, Student)**","lastModifiedDate":"2024-03-04"},{"lineNumber":777,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":778,"author":{"gitId":"Ragnapop"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":779,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":780,"author":{"gitId":"Ragnapop"},"content":"1.  User requests to classify a specific contact.","lastModifiedDate":"2024-03-04"},{"lineNumber":781,"author":{"gitId":"Ragnapop"},"content":"2.  AddressBook classifies the contact as either a Professor, TA or Student.","lastModifiedDate":"2024-03-04"},{"lineNumber":782,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":783,"author":{"gitId":"Ragnapop"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":784,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":785,"author":{"gitId":"Ragnapop"},"content":"* 1a. User uses the wrong format in his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":786,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":787,"author":{"gitId":"Ragnapop"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":788,"author":{"gitId":"Ragnapop"},"content":"    * 1a2. User uses the correct format as shown in the error message for his request.","lastModifiedDate":"2024-03-04"},{"lineNumber":789,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":790,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":791,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":792,"author":{"gitId":"Ragnapop"},"content":"* 2a. The contact does not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":793,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":794,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":795,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":796,"author":{"gitId":"Ragnapop"},"content":"      Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":797,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":798,"author":{"gitId":"Ragnapop"},"content":"* 2a. The tag does not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":799,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":800,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":801,"author":{"gitId":"Rikko1204"},"content":"    * 2a2. User has to request the classification again using a correct classifier.","lastModifiedDate":"2024-04-14"},{"lineNumber":802,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":803,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-04"},{"lineNumber":804,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":805,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":806,"author":{"gitId":"cheahTJ"},"content":"**Use case: Schedule an event with a contact**","lastModifiedDate":"2024-04-14"},{"lineNumber":807,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":808,"author":{"gitId":"Ragnapop"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":809,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":810,"author":{"gitId":"Ragnapop"},"content":"1.  User requests to schedule an event with a specific contact.","lastModifiedDate":"2024-03-06"},{"lineNumber":811,"author":{"gitId":"Ragnapop"},"content":"2.  User inputs all necessary information into AddressBook in order for the event to be scheduled.","lastModifiedDate":"2024-03-06"},{"lineNumber":812,"author":{"gitId":"Ragnapop"},"content":"3.  AddressBook creates the event and classifies it under the contact.","lastModifiedDate":"2024-03-06"},{"lineNumber":813,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":814,"author":{"gitId":"Ragnapop"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":815,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":816,"author":{"gitId":"Ragnapop"},"content":"* 1a. User uses the wrong format in his request.","lastModifiedDate":"2024-03-06"},{"lineNumber":817,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":818,"author":{"gitId":"Ragnapop"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":819,"author":{"gitId":"Ragnapop"},"content":"    * 1a2. User uses the correct format as shown in the error message for his request.","lastModifiedDate":"2024-03-06"},{"lineNumber":820,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":821,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":822,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":823,"author":{"gitId":"Ragnapop"},"content":"* 2a. The contact does not exist.","lastModifiedDate":"2024-03-06"},{"lineNumber":824,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":825,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":826,"author":{"gitId":"Rikko1204"},"content":"    * 2a2. User inputs an existing contact as required in the error message for his request.","lastModifiedDate":"2024-04-14"},{"lineNumber":827,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":828,"author":{"gitId":"Rikko1204"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-14"},{"lineNumber":829,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":830,"author":{"gitId":"Ragnapop"},"content":"* 2a. The information required is not sufficiently inputted.","lastModifiedDate":"2024-03-06"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":832,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":833,"author":{"gitId":"Rikko1204"},"content":"    * 2a2. User has to request the classification again using a correct classifier.","lastModifiedDate":"2024-04-14"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":835,"author":{"gitId":"Ragnapop"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":837,"author":{"gitId":"cheahTJ"},"content":"**Use case: Delete a group of people**","lastModifiedDate":"2024-04-14"},{"lineNumber":838,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":839,"author":{"gitId":"Ragnapop"},"content":"**MSS**","lastModifiedDate":"2024-03-26"},{"lineNumber":840,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":841,"author":{"gitId":"Ragnapop"},"content":"1.  User requests to delete all people in a specific group.","lastModifiedDate":"2024-03-26"},{"lineNumber":842,"author":{"gitId":"Ragnapop"},"content":"2.  User inputs the name of the group into the AddressBook.","lastModifiedDate":"2024-03-26"},{"lineNumber":843,"author":{"gitId":"Ragnapop"},"content":"3.  AddressBook deletes all people that are classified under the specified group.","lastModifiedDate":"2024-03-26"},{"lineNumber":844,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":845,"author":{"gitId":"Ragnapop"},"content":"**Extensions**","lastModifiedDate":"2024-03-26"},{"lineNumber":846,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":847,"author":{"gitId":"Ragnapop"},"content":"* 1a. User uses the wrong format in his request.","lastModifiedDate":"2024-03-26"},{"lineNumber":848,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":849,"author":{"gitId":"Ragnapop"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-26"},{"lineNumber":850,"author":{"gitId":"Ragnapop"},"content":"    * 1a2. User uses the correct format as shown in the error message for his request.","lastModifiedDate":"2024-03-26"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":852,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-26"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":854,"author":{"gitId":"Ragnapop"},"content":"* 2a. The group does not exist.","lastModifiedDate":"2024-03-26"},{"lineNumber":855,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":856,"author":{"gitId":"Ragnapop"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-26"},{"lineNumber":857,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":858,"author":{"gitId":"Ragnapop"},"content":"      Use case ends.","lastModifiedDate":"2024-03-26"},{"lineNumber":859,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":860,"author":{"gitId":"cheahTJ"},"content":"**Use case: Pin a contact**","lastModifiedDate":"2024-04-14"},{"lineNumber":861,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":862,"author":{"gitId":"cheahTJ"},"content":"**MSS**","lastModifiedDate":"2024-04-04"},{"lineNumber":863,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":864,"author":{"gitId":"cheahTJ"},"content":"1.  User requests to pin a specific contact.","lastModifiedDate":"2024-04-04"},{"lineNumber":865,"author":{"gitId":"cheahTJ"},"content":"2.  AddressBook pins the specified contact.","lastModifiedDate":"2024-04-04"},{"lineNumber":866,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":867,"author":{"gitId":"cheahTJ"},"content":"    Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":868,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":869,"author":{"gitId":"cheahTJ"},"content":"**Extensions**","lastModifiedDate":"2024-04-04"},{"lineNumber":870,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":871,"author":{"gitId":"cheahTJ"},"content":"* 1a. User uses the wrong format in his request.","lastModifiedDate":"2024-04-04"},{"lineNumber":872,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":873,"author":{"gitId":"cheahTJ"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":874,"author":{"gitId":"cheahTJ"},"content":"    * 1a2. User uses the correct format as shown in the error message for his request.","lastModifiedDate":"2024-04-04"},{"lineNumber":875,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":876,"author":{"gitId":"cheahTJ"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-04"},{"lineNumber":877,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":878,"author":{"gitId":"cheahTJ"},"content":"* 2a. The contact does not exist.","lastModifiedDate":"2024-04-04"},{"lineNumber":879,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":880,"author":{"gitId":"cheahTJ"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2024-04-04"},{"lineNumber":881,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":882,"author":{"gitId":"cheahTJ"},"content":"      Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"hjuntan"},"content":"4.  A novice user should be able to learn basic operations (add, delete, search entries) within 30 minutes of using the documentation.","lastModifiedDate":"2024-03-05"},{"lineNumber":891,"author":{"gitId":"hjuntan"},"content":"5.  The system should respond within two seconds.","lastModifiedDate":"2024-03-05"},{"lineNumber":892,"author":{"gitId":"Rikko1204"},"content":"6.  The system should be backward compatible with data produced by earlier versions of the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":893,"author":{"gitId":"hjuntan"},"content":"7.  The system should smoothly handle user input errors and system issues, providing meaningful error messages without crashing.","lastModifiedDate":"2024-03-05"},{"lineNumber":894,"author":{"gitId":"hjuntan"},"content":"8.  Comply with relevant data protection regulations, Personal Data Protection Act (PDPA) in handling personal information.","lastModifiedDate":"2024-03-05"},{"lineNumber":895,"author":{"gitId":"hjuntan"},"content":"9.  Adhere to recommended coding standards, such as readability, modularity, and application of design patterns, to make upgrades and maintenance simpler.","lastModifiedDate":"2024-03-05"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"Rikko1204"},"content":"* **Teaching Assistant (TA)**: A student-tutor hired by NUS. TAs are responsible for conducting tutorial lessons and assist in the students\u0027 learning whenever required.","lastModifiedDate":"2024-03-06"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":909,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":910,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"Rikko1204"},"content":"   1. Download the jar file and copy into an empty folder.","lastModifiedDate":"2024-04-14"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"Rikko1204"},"content":"   1. cd into that folder and execute the command `java -jar AronaPro.jar`. \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":921,"author":{"gitId":"hjuntan"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-04-11"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"cheahTJ"},"content":"### Example: Deleting a person","lastModifiedDate":"2024-04-04"},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"Rikko1204"},"content":"1. Deleting a person with a specified `while all persons are being shown.","lastModifiedDate":"2024-04-14"},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"cheahTJ"},"content":"   1. Test case: `delete id/E0123456`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":939,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"cheahTJ"},"content":"   1. Test case: `delete id/E0000000`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":942,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"cheahTJ"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete id/x`, `...` (where x is NUSID which does not exist currently in the address book)\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":945,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":951,"author":{"gitId":"Rikko1204"},"content":"1. Dealing with missing/corrupted data files.","lastModifiedDate":"2024-04-14"},{"lineNumber":952,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"hjuntan"},"content":"   1. Open a command terminal, `cd` into the folder you put the jar file in, and delete the data file `data/addressbook.json`.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":954,"author":{"gitId":"hjuntan"},"content":"        Expected: The app should create a new data file with default data when it is launched.","lastModifiedDate":"2024-04-11"},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"hjuntan"},"content":"   1. Open the data file `data/addressbook.json` in a text editor and delete some lines from the middle of the file.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":957,"author":{"gitId":"hjuntan"},"content":"           Expected: The app should show an error message and starts with an empty AronaPro.","lastModifiedDate":"2024-04-11"},{"lineNumber":958,"author":{"gitId":"hjuntan"},"content":"2. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2024-04-11"},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"cheahTJ":211,"Rikko1204":92,"RingoftheKing":60,"Ragnapop":225,"hjuntan":30,"-":342}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"# About AronaPro","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"Welcome to AronaPro, and we thank you for choosing us as your all-in-one solution! ","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"Our product is a desktop app designed primarily for **Computing Professors and Teaching Assistants(TAs)** to manage your ","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"students/professors/TAs\u0027 contacts and schedules efficiently, optimised for use via a Command Line Interface (CLI) ","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"while still having the benefits of a Graphical User Interface (GUI). Our simple-to-grasp software also warmly welcomes","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"professors and TAs from various faculties without any technological background! ","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"We are excited to have you on board and to guide you through how to use our software with this guide. Click ","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"[here](#about-userguide) to learn more about our User Guide.","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"Together, let us **_Centralise_, _Connect_ and _Coordinate_!**","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"## Table of content","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"* [**About AronaPro**](#about-aronapro)","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"  *  [**Table of Content**](#table-of-content)","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"  * [**About UserGuide**](#about-userguide)","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"  * [**Quick Start**](#quick-start)","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"  * [**Features**](#features)","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    * [Understanding our application\u0027s interface](#understanding-our-application-s-interface)","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"    * [Notes about command format](#notes-about-the-command-format)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"    * [Help command](#viewing-help-help)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    * [Add command](#adding-a-person-add)","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    * [View command](#viewing-all-persons-view)","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    * [Edit command](#editing-a-person-s-information-edit)","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    * [Find command](#finding-a-person-find)","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    * [Delete command](#deleting-a-person-delete)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"    * [Group command](#assigning-people-to-a-group-group)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    * [Schedule command](#schedule-a-meeting-with-a-person-schedule)","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    * [Pin command](#pinning-a-person-pin)","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"    * [Clear command](#clearing-all-entries-clear)","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"    * [Exit command](#exiting-the-program-exit)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"    * [Saving the data](#saving-the-data)","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    * [Editting the data file](#editing-the-data-file)","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"  * [**FAQ**](#faq)","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"  * [**Existing issues**](#known-issues)","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"  * [**Planned enhancements**](#planned-enhancements)","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"  * [**Command summary**](#command-summary)","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"## About UserGuide","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"Welcome to our User Guide! Here, we have got everything you need to know about using all of our application\u0027s features. ","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"If you are already familiar with our application, dive straight into the [Features](#features) section to discover more. ","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"However, if you are new to the application, we have got you covered. You can simply do so by following our guide systematically, ","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"starting with the [Quick Start](#quick-start) section, to quickly get up to speed with AronaPro before you start your own adventure. ","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"Let us get started!","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"1. Download the latest `aronapro.jar` [here](https://github.com/AY2324S2-CS2103T-T15-2/tp/releases). ","lastModifiedDate":"2024-04-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for AronaPro in your desired location. For demonstration purpose, we will save the downloaded jar file into `test` folder and saved it to `Desktop` on either Mac or Windows machines. ","lastModifiedDate":"2024-04-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"1. Open a command terminal, either by typing `terminal` on Mac or `PowerShell` on Windows machine and perform the following steps to reach the `test` folder created earlier in order to run the application:","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"   1. First type `ls` to see what are all the folders in your current directory.","lastModifiedDate":"2024-04-09"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"   2. Type `cd \u003cfile_name\u003e` where the file name refers to the file name you are trying to enter. One tip is that file name can be auto-completed simply by typing the first few letters and hitting `Tab`.","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"   3. Repeat i. and ii. above until you see the `test` folder and `cd` into it as show in the sequence of diagrams for both Mac and Windows machines below:","lastModifiedDate":"2024-04-09"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"   \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"    \u003cimg src\u003d\"images/UserGuide/Navigation step one.png\" alt\u003d\"Navigation step one\" width\u003d\"900\" style\u003d\"margin-left: 10px; margin-top:30px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"   \u003c/p\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"   \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"    \u003cimg src\u003d\"images/UserGuide/Navigation step two.png\" alt\u003d\"Navigation step two\" width\u003d\"900\" style\u003d\"margin-left: 10px; margin-top:30px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"   \u003c/p\u003e ","lastModifiedDate":"2024-04-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"   \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"    \u003cimg src\u003d\"images/UserGuide/Navigation step three.png\" alt\u003d\"Navigation step three\" width\u003d\"900\" style\u003d\"margin-left: 10px; margin-top:30px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"   \u003c/p\u003e  ","lastModifiedDate":"2024-04-09"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"   ","lastModifiedDate":"2024-04-09"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"1. Lastly, enter the command: `java -jar aronapro.jar` to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"   A GUI similar to the below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"   \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"    \u003cimg src\u003d\"images/Ui.png\" alt\u003d\"Ui\" width\u003d\"900\" style\u003d\"margin-left: 10px; margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"   \u003c/p\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"   e.g. Typing `help` and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"   Some example commands you can try to quickly get started with our application:","lastModifiedDate":"2024-04-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"   * `view` : Lists all contacts.","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"RingoftheKing"},"content":"   * `add id/E1234567 n/John Doe p/98765432 e/johnd@example.com t/Student g/CS2103T` : Adds a student with `NAME` John Doe with `NUSID` of E1234567 to AronaPro.","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"   * `delete id/E1234567` : Deletes the person with `NUSID` of E1234567.","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"### Understanding our application\u0027s interface","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"\u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"    \u003cimg src\u003d\"images/UserGuide/Understanding UI.png\" alt\u003d\"Understanding UI\" width\u003d\"900\" style\u003d\"margin-top:10px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"\u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"| Name                                       | Functionality                                                                                               |","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"|--------------------------------------------|-------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"| **Command panel**                          | Allows you to key in your commands here.                                                                    |","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"| **Response panel**                         | Echoes the contact\u0027s information you have keyed and displays error messages if any to allow you to rectify. |","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"| **Students/TAs/Professors contacts panel** | Displays all the information of your contact list.                                                          |","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"| **Scheduled meetings information panel**   | Displays all the information of your scheduled meetings.                                                    |","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"    ","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"### **Notes about the command format:**","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"cheahTJ"},"content":"  \u003e In the delete command as such: `delete id/NUSID`, `NUSID` is a parameter which need to be supplied.","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"hjuntan"},"content":"  \u003e `n/NAME [t/TAG]` can be used as `n/John Doe t/Student` or simply as `n/John Doe` without specifying the `TAG` as it is optional.","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times or zero times.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"hjuntan"},"content":"  \u003e * `[g/GROUP]â€¦â€‹` can be used as `Â ` (i.e. 0 times) or `g/CS2101 g/CS2103T`, demonstrating that group can be used 2 times by writing them successively on the same line etc.","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"hjuntan"},"content":"  \u003e * The only exception to the above is when `NUSID` is of concern where it needs to be used **at least once** or more. `id/NUSIDâ€¦â€‹` means that you need to use it once as such: `id/E1234567` ","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"  \u003e or you can choose to use it more than once: `id/E1234567 id/E0123456`.","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"  \u003e If the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"hjuntan"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `view`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"  \u003e If the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"cheahTJ"},"content":"Adds a person to AronaPro.","lastModifiedDate":"2024-04-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"Rikko1204"},"content":"Format: `add id/NUSID n/NAME p/PHONE_NUMBER e/EMAIL t/TAG [g/GROUP]â€¦â€‹`","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"cheahTJ"},"content":"\u003e Note:","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` refers to the NUSID shown in the displayed person list.","lastModifiedDate":"2024-04-14"},{"lineNumber":166,"author":{"gitId":"RingoftheKing"},"content":"\u003e * The `NUSID` **must be a 7-digit number following a capital \u0027E\u0027**.","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"cheahTJ"},"content":"\u003e * `NAME` can consist of numbers.","lastModifiedDate":"2024-04-14"},{"lineNumber":168,"author":{"gitId":"cheahTJ"},"content":"\u003e * `NAME` can be duplicated for different persons.","lastModifiedDate":"2024-04-14"},{"lineNumber":169,"author":{"gitId":"Rikko1204"},"content":"\u003e * `PHONE_NUMBER` has to be 3-10 digits long.","lastModifiedDate":"2024-04-14"},{"lineNumber":170,"author":{"gitId":"cheahTJ"},"content":"\u003e * `EMAIL` can be duplicated for different persons.","lastModifiedDate":"2024-04-14"},{"lineNumber":171,"author":{"gitId":"cheahTJ"},"content":"\u003e * `EMAIL` follows the following format and constraints:","lastModifiedDate":"2024-04-14"},{"lineNumber":172,"author":{"gitId":"cheahTJ"},"content":"  \u003e   * It should have a local-part followed by a `@` and then a domain name.","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"cheahTJ"},"content":"\u003e     * Local-part should only contain alphanumeric characters and special characters(+ _ . -).","lastModifiedDate":"2024-04-14"},{"lineNumber":174,"author":{"gitId":"cheahTJ"},"content":"\u003e     * Local-part may not start or end with any special characters.","lastModifiedDate":"2024-04-14"},{"lineNumber":175,"author":{"gitId":"cheahTJ"},"content":"\u003e     * Domain name is made up  of domain label separated by periods.","lastModifiedDate":"2024-04-14"},{"lineNumber":176,"author":{"gitId":"cheahTJ"},"content":"  \u003e     * Domain name must end with a domain label at least 2 characters long.","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"cheahTJ"},"content":"\u003e       * Have each domain label start and end with alphanumeric characters.","lastModifiedDate":"2024-04-14"},{"lineNumber":178,"author":{"gitId":"cheahTJ"},"content":"\u003e       * Have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"hjuntan"},"content":"\u003e * For `TAG`, the valid forms have to be either 1 of these:  Professor, TA, Student, None.","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"hjuntan"},"content":"\u003e * For `GROUP`, the group must only contain alphanumeric characters or spaces.","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"cheahTJ"},"content":"**Tip:** A person can have 0 or more groups.","lastModifiedDate":"2024-04-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"RingoftheKing"},"content":"* `add id/E1234567 n/John Doe p/98765432 e/johnd@example.com t/Student g/CS2103T`","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"cheahTJ"},"content":"  \u003e This command would add a person with `NUSID` of E1234567, `NAME` of John Doe, `PHONE_NUMBER` of 98765432, `EMAIL` of johnd@example.com","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"Rikko1204"},"content":"    `TAG` of Student, `GROUP` of CS2103T into AronaPro.","lastModifiedDate":"2024-04-14"},{"lineNumber":188,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":189,"author":{"gitId":"cheahTJ"},"content":"  \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":190,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/add/add-new-person.png\" alt\u003d\"add new person\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":191,"author":{"gitId":"cheahTJ"},"content":"  \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":192,"author":{"gitId":"cheahTJ"},"content":"  ","lastModifiedDate":"2024-04-12"},{"lineNumber":193,"author":{"gitId":"cheahTJ"},"content":" ","lastModifiedDate":"2024-04-12"},{"lineNumber":194,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":195,"author":{"gitId":"cheahTJ"},"content":"* `add id/E7654321 n/Betsy Crowe t/TA e/betsycrowe@example.com p/92345678`","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"cheahTJ"},"content":"  \u003e This command would add a person with `NUSID` of E7654321, `NAME` of Betsy Crowe, `TAG` of TA,","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"cheahTJ"},"content":"    `EMAIL` of betsycrowe@example.com, `PHONE_NUMBER` of 92345678 into AronaPro.","lastModifiedDate":"2024-04-12"},{"lineNumber":198,"author":{"gitId":"cheahTJ"},"content":"  \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":199,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/add/add-new-ta-without-group.png\" alt\u003d\"add new ta without group\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":200,"author":{"gitId":"cheahTJ"},"content":"  \u003c/p\u003e  ","lastModifiedDate":"2024-04-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"cheahTJ"},"content":"### Viewing all persons : `view`","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"cheahTJ"},"content":"Shows the entire list of persons in AronaPro.","lastModifiedDate":"2024-04-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Rikko1204"},"content":"Format: `view`","lastModifiedDate":"2024-04-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"cheahTJ"},"content":"### Editing a person\u0027s information : `edit`","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"cheahTJ"},"content":"Edits the information of a person of a specified `NUSID` in AronaPro.","lastModifiedDate":"2024-04-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"hjuntan"},"content":"Format: `edit id/NUSID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TAG] [g/GROUP]â€¦â€‹` ","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"cheahTJ"},"content":"\u003e Note:","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` refers to the NUSID shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` **must be a 7-digit number following an \u0027E\u0027**.","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"cheahTJ"},"content":"\u003e * `NAME` can consist of numbers.","lastModifiedDate":"2024-04-12"},{"lineNumber":218,"author":{"gitId":"cheahTJ"},"content":"\u003e * `NAME` can be duplicated for different persons.","lastModifiedDate":"2024-04-14"},{"lineNumber":219,"author":{"gitId":"cheahTJ"},"content":"\u003e * `PHONE_NUMBER` has to be 3-10 digits long.","lastModifiedDate":"2024-04-09"},{"lineNumber":220,"author":{"gitId":"cheahTJ"},"content":"\u003e * `EMAIL` can be duplicated for different persons.","lastModifiedDate":"2024-04-14"},{"lineNumber":221,"author":{"gitId":"cheahTJ"},"content":"\u003e * `EMAIL` follows the following format and constraints:","lastModifiedDate":"2024-04-13"},{"lineNumber":222,"author":{"gitId":"cheahTJ"},"content":"\u003e   * It should have a local-part followed by a `@` and then a domain name.","lastModifiedDate":"2024-04-13"},{"lineNumber":223,"author":{"gitId":"cheahTJ"},"content":"\u003e   * Local-part should only contain alphanumeric characters and special characters(+ _ . -).","lastModifiedDate":"2024-04-13"},{"lineNumber":224,"author":{"gitId":"cheahTJ"},"content":"\u003e   * Local-part may not start or end with any special characters.","lastModifiedDate":"2024-04-13"},{"lineNumber":225,"author":{"gitId":"cheahTJ"},"content":"\u003e   * Domain name is made up  of domain label separated by periods.","lastModifiedDate":"2024-04-13"},{"lineNumber":226,"author":{"gitId":"cheahTJ"},"content":"\u003e     * Domain name must end with a domain label at least 2 characters long.","lastModifiedDate":"2024-04-13"},{"lineNumber":227,"author":{"gitId":"cheahTJ"},"content":"\u003e     * Have each domain label start and end with alphanumeric characters.","lastModifiedDate":"2024-04-13"},{"lineNumber":228,"author":{"gitId":"cheahTJ"},"content":"\u003e     * Have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2024-04-13"},{"lineNumber":229,"author":{"gitId":"hjuntan"},"content":"\u003e * When editing `TAG`, the valid forms have to be either 1 of these:  Professor, TA, Student, None.","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"hjuntan"},"content":"\u003e * When editing `GROUP`, the group must only contain alphanumeric characters or spaces.","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"hjuntan"},"content":"\u003e * **At least one of the optional fields must be provided.**","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"cheahTJ"},"content":"\u003e * Existing values will be replaced by and updated to the new input values.","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"cheahTJ"},"content":"\u003e * Attempt to edit a person with `NUSID` not in AronaPro would result in an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"RingoftheKing"},"content":"*  `edit id/E0123456 p/91234567 e/johndoe@example.com` ","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"cheahTJ"},"content":"   \u003e This command would edit the phone number and email address of the person with `NUSID` E0123456 to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":241,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/edit/edit-phone-and-email.png\" alt\u003d\"edit-phone-and-email\" width\u003d\"700\" style\u003d\"margin-top:20px; margin-bottom:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":242,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e ","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"cheahTJ"},"content":"   ","lastModifiedDate":"2024-04-12"},{"lineNumber":244,"author":{"gitId":"RingoftheKing"},"content":"*  `edit id/E1234567 n/Betsy t/Professor` ","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"cheahTJ"},"content":"   \u003e This command would edit the name and the tag of the person with `NUSID` E1234567 to be `Betsy` and `Professor` respectively.","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":247,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/edit/edit-name-and-tag.png\" alt\u003d\"edit-name-and-tag\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":248,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"cheahTJ"},"content":"### Finding a person: `find`","lastModifiedDate":"2024-04-14"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"RingoftheKing"},"content":"Finds persons whose details match ALL the given keywords.","lastModifiedDate":"2024-04-13"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"hjuntan"},"content":"Format: `find [id/NUSID] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TAG] [g/GROUP]â€¦â€‹`","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-10"},{"lineNumber":256,"author":{"gitId":"cheahTJ"},"content":"\u003e Note:","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"hjuntan"},"content":"\u003e * The `NUSID` search matches people that has a prefix that STARTS WITH the query (e.g `E0123` fetches `E0123456`).","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"hjuntan"},"content":"\u003e * The `NAME` search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"hjuntan"},"content":"\u003e * The order of `NAME` keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"hjuntan"},"content":"\u003e * Only full words will be matched for `NAME` e.g. `Han` will not match `Hans`.","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"hjuntan"},"content":"\u003e * Persons matching ANY word will be selected for `NAME` (e.g. `Hans Bo` will fetch `Hans Gruber`, `Bo Yang`).","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"hjuntan"},"content":"\u003e * The `PHONE_NUMBER` search matches people that has a number that STARTS WITH the query (e.g `9123` fetches `91237654`).","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"hjuntan"},"content":"\u003e * The `EMAIL` search uses a PARTIAL, case-insensitive match. (e.g. `charles` matches `PrinceCharles@kingston.com`).","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"hjuntan"},"content":"\u003e * The `TAG` search uses an EXACT case-sensitive match. ","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"hjuntan"},"content":"\u003e * The `GROUP` search fetches people with ALL specified groups (e.g `g/CS2101 g/CS2103T` matches a person who minimally has BOTH these Groups).","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"cheahTJ"},"content":"\u003e * Persons matching all parameters will be returned (i.e. `AND` search).","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"hjuntan"},"content":"  ","lastModifiedDate":"2024-03-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"RingoftheKing"},"content":"* `find n/roy` ","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"RingoftheKing"},"content":"  \u003e This command would return `Roy G Biv` and `Roy Balakrishnan`. ","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"RingoftheKing"},"content":"  \u003e ","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":273,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/find/find-by-name.png\" alt\u003d\"find-by-name\" width\u003d\"700\" style\u003d\"margin-top:20px; margin-bottom:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":274,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":275,"author":{"gitId":"cheahTJ"},"content":"  ","lastModifiedDate":"2024-04-12"},{"lineNumber":276,"author":{"gitId":"RingoftheKing"},"content":"* `find n/roy g/CS2101`","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"RingoftheKing"},"content":"  \u003e This command would return `Roy Balakrishnan` who is the only person matching both the 2 conditions.","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"RingoftheKing"},"content":"  \u003e ","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":280,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/find/find-by-name-and-group.png\" alt\u003d\"find-by-name-and-group\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":281,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":286,"author":{"gitId":"hjuntan"},"content":"Deletes person of a specified `NUSID` from the filtered address book OR deletes all persons from a specified `GROUP` from the filtered address book.","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"cheahTJ"},"content":"Format 1: `delete id/NUSID`","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"cheahTJ"},"content":"\u003e Note:","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"cheahTJ"},"content":"\u003e * Deletes the person of a specified `NUSID`.","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` refers to the NUSID shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` **must be a 7-digit number following an \u0027E\u0027**.","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"cheahTJ"},"content":"* `delete id/E0123456` ","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"cheahTJ"},"content":"  \u003e This commmand will delete an existing person with `NUSID` of \"E0123456\".","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"RingoftheKing"},"content":"  \u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":300,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/delete/delete-person.png\" alt\u003d\"delete-person\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":301,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"Ragnapop"},"content":"Format 2: `delete g/GROUP`","lastModifiedDate":"2024-04-11"},{"lineNumber":304,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"cheahTJ"},"content":"\u003e Note:","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"RingoftheKing"},"content":"\u003e * Deletes ALL people in a specified `GROUP`.","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"cheahTJ"},"content":"\u003e * The group refers to the group shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"cheahTJ"},"content":"\u003e * The group **must exist in AronaPro beforehand**.","lastModifiedDate":"2024-04-12"},{"lineNumber":309,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":310,"author":{"gitId":"Ragnapop"},"content":"Examples:","lastModifiedDate":"2024-03-25"},{"lineNumber":311,"author":{"gitId":"RingoftheKing"},"content":"* `delete g/CS2103T`","lastModifiedDate":"2024-04-04"},{"lineNumber":312,"author":{"gitId":"hjuntan"},"content":"  \u003e This command will delete an existing person with `GROUP` of \"CS2103T\".","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"RingoftheKing"},"content":"  \u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":314,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":315,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/delete/delete-group.png\" alt\u003d\"delete-group\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":316,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":317,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":318,"author":{"gitId":"RingoftheKing"},"content":"### Assigning people to a group : `group`","lastModifiedDate":"2024-04-15"},{"lineNumber":319,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":320,"author":{"gitId":"cheahTJ"},"content":"Assigns either a group or a tag to a person of a specified `NUSID` from AronaPro.","lastModifiedDate":"2024-04-12"},{"lineNumber":321,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":322,"author":{"gitId":"hjuntan"},"content":"Format: `group id/NUSIDâ€¦â€‹ [g/GROUP]â€¦â€‹ [t/TAG]`","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":324,"author":{"gitId":"cheahTJ"},"content":"\u003e Note:","lastModifiedDate":"2024-04-04"},{"lineNumber":325,"author":{"gitId":"cheahTJ"},"content":"\u003e * Groups the person of a specified `NUSID`.","lastModifiedDate":"2024-04-04"},{"lineNumber":326,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` refers to the NUSID shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"Rikko1204"},"content":"\u003e * The `NUSID` **must be a 7-digit number following an \u0027E\u0027**.","lastModifiedDate":"2024-04-14"},{"lineNumber":328,"author":{"gitId":"cheahTJ"},"content":"\u003e * More than one `NUSID` can be specified for a group command to group more than one person (`group id/E1234567 id/E0123456 g/Friends`).","lastModifiedDate":"2024-04-14"},{"lineNumber":329,"author":{"gitId":"hjuntan"},"content":"\u003e * **At least one of the optional fields must be provided.**","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"hjuntan"},"content":"\u003e * When assigning `TAG`, the valid forms have to be either 1 of these:  Professor, TA, Student, None.","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"hjuntan"},"content":"\u003e * When assigning `GROUP`, the group must only contain alphanumeric characters or spaces.","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"Rikko1204"},"content":"\u003e * Existing values will be replaced by and updated to the new input values.","lastModifiedDate":"2024-04-14"},{"lineNumber":333,"author":{"gitId":"Rikko1204"},"content":"\u003e * A person can be assigned to a non-existing group.","lastModifiedDate":"2024-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-14"},{"lineNumber":336,"author":{"gitId":"RingoftheKing"},"content":"* `group id/E0123456 g/CS2101`","lastModifiedDate":"2024-04-04"},{"lineNumber":337,"author":{"gitId":"RingoftheKing"},"content":"  \u003e This command will assign or change a group of the person with `NUSID` E0123456 to \u0027CS2101\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":338,"author":{"gitId":"RingoftheKing"},"content":"  \u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":340,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/group/assign-group.png\" alt\u003d\"assign-group\" width\u003d\"700\" style\u003d\"margin-top:20px; margin-bottom:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":341,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":342,"author":{"gitId":"RingoftheKing"},"content":"* `group id/E0123456 t/TA` ","lastModifiedDate":"2024-04-04"},{"lineNumber":343,"author":{"gitId":"RingoftheKing"},"content":"  \u003e This command will assign or change the tag of the person with `NUSID` E0123456 to \u0027TA\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":344,"author":{"gitId":"cheahTJ"},"content":"  \u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":345,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":346,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/group/assign-tag.png\" alt\u003d\"assign-tag\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":347,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":348,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":349,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":350,"author":{"gitId":"cheahTJ"},"content":"### Schedule a meeting with a person: `schedule`","lastModifiedDate":"2024-04-04"},{"lineNumber":351,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":352,"author":{"gitId":"cheahTJ"},"content":"Schedule a meeting with a person in AronaPro.","lastModifiedDate":"2024-04-12"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":354,"author":{"gitId":"Rikko1204"},"content":"Format: `schedule id/NUSID [s/SCHEDULE r/REMARK]`","lastModifiedDate":"2024-04-10"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":356,"author":{"gitId":"cheahTJ"},"content":"\u003e Note: ","lastModifiedDate":"2024-04-04"},{"lineNumber":357,"author":{"gitId":"Rikko1204"},"content":"\u003e * Schedule a meeting with a person of the specified `nusId` on the specified `SCHEDULE` with a `REMARK`.","lastModifiedDate":"2024-04-14"},{"lineNumber":358,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` refers to the NUSID shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":359,"author":{"gitId":"Rikko1204"},"content":"\u003e * The `NUSID` **must be a 7-digit number following an \u0027E\u0027**.","lastModifiedDate":"2024-04-10"},{"lineNumber":360,"author":{"gitId":"Rikko1204"},"content":"\u003e * Both `SCHEDULE` and `REMARK` must be either provided or not provided.","lastModifiedDate":"2024-04-14"},{"lineNumber":361,"author":{"gitId":"hjuntan"},"content":"\u003e * **If `SCHEDULE` and `REMARK` are not provided and the `Schedule` command is used as a standalone, the schedule will be removed (`schedule id/E1234567`).**","lastModifiedDate":"2024-04-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":363,"author":{"gitId":"Rikko1204"},"content":"**Tip:** The `SCHEDULE` must be in one of the formats: `DD/MM/YYYY`, `DD-MM-YYYY`, `DD.MM.YYYY`, `MMM DD, YYYY`, `DD MMM YYYY`. Example of date formats include: `12-12-2024`, `12/12/2024`, `12.12.2024`, `Dec 12, 2024`, `12 Dec 2024`.","lastModifiedDate":"2024-04-14"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-01"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":368,"author":{"gitId":"Rikko1204"},"content":"* `schedule id/E0123456 s/12-12-2024 r/Consultation` ","lastModifiedDate":"2024-04-10"},{"lineNumber":369,"author":{"gitId":"Rikko1204"},"content":"  \u003e This command will schedule a meeting with the person of `NUSID` E0123456, with `SCHEDULE` on 12th December 2024 and a `REMARK` of Consultation.","lastModifiedDate":"2024-04-04"},{"lineNumber":370,"author":{"gitId":"RingoftheKing"},"content":"  \u003e If there was a previous date, or remark, it will be replaced!","lastModifiedDate":"2024-04-04"},{"lineNumber":371,"author":{"gitId":"RingoftheKing"},"content":"  \u003e ","lastModifiedDate":"2024-04-04"},{"lineNumber":372,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":373,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/schedule/schedule-with-remark.png\" alt\u003d\"schedule-with-remark\" width\u003d\"700\" style\u003d\"margin-top:20px; margin-bottom:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":374,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":375,"author":{"gitId":"cheahTJ"},"content":"* `schedule id/E0123456` ","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"cheahTJ"},"content":"  \u003e This command will remove the schedule with the person of `NUSID` E0123456.","lastModifiedDate":"2024-04-04"},{"lineNumber":377,"author":{"gitId":"RingoftheKing"},"content":"  \u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":378,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":379,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/schedule/remove-schedule.png\" alt\u003d\"remove-schedule\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":380,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"cheahTJ"},"content":"### Pinning a person: `pin`","lastModifiedDate":"2024-03-31"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":384,"author":{"gitId":"cheahTJ"},"content":"Pins a person to the top of AronaPro.","lastModifiedDate":"2024-04-12"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":386,"author":{"gitId":"cheahTJ"},"content":"Format: `pin id/NUSID`","lastModifiedDate":"2024-04-04"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":388,"author":{"gitId":"cheahTJ"},"content":"\u003e Note:","lastModifiedDate":"2024-04-04"},{"lineNumber":389,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` refers to the NUSID shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":390,"author":{"gitId":"cheahTJ"},"content":"\u003e * The `NUSID` **must be a 7-digit number following an \u0027E\u0027**.","lastModifiedDate":"2024-04-04"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-31"},{"lineNumber":393,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"cheahTJ"},"content":"* `pin id/E0123456` ","lastModifiedDate":"2024-04-04"},{"lineNumber":395,"author":{"gitId":"cheahTJ"},"content":"  \u003e This command will pin a student with `NUSID` of \"E0123456\".","lastModifiedDate":"2024-04-04"},{"lineNumber":396,"author":{"gitId":"RingoftheKing"},"content":"  \u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":397,"author":{"gitId":"cheahTJ"},"content":"    \u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":398,"author":{"gitId":"cheahTJ"},"content":"        \u003cimg src\u003d\"images/pin/pin.png\" alt\u003d\"pin\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":399,"author":{"gitId":"cheahTJ"},"content":"    \u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":400,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":402,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"cheahTJ"},"content":"Clears all entries from AronaPro.","lastModifiedDate":"2024-04-12"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"cheahTJ"},"content":"\u003cp align\u003d\"centerleft\"\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":409,"author":{"gitId":"cheahTJ"},"content":"   \u003cimg src\u003d\"images/clear.png\" alt\u003d\"clear\" width\u003d\"700\" style\u003d\"margin-top:20px\"/\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":410,"author":{"gitId":"cheahTJ"},"content":"\u003c/p\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":411,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":412,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"cheahTJ"},"content":"AronaPro data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-04-12"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":425,"author":{"gitId":"cheahTJ"},"content":"All data from the application is saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-12"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":427,"author":{"gitId":"cheahTJ"},"content":"\u003cbox type\u003d\"warning\" seamless","lastModifiedDate":"2024-04-04"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":429,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":430,"author":{"gitId":"cheahTJ"},"content":"If your changes to the data file makes its format invalid, AronaPro will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":431,"author":{"gitId":"cheahTJ"},"content":"Furthermore, certain edits can cause AronaPro to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-12"},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":434,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"cheahTJ"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous home folder.","lastModifiedDate":"2024-04-12"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":445,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":446,"author":{"gitId":"Rikko1204"},"content":"2. **When using the `schedule` command**, the command does not check for the validity of the date entered. Hence, it is important to ensure that the date entered is valid.","lastModifiedDate":"2024-04-10"},{"lineNumber":447,"author":{"gitId":"Rikko1204"},"content":"3. **When using the `schedule` command**, the command does not check if the valid date entered is in the future. Hence, it is important to ensure that the date entered is in the future.","lastModifiedDate":"2024-04-10"},{"lineNumber":448,"author":{"gitId":"cheahTJ"},"content":"4. **When using the `edit` command**, the command does not check for the validity of the domain name of the email entered as writing an incorrect domain name after the `@` is accepted (e.g. `@random.com`). Hence, it is important to ensure that a valid domain name is entered.","lastModifiedDate":"2024-04-13"},{"lineNumber":449,"author":{"gitId":"hjuntan"},"content":"4. **When using the `group` command with a very long group name**, the group name may be hidden from view. The remedy is to resize the window to view the full group name.","lastModifiedDate":"2024-04-11"},{"lineNumber":450,"author":{"gitId":"hjuntan"},"content":"5. **When adding/editing a person\u0027s email address with a very long email address**, the email address may be hidden from view. The remedy is to resize the window to view the full email address.","lastModifiedDate":"2024-04-11"},{"lineNumber":451,"author":{"gitId":"hjuntan"},"content":"6. **When resizing the window to a smaller size**, the GUI may not fully display the person\u0027s information; for example: name, tag, remark. The remedy is to resize the window to a larger size to view all the information.","lastModifiedDate":"2024-04-11"},{"lineNumber":452,"author":{"gitId":"hjuntan"},"content":"7. **When adding/editing names with special characters, i.e. `!@#$%^\u0026*()_+`**, the application does not allow such names to be added/edited. The remedy is to avoid using special characters in the names.","lastModifiedDate":"2024-04-15"},{"lineNumber":453,"author":{"gitId":"RingoftheKing"},"content":"8. **When using any command** We do not check for extra unrecognized flags (e.g. z/), as it might be included in certain fields such as people names:  Muhammad S/O Ahmad, group names: code/design lab etc. The remedy is to check what flags are valid before/while using a command.","lastModifiedDate":"2024-04-15"},{"lineNumber":454,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":455,"author":{"gitId":"Rikko1204"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-10"},{"lineNumber":456,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":457,"author":{"gitId":"Rikko1204"},"content":"## Planned enhancements","lastModifiedDate":"2024-04-10"},{"lineNumber":458,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":459,"author":{"gitId":"Rikko1204"},"content":"Team size: 5","lastModifiedDate":"2024-04-10"},{"lineNumber":460,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":461,"author":{"gitId":"Rikko1204"},"content":"1. **Validity of date entered:** The current behaviour of the `schedule` command does not check for the validity of the date entered. We plan to implement a check to ensure that the date entered is valid.","lastModifiedDate":"2024-04-10"},{"lineNumber":462,"author":{"gitId":"Rikko1204"},"content":"2. **Future date check:** The current behaviour of the `schedule` command does not check if the valid date entered is in the future. We plan to implement a check to ensure that the date entered is in the future.","lastModifiedDate":"2024-04-10"},{"lineNumber":463,"author":{"gitId":"cheahTJ"},"content":"3. **Validity of email domain entered:** The current behaviour of the `edit` command does not check for the validity of the domain name of the email entered. We plan to implement a check to ensure that a valid domain name is entered.","lastModifiedDate":"2024-04-12"},{"lineNumber":464,"author":{"gitId":"cheahTJ"},"content":"3. **Ordering date in chronological order:** There is currently no ordering of date in any ways in our UI. We plan to implement sorting of the dates in chronological order to aid our users in remembering the dates for their schedules.","lastModifiedDate":"2024-04-14"},{"lineNumber":465,"author":{"gitId":"hjuntan"},"content":"3. **Group name visibility:** When using the `group` command with a very long group name, the group name may be hidden from view. We plan to implement a feature to allow users to view the full group name. Either by truncating the group name, allowing the user to view the full group name or limiting the length of the group name.","lastModifiedDate":"2024-04-11"},{"lineNumber":466,"author":{"gitId":"hjuntan"},"content":"4. **Email address visibility:** When adding/editing a person\u0027s email address with a very long email address, the email address may be hidden from view. We plan to implement a feature to allow users to view the full email address. Either by truncating the email address, allowing the user to view the full email address or limiting the length of the email address.","lastModifiedDate":"2024-04-11"},{"lineNumber":467,"author":{"gitId":"hjuntan"},"content":"5. **Tag information visibility:** When resizing the window to a smaller size, the GUI may not fully display the person\u0027s tag information. We plan to implement a minimum size for the window to ensure that all information is displayed.","lastModifiedDate":"2024-04-11"},{"lineNumber":468,"author":{"gitId":"hjuntan"},"content":"6. **Tag case sensitivity:** When editing tags, the valid forms have to be either 1 of these:  Professor, TA, Student, None. We plan to implement a feature to allow users to enter tags in any case (e.g., professor, ta, student, none) and still be recognised as valid tags.","lastModifiedDate":"2024-04-11"},{"lineNumber":469,"author":{"gitId":"hjuntan"},"content":"7. **Special characters in names:** When adding/editing names with special characters, i.e. `!@#$%^\u0026*()_+`, the application does not allow such names to be added/edited. We plan to implement a feature to allow users to enter names with special characters.","lastModifiedDate":"2024-04-15"},{"lineNumber":470,"author":{"gitId":"hjuntan"},"content":"8. **One schedule per person:** Currently, a person can only have one schedule. We plan to implement a feature to allow a person to have multiple schedules.","lastModifiedDate":"2024-04-15"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":472,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":474,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"RingoftheKing"},"content":"| Action       | Format, Examples                                                                                                                                                                                                                                 |","lastModifiedDate":"2024-03-17"},{"lineNumber":477,"author":{"gitId":"hjuntan"},"content":"|--------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":478,"author":{"gitId":"hjuntan"},"content":"| **Add**      | `add id/NUSID n/NAME p/PHONE_NUMBER e/EMAIL t/TAG [g/GROUP]â€¦â€‹` \u003cbr\u003e e.g., `add id/E1234567 n/James Ho p/22224444 e/jamesho@example.com t/Student g/CS2101`                                                                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":479,"author":{"gitId":"RingoftheKing"},"content":"| **Clear**    | `clear`                                                                                                                                                                                                                                          |","lastModifiedDate":"2024-03-17"},{"lineNumber":480,"author":{"gitId":"hjuntan"},"content":"| **Delete**   | `delete id/NUSID`\u003cbr\u003e e.g., `delete id/E1234567`\u003cbr\u003e OR `delete g/GROUP` \u003cbr\u003e e.g., `delete g/CS2103`                                                                                                                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":481,"author":{"gitId":"hjuntan"},"content":"| **Edit**     | `edit id/NUSID [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TAG] [g/GROUP]â€¦â€‹`\u003cbr\u003e e.g.,`edit id/E1234567 n/James Lee e/jameslee@example.com` \u003cbr\u003e**Tip:** At least one of the optional fields must be provided                                         |","lastModifiedDate":"2024-04-15"},{"lineNumber":482,"author":{"gitId":"hjuntan"},"content":"| **Find**     | `find [id/NUSID] [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TAG] [g/GROUP]â€¦â€‹`\u003cbr\u003e e.g., `find n/James g/CS2103T` \u003cbr\u003e**Tip:** At least one of the optional fields must be provided                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":483,"author":{"gitId":"hjuntan"},"content":"| **Group**    | `group id/NUSIDâ€¦â€‹ [g/GROUP]â€¦â€‹ [t/TAG] ` \u003cbr\u003e e.g., `group id/E1234567 g/T15` \u003cbr\u003e**Tip:** At least one of the optional fields must be provided                                                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":484,"author":{"gitId":"hjuntan"},"content":"| **Schedule** | `schedule id/NUSID [s/SCHEDULE r/REMARK]` \u003cbr\u003e e.g., `schedule id/E1234567 s/12-12-2021 r/Consultation` \u003cbr\u003e**Tip:** If `SCHEDULE` and `REMARK` are not provided and the Schedule command is used as a standalone, the schedule will be removed. |","lastModifiedDate":"2024-04-15"},{"lineNumber":485,"author":{"gitId":"hjuntan"},"content":"| **Pin**      | `pin id/NUSID` \u003cbr\u003e e.g., `pin id/E1234567`                                                                                                                                                                                                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":486,"author":{"gitId":"Rikko1204"},"content":"| **View**     | `view`                                                                                                                                                                                                                                           |","lastModifiedDate":"2024-04-01"},{"lineNumber":487,"author":{"gitId":"RingoftheKing"},"content":"| **Help**     | `help`                                                                                                                                                                                                                                           |","lastModifiedDate":"2024-03-17"},{"lineNumber":488,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":489,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"cheahTJ":217,"Rikko1204":27,"RingoftheKing":32,"Ragnapop":15,"hjuntan":56,"-":142}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eAronaPro\u003c/a\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S2-CS2103T-T15-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Rikko1204":1,"hjuntan":1,"-":65}},{"path":"docs/diagrams/AddDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"skin rose","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"start","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":":User inputs add command;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":":Parse add command;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"if () then ([valid command])","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    :Execute add command;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    :Create instances of each field;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    :Add person to AddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    :Display success message;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"else ([else])","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    :Display error message;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"endif","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"stop","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"Rikko1204":21}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"@startuml","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"!include style.puml","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"end box","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"end box","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"[-\u003e LogicManager : execute(\"add...\")","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"activate LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add...\")","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"create AddCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"activate AddCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"nusId, ...\")","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"activate AddCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"create AddCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"AddCommandParser -\u003e AddCommand : AddCommand(nusId, ...)","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"activate AddCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"deactivate AddCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"LogicManager -\u003e AddCommand : execute(m)","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"activate AddCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"AddCommand -\u003e Model : addPerson(personToAdd)","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"activate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"deactivate Model","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"create CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"activate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"AddCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"deactivate AddCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"@enduml","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"Rikko1204":70}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"user -[USER_COLOR]\u003e ui : \"delete id/E0123456\"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete id/E0123456\")","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hjuntan":2,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nTagType\" as TagType","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"AddressBook *-right-\u003e \"1\" UniqueGroupList","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"UniqueGroupList -[hidden]down- UniquePersonList","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"UniqueGroupList -[hidden]down- UniquePersonList","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"UniqueGroupList -right-\u003e \"*\" Group","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"Person -up-\u003e \"*\" Group","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"Person *--\u003e NusId","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"Person *--\u003e Tag","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"Person *--\u003e Schedule","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"Schedule *--\u003e \"1\" Remark","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hjuntan":11,"-":15}},{"path":"docs/diagrams/DeleteDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"skin rose","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"start","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":":User inputs delete command;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":":Parse delete command;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"if () then ([valid command])","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    :Execute delete command;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    :Create instances of each field;","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    :Delete person/persons from AddressBook;","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    :Display success message;","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"else ([else])","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    :Display error message;","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"endif","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"stop","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"cheahTJ":21}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"[-\u003e LogicManager : execute(\"delete id/E01234567\")","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete id/E01234567\")","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"E01234567\")","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"create ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"DeleteCommandParser -\u003e ParserUtil : parseNusId(\"E01234567\")","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"ParserUtil -\u003e DeleteCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"DeleteCommandParser -\u003e DeleteCommand : DeleteCommand(nusId)","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"DeleteCommandParser --\u003e AddressBookParser : D","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"DeleteCommand -\u003e Model : deletePerson(personToDelete)","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"cheahTJ":13,"Ragnapop":1,"-":64}},{"path":"docs/diagrams/EditDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"@startuml","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"skin rose","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"start","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":":User inputs edit command;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":":Parse edit command;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"if () then ([valid command])","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    :Execute edit command;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    :Create instances of each field;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    :Updates edited person to AddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    :Display success message;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"else ([else])","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    :Display error message;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"endif","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"stop","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"@enduml","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"cheahTJ":21}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"participant \"editPersonDescriptor:EditPersonDescriptor\" as EditPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"[-\u003e LogicManager : execute(\"edit id/E01234567 n/John p/90000001\")","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit id/E01234567 n/John p/90000001\")","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"create EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"n/John p/90000001\")","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"create ArgumentTokenizer","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"EditCommandParser -\u003e ArgumentTokenizer : tokenize((args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_GROUP))","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"ArgumentTokenizer -\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"EditCommandParser -\u003e ParserUtil : parseNusId(\"E01234567\")","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"ParserUtil --\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"EditCommandParser -\u003e ParserUtil : parseName(\"John\")","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"ParserUtil --\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"EditCommandParser -\u003e ParserUtil : parsePhone(\"90000001\")","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"ParserUtil --\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"create EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"EditCommandParser -\u003e EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Ragnapop"},"content":"EditPersonDescriptor --\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Ragnapop"},"content":"EditCommandParser -\u003e EditPersonDescriptor : setName(name)","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Ragnapop"},"content":"EditPersonDescriptor --\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Ragnapop"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"EditCommandParser -\u003e EditPersonDescriptor : setPhone(phone)","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"Ragnapop"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"Ragnapop"},"content":"EditPersonDescriptor --\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"Ragnapop"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"Ragnapop"},"content":"EditCommandParser -\u003e EditPersonDescriptor : setGroups(groups)","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"Ragnapop"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"Ragnapop"},"content":"EditPersonDescriptor --\u003e EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"Ragnapop"},"content":"create EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"Ragnapop"},"content":"EditCommandParser -\u003e EditCommand : EditCommand(nusId, editPersonDescriptor)","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"activate EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"EditCommand --\u003e EditCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"Ragnapop"},"content":"EditCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"destroy EditCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"Ragnapop"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"LogicManager -\u003e EditCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"activate EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"EditCommand -\u003e Model : setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"EditCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"Ragnapop"},"content":"destroy EditCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"cheahTJ":91,"Ragnapop":32}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"@startuml","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"skin rose","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"start","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":":User executes find command;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"if () then ([some field exists])","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"    :get a filtered list;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"    :update model with filtered list;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"else ([no field exists])","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"    :show an error message;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"endif","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"stop","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"@enduml","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"RingoftheKing":16}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"participant \":ArgumentTokenizer\" as Tokenizer LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"participant \":ArgumentMultimap\" as ArgMap LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"participant \"r:CommandResult\" as Result LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"[-\u003e LogicManager : Find","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"LogicManager -\u003e AddressBookParser : parseCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"create FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"AddressBookParser -\u003e FindCommandParser : parse","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e Tokenizer : tokenize","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"activate Tokenizer","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"Tokenizer -\u003e Tokenizer : extractArguments","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"activate Tokenizer","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"deactivate Tokenizer","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"Tokenizer --\u003e FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"deactivate Tokenizer","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e ArgMap : verifyNoDuplicatePrefixes","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"activate ArgMap","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e ArgMap : verifyAtLeastOnePrefixExists","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"RingoftheKing"},"content":"activate ArgMap","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e ArgMap : getValue(PREFIX_NAME)","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"RingoftheKing"},"content":"activate ArgMap","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e ArgMap : getValue(PREFIX_EMAIL)","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"RingoftheKing"},"content":"activate ArgMap","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e ArgMap : getValue(PREFIX_PHONE)","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"RingoftheKing"},"content":"activate ArgMap","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e ArgMap : getValue(PREFIX_TAG)","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"RingoftheKing"},"content":"activate ArgMap","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e ArgMap : getAllValues(PREFIX_GROUP)","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"RingoftheKing"},"content":"activate ArgMap","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"RingoftheKing"},"content":"create FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"RingoftheKing"},"content":"activate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"RingoftheKing"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"RingoftheKing"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"RingoftheKing"},"content":"FindCommandParser -[hidden]\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"RingoftheKing"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"RingoftheKing"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"RingoftheKing"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"RingoftheKing"},"content":"LogicManager -\u003e FindCommand : execute","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"RingoftheKing"},"content":"activate FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"RingoftheKing"},"content":"FindCommand -\u003e Model : updateFilteredPersonList","lastModifiedDate":"2024-03-22"},{"lineNumber":92,"author":{"gitId":"RingoftheKing"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"RingoftheKing"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"RingoftheKing"},"content":"create Result","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"RingoftheKing"},"content":"FindCommand -\u003e Result","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"RingoftheKing"},"content":"activate Result","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"RingoftheKing"},"content":"Result --\u003e FindCommand : r","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"RingoftheKing"},"content":"deactivate","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"RingoftheKing"},"content":"FindCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"RingoftheKing"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"RingoftheKing":106}},{"path":"docs/diagrams/GroupSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"participant \":GroupCommandParser\" as GroupCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"participant \"argMultimap:ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"participant \"groupPersonDescriptor:GroupPersonDescriptor\" as GroupPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"participant \"g:GroupCommand\" as GroupCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"[-\u003e LogicManager : execute(\"group id/E01234567 g/T15 t/TA\")","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"group id/E01234567 g/T15 t/TA\")","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"create GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"AddressBookParser -\u003e GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"activate GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"deactivate GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"AddressBookParser -\u003e GroupCommandParser : parse(\"id/E01234567 g/T15 t/TA\")","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"activate GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"create ArgumentTokenizer","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -\u003e ArgumentTokenizer : tokenize((args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_GROUP))","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"ArgumentTokenizer --\u003e GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -\u003e ParserUtil : parseNusId(\"E01234567\")","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"ParserUtil --\u003e GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -\u003e ParserUtil : parseTag(\"TA\")","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"ParserUtil --\u003e GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -\u003e ParserUtil : parseGroups(\"T15\")","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"ParserUtil --\u003e GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Ragnapop"},"content":"create GroupPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -\u003e GroupPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"activate GroupPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Ragnapop"},"content":"GroupPersonDescriptor --\u003e GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Ragnapop"},"content":"deactivate GroupPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -\u003e GroupPersonDescriptor : setGroups(groups)","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Ragnapop"},"content":"activate GroupPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Ragnapop"},"content":"GroupPersonDescriptor --\u003e GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"Ragnapop"},"content":"deactivate GroupPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -\u003e GroupPersonDescriptor : setTag(tag)","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"Ragnapop"},"content":"activate GroupPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"Ragnapop"},"content":"GroupPersonDescriptor --\u003e GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"Ragnapop"},"content":"deactivate GroupPersonDescriptor","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"Ragnapop"},"content":"create GroupCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -\u003e GroupCommand : GroupCommand(nusId, GroupPersonDescriptor)","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"Ragnapop"},"content":"activate GroupCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"Ragnapop"},"content":"GroupCommand --\u003e GroupCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"Ragnapop"},"content":"deactivate GroupCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser --\u003e AddressBookParser : g","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"Ragnapop"},"content":"deactivate GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"Ragnapop"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"Ragnapop"},"content":"GroupCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"Ragnapop"},"content":"destroy GroupCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"Ragnapop"},"content":"AddressBookParser --\u003e LogicManager : g","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"Ragnapop"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"Ragnapop"},"content":"LogicManager -\u003e GroupCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"Ragnapop"},"content":"activate GroupCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"Ragnapop"},"content":"GroupCommand -\u003e Model : setPerson(personToGroup, groupedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"Ragnapop"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"Ragnapop"},"content":"Model --\u003e GroupCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"Ragnapop"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"Ragnapop"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"Ragnapop"},"content":"GroupCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"Ragnapop"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"Ragnapop"},"content":"CommandResult --\u003e GroupCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"Ragnapop"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"Ragnapop"},"content":"GroupCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"Ragnapop"},"content":"destroy GroupCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"Ragnapop"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"Ragnapop"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"Ragnapop"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"Ragnapop":117}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"Class Tag","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nTagType\" as TagType","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"Class NusId","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"Class Group","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"Class Schedule","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"Class Remark","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"Person *--\u003e NusId","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"Person *--\u003e Tag","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"Person *--\u003e Schedule","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"Person *--\u003e Remark","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"Person *--\u003e \"*\" Group","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"NusId -[hidden]right-\u003e Name","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"Tag -[hidden]right-\u003e Schedule","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"Schedule -[hidden]right-\u003e Remark","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hjuntan":16,"-":48}},{"path":"docs/diagrams/PinDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"@startuml","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"skin rose","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"start","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":":User inputs pin command;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":":Parse pin command;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"if () then ([valid command])","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"    :Execute pin command;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    :Pin person to the top of address book;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    :Save modified person in AddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    :Display success message;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"else ([else])","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    :Display error message;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"endif","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"stop","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"@enduml","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"cheahTJ":21}},{"path":"docs/diagrams/PinSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"@startuml","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"!include style.puml","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"participant \":PinCommandParser\" as PinCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"participant \"d:PinCommand\" as PinCommand LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"end box","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"end box","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"[-\u003e LogicManager : execute(\"pin id/E01234567\")","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"activate LogicManager","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"pin id/E01234567\")","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"create PinCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"AddressBookParser -\u003e PinCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"activate PinCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"PinCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"deactivate PinCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"AddressBookParser -\u003e PinCommandParser : parse(\"E01234567\")","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"activate PinCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"create ParserUtil","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"PinCommandParser -\u003e ParserUtil : parseNusId(\"E01234567\")","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"ParserUtil -\u003e PinCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"create PinCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"PinCommandParser -\u003e PinCommand : PinCommand(nusId)","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"activate PinCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"PinCommand --\u003e PinCommandParser :","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"deactivate PinCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"PinCommandParser --\u003e AddressBookParser : D","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"deactivate PinCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"PinCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"destroy PinCommandParser","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"LogicManager -\u003e PinCommand : execute(m)","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"activate PinCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"PinCommand -\u003e Model : pinPerson(personToPin)","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"activate Model","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"Model --\u003e PinCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"deactivate Model","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"create CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"PinCommand -\u003e CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"activate CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"CommandResult --\u003e PinCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"PinCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"deactivate PinCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"@enduml","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"cheahTJ":78}},{"path":"docs/diagrams/ScheduleDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"skin rose","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"start","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":":User inputs schedule command;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":":Parse schedule command;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"if () then ([valid command])","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    :Execute schedule command;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    :Edit person\u0027s details;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    :Save modified person in AddressBook;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    :Display success message;","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"else ([else])","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    :Display error message;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"endif","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"stop","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"Rikko1204":23}},{"path":"docs/diagrams/ScheduleSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"participant \":ScheduleCommandParser\" as ScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"participant \"s:ScheduleCommand\" as ScheduleCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"[-\u003e LogicManager : execute(\"schedule...\")","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"schedule...\")","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"create ScheduleCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"AddressBookParser -\u003e ScheduleCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"ScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"AddressBookParser -\u003e ScheduleCommandParser : parse(\"id...\")","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"create ScheduleCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"ScheduleCommandParser -\u003e ScheduleCommand : ScheduleCommand(nusId, schedule, remark)","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"activate ScheduleCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"ScheduleCommand --\u003e ScheduleCommandParser :","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"ScheduleCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"ScheduleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"destroy ScheduleCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"LogicManager -\u003e ScheduleCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"activate ScheduleCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"ScheduleCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"Model --\u003e ScheduleCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"ScheduleCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"CommandResult --\u003e ScheduleCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"ScheduleCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"cheahTJ":1,"Rikko1204":69}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"Class JsonAdaptedGroup","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedGroup","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hjuntan":2,"-":41}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"Class ScheduleListPanel","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"Class ScheduleCard","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"MainWindow *-down-\u003e \"1\" ScheduleListPanel","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"ScheduleListPanel -down-\u003e \"*\" ScheduleCard","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"ScheduleListPanel --|\u003e UiPart","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"ScheduleCard --|\u003e UiPart","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"ScheduleCard ..\u003e Model","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hjuntan":7,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"# AronaPro","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T15-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T15-2/tp/actions)","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T15-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S2-CS2103T-T15-2/tp)","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"AronaPro is a **desktop app** catered primarily for Computing Professors and Teaching Assistants(TAs) to manage your students/professors/TAs contacts efficiently, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"Our product ensures that you can always centralise their contacts, connect and coordinate with them.","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"* If you are interested in using AronaPro, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"* If you are interested about developing AronaPro, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheahTJ":6,"hjuntan":2,"-":15}},{"path":"docs/team/cheahtj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"  layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"  title: \"Cheah Tze Juen\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"### Project: AronaPro","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"AronaPro is a desktop application designed for tech-savvy university Computer Science teaching assistants,","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"enabling them to enjoy an organised and vibrant approach to query, and manage an array of students and professorsâ€™","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"contacts via the Command Line Interface (CLI).","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"My contributions to the project are listed below","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"* **Modify delete feature**: Edited to allow the deletion of an existing contact by NusId. (Pull request #63) ","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    * What it does: Allows the user to delete an existing contact via the NusId instead of the index of contact.","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    * Justification: This allows user to delete their student quickly with their NusId rather than having to find the index.","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"* **Modify edit feature**: Edited to allow the edit of an existing contact in terms of name, phone, email, group and tag. (Pull request #73)","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"  * What it does: Allows the user to edit the name, phone, email, group and tag of an existing contact.","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"  * Justification: This gives users more flexibility to change their contact information.","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"* **Project management**:","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    * Managed milestone `v1.1` deliverables on GitHub","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    * Managed milestone `v1.2` deliverables on GitHub","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    * Contributed issues ","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    * Reviewed and merged PRs","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"* **Tools**:","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"cheahTJ":56}},{"path":"docs/team/hjuntan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"  layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"  title: \"Tan Hong Jun\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"### Project: AronaPro","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"AronaPro is a desktop application designed for tech-savvy university Computer Science teaching assistants,","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"enabling them to enjoy an organised and vibrant approach to query, and manage an array of students and professorsâ€™","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"contacts via the Command Line Interface (CLI).","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"My contributions to the project are listed below","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"* **Project management**:","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"* **Tools**:","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"cheahTJ":48}},{"path":"docs/team/ragnapop.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"  layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"  title: \"Loh Jin Hun\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"### Project: AronaPro","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"AronaPro is a desktop application designed for tech-savvy university Computer Science teaching assistants,","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"enabling them to enjoy an organised and vibrant approach to query, and manage an array of students and professorsâ€™","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"contacts via the Command Line Interface (CLI).","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"My contributions to the project are listed below","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"* **Project management**:","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"* **Tools**:","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"cheahTJ":48}},{"path":"docs/team/rikko1204.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"  layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"  title: \"Chen Kuan Min\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"### Project: AronaPro","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"AronaPro is a desktop application designed for tech-savvy university Computer Science teaching assistants,","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"enabling them to enjoy an organised and vibrant approach to query, and manage an array of students and professorsâ€™","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"contacts via the Command Line Interface (CLI).","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"My contributions to the project are listed below","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"* **New Feature**: Added a schedule command.","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    * What it does: allows the user to add a schedule with someone in the contact list.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    * Justification: This feature improves the product significantly because it allows the user to keep track of their schedule with someone in the contact list.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"* **Code contributed**: [https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dRikko1204\u0026tabRepo\u003dAY2324S2-CS2103T-T15-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse]()","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    * Add unique field NUSID to the person class.","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    * Add ability to group several contacts into a single group in one `group` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    * Wrote additional tests for existing features such as `add`, `schedule` and `group`.","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        * Added documentation for the features `add` and `schedule`.","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        * Added implementation details of the `add` and `schedule` features.","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    * PRs reviewed (with non-trivial review comments)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"* **Tools**:","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"    * Setup and maintained the project website using MarkBind.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"cheahTJ":24,"Rikko1204":11}},{"path":"docs/team/ringoftheking.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"  layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"  title: \"Guo YuHao Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"### Project: AronaPro","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"AronaPro is a desktop application designed for tech-savvy university Computer Science teaching assistants,","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"enabling them to enjoy an organised and vibrant approach to query, and manage an array of students and professorsâ€™","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"contacts via the Command Line Interface (CLI).","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"My contributions to the project are listed below","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"* **Project management**:","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"* **Tools**:","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"cheahTJ":48}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.ui.CommandBox;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"RingoftheKing"},"content":"        logic \u003d new LogicManager(model, storage, new CommandHistory());","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"RingoftheKing"},"content":"    protected void provideStorageForCommandBox(Storage storage) throws DataLoadingException {","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"RingoftheKing"},"content":"        CommandBox.setCommandHistory(storage.readCommandHistory().orElse(new CommandHistory()));","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheahTJ":1,"RingoftheKing":7,"-":184}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"    private Path commandHistoryFilePath \u003d Paths.get(\"data\", \"commandHistory.json\");","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"    public Path getCommandHistoryFilePath() {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"        return commandHistoryFilePath;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"    public void setCommandHistoryFilePath(Path commandHistoryFilePath) {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"        this.commandHistoryFilePath \u003d commandHistoryFilePath;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RingoftheKing":9,"-":65}},{"path":"src/main/java/seedu/address/logic/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":" * Represents the list of commands the user has typed,","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":" * Persists between opening and closing of AronaPro.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"public class CommandHistory implements ReadOnlyCommandHistory {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"    private int cursorPosition \u003d 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"    private final ObservableList\u003cString\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"    private final ObservableList\u003cString\u003e unmodifiableList \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"     * Creates a new Command History the user can interact with using their up and down keys.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"    public CommandHistory() {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"    public ObservableList\u003cString\u003e getCommandHistory() {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"        return unmodifiableList;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"     * Adds a command to the Command History of the user.","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"     * Removes the oldest command if the length exceeds 50","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"     * @param s the Command string to store","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"    public void add(String s) {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"        internalList.add(s);","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"        // Ensures the list doesn\u0027t grow infinitely","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"        if (internalList.size() \u003e 50) {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"            internalList.remove(0);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"     * Returns the previous Command relative to the cursor\u0027s current position.","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"     * If the previous command doesn\u0027t exist, this returns nothing","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"     * @see Optional","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"    public Optional\u003cString\u003e getPreviousCommand() {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"RingoftheKing"},"content":"        if (historyIsEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"RingoftheKing"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"        } else if (cursorPosition \u003d\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"RingoftheKing"},"content":"            return Optional.of(internalList.get(0));","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"RingoftheKing"},"content":"        } else if (cursorPosition \u003e internalList.size()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"RingoftheKing"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"RingoftheKing"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"RingoftheKing"},"content":"            cursorPosition--;","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"RingoftheKing"},"content":"            assert cursorPosition \u003e\u003d 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"RingoftheKing"},"content":"            return Optional.of(internalList.get(cursorPosition));","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"RingoftheKing"},"content":"     * Returns the next Command relative to the cursor\u0027s current position","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"RingoftheKing"},"content":"     * If the next command doesn\u0027t exist, this returns nothing","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"RingoftheKing"},"content":"    public Optional\u003cString\u003e getNextCommand() {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"RingoftheKing"},"content":"        if (historyIsEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"RingoftheKing"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"        if (cursorPosition \u003c internalList.size() - 1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"RingoftheKing"},"content":"            cursorPosition++;","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"RingoftheKing"},"content":"            return Optional.of(internalList.get(cursorPosition));","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"RingoftheKing"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"RingoftheKing"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"RingoftheKing"},"content":"     * Moves the cursor to the position of the last Command","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"RingoftheKing"},"content":"    public void moveCursorToMostRecent() {","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"RingoftheKing"},"content":"        if (historyIsEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"RingoftheKing"},"content":"            return;","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"RingoftheKing"},"content":"        cursorPosition \u003d internalList.size();","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"RingoftheKing"},"content":"     * Checks if the user\u0027s command history is empty","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"RingoftheKing"},"content":"    public boolean historyIsEmpty() {","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"RingoftheKing"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"RingoftheKing"},"content":"    protected void setCursorPosition(int index) {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"RingoftheKing"},"content":"        cursorPosition \u003d index;","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RingoftheKing":99}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"    CommandHistory getCommandHistory();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"    ObservableList\u003cPerson\u003e getScheduleFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"RingoftheKing":2,"hjuntan":3,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"    private final CommandHistory commandHistory;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"    public LogicManager(Model model, Storage storage, CommandHistory commandHistory) {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"        this.commandHistory \u003d commandHistory;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"    public ObservableList\u003cPerson\u003e getScheduleFilteredPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"        return model.getScheduleFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"RingoftheKing"},"content":"    public CommandHistory getCommandHistory() {","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"RingoftheKing"},"content":"        return commandHistory;","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"RingoftheKing":9,"hjuntan":5,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public static final String MESSAGE_UNKNOWN_NUSID \u003d \"The NUSID provided does not exist!\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"    public static final String MESSAGE_NON_EXISTENT_PERSON \u003d \"The person(s) does not exist in the address book\";","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    public static final String MESSAGE_NON_EXISTENT_GROUP \u003d \"This group does not exist in the address book\";","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"    public static final String MESSAGE_GROUP_PERSON \u003d \"Group has been assigned!\";","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    public static final String MESSAGE_GROUP_PERSON_INVALID \u003d \"The person(s) does not exist in the address book\";","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"    public static final String MESSAGE_AT_LEAST_ONE_FIELD_REQUIRED \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"            \"Please input at least one identifier (e.g. n/) into the command \\n\";","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"                .append(\"; NusId: \")","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"                .append(person.getNusId())","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"                .append(\"; Schedule: \")","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"                .append(person.getSchedule())","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"                .append(person.getRemark())","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"                .append(\"; Tag: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"                .append(person.getTag())","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"                .append(\"; Groups: \");","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"        person.getGroups().forEach(builder::append);","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"     * Formats the {@code persons} for display to the user.","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"    public static String format(List\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"        persons.stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"                .map(person -\u003e format(person))","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"                .forEach(builder::append);","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rikko1204":18,"RingoftheKing":2,"Ragnapop":1,"hjuntan":5,"-":49}},{"path":"src/main/java/seedu/address/logic/ReadOnlyCommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":" * Class that represents a non-modifiable Command History","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"public interface ReadOnlyCommandHistory {","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"    ObservableList\u003cString\u003e getCommandHistory();","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RingoftheKing":10}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"            + PREFIX_NUSID + \"NUSID \"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"            + PREFIX_TAG + \"TAG \"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]...\\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"            + PREFIX_NUSID + \"E1234567 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"            + PREFIX_TAG + \"Student \"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"            + PREFIX_GROUP + \"friends \"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"            + PREFIX_GROUP + \"owesMoney\";","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheahTJ":1,"Rikko1204":3,"hjuntan":6,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"            + \": Deletes the person identified by the NusId used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"            + PREFIX_NUSID + \"NUSID\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"            + PREFIX_NUSID + \"E1234567\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"            + \"OR \\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"            + COMMAND_WORD","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"            + \": Deletes all the people identified by the group used in the displayed person list.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"            + PREFIX_GROUP + \"GROUP\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"            + \"Example: \" + COMMAND_WORD + \" g/CS2103\";","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"    public static final String MESSAGE_DELETE_GROUP_SUCCESS \u003d \"Deleted Group: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    private final NusId nusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"    private final Group group;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"     * @param nusId of the person in the filtered person list to delete","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    public DeleteCommand(NusId nusId) {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        this.nusId \u003d nusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"        this.group \u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"     * @param group in which all people in the filtered person list are to be deleted","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"    public DeleteCommand(Group group) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"        this.group \u003d group;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"        this.nusId \u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"        if (this.nusId !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"            Person personToDelete \u003d model.filterPersonListWithNusId(nusId);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"            if (personToDelete \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"                throw new CommandException(Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"Ragnapop"},"content":"            List\u003cPerson\u003e peopleToDelete \u003d new ArrayList\u003cPerson\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Ragnapop"},"content":"            Group deletedGroup \u003d group;","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Ragnapop"},"content":"            for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Ragnapop"},"content":"                System.out.println(lastShownList.get(i).getGroups().contains(deletedGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"Ragnapop"},"content":"                if (lastShownList.get(i).getGroups().contains(deletedGroup)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"Ragnapop"},"content":"                    peopleToDelete.add(lastShownList.get(i));","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Ragnapop"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Ragnapop"},"content":"            System.out.println(lastShownList.size());","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Ragnapop"},"content":"            if (peopleToDelete.size() \u003d\u003d 0) {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"Ragnapop"},"content":"                throw new CommandException(Messages.MESSAGE_NON_EXISTENT_GROUP);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Ragnapop"},"content":"            for (int i \u003d 0; i \u003c peopleToDelete.size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Ragnapop"},"content":"                model.deletePerson(peopleToDelete.get(i));","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Ragnapop"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS, this.group.groupName));","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"Ragnapop"},"content":"        if (nusId !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"            return nusId.equals(otherDeleteCommand.nusId);","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"Rikko1204"},"content":"        } else if (group !\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"Ragnapop"},"content":"            return group.equals(otherDeleteCommand.group);","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"Ragnapop"},"content":"        return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"Ragnapop"},"content":"        if (nusId !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"Ragnapop"},"content":"                    .add(\"targetNusId\", nusId.toString())","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"Rikko1204"},"content":"        } else if (group !\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"Ragnapop"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Ragnapop"},"content":"                    .add(\"targetGroup\", group.toString())","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"Ragnapop"},"content":"                    .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Ragnapop"},"content":"        return null;","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheahTJ":22,"Rikko1204":3,"Ragnapop":49,"-":55}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"            + \"by the NusId used in the displayed person list.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"            + PREFIX_NUSID + \"NUSID \"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]... \\n\"","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"            + PREFIX_NUSID + \"E1234567 \"","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"    private final NusId nusId;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"     * @param nusId of the person in the filtered person list to edit","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"    public EditCommand(NusId nusId, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        requireNonNull(nusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        this.nusId \u003d nusId;","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"        Person personToEdit \u003d model.filterPersonListWithNusId(nusId);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"        if (personToEdit \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"            throw new CommandException(Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"hjuntan"},"content":"        NusId nusId \u003d personToEdit.getNusId(); // nusId is immutable","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"        Schedule updatedSchedule \u003d editPersonDescriptor.getSchedule()","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"                .orElse(personToEdit.getSchedule());; // Edit does not allow editing schedule","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark()","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"                .orElse(personToEdit.getRemark()); // Edit does not allow editing remark","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"hjuntan"},"content":"        Tag updatedTag \u003d editPersonDescriptor.getTag().orElse(personToEdit.getTag());","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"hjuntan"},"content":"        Set\u003cGroup\u003e updatedGroups \u003d editPersonDescriptor.getGroups().orElse(personToEdit.getGroups());","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"        return new Person(nusId, updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"Rikko1204"},"content":"                updatedTag, updatedGroups, updatedSchedule, updatedRemark);","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"        return nusId.equals(otherEditCommand.nusId)","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"cheahTJ"},"content":"                .add(\"targetnusId\", nusId.toString())","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"hjuntan"},"content":"        private Tag tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"hjuntan"},"content":"        private Set\u003cGroup\u003e groups;","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"        private Schedule schedule;","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"        private Remark remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"hjuntan"},"content":"         * A defensive copy of {@code groups} is used internally.","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"cheahTJ"},"content":"            setSchedule(toCopy.schedule);","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"hjuntan"},"content":"            setTag(toCopy.tag);","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"hjuntan"},"content":"            setGroups(toCopy.groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"hjuntan"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tag, groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"cheahTJ"},"content":"        public void setSchedule(Schedule schedule) {","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"cheahTJ"},"content":"            this.schedule \u003d schedule;","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"cheahTJ"},"content":"        public Optional\u003cSchedule\u003e getSchedule() {","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"cheahTJ"},"content":"            return Optional.ofNullable(schedule);","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"cheahTJ"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"cheahTJ"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"cheahTJ"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"cheahTJ"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"hjuntan"},"content":"        public void setTag(Tag tag) {","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"hjuntan"},"content":"            this.tag \u003d tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"hjuntan"},"content":"        public Optional\u003cTag\u003e getTag() {","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"hjuntan"},"content":"            return Optional.ofNullable(tag);","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"hjuntan"},"content":"         * Sets {@code groups} to this object\u0027s {@code groups}.","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"hjuntan"},"content":"         * A defensive copy of {@code groups} is used internally.","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"hjuntan"},"content":"        public void setGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"hjuntan"},"content":"            this.groups \u003d (groups !\u003d null) ? new HashSet\u003c\u003e(groups) : null;","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"hjuntan"},"content":"         * Returns an unmodifiable group set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"hjuntan"},"content":"         * Returns {@code Optional#empty()} if {@code groups} is null.","lastModifiedDate":"2024-03-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"hjuntan"},"content":"        public Optional\u003cSet\u003cGroup\u003e\u003e getGroups() {","lastModifiedDate":"2024-03-11"},{"lineNumber":232,"author":{"gitId":"hjuntan"},"content":"            return (groups !\u003d null) ? Optional.of(Collections.unmodifiableSet(groups)) : Optional.empty();","lastModifiedDate":"2024-03-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":250,"author":{"gitId":"hjuntan"},"content":"                    \u0026\u0026 Objects.equals(tag, otherEditPersonDescriptor.tag)","lastModifiedDate":"2024-03-11"},{"lineNumber":251,"author":{"gitId":"hjuntan"},"content":"                    \u0026\u0026 Objects.equals(groups, otherEditPersonDescriptor.groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":260,"author":{"gitId":"hjuntan"},"content":"                    .add(\"tag\", tag)","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"hjuntan"},"content":"                    .add(\"groups\", groups)","lastModifiedDate":"2024-03-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"cheahTJ":41,"Rikko1204":4,"Ragnapop":1,"hjuntan":30,"-":189}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.EmailMatchesPredicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.GroupMatchesPredicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NusIdMatchesPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.PhoneMatchesPredicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.TagMatchesPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"    // This string is used by Predicates to help them know when a parameter isn\u0027t required.","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"    public static final String NOT_REQUIRED_VALUE \u003d \"$$NOT_REQUIRED$$\";","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all people who matches ALL of \"","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"            + \"the specified keywords and displays them as a list.\\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"            + \"Usage: find [id/NUSID] [n/NAME] [e/EMAIL] [p/PHONE_NUMBER] [t/TAG] [g/GROUP]...\\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Peter Parker \" + \"g/CS2101\";","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    private final NusIdMatchesPredicate nusIdPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"    private final EmailMatchesPredicate emailPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"    private final GroupMatchesPredicate groupPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"    private final PhoneMatchesPredicate phonePredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"    private final TagMatchesPredicate tagPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"     * Creates a FindCommand with predicates initialized with the provided predicates","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"     * @param id nusId","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"     * @param n name","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"     * @param e email","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"     * @param g group","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"     * @param p phone","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"     * @param t tag","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"    public FindCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"                       NusIdMatchesPredicate id,","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"                       NameContainsKeywordsPredicate n,","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"                       EmailMatchesPredicate e,","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"                       GroupMatchesPredicate g,","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"                       PhoneMatchesPredicate p,","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"                       TagMatchesPredicate t) {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"        nusIdPredicate \u003d id;","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"        namePredicate \u003d n;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"        emailPredicate \u003d e;","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"        groupPredicate \u003d g;","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"        phonePredicate \u003d p;","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"        tagPredicate \u003d t;","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"Ragnapop"},"content":"        model.updateFilteredPersonList(nusIdPredicate","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"Ragnapop"},"content":"                .and(namePredicate)","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"RingoftheKing"},"content":"                .and(emailPredicate)","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"                .and(groupPredicate)","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"RingoftheKing"},"content":"                .and(phonePredicate)","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"RingoftheKing"},"content":"                .and(tagPredicate));","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"Ragnapop"},"content":"        boolean a \u003d nusIdPredicate.equals(otherFindCommand.nusIdPredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"Ragnapop"},"content":"        boolean b \u003d namePredicate.equals(otherFindCommand.namePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"Ragnapop"},"content":"        boolean c \u003d emailPredicate.equals(otherFindCommand.emailPredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"Ragnapop"},"content":"        boolean d \u003d groupPredicate.equals(otherFindCommand.groupPredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"Ragnapop"},"content":"        boolean e \u003d phonePredicate.equals(otherFindCommand.phonePredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"Ragnapop"},"content":"        boolean f \u003d tagPredicate.equals(otherFindCommand.tagPredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"Ragnapop"},"content":"        return a \u0026\u0026 b \u0026\u0026 c \u0026\u0026 d \u0026\u0026 e \u0026\u0026 f;","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"Ragnapop"},"content":"                .add(\"nusIdPredicate\", nusIdPredicate)","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"namePredicate\", namePredicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"phonePredicate\", phonePredicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"emailPredicate\", emailPredicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"tagPredicate\", tagPredicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"groupPredicate\", groupPredicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"RingoftheKing":28,"Ragnapop":33,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/GroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.Messages.MESSAGE_GROUP_PERSON_INVALID;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":" * assigns a group to an existing person in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"public class GroupCommand extends Command {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"    public static final String MESSAGE_GROUP_PERSON_SUCCESS \u003d \"Grouped Person: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"    public static final String COMMAND_WORD \u003d \"group\";","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assigns the person identified to a group\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"            + PREFIX_NUSID + \"NUSID...\"","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"            + \" [\" + PREFIX_GROUP + \"GROUP]... \"","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"            + \" [\" + PREFIX_TAG + \"TAG] \\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"            + PREFIX_NUSID + \"EXXXXXXX \"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"            + PREFIX_GROUP + \"Class T15 \"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"            + PREFIX_TAG + \"TA\";","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"    private final Set\u003cNusId\u003e toGroup;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"    private final GroupPersonDescriptor groupPersonDescriptor;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"     * @param nusIds of the person in the filtered person list to group","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"     * @param groupPersonDescriptor details to group the person with","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"    public GroupCommand(Set\u003cNusId\u003e nusIds, GroupPersonDescriptor groupPersonDescriptor) {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        requireNonNull(nusIds);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        toGroup \u003d nusIds;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"        this.groupPersonDescriptor \u003d new GroupPersonDescriptor(groupPersonDescriptor);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"Ragnapop"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Ragnapop"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        List\u003cPerson\u003e personToGroup \u003d lastShownList.stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"                .filter(person -\u003e toGroup.contains(person.getNusId()))","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"        List\u003cPerson\u003e groupedPerson \u003d createGroupedPerson(personToGroup, groupPersonDescriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"        if (personToGroup.isEmpty() || personToGroup.size() !\u003d toGroup.size()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Ragnapop"},"content":"            throw new CommandException(MESSAGE_GROUP_PERSON_INVALID);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"        IntStream.range(0, personToGroup.size())","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"                .forEach(index -\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"                    Person original \u003d personToGroup.get(index);","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"                    Person modified \u003d groupedPerson.get(index);","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"                    model.setPerson(original, modified);","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"                });","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"Ragnapop"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_PERSON_SUCCESS, Messages.format(groupedPerson)));","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"     * Modify {@code personsToGroup} according to {@code groupPersonDescriptor}","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"     * @param personsToGroup List of Person to be modified","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"     * @param groupPersonDescriptor Values to be modified to","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"     * @return Modified list of Person","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"    public static List\u003cPerson\u003e createGroupedPerson(List\u003cPerson\u003e personsToGroup,","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"                                                   GroupPersonDescriptor groupPersonDescriptor) {","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"        List\u003cPerson\u003e groupedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"        for (Person personToGroup : personsToGroup) {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Ragnapop"},"content":"            assert personToGroup !\u003d null;","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"Ragnapop"},"content":"            NusId nusId \u003d personToGroup.getNusId();","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"Ragnapop"},"content":"            Name name \u003d personToGroup.getName();","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"Ragnapop"},"content":"            Phone phone \u003d personToGroup.getPhone();","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"Ragnapop"},"content":"            Email email \u003d personToGroup.getEmail();","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"            Tag updatedTag \u003d groupPersonDescriptor.getTag().orElse(personToGroup.getTag());","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"            Set\u003cGroup\u003e updatedGroups \u003d groupPersonDescriptor.getGroups().orElse(personToGroup.getGroups());","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"Ragnapop"},"content":"            Schedule schedule \u003d personToGroup.getSchedule();","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"Ragnapop"},"content":"            Remark remark \u003d personToGroup.getRemark();","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"Rikko1204"},"content":"            groupedPersons.add(new Person(nusId, name, phone, email, updatedTag, updatedGroups, schedule, remark));","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"Rikko1204"},"content":"        return groupedPersons;","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"Ragnapop"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"Ragnapop"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"Rikko1204"},"content":"                .add(\"nusIds\", toGroup)","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Ragnapop"},"content":"                .add(\"groupPersonDescriptor\", groupPersonDescriptor)","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"Ragnapop"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Rikko1204"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Rikko1204"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Rikko1204"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Rikko1204"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Rikko1204"},"content":"        if (!(other instanceof GroupCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Rikko1204"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand otherGroupCommand \u003d (GroupCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Rikko1204"},"content":"        return toGroup.size() \u003d\u003d otherGroupCommand.toGroup.size()","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 toGroup.containsAll(otherGroupCommand.toGroup)","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 groupPersonDescriptor.equals(otherGroupCommand.groupPersonDescriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"Ragnapop"},"content":"     * Sets {@code group} to this object\u0027s {@code groups}.","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"Ragnapop"},"content":"     * A defensive copy of {@code groups} is used internally.","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"Ragnapop"},"content":"    public static class GroupPersonDescriptor {","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"Ragnapop"},"content":"        private Set\u003cGroup\u003e groups;","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"Ragnapop"},"content":"        private Tag tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"Ragnapop"},"content":"        public GroupPersonDescriptor() {}","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"Ragnapop"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"Ragnapop"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"Ragnapop"},"content":"         */","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"Ragnapop"},"content":"        public GroupPersonDescriptor(GroupPersonDescriptor toCopy) {","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"Ragnapop"},"content":"            setGroups(toCopy.groups);","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"Ragnapop"},"content":"            setTag(toCopy.tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"Ragnapop"},"content":"        public void setTag(Tag tag) {","lastModifiedDate":"2024-03-13"},{"lineNumber":160,"author":{"gitId":"Ragnapop"},"content":"            this.tag \u003d tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"Ragnapop"},"content":"        public Optional\u003cTag\u003e getTag() {","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"Ragnapop"},"content":"            return Optional.ofNullable(tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"Ragnapop"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"Ragnapop"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"Ragnapop"},"content":"         */","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"Ragnapop"},"content":"        public void setGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"Ragnapop"},"content":"            this.groups \u003d (groups !\u003d null) ? new HashSet\u003c\u003e(groups) : null;","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"Ragnapop"},"content":"        /**","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"Ragnapop"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"Ragnapop"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"Ragnapop"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"Ragnapop"},"content":"         */","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"Ragnapop"},"content":"        public Optional\u003cSet\u003cGroup\u003e\u003e getGroups() {","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"Ragnapop"},"content":"            return (groups !\u003d null) ? Optional.of(Collections.unmodifiableSet(groups)) : Optional.empty();","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"Ragnapop"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"Ragnapop"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"Ragnapop"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"Ragnapop"},"content":"                return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"Ragnapop"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"Ragnapop"},"content":"            if (!(other instanceof GroupCommand.GroupPersonDescriptor)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"Ragnapop"},"content":"                return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"Ragnapop"},"content":"            GroupPersonDescriptor otherGroupPersonDescriptor \u003d (GroupPersonDescriptor) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"Rikko1204"},"content":"            return Objects.equals(groups, otherGroupPersonDescriptor.groups)","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"Ragnapop"},"content":"                    \u0026\u0026 Objects.equals(tag, otherGroupPersonDescriptor.tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"Ragnapop"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"Ragnapop"},"content":"        public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"Ragnapop"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"Ragnapop"},"content":"                    .add(\"groups\", groups)","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"Ragnapop"},"content":"                    .add(\"tag\", tag)","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"Ragnapop"},"content":"                    .toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":206,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":207,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":208,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":209,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"cheahTJ":2,"Rikko1204":59,"Ragnapop":148,"hjuntan":1}},{"path":"src/main/java/seedu/address/logic/commands/PinCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":" * Pins a person to the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"public class PinCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"    public static final String COMMAND_WORD \u003d \"pin\";","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Pins a student to the top of the address book.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"            + PREFIX_NUSID + \"NUSID\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"            + PREFIX_NUSID + \"E1234567 \";","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public static final String MESSAGE_PIN_PERSON_SUCCESS \u003d \"Student has been pinned: %1$s\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    private final NusId nusId;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"    public PinCommand(NusId nusId) {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        this.nusId \u003d nusId;","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        Person personToPin \u003d model.filterPersonListWithNusId(nusId);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        if (personToPin \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"            throw new CommandException(Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"        model.pinPerson(personToPin);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        return new CommandResult(String.format(MESSAGE_PIN_PERSON_SUCCESS, Messages.format(personToPin)));","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"        if (!(other instanceof PinCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        PinCommand otherDeleteCommand \u003d (PinCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        return nusId.equals(otherDeleteCommand.nusId);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"                .add(\"targetnusId\", nusId.toString())","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"cheahTJ":68}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_NUSID;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedule or remove a meeting with a person. \\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"            + PREFIX_NUSID + \"NUSID \"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"            + \"[\" + PREFIX_SCHEDULE + \"SCHEDULE \"","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"            + PREFIX_REMARK + \"REMARK] \\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"            + \"Note: Both SCHEDULE and REMARK must be either present or absent. \\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"            + PREFIX_NUSID + \"E1234567 \"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"            + PREFIX_SCHEDULE + \"01-12-2021 \"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"            + PREFIX_REMARK + \"Consultation at 3pm at ComSci 1\";","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"    public static final String MESSAGE_ADD_SUCCESS \u003d \"New schedule added with person: %1$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"    public static final String MESSAGE_DELETE_SUCCESS \u003d \"Removed schedule from person: %1$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"    private final NusId nusId;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"    private final Schedule schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    private final Remark remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"     * Creates a ScheduleCommand to schedule a meeting with Person with {@code NusId}","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"    public ScheduleCommand(NusId nusId, Schedule schedule, Remark remark) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        requireAllNonNull(nusId, schedule, remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        this.nusId \u003d nusId;","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        Person personToEdit \u003d model.filterPersonListWithNusId(nusId);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"        if (personToEdit \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_NUSID);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"        Person editedPerson \u003d new Person(personToEdit.getNusId(), personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"                personToEdit.getEmail(), personToEdit.getTag(), personToEdit.getGroups(), schedule, remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"    private String generateSuccessMessage(Person editedPerson) {","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"        String message \u003d !schedule.date.isEmpty() ? MESSAGE_ADD_SUCCESS : MESSAGE_DELETE_SUCCESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"        return String.format(message, Messages.format(editedPerson));","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"        if (!(other instanceof ScheduleCommand)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand otherScheduleCommand \u003d (ScheduleCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"        return nusId.equals(otherScheduleCommand.nusId)","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 schedule.equals(otherScheduleCommand.schedule)","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 remark.equals(otherScheduleCommand.remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"                .add(\"nusId\", nusId)","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"                .add(\"schedule\", schedule)","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"Rikko1204"},"content":"                .toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"cheahTJ":1,"Rikko1204":101}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are all your contacts!\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hjuntan":3,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"hjuntan":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NUSID, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"                        PREFIX_EMAIL, PREFIX_TAG, PREFIX_GROUP);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NUSID, PREFIX_NAME, PREFIX_TAG, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NUSID, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        NusId nusId \u003d ParserUtil.parseNusId(argMultimap.getValue(PREFIX_NUSID).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"        Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"        Schedule schedule \u003d new Schedule(\"\");","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"        Set\u003cGroup\u003e groupList \u003d ParserUtil.parseGroups(argMultimap.getAllValues(PREFIX_GROUP));","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        Person person \u003d new Person(nusId, name, phone, email, tag, groupList, schedule, remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Rikko1204":12,"hjuntan":6,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.logic.commands.PinCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"        case GroupCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Ragnapop"},"content":"            return new GroupCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"            return new ViewCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"        case PinCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"            return new PinCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheahTJ":4,"Rikko1204":4,"Ragnapop":4,"hjuntan":3,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"RingoftheKing"},"content":"     * Throws a {@code ParseException} if none of the {@code prefixes} to be checked against has appeared","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"RingoftheKing"},"content":"     * in the arguments","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"RingoftheKing"},"content":"    public void verifyAtLeastOnePrefixExists(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"RingoftheKing"},"content":"        Prefix[] identifiedPrefixes \u003d Stream.of(prefixes)","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"RingoftheKing"},"content":"                .filter(argMultimap::containsKey)","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"RingoftheKing"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"RingoftheKing"},"content":"        if (identifiedPrefixes.length \u003d\u003d 0) {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"RingoftheKing"},"content":"            throw new ParseException(Messages.MESSAGE_AT_LEAST_ONE_FIELD_REQUIRED + FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"RingoftheKing":15,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"                .flatMap(","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"                        prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"RingoftheKing":2,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    public static final Prefix PREFIX_NUSID \u003d new Prefix(\"id/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    public static final Prefix PREFIX_SCHEDULE \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Rikko1204":3,"hjuntan":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NUSID, PREFIX_GROUP);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NUSID, PREFIX_GROUP);","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"            if (argMultimap.getValue(PREFIX_NUSID).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_GROUP).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"            } else if (argMultimap.getValue(PREFIX_GROUP).isPresent()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"                return new DeleteCommand(ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get()));","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"            } else if (argMultimap.getValue(PREFIX_NUSID).isPresent()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"                return new DeleteCommand(ParserUtil.parseNusId(argMultimap.getValue(PREFIX_NUSID).get()));","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"                    String.format(pe.getMessage(), DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cheahTJ":3,"RingoftheKing":1,"Ragnapop":15,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NUSID,","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_GROUP);","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NUSID) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NUSID, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d ParserUtil.parseNusId(argMultimap.getValue(PREFIX_NUSID).get());","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"            editPersonDescriptor.setTag(ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"        parseGroupsForEdit(argMultimap.getAllValues(PREFIX_GROUP)).ifPresent(editPersonDescriptor::setGroups);","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        return new EditCommand(nusId, editPersonDescriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"     * Parses {@code Collection\u003cString\u003e groups} into a {@code Set\u003cGroup\u003e} if {@code groups} is non-empty.","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"     * If {@code groups} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"     * {@code Set\u003cGroup\u003e} containing zero groups.","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"    private Optional\u003cSet\u003cGroup\u003e\u003e parseGroupsForEdit(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"        assert groups !\u003d null;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"        if (groups.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"        Collection\u003cString\u003e groupSet \u003d groups.size() \u003d\u003d 1 \u0026\u0026 groups.contains(\"\") ? Collections.emptySet() : groups;","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"        return Optional.of(ParserUtil.parseGroups(groupSet));","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cheahTJ":13,"Ragnapop":1,"hjuntan":13,"-":64}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import static seedu.address.logic.commands.FindCommand.NOT_REQUIRED_VALUE;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.EmailMatchesPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.GroupMatchesPredicate;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NusIdMatchesPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.PhoneMatchesPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.TagMatchesPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"                        PREFIX_NUSID,","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"                        PREFIX_TAG,","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"                        PREFIX_GROUP);","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"        argumentMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NUSID, PREFIX_NAME,","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"        argumentMultimap.verifyAtLeastOnePrefixExists(PREFIX_NUSID, PREFIX_NAME,","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_GROUP);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"        // Problems: Can\u0027t create Objects unless proper regex used.","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"        // Solution: Don\u0027t create objects","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"        String nusIdToMatch \u003d argumentMultimap.getValue(PREFIX_NUSID).orElse(NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"RingoftheKing"},"content":"        String nameToMatch \u003d argumentMultimap.getValue(PREFIX_NAME).orElse(NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"        String phoneToMatch \u003d argumentMultimap.getValue(PREFIX_PHONE).orElse(NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"RingoftheKing"},"content":"        String emailToMatch \u003d argumentMultimap.getValue(PREFIX_EMAIL).orElse(NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"RingoftheKing"},"content":"        String tagToMatch \u003d argumentMultimap.getValue(PREFIX_TAG).orElse(NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"RingoftheKing"},"content":"        List\u003cString\u003e groupToMatch \u003d argumentMultimap.getAllValues(PREFIX_GROUP);","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"RingoftheKing"},"content":"        if (someParameterIsEmpty(groupToMatch, nusIdToMatch, nameToMatch, phoneToMatch, emailToMatch, tagToMatch)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"RingoftheKing"},"content":"            throw new ParseException(buildErrorMessage(nusIdToMatch, nameToMatch, phoneToMatch,","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"RingoftheKing"},"content":"                    emailToMatch, tagToMatch, groupToMatch));","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"RingoftheKing"},"content":"        String[] nameKeywords \u003d nameToMatch.split(\"\\\\s+\");","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"        return new FindCommand(new NusIdMatchesPredicate(nusIdToMatch),","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"Ragnapop"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)),","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"RingoftheKing"},"content":"                new EmailMatchesPredicate(emailToMatch),","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"RingoftheKing"},"content":"                new GroupMatchesPredicate(groupToMatch),","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"RingoftheKing"},"content":"                new PhoneMatchesPredicate(phoneToMatch),","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"RingoftheKing"},"content":"                new TagMatchesPredicate(tagToMatch));","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"    private String buildErrorMessage(String id, String name, String phone,","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"RingoftheKing"},"content":"                                     String email, String tag, List\u003cString\u003e groups) {","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"RingoftheKing"},"content":"        // Stop user from entering a command if any field is empty","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"RingoftheKing"},"content":"        StringBuilder errorMessage \u003d new StringBuilder();","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"RingoftheKing"},"content":"        errorMessage.append(\"The provided fields should not be empty: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"RingoftheKing"},"content":"        if (id.isBlank()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"RingoftheKing"},"content":"            errorMessage.append(\"[id/NUSID] \");","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"RingoftheKing"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"RingoftheKing"},"content":"            errorMessage.append(\"[n/NAME] \");","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"RingoftheKing"},"content":"        if (phone.isBlank()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"RingoftheKing"},"content":"            errorMessage.append(\"[p/PHONE_NUMBER] \");","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"RingoftheKing"},"content":"        if (email.isBlank()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"RingoftheKing"},"content":"            errorMessage.append(\"[e/EMAIL] \");","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"RingoftheKing"},"content":"        if (tag.isBlank()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"RingoftheKing"},"content":"            errorMessage.append(\"[t/TAG] \");","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"RingoftheKing"},"content":"        boolean someGroupIsEmpty \u003d false;","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"RingoftheKing"},"content":"        for (String group : groups) {","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"RingoftheKing"},"content":"            if (group.isBlank()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"RingoftheKing"},"content":"                someGroupIsEmpty \u003d true;","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"RingoftheKing"},"content":"                break;","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"RingoftheKing"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"RingoftheKing"},"content":"        if (someGroupIsEmpty) {","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"RingoftheKing"},"content":"            errorMessage.append(\"[g/GROUP]...\");","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"RingoftheKing"},"content":"        return errorMessage.toString();","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"RingoftheKing"},"content":"    private boolean someParameterIsEmpty(List\u003cString\u003e groups, String... params) {","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"RingoftheKing"},"content":"        boolean hasEmptyParams \u003d false;","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"RingoftheKing"},"content":"        for (String group : groups) {","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"RingoftheKing"},"content":"            if (group.isBlank()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"RingoftheKing"},"content":"                hasEmptyParams \u003d true;","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"RingoftheKing"},"content":"                break;","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"RingoftheKing"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"RingoftheKing"},"content":"        for (String param : params) {","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"RingoftheKing"},"content":"            if (param.isBlank()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"RingoftheKing"},"content":"                hasEmptyParams \u003d true;","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"RingoftheKing"},"content":"                break;","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"RingoftheKing"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"RingoftheKing"},"content":"        return hasEmptyParams;","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RingoftheKing":87,"Ragnapop":16,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/GroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":" * Parses input arguments and creates a new GroupCommand object","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"public class GroupCommandParser implements Parser\u003cGroupCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"     * Parses the given {@code String} of arguments in the context of the GroupCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"     * and returns an GroupCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    public GroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NUSID, PREFIX_GROUP, PREFIX_TAG);","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NUSID)","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NUSID)","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_GROUP)","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"        GroupCommand.GroupPersonDescriptor groupPersonDescriptor \u003d new GroupCommand.GroupPersonDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIds \u003d parseNusIdsForGroup(argMultimap.getAllValues(PREFIX_NUSID)).get();","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"            groupPersonDescriptor.setTag(ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"        parseGroupsForGroup(argMultimap.getAllValues(PREFIX_GROUP)).ifPresent(groupPersonDescriptor::setGroups);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"        return new GroupCommand(nusIds, groupPersonDescriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"Ragnapop"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"Ragnapop"},"content":"     * Parses {@code Collection\u003cString\u003e groups} into a {@code Set\u003cGroup\u003e} if {@code groups} is non-empty.","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"Ragnapop"},"content":"     * If {@code groups} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"Ragnapop"},"content":"     * {@code Set\u003cGroup\u003e} containing zero groups.","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Ragnapop"},"content":"    private Optional\u003cSet\u003cGroup\u003e\u003e parseGroupsForGroup(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Ragnapop"},"content":"        assert groups !\u003d null;","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Ragnapop"},"content":"        if (groups.isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Ragnapop"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Ragnapop"},"content":"        Collection\u003cString\u003e groupSet \u003d groups.size() \u003d\u003d 1 \u0026\u0026 groups.contains(\"\") ? Collections.emptySet() : groups;","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Ragnapop"},"content":"        return Optional.of(ParserUtil.parseGroups(groupSet));","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"     * Parses {@code Collection\u003cString\u003e nusIds} into a {@code Set\u003cNusId\u003e} if {@code nusIds} is non-empty.","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"     * If {@code nusIds} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"     * {@code Set\u003cNusId\u003e} containing zero nusId.","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"    private Optional\u003cSet\u003cNusId\u003e\u003e parseNusIdsForGroup(Collection\u003cString\u003e nusIds) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"        assert nusIds !\u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"        if (nusIds.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"        Collection\u003cString\u003e nusIdSet \u003d nusIds.size() \u003d\u003d 1 \u0026\u0026 nusIds.contains(\"\") ? Collections.emptySet() : nusIds;","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"        return Optional.of(ParserUtil.parseNusIds(nusIdSet));","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"Rikko1204":19,"Ragnapop":78}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"     * Parses a {@code String nusId} into a {@code NusId}.","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"     * @throws ParseException if the given {@code nusId} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"    public static NusId parseNusId(String nusId) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        requireNonNull(nusId);","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        String trimmedNusId \u003d nusId.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"        if (!NusId.isValidNusId(trimmedNusId)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"            throw new ParseException(NusId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"        return new NusId(trimmedNusId);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"     * Parses {@code Collection\u003cString\u003e nusIds} into a {@code Set\u003cNusId\u003e}.","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"    public static Set\u003cNusId\u003e parseNusIds(Collection\u003cString\u003e nusIds) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"        requireNonNull(nusIds);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"        final Set\u003cNusId\u003e nusIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        for (String id : nusIds) {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"            nusIdSet.add(parseNusId(id));","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        return nusIdSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"     * Parses a {@code String tag} into an {@code Tag}.","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"hjuntan"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"hjuntan"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"hjuntan"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"hjuntan"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"hjuntan"},"content":"        if (!Tag.isValidTag(trimmedTag)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"hjuntan"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"hjuntan"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"hjuntan"},"content":"     * Parses a {@code String group} into a {@code Group}.","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"hjuntan"},"content":"     * @throws ParseException if the given {@code group} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"hjuntan"},"content":"    public static Group parseGroup(String group) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"hjuntan"},"content":"        requireNonNull(group);","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"hjuntan"},"content":"        String trimmedGroup \u003d group.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"hjuntan"},"content":"        if (!Group.isValidGroupName(trimmedGroup)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"hjuntan"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"hjuntan"},"content":"        return new Group(trimmedGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"hjuntan"},"content":"     * Parses {@code Collection\u003cString\u003e groups} into a {@code Set\u003cGroup\u003e}.","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"hjuntan"},"content":"    public static Set\u003cGroup\u003e parseGroups(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"hjuntan"},"content":"        requireNonNull(groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"hjuntan"},"content":"        final Set\u003cGroup\u003e groupSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"hjuntan"},"content":"        for (String groupName : groups) {","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"hjuntan"},"content":"            groupSet.add(parseGroup(groupName));","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"hjuntan"},"content":"        return groupSet;","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"Rikko1204"},"content":"     * Parses a {@code String schedule} into a {@code Schedule}.","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"Rikko1204"},"content":"     * @throws ParseException if the given {@code schedule} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"Rikko1204"},"content":"    public static Schedule parseSchedule(String schedule) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"Rikko1204"},"content":"        if (schedule \u003d\u003d \"\") {","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"Rikko1204"},"content":"            return new Schedule(schedule);","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"Rikko1204"},"content":"        } else if (!Schedule.isValidSchedule(schedule)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"Rikko1204"},"content":"            throw new ParseException(Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"Rikko1204"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"Rikko1204"},"content":"            return new Schedule(schedule);","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"Rikko1204"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"Rikko1204"},"content":"     * @throws ParseException if the given {@code rmark} is invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"Rikko1204"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"Rikko1204"},"content":"        if (remark \u003d\u003d \"\") {","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"Rikko1204"},"content":"            return new Remark(remark);","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"Rikko1204"},"content":"        } else if (!Remark.isValidRemark(remark)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"Rikko1204"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"Rikko1204"},"content":"        return new Remark(remark);","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Rikko1204":56,"Ragnapop":1,"hjuntan":25,"-":103}},{"path":"src/main/java/seedu/address/logic/parser/PinCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.logic.commands.PinCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":" * Parses input arguments and creates a new PinCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"public class PinCommandParser implements Parser\u003cPinCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"     * Parses the given {@code String} of arguments in the context of the PinCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"     * and returns a PinCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    public PinCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NUSID);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NUSID) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PinCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NUSID);","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d ParserUtil.parseNusId(argMultimap.getValue(PREFIX_NUSID).get());","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        return new PinCommand(nusId);","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"cheahTJ":38}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":" * Parses input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"     * and returns an ScheduleCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"                PREFIX_NUSID, PREFIX_SCHEDULE, PREFIX_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NUSID)","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"                || (arePrefixesPresent(argMultimap, PREFIX_REMARK)","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_SCHEDULE))","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"                || (!arePrefixesPresent(argMultimap, PREFIX_REMARK)","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_SCHEDULE))) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NUSID, PREFIX_SCHEDULE, PREFIX_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        NusId nusId \u003d ParserUtil.parseNusId(argMultimap.getValue(PREFIX_NUSID).get());","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        Schedule schedule \u003d ParserUtil.parseSchedule(argMultimap.getValue(PREFIX_SCHEDULE).orElse(\"\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        return new ScheduleCommand(nusId, schedule, remark);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Rikko1204":51}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"     * Pins a person to the top of the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"     * The person must already exist in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"cheahTJ"},"content":"    public void pinPerson(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"cheahTJ"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        persons.pin(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheahTJ":9,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"    ObservableList\u003cPerson\u003e getScheduleFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"     * Pins the given person.","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"    void pinPerson(Person person);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"     * Returns a person with the nudId of concern from the filtered person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"    Person filterPersonListWithNusId(NusId nusId);","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cheahTJ":14,"hjuntan":3,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"    public void pinPerson(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"        addressBook.pinPerson(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"hjuntan"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"hjuntan"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"hjuntan"},"content":"    public ObservableList\u003cPerson\u003e getScheduleFilteredPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"hjuntan"},"content":"        return filteredPersons.filtered(person -\u003e person.hasSchedule());","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"cheahTJ"},"content":"     * Returns a person, if any, after filtering the list with the nusId of concern.","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"     * @param nusId nusIf of the person.","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"     * @return A person, if any, with the corresponding nusId","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"    public Person filterPersonListWithNusId(NusId nusId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"        Person personOfConcern \u003d filteredPersons.stream().filter(person -\u003e person.getNusId().equals(nusId))","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"                .findFirst().orElse(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"        return personOfConcern;","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheahTJ":20,"hjuntan":9,"-":148}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package seedu.address.model.group;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":" * Represents a Group in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidGroupName(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"public class Group {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group input should only contain \"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"            + \"alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} ]+\";","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"    public final String groupName;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     * Constructs a {@code Group}.","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     * @param groupName A valid group name.","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    public Group(String groupName) {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"        checkArgument(isValidGroupName(groupName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"     * Returns true if a given string is a valid group name.","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"    public static boolean isValidGroupName(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"        Group otherGroup \u003d (Group) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        return groupName.equals(otherGroup.groupName);","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        return groupName.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"        return \u0027[\u0027 + groupName + \u0027]\u0027;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"cheahTJ":3,"hjuntan":60}},{"path":"src/main/java/seedu/address/model/person/EmailMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches the keyword given","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"public class EmailMatchesPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"    public EmailMatchesPredicate(String keyword) {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"        if (keyword.equals(FindCommand.NOT_REQUIRED_VALUE)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"            return person.getEmail().value.toLowerCase().contains(keyword.trim().toLowerCase());","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"        if (!(other instanceof EmailMatchesPredicate)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate e \u003d (EmailMatchesPredicate) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"        return keyword.equals(e.keyword);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"emailKeyword\", keyword)","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"RingoftheKing":48}},{"path":"src/main/java/seedu/address/model/person/GroupMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":" * Tests if a keyword matches any {@code Person}\u0027s {@code Groups}","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"public class GroupMatchesPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"    public GroupMatchesPredicate(List\u003cString\u003e s) {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"        keywords \u003d s;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"     * Returns if the person is in ALL the groups provided","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"     * in the keywords based on an EXACT match.","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"     * @param person the person we are concerned with","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"     * @return if this person has the groups we are searching for","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"        // Empty set of keywords means we accept any person regardless of their group","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"        if (keywords.isEmpty() || keywords.contains(FindCommand.NOT_REQUIRED_VALUE)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"        Set\u003cGroup\u003e groups \u003d person.getGroups();","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"        Set\u003cString\u003e groupNames \u003d groups.stream().map(x -\u003e x.groupName).collect(Collectors.toSet());","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"        boolean containsAllKeywords \u003d true;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"        for (String k : keywords) {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"            if (!groupNames.contains(k)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"                containsAllKeywords \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"        return containsAllKeywords;","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"RingoftheKing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"RingoftheKing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"RingoftheKing"},"content":"        if (!(other instanceof GroupMatchesPredicate)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"RingoftheKing"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate e \u003d (GroupMatchesPredicate) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"RingoftheKing"},"content":"        return keywords.equals(e.keywords);","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"RingoftheKing"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"RingoftheKing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"groupKeywords\", keywords)","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"RingoftheKing"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"RingoftheKing":71}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import static seedu.address.logic.commands.FindCommand.NOT_REQUIRED_VALUE;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"        if (keywords.contains(NOT_REQUIRED_VALUE)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"        return new ToStringBuilder(this).add(\"nameKeywords\", keywords).toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RingoftheKing":6,"-":43}},{"path":"src/main/java/seedu/address/model/person/NusId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":" * Represents a Person\u0027s Nusid in the address book.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNusId(String)}","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"public class NusId {","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"NusID is of the form EXXXXXXX, and it should not be blank\";","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"    /*","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"     * Ensures that the input nusid is of the form: EXXXXXXX","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^E\\\\d{7}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"    public static final String FIND_VALIDATION_REGEX \u003d \"^E\\\\d{0,7}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"    public final String value;","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"     * Constructs an {@code Nusid}.","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"     * @param nusid A valid nusid.","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    public NusId(String nusid) {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        requireNonNull(nusid);","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        checkArgument(isValidNusId(nusid), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"        value \u003d nusid;","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"     * Returns true if a given string is a valid nusid.","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"    public static boolean isValidNusId(String test) {","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"    public static boolean isValidFindNusId(String test) {","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"        return test.matches(FIND_VALIDATION_REGEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    public String toString() {","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"        return value;","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"            return true;","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        if (!(other instanceof NusId)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"            return false;","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        NusId otherNusid \u003d (NusId) other;","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        return value.equals(otherNusid.value);","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"cheahTJ":61,"Ragnapop":6,"hjuntan":1}},{"path":"src/main/java/seedu/address/model/person/NusIdMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":" * Tests that a {@code Person}\u0027s {@code NusId} matches any of the keywords given.","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"public class NusIdMatchesPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"    private final String keyword;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"    public NusIdMatchesPredicate(String keyword) {","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"        if (keyword.equals(FindCommand.NOT_REQUIRED_VALUE)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"        } else if (NusId.isValidFindNusId(keyword)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"            return person.getNusId().toString().startsWith(keyword.trim());","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"    public String toString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"                .add(\"nusIdKeyword\", keyword)","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"                .toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"        if (!(other instanceof NusIdMatchesPredicate)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate predicate \u003d (NusIdMatchesPredicate) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"        return keyword.equals(predicate.keyword);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"RingoftheKing":1,"Ragnapop":50}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    private final NusId nusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    private final Tag tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    private final Set\u003cGroup\u003e groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    private final Schedule schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"    private final Remark remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    public Person(NusId nusId, Name name, Phone phone, Email email, Tag tag, Set\u003cGroup\u003e groups,","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"                  Schedule schedule, Remark remark) {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        requireAllNonNull(nusId, name, phone, email, tag, groups, schedule, remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"        this.nusId \u003d nusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"    public Tag getTag() {","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"        return tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"    public NusId getNusId() {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"        return nusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"        return schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"    public Remark getRemark() {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"        return remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"     * Returns an immutable group set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"    public Set\u003cGroup\u003e getGroups() {","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"        return Collections.unmodifiableSet(groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"    public boolean hasSchedule() {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"        return schedule.isPresent();","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"     * Returns true if both persons have the same nusId.","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 otherPerson.getNusId().equals(getNusId());","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"Rikko1204"},"content":"        // A person\u0027s identity does not depend on schedule or remark","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 nusId.equals(otherPerson.nusId)","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"hjuntan"},"content":"                \u0026\u0026 tag.equals(otherPerson.tag)","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"hjuntan"},"content":"                \u0026\u0026 groups.equals(otherPerson.groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"Rikko1204"},"content":"        return Objects.hash(nusId, name, phone, email, tag, groups, schedule, remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"hjuntan"},"content":"                .add(\"nusId\", nusId)","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"hjuntan"},"content":"                .add(\"tag\", tag)","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"hjuntan"},"content":"                .add(\"groups\", groups)","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"Rikko1204"},"content":"                .add(\"schedule\", schedule)","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"Rikko1204"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rikko1204":20,"hjuntan":23,"-":102}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"            \"Phone numbers should only contain numbers, it should be between 3-10 digits long\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,10}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ragnapop":3,"-":59}},{"path":"src/main/java/seedu/address/model/person/PhoneMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":" * Tests if a {@code Person}\u0027s {@code Phone} matches with the number given","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"public class PhoneMatchesPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"    private final String numToMatch;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"    public PhoneMatchesPredicate(String s) {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"        numToMatch \u003d s;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"     * Returns true if a person\u0027s {@code Phone} starts with or matches the given number.","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"     * False otherwise","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"     * @param person the person to check against","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"     * @return if a person\u0027s phone starts with or fully matches the given number","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"        if (numToMatch.equals(FindCommand.NOT_REQUIRED_VALUE)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"            return person.getPhone().toString().startsWith(numToMatch.trim());","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"        if (!(other instanceof PhoneMatchesPredicate)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate predicate \u003d (PhoneMatchesPredicate) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"        return numToMatch.equals(predicate.numToMatch);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"RingoftheKing"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"phoneNumToMatch\", numToMatch)","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"RingoftheKing"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"RingoftheKing":54,"Ragnapop":1}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"public class Remark {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any values, and it should not be blank\";","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    public final String value;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"     * Create a Remark","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"     * @param remark to be added","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public Remark(String remark) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"        value \u003d remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        return value;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        return !test.equals(\"\");","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Rikko1204":44}},{"path":"src/main/java/seedu/address/model/person/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":" * Represents a Person\u0027s schedule in the address book with the user.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSchedule(String)}","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"public class Schedule {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"            \"Schedule should contain only dates formatted as \\\"DD/MM/YYYY\\\", \\\"DD-MM-YYYY\\\", \"","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"                    + \"\\\"DD.MM.YYYY\\\", \\\"DD MMM YYYY\\\", \\\"MMM DD, YYYY\\\"\";","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"    public static final List\u003cString\u003e VALIDATION_REGEX_WITH_DATA \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"            List.of(","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"                    \"^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])[./-]([0-9]{4}|[0-9]{2})$\",","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"                    \"^(0?[1-9]|[1-2][0-9]|3[01])\\\\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\\\s+\\\\d{4}$\",","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"                    \"^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\\\s+(0?[1-9]|[1-2][0-9]|3[01]),\\\\s+\\\\d{4}$\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    public static final String VALIDATION_REGEX_WITHOUT_DATA \u003d \"^$\";","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    public final String date;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"     * @param date A valid date.","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    public Schedule(String date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        if (date !\u003d \"\") {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"            checkArgument(isValidSchedule(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    public static boolean isValidSchedule(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        for (String regex : VALIDATION_REGEX_WITH_DATA) {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"            if (test.matches(regex)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"                return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        return false;","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    public boolean isPresent() {","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        return !date.equals(\"\");","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        return date;","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"        if (!(other instanceof Schedule)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"        Schedule otherSchedule \u003d (Schedule) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"        return date.equals(otherSchedule.date);","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"        return date.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Rikko1204":75,"hjuntan":5}},{"path":"src/main/java/seedu/address/model/person/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":" * Represents a Person\u0027s tag in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTag(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"public class Tag {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"     * Represents the type of tag.","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    public enum TagType {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"        Professor, TA, Student, None;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"        /**","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"         * Returns the string representation of the tag type.","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"         * @param tagType","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"         * @return","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"         */","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        public static String toString(TagType tagType) {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"            switch (tagType) {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"            case Professor:","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"                return \"Professor\";","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"            case TA:","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"                return \"TA\";","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"            case Student:","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"                return \"Student\";","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"            default:","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"                return \"None\";","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag can only these values: Professor, TA, Student, None\";","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"    public final TagType value;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"     * Constructs an {@code Tag}.","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"     * @param tag A valid tag.","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    public Tag(String tag) {","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"        requireNonNull(tag);","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        checkArgument(isValidTag(tag), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        value \u003d parseTag(tag);","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"     * Parses a tag and returns the corresponding TagType.","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"     * @param tag","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"     * @return","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"hjuntan"},"content":"    public static TagType parseTag(String tag) {","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"        switch (tag) {","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"        case \"Professor\":","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"            return TagType.Professor;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"        case \"TA\":","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"            return TagType.TA;","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"        case \"Student\":","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"            return TagType.Student;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"        default:","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"            return TagType.None;","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"     * Returns true if a given string is a valid tag.","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"    public static boolean isValidTag(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"        switch (test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"        case \"Professor\":","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"        case \"TA\":","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"        case \"Student\":","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"        case \"None\":","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"        default:","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"hjuntan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"        switch (value) {","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"hjuntan"},"content":"        case Professor:","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"hjuntan"},"content":"            return \"Professor\";","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"hjuntan"},"content":"        case TA:","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"hjuntan"},"content":"            return \"TA\";","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"hjuntan"},"content":"        case Student:","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"            return \"Student\";","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"hjuntan"},"content":"        default:","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"            return \"None\";","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"hjuntan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"hjuntan"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"hjuntan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"hjuntan"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"hjuntan"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"hjuntan"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"hjuntan"},"content":"        return value.equals(otherTag.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"hjuntan"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"hjuntan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"hjuntan"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"hjuntan":119}},{"path":"src/main/java/seedu/address/model/person/TagMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":" * Tests if a {@code Person}\u0027s {@code Tag} matches the Enum given","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"public class TagMatchesPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"    public TagMatchesPredicate(String keyword) {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"        if (keyword.equals(FindCommand.NOT_REQUIRED_VALUE)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"        } else if (!Tag.isValidTag(keyword)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"            return person.getTag().equals(new Tag(keyword));","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"                .add(\"tagKeyword\", keyword)","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"        if (!(other instanceof TagMatchesPredicate)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"        TagMatchesPredicate predicate \u003d (TagMatchesPredicate) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"RingoftheKing"},"content":"        return keyword.equals(predicate.keyword);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"RingoftheKing":51}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"     * Pins a person to the front of the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"     * The person must already exist in the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"    public void pin(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        requireAllNonNull(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"        if (contains(person)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"            internalList.remove(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"            internalList.add(0, person);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheahTJ":12,"-":150}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"            new Person(new NusId(\"E1234567\"), new Name(\"Alex Yeoh\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"                new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"                new Tag(\"Student\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"                getGroupSet(\"friends\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(\"21-12-2024\"), new Remark(\"Consultation with Alex\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"            new Person(new NusId(\"E2345678\"), new Name(\"Bernice Yu\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"                new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"                new Tag(\"Student\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"                getGroupSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(\"22-12-2024\"), new Remark(\"Consultation with Bernice\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"            new Person(new NusId(\"E0987654\"), new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"                new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"                new Tag(\"TA\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"                getGroupSet(\"neighbours\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"                new Schedule(\"21-12-2024\"), new Remark(\"Consultation with Charlotte\")),","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"            new Person(new NusId(\"E9876543\"), new Name(\"David Li\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"                new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"                new Tag(\"Professor\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"                getGroupSet(\"family\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(\"23-12-2024\"), new Remark(\"Consultation with David\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"            new Person(new NusId(\"E0123456\"), new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"                new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"                new Tag(\"TA\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"                getGroupSet(\"classmates\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(\"24-12-2024\"), new Remark(\"Consultation with Irfan\")),","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"            new Person(new NusId(\"E1029384\"), new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"                new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"                new Tag(\"None\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"                getGroupSet(\"colleagues\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(\"25-12-2024\"), new Remark(\"Consultation with Roy\"))","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"     * Returns a group set containing the list of strings given.","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"    public static Set\u003cGroup\u003e getGroupSet(String... strings) {","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"                .map(Group::new)","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Rikko1204":14,"hjuntan":25,"-":37}},{"path":"src/main/java/seedu/address/storage/CommandHistoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":" * Represents a Storage for the commands the user has entered","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"public interface CommandHistoryStorage {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"     * Returns the file path of user\u0027s command history","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"    Path getCommandHistoryFilePath();","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"    Optional\u003cCommandHistory\u003e readCommandHistory() throws DataLoadingException;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RingoftheKing":20}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * Jackson-friendly version of {@link Group}.","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"class JsonAdaptedGroup {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    private final String groupName;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given {@code groupName}.","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    public JsonAdaptedGroup(String groupName) {","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"        groupName \u003d source.groupName;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    @JsonValue","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"    public String getGroupName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"        return groupName;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"     * Converts this Jackson-friendly adapted group object into the model\u0027s {@code Group} object.","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted group.","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        if (!Group.isValidGroupName(groupName)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"            throw new IllegalValueException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        return new Group(groupName);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"hjuntan":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"    private final String nusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    private final String tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"    private final String schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"    private final String remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"nusId\") String nusId,","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            @JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"tag\") String tag,","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"            @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups,","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"            @JsonProperty(\"schedule\") String schedule, @JsonProperty(\"remark\") String remark) {","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        this.nusId \u003d nusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"        if (groups !\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"            this.groups.addAll(groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"        nusId \u003d source.getNusId().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"        tag \u003d source.getTag().value.toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"        schedule \u003d source.getSchedule().date.toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"        remark \u003d source.getRemark().value.toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"        groups.addAll(source.getGroups().stream()","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"                .map(JsonAdaptedGroup::new)","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"        final List\u003cGroup\u003e personGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"        for (JsonAdaptedGroup group : groups) {","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"            personGroups.add(group.toModelType());","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"hjuntan"},"content":"        if (tag \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"hjuntan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Tag.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"hjuntan"},"content":"        if (!Tag.isValidTag(tag)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"hjuntan"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"hjuntan"},"content":"        final Tag modelTag \u003d new Tag(tag);","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"hjuntan"},"content":"        if (nusId \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"hjuntan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, NusId.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"hjuntan"},"content":"        if (!NusId.isValidNusId(nusId)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"hjuntan"},"content":"            throw new IllegalValueException(NusId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"hjuntan"},"content":"        final NusId modelNusId \u003d new NusId(nusId);","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"Rikko1204"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"Rikko1204"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"Rikko1204"},"content":"                    Schedule.class.getSimpleName()));","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"hjuntan"},"content":"        if (!(Schedule.isValidSchedule(schedule) || schedule.matches(Schedule.VALIDATION_REGEX_WITHOUT_DATA))) {","lastModifiedDate":"2024-04-11"},{"lineNumber":132,"author":{"gitId":"Rikko1204"},"content":"            throw new IllegalValueException(Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"Rikko1204"},"content":"        final Schedule modelSchedule \u003d new Schedule(schedule);","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"Rikko1204"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"Rikko1204"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"Rikko1204"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"hjuntan"},"content":"        final Set\u003cGroup\u003e modelGroups \u003d new HashSet\u003c\u003e(personGroups);","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"Rikko1204"},"content":"        return new Person(modelNusId, modelName, modelPhone, modelEmail,","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"Rikko1204"},"content":"                modelTag, modelGroups, modelSchedule, modelRemark);","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Rikko1204":25,"hjuntan":35,"-":86}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, CommandHistoryStorage {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"RingoftheKing":1,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"    private CommandHistoryStorage commandHistoryStorage;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"RingoftheKing"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d User Command History \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"RingoftheKing"},"content":"    public Path getCommandHistoryFilePath() {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"RingoftheKing"},"content":"        return commandHistoryStorage.getCommandHistoryFilePath();","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"RingoftheKing"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"RingoftheKing"},"content":"    public Optional\u003cCommandHistory\u003e readCommandHistory() throws DataLoadingException {","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"RingoftheKing"},"content":"        logger.fine(\"Attempting to read user\u0027s command history at: \"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"RingoftheKing"},"content":"                + commandHistoryStorage.getCommandHistoryFilePath());","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"RingoftheKing"},"content":"        return commandHistoryStorage.readCommandHistory();","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RingoftheKing":18,"-":77}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.CommandHistory;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CommandBox.class);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"    private static CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"    private String currentCommand \u003d \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"RingoftheKing"},"content":"            commandHistory.add(commandText);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"RingoftheKing"},"content":"            commandHistory.moveCursorToMostRecent();","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"RingoftheKing"},"content":"     * Handles navigational key presses while in the command box","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"RingoftheKing"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"RingoftheKing"},"content":"    private void handleKeyPress(KeyEvent event) {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"RingoftheKing"},"content":"        if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"            commandTextField.setText(commandHistory.getPreviousCommand().orElseGet(() -\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"RingoftheKing"},"content":"                commandHistory.moveCursorToMostRecent();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"RingoftheKing"},"content":"                return currentCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"RingoftheKing"},"content":"            }));","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"RingoftheKing"},"content":"            commandTextField.positionCaret(commandTextField.getLength());","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"RingoftheKing"},"content":"        } else if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"RingoftheKing"},"content":"            commandTextField.setText(commandHistory.getNextCommand().orElseGet(() -\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"RingoftheKing"},"content":"                commandHistory.moveCursorToMostRecent();","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"RingoftheKing"},"content":"                return currentCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"RingoftheKing"},"content":"            }));","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"RingoftheKing"},"content":"            commandTextField.positionCaret(commandTextField.getLength());","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"RingoftheKing"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"RingoftheKing"},"content":"            logger.info(\"Caret at \" + commandTextField.getCaretPosition());","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"RingoftheKing"},"content":"            logger.info(\"typed letter is \" + event.getText());","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"RingoftheKing"},"content":"            currentCommand \u003d handleTextEnter(commandTextField.getCaretPosition(), event.getText());","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"RingoftheKing"},"content":"            commandHistory.moveCursorToMostRecent();","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"RingoftheKing"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"RingoftheKing"},"content":"    private String handleTextEnter(int pos, String toInsert) {","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"RingoftheKing"},"content":"        logger.info(\"textField is \" + commandTextField.getText());","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"RingoftheKing"},"content":"        String firstHalf \u003d commandTextField.getText(0, pos);","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"RingoftheKing"},"content":"        String secondHalf \u003d commandTextField.getText(pos, commandTextField.getText().length());","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"RingoftheKing"},"content":"        return firstHalf + toInsert + secondHalf;","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"RingoftheKing"},"content":"    public void setCommandHistory(Storage storage) throws DataLoadingException {","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"RingoftheKing"},"content":"        setCommandHistory(storage.readCommandHistory().orElse(new CommandHistory()));","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"RingoftheKing"},"content":"     * Sets the storage which the commandBox references the user\u0027s past commands from.","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"RingoftheKing"},"content":"    public static void setCommandHistory(CommandHistory commandHistory) {","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"RingoftheKing"},"content":"        CommandBox.commandHistory \u003d commandHistory;","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"RingoftheKing":56,"-":84}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t15-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hjuntan":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    private ScheduleListPanel scheduleListPanel;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"    private StackPane scheduleListPanelPlaceholder;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"hjuntan"},"content":"        scheduleListPanel \u003d new ScheduleListPanel(logic.getScheduleFilteredPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"hjuntan"},"content":"        scheduleListPanelPlaceholder.getChildren().add(scheduleListPanel.getRoot());","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hjuntan":7,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag.TagType;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    private Label tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"    private Label nusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"    private FlowPane groups;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"        nusId.setText(person.getNusId().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"        person.getGroups().stream()","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"                .sorted(Comparator.comparing(group -\u003e group.groupName))","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"                .forEach(group -\u003e groups.getChildren().add(new Label(group.groupName)));","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"        setUiTag();","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"     * Sets the UI tag for the {@code Person}.","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"     * If the tag is None, the tag will not be displayed.","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"    public void setUiTag() {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"        Color tagColor \u003d Color.TRANSPARENT;","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"        TagType tagType \u003d person.getTag().value;","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"        switch (tagType) {","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"        case Professor:","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"            tagColor \u003d Color.HOTPINK;","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"hjuntan"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"        case Student:","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"            tagColor \u003d Color.GOLDENROD;","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"        case TA:","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"hjuntan"},"content":"            tagColor \u003d Color.YELLOWGREEN;","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"hjuntan"},"content":"        default:","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"hjuntan"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"hjuntan"},"content":"        tag.setText(tagType.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"hjuntan"},"content":"        requireNonNull(tagColor);","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"        BackgroundFill tagFill \u003d new BackgroundFill(tagColor, new CornerRadii(4.20), Insets.EMPTY);","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"        Background tagBackground \u003d new Background(tagFill);","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"        tag.setBackground(tagBackground);","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"hjuntan"},"content":"        if (tagType \u003d\u003d TagType.None) {","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"hjuntan"},"content":"            tag.setVisible(false);","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hjuntan":49,"-":54}},{"path":"src/main/java/seedu/address/ui/ScheduleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":" * An UI component that displays the {@code Schedule} and {@code Remark} of a {@code Person}.","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"public class ScheduleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    private static final String FXML \u003d \"ScheduleListCard.fxml\";","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    public final Person person;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"    private Label id;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"    private Label nusId;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"    private Label schedule;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    private Label remark;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"    public ScheduleCard(Person person, int displayedIndex) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        super(FXML);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        nusId.setText(person.getNusId().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        schedule.setText(person.getSchedule().date);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"hjuntan":47}},{"path":"src/main/java/seedu/address/ui/ScheduleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":" * Panel containing the list of schedules created by anyone in the person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"public class ScheduleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"    private static final String FXML \u003d \"ScheduleListPanel.fxml\";","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ScheduleListPanel.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    private ListView\u003cPerson\u003e scheduleListView;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"    public ScheduleListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"        super(FXML);","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"        scheduleListView.setItems(personList);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"        scheduleListView.setCellFactory(listView -\u003e new ScheduleListViewCell());","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    class ScheduleListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"                setGraphic(null);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"                setText(null);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"                setGraphic(new ScheduleCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"hjuntan":47}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyPressed\u003d\"#handleKeyPress\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"RingoftheKing":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"hjuntan"},"content":"#groups {","lastModifiedDate":"2024-03-27"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"hjuntan"},"content":"#groups .label {","lastModifiedDate":"2024-03-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"hjuntan"},"content":"    -fx-background-color: #87CEFA;","lastModifiedDate":"2024-03-27"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"hjuntan"},"content":"    -fx-border-radius: 4.2;","lastModifiedDate":"2024-03-27"},{"lineNumber":350,"author":{"gitId":"hjuntan"},"content":"    -fx-background-radius: 4.2;","lastModifiedDate":"2024-03-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"hjuntan":5,"-":347}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"         title\u003d\"AronaPro\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"        \u003cHBox spacing\u003d\"10\" fillHeight\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"          \u003cVBox fx:id\u003d\"scheduleList\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"            \u003cStackPane fx:id\u003d\"scheduleListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"hjuntan":14,"-":58}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    \u003cVBox spacing\u003d\"1\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"      \u003cHBox spacing\u003d\"6\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"          \u003cInsets top\u003d\"2\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"        \u003cLabel fx:id\u003d\"nusId\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" \u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        \u003c!-- Spacer for aligning the tag at the right --\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        \u003cLabel fx:id\u003d\"tag\" styleClass\u003d\"cell_big_label\" \u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            \u003cInsets top\u003d\"0.42\" right\u003d\"4.20\" bottom\u003d\"0.42\" left\u003d\"4.20\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"      \u003cFlowPane fx:id\u003d\"groups\" hgap\u003d\"8\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hjuntan":25,"-":32}},{"path":"src/main/resources/view/ScheduleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"        \u003cVBox spacing\u003d\"1\" alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"85\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"            \u003cHBox spacing\u003d\"6\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"                    \u003cInsets top\u003d\"2\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"                \u003cLabel fx:id\u003d\"remark\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"            \u003cLabel fx:id\u003d\"nusId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$schedule\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"            \u003cLabel fx:id\u003d\"schedule\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"hjuntan":37}},{"path":"src/main/resources/view/ScheduleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"    \u003cListView fx:id\u003d\"scheduleListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"hjuntan":8}},{"path":"src/test/java/seedu/address/logic/CommandHistoryStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":" * Tests commands that uses the user\u0027s CommandHistory","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"public class CommandHistoryStub extends CommandHistory {","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"    public CommandHistoryStub() {","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"        super();","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"RingoftheKing":10}},{"path":"src/test/java/seedu/address/logic/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.logic;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"    private CommandHistoryStub commandHistoryStub \u003d new CommandHistoryStub();","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"    public void constructor() {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(Collections.emptyList(), commandHistoryStub.getCommandHistory());","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"    public void nextCommand_givesEmptyWhenOutOfBounds() {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"        // make empty","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub \u003d new CommandHistoryStub();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"        // cursor is definitely longer than the commands already typed","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(2);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"        // should be empty","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(commandHistoryStub.getNextCommand().isEmpty());","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"        // try with negative integers","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(-1);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(commandHistoryStub.getNextCommand().isEmpty());","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"        // try with non-empty history","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.add(\"find n/John Doe\");","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(2);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(commandHistoryStub.getNextCommand().isEmpty());","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"    public void prevCommand_givesEmptyWhenOutOfBounds() {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"        // try empty command history","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub \u003d new CommandHistoryStub();","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(2);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(commandHistoryStub.getPreviousCommand().isEmpty());","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(-1);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(commandHistoryStub.getPreviousCommand().isEmpty());","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"        // try non-empty historu","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.add(\"add n/John\");","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(2);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(commandHistoryStub.getPreviousCommand().isEmpty());","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"RingoftheKing"},"content":"    public void nextCommand_givesMatchingCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"RingoftheKing"},"content":"        // try one item","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub \u003d new CommandHistoryStub();","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"RingoftheKing"},"content":"        // we need 2 items to proceed to the \"next item\"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.add(\"find t/TA\");","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.add(\"add n/Bobby\");","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(commandHistoryStub.getNextCommand().isPresent());","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(0); // note to reset the cursor back to 0","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(commandHistoryStub.getNextCommand().get(), \"add n/Bobby\");","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"RingoftheKing"},"content":"    public void prevCommand_givesMatchingCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"RingoftheKing"},"content":"        // try one item","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub \u003d new CommandHistoryStub();","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"        // we need 2 items to proceed to the \"previous item\"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.add(\"find t/TA\");","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.add(\"add n/Bobby\");","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"RingoftheKing"},"content":"        commandHistoryStub.setCursorPosition(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(commandHistoryStub.getPreviousCommand().isPresent());","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(commandHistoryStub.getPreviousCommand().get(), \"find t/TA\");","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"RingoftheKing":79}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.Messages.MESSAGE_NON_EXISTENT_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NUSID_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"RingoftheKing"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"RingoftheKing"},"content":"        logic \u003d new LogicManager(model, storage, new CommandHistory());","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"Ragnapop"},"content":"        String deleteCommand \u003d \"delete id/E1234567\";","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        assertCommandException(deleteCommand, MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"        String listCommand \u003d ViewCommand.COMMAND_WORD;","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"        assertCommandSuccess(listCommand, ViewCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"RingoftheKing"},"content":"        logic \u003d new LogicManager(model, storage, new CommandHistory());","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"Rikko1204"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NUSID_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"hjuntan"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"hjuntan"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withGroups().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cheahTJ":2,"Rikko1204":2,"RingoftheKing":4,"Ragnapop":1,"hjuntan":6,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"cheahTJ"},"content":"        public void pinPerson(Person person) {","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"cheahTJ"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"hjuntan"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"hjuntan"},"content":"        public ObservableList\u003cPerson\u003e getScheduleFilteredPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"hjuntan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"hjuntan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"cheahTJ"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"cheahTJ"},"content":"        public Person filterPersonListWithNusId(NusId nusId) {","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"cheahTJ"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"cheahTJ"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"cheahTJ":10,"hjuntan":5,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.testutil.GroupPersonDescriptorBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"    public static final String VALID_NUSID_AMY \u003d \"E1234567\";","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"    public static final String VALID_NUSID_BOB \u003d \"E7654321\";","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    public static final String VALID_TAG_AMY \u003d \"Student\";","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"    public static final String VALID_TAG_BOB \u003d \"Professor\";","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"    public static final String VALID_GROUP_HUSBAND \u003d \"husband\";","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"    public static final String VALID_GROUP_FRIEND \u003d \"friend\";","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"    public static final String VALID_SCHEDULE_AMY \u003d \"10-10-2020\";","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"    public static final String VALID_SCHEDULE_BOB \u003d \"11/11/2020\";","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Meeting at 3pm\";","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Lunch with Amy\";","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"    public static final String NUSID_DESC_AMY \u003d \" \" + PREFIX_NUSID + VALID_NUSID_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"    public static final String NUSID_DESC_BOB \u003d \" \" + PREFIX_NUSID + VALID_NUSID_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"    public static final String TAG_DESC_AMY \u003d \" \" + PREFIX_TAG + VALID_TAG_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"    public static final String TAG_DESC_BOB \u003d \" \" + PREFIX_TAG + VALID_TAG_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"hjuntan"},"content":"    public static final String GROUP_DESC_FRIEND \u003d \" \" + PREFIX_GROUP + VALID_GROUP_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"    public static final String GROUP_DESC_HUSBAND \u003d \" \" + PREFIX_GROUP + VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"    public static final String SCHEDULE_DESC_AMY \u003d \" \" + PREFIX_SCHEDULE + VALID_SCHEDULE_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"    public static final String SCHEDULE_DESC_BOB \u003d \" \" + PREFIX_SCHEDULE + VALID_SCHEDULE_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"    public static final String INVALID_NUSID_DESC \u003d \" \" + PREFIX_NUSID + \"e1234567\"; // \u0027e\u0027 not allowed in id","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG; // empty string not allowed for tags","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"    public static final String INVALID_GROUP_DESC \u003d \" \" + PREFIX_GROUP + \"hubby*\"; // \u0027*\u0027 not allowed in groups","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"    public static final String INVALID_SCHEDULE_DESC \u003d \" \" + PREFIX_SCHEDULE + \"2024-12-12\"; // wrong date format","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"    public static final String INVALID_REMARK_DESC \u003d \" \" + PREFIX_REMARK + \"\"; // Empty remarks","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"    public static final String INVALID_NUSID \u003d \"e1234567\"; // lowercase not accepted","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"    public static final String INVALID_SCHEDULE \u003d \"12-31-2020\"; // Incorrect month","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"Ragnapop"},"content":"    public static final GroupCommand.GroupPersonDescriptor DESC_AMY_GROUP;","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"Ragnapop"},"content":"    public static final GroupCommand.GroupPersonDescriptor DESC_BOB_GROUP;","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"hjuntan"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTag(VALID_TAG_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"                .withGroups(VALID_GROUP_FRIEND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTag(VALID_TAG_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"                .withGroups(VALID_GROUP_HUSBAND, VALID_GROUP_FRIEND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"        DESC_AMY_GROUP \u003d new GroupPersonDescriptorBuilder().withTag(VALID_TAG_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Ragnapop"},"content":"                .withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"        DESC_BOB_GROUP \u003d new GroupPersonDescriptorBuilder().withTag(VALID_TAG_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"Ragnapop"},"content":"                .withGroups(VALID_GROUP_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Rikko1204":23,"Ragnapop":8,"hjuntan":16,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"    public void execute_validNusIdUnfilteredList_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(\"E0123456\"); // This is the supposed NusId of the first person in the address list","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(nusId);","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"    public void execute_invalidNusIdUnfilteredList_throwsCommandExceptionNusId() {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"        NusId testNusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(testNusId);","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"    public void execute_invalidNusIdUnfilteredList_throwsCommandExceptionGroup() {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"        Group testGroup \u003d new Group(\"husband\");","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(testGroup);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NON_EXISTENT_GROUP);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"    public void execute_validNusIdFilteredList_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(\"E0123456\");","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(nusId);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"    public void execute_invalidNusIdFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"        NusId testNusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(testNusId);","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"        NusId nusIdForFirstDeleteCommand \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"        NusId nusIdForSecondDeleteCommand \u003d new NusId(\"E2345678\");","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(nusIdForFirstDeleteCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(nusIdForSecondDeleteCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(new NusId(\"E1234567\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"cheahTJ"},"content":"        //Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"cheahTJ"},"content":"        //DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"cheahTJ"},"content":"        NusId testNusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(testNusId);","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"Ragnapop"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetNusId\u003d\" + testNusId.toString() + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cheahTJ":23,"Ragnapop":9,"-":93}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCHEDULE_BOB;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        Person originalPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(originalPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"                .withGroups(VALID_GROUP_HUSBAND).withEmail(VALID_EMAIL_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"                .withSchedule(VALID_SCHEDULE_BOB).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        EditCommand editCommand \u003d new EditCommand(originalPerson.getNusId(), descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        expectedModel.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"                .withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        NusId nusIdOfLastPerson \u003d lastPerson.getNusId();","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"                .withPhone(VALID_PHONE_BOB).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"        EditCommand editCommand \u003d new EditCommand(nusIdOfLastPerson, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        String defaultNusId \u003d \"E0123456\"; // This is the default NUS id of a person","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(defaultNusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"cheahTJ"},"content":"        EditCommand editCommand \u003d new EditCommand(nusId, new EditPersonDescriptor());","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"cheahTJ"},"content":"        String defaultNusId \u003d \"E0123456\"; // This is the default NUS id of a person","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(defaultNusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"cheahTJ"},"content":"        EditCommand editCommand \u003d new EditCommand(nusId,","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(\"E0000000\"); // NusId does not exist","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"        EditCommand editCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(\"E0000000\"); // NusId does not exist","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"        EditCommand editCommand \u003d new EditCommand(nusId,","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"cheahTJ"},"content":"        final EditCommand standardCommand \u003d new EditCommand(new NusId(\"E1234567\"), DESC_AMY);","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"cheahTJ"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(new NusId(\"E1234567\"), copyDescriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"        assertFalse(standardCommand.equals(new EditCommand(new NusId(\"E7654321\"), DESC_AMY)));","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"cheahTJ"},"content":"        assertFalse(standardCommand.equals(new EditCommand(new NusId(\"E1234567\"), DESC_BOB)));","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"        String defaultNusId \u003d \"E1234567\"; // This is the default NUS id of a person","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(defaultNusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"cheahTJ"},"content":"        EditCommand editCommand \u003d new EditCommand(nusId, editPersonDescriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"cheahTJ"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{targetnusId\u003d\" + nusId.toString()","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"cheahTJ"},"content":"                + \", editPersonDescriptor\u003d\" + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"cheahTJ":38,"hjuntan":2,"-":134}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTag(VALID_TAG_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"        // different groups -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", tag\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"                + editPersonDescriptor.getTag().orElse(null) + \", groups\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"                + editPersonDescriptor.getGroups().orElse(null) + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"hjuntan":9,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.EmailMatchesPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.GroupMatchesPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NusIdMatchesPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.PhoneMatchesPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.model.person.TagMatchesPredicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.testutil.FindCommandBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"    public void test_equals_withNusIdVariations() {","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"        /* vv --------------------------- PHONE PRED VARIES ------------------------------------ */","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate firstNusIdPredicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"                new NusIdMatchesPredicate(\"E0123456\");","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate secondNusIdPredicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"                new NusIdMatchesPredicate(\"E0123457\");","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"        FindCommand findNusIdFirstCommand \u003d new FindCommandBuilder().withNusId(firstNusIdPredicate).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"        FindCommand findNusIdFirstCopy \u003d new FindCommandBuilder().withNusId(firstNusIdPredicate).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"        FindCommand findNusIdSecondCommand \u003d new FindCommandBuilder().withNusId(secondNusIdPredicate).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"        // Same object returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(findNusIdFirstCommand, findNusIdFirstCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"        // Same values returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(findNusIdFirstCommand, findNusIdFirstCopy);","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"        // Different phones returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"        assertNotEquals(findNusIdFirstCommand, findNusIdSecondCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"RingoftheKing"},"content":"    public void test_equals_withNameVariations() {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"RingoftheKing"},"content":"        // Check that the Builder is first functioning as normal","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(new FindCommandBuilder().build(), new FindCommandBuilder().build());","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"RingoftheKing"},"content":"        /* -----------------------------------NAME PRED VARIES------------------------------------------*/","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"RingoftheKing"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"RingoftheKing"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findFirstCommand \u003d new FindCommandBuilder().withNamePred(firstNamePredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findSecondCommand \u003d new FindCommandBuilder().withNamePred(secondNamePredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommandBuilder().withNamePred(firstNamePredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"RingoftheKing"},"content":"        // different types -\u003e returns false. Tested ONCE.","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"RingoftheKing"},"content":"        // null -\u003e returns false TEST ONCE","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"RingoftheKing"},"content":"        // different names -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"RingoftheKing"},"content":"    public void test_equals_withPhoneVariations() {","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"RingoftheKing"},"content":"        /* vv --------------------------- PHONE PRED VARIES ------------------------------------ */","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate firstPhonePredicate \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"RingoftheKing"},"content":"                new PhoneMatchesPredicate(\"123\");","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate secondPhonePredicate \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"RingoftheKing"},"content":"                new PhoneMatchesPredicate(\"789\");","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findPhoneFirstCommand \u003d new FindCommandBuilder().withPhone(firstPhonePredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findPhoneFirstCopy \u003d new FindCommandBuilder().withPhone(firstPhonePredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findPhoneSecondCommand \u003d new FindCommandBuilder().withPhone(secondPhonePredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"RingoftheKing"},"content":"        // Same object returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(findPhoneFirstCommand, findPhoneFirstCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"RingoftheKing"},"content":"        // Same values returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(findPhoneFirstCommand, findPhoneFirstCopy);","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"RingoftheKing"},"content":"        // Different phones returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"RingoftheKing"},"content":"        assertNotEquals(findPhoneFirstCommand, findPhoneSecondCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"RingoftheKing"},"content":"    public void test_equals_withEmailVariations() {","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"RingoftheKing"},"content":"        /* vv --------------------------- EMAIL PRED VARIES ------------------------------ */","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate firstEmailPredicate \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"RingoftheKing"},"content":"                new EmailMatchesPredicate(\"arona@arhive.com\");","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate secondEmailPredicate \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"RingoftheKing"},"content":"                new EmailMatchesPredicate(\"shiroko@blue.com\");","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findEmailFirstCommand \u003d new FindCommandBuilder().withEmail(firstEmailPredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand firstEmailCopy \u003d new FindCommandBuilder().withEmail(firstEmailPredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findEmailSecondCommand \u003d new FindCommandBuilder().withEmail(secondEmailPredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"RingoftheKing"},"content":"        // Same values returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(findEmailFirstCommand, firstEmailCopy);","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"RingoftheKing"},"content":"        // Different values returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"RingoftheKing"},"content":"        assertNotEquals(findEmailFirstCommand, findEmailSecondCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"RingoftheKing"},"content":"    public void test_equals_withTagVariations() {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"RingoftheKing"},"content":"        /* vv --------------------------- TAG PRED VARIES ----------------------------------- */","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"RingoftheKing"},"content":"        TagMatchesPredicate tagFirstPredicate \u003d new TagMatchesPredicate(Tag.TagType.Student.name());","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"RingoftheKing"},"content":"        TagMatchesPredicate tagSecondPredicate \u003d new TagMatchesPredicate(Tag.TagType.TA.name());","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"RingoftheKing"},"content":"        // Same values returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand firstFindTagCommand \u003d new FindCommandBuilder().withTag(tagFirstPredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand tagCommandCopy \u003d new FindCommandBuilder().withTag(tagFirstPredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand secondFindTagCommand \u003d new FindCommandBuilder().withTag(tagSecondPredicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(firstFindTagCommand, tagCommandCopy);","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"RingoftheKing"},"content":"        assertNotEquals(firstFindTagCommand, secondFindTagCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"RingoftheKing"},"content":"    public void test_equals_withGroupVariations() {","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate singleGroupPredicate1 \u003d new GroupMatchesPredicate(List.of(\"CS2103T\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate singleGroupPredicate2 \u003d new GroupMatchesPredicate(List.of(\"CS2101\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate multiGroupPredicate1 \u003d new GroupMatchesPredicate(List.of(\"CS2101\", \"CS2103T\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate multiGroupPredicate2 \u003d new GroupMatchesPredicate(List.of(\"CS2101\", \"CS2109S\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand singleGroupCommand1 \u003d new FindCommandBuilder().withGroups(singleGroupPredicate1).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand singleGroupCommand2 \u003d new FindCommandBuilder().withGroups(singleGroupPredicate2).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"RingoftheKing"},"content":"        assertNotEquals(singleGroupCommand1, singleGroupCommand2);","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand multiGroupCommand1 \u003d new FindCommandBuilder().withGroups(multiGroupPredicate1).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand multiGroupCommand2 \u003d new FindCommandBuilder().withGroups(multiGroupPredicate2).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"RingoftheKing"},"content":"        assertNotEquals(multiGroupCommand1, multiGroupCommand2);","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"RingoftheKing"},"content":"        assertNotEquals(singleGroupCommand1, multiGroupCommand1);","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand multiGroupCopy \u003d new FindCommandBuilder().withGroups(multiGroupPredicate1).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(multiGroupCommand1, multiGroupCopy);","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand command \u003d new FindCommandBuilder().withNamePred(predicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand command \u003d new FindCommandBuilder().withNamePred(predicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"Ragnapop"},"content":"    public void test_toStringMethod_withNusIdChange() {","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate nusIdMatchesPredicate \u003d new NusIdMatchesPredicate(\"E0123456\");","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"Ragnapop"},"content":"        FindCommand findCommand \u003d new FindCommandBuilder().withNusId(nusIdMatchesPredicate).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"Ragnapop"},"content":"        String expected \u003d FindCommand.class.getCanonicalName()","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"Ragnapop"},"content":"                + \"{\"","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"Ragnapop"},"content":"                + \"nusIdPredicate\u003d\" + nusIdMatchesPredicate + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"Ragnapop"},"content":"                + \"namePredicate\u003d\" + FindCommandBuilder.DEFAULT_NAME_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"Ragnapop"},"content":"                + \"phonePredicate\u003d\" + FindCommandBuilder.DEFAULT_PHONE_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"Ragnapop"},"content":"                + \"emailPredicate\u003d\" + FindCommandBuilder.DEFAULT_EMAIL_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"Ragnapop"},"content":"                + \"tagPredicate\u003d\" + FindCommandBuilder.DEFAULT_TAG_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"Ragnapop"},"content":"                + \"groupPredicate\u003d\" + FindCommandBuilder.DEFAULT_GROUPS_PRED","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"Ragnapop"},"content":"                + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toStringMethod_withNameChange() {","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findCommand \u003d new FindCommandBuilder().withNamePred(predicate).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"RingoftheKing"},"content":"        String expected \u003d FindCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"RingoftheKing"},"content":"                + \"{\"","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"Ragnapop"},"content":"                + \"nusIdPredicate\u003d\" + FindCommandBuilder.DEFAULT_NUSID_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"RingoftheKing"},"content":"                + \"namePredicate\u003d\" + predicate + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"RingoftheKing"},"content":"                + \"phonePredicate\u003d\" + FindCommandBuilder.DEFAULT_PHONE_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"RingoftheKing"},"content":"                + \"emailPredicate\u003d\" + FindCommandBuilder.DEFAULT_EMAIL_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"RingoftheKing"},"content":"                + \"tagPredicate\u003d\" + FindCommandBuilder.DEFAULT_TAG_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"RingoftheKing"},"content":"                + \"groupPredicate\u003d\" + FindCommandBuilder.DEFAULT_GROUPS_PRED","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"RingoftheKing"},"content":"                + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toStringMethod_withPhoneChange() {","lastModifiedDate":"2024-03-19"},{"lineNumber":222,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate phoneMatchesPredicate \u003d new PhoneMatchesPredicate(\"123\");","lastModifiedDate":"2024-03-19"},{"lineNumber":223,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findPhoneCommand \u003d new FindCommandBuilder().withPhone(phoneMatchesPredicate).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"RingoftheKing"},"content":"        String expectedPhoneChange \u003d FindCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"RingoftheKing"},"content":"                + \"{\"","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"Ragnapop"},"content":"                + \"nusIdPredicate\u003d\" + FindCommandBuilder.DEFAULT_NUSID_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"RingoftheKing"},"content":"                + \"namePredicate\u003d\" + FindCommandBuilder.DEFAULT_NAME_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"RingoftheKing"},"content":"                + \"phonePredicate\u003d\" + phoneMatchesPredicate + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"RingoftheKing"},"content":"                + \"emailPredicate\u003d\" + FindCommandBuilder.DEFAULT_EMAIL_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"RingoftheKing"},"content":"                + \"tagPredicate\u003d\" + FindCommandBuilder.DEFAULT_TAG_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"RingoftheKing"},"content":"                + \"groupPredicate\u003d\" + FindCommandBuilder.DEFAULT_GROUPS_PRED","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"RingoftheKing"},"content":"                + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(findPhoneCommand.toString(), expectedPhoneChange);","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":235,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":236,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":237,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toStringMethod_withEmailChange() {","lastModifiedDate":"2024-03-19"},{"lineNumber":238,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate emailMatchesPredicate \u003d new EmailMatchesPredicate(\"bobby\");","lastModifiedDate":"2024-03-19"},{"lineNumber":239,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findPhoneCommand \u003d new FindCommandBuilder().withEmail(emailMatchesPredicate).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":240,"author":{"gitId":"RingoftheKing"},"content":"        String expectedPhoneChange \u003d FindCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"RingoftheKing"},"content":"                + \"{\"","lastModifiedDate":"2024-03-19"},{"lineNumber":242,"author":{"gitId":"Ragnapop"},"content":"                + \"nusIdPredicate\u003d\" + FindCommandBuilder.DEFAULT_NUSID_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"RingoftheKing"},"content":"                + \"namePredicate\u003d\" + FindCommandBuilder.DEFAULT_NAME_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"RingoftheKing"},"content":"                + \"phonePredicate\u003d\" + FindCommandBuilder.DEFAULT_PHONE_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":245,"author":{"gitId":"RingoftheKing"},"content":"                + \"emailPredicate\u003d\" + emailMatchesPredicate + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"RingoftheKing"},"content":"                + \"tagPredicate\u003d\" + FindCommandBuilder.DEFAULT_TAG_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"RingoftheKing"},"content":"                + \"groupPredicate\u003d\" + FindCommandBuilder.DEFAULT_GROUPS_PRED","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"RingoftheKing"},"content":"                + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(findPhoneCommand.toString(), expectedPhoneChange);","lastModifiedDate":"2024-03-19"},{"lineNumber":250,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":252,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":253,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toStringMethod_withTagChange() {","lastModifiedDate":"2024-03-19"},{"lineNumber":254,"author":{"gitId":"RingoftheKing"},"content":"        TagMatchesPredicate tagMatchesPredicate \u003d new TagMatchesPredicate(\"TA\");","lastModifiedDate":"2024-03-19"},{"lineNumber":255,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findPhoneCommand \u003d new FindCommandBuilder().withTag(tagMatchesPredicate).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":256,"author":{"gitId":"RingoftheKing"},"content":"        String expectedPhoneChange \u003d FindCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-19"},{"lineNumber":257,"author":{"gitId":"RingoftheKing"},"content":"                + \"{\"","lastModifiedDate":"2024-03-19"},{"lineNumber":258,"author":{"gitId":"Ragnapop"},"content":"                + \"nusIdPredicate\u003d\" + FindCommandBuilder.DEFAULT_NUSID_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"RingoftheKing"},"content":"                + \"namePredicate\u003d\" + FindCommandBuilder.DEFAULT_NAME_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":260,"author":{"gitId":"RingoftheKing"},"content":"                + \"phonePredicate\u003d\" + FindCommandBuilder.DEFAULT_PHONE_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":261,"author":{"gitId":"RingoftheKing"},"content":"                + \"emailPredicate\u003d\" + FindCommandBuilder.DEFAULT_EMAIL_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":262,"author":{"gitId":"RingoftheKing"},"content":"                + \"tagPredicate\u003d\" + tagMatchesPredicate + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":263,"author":{"gitId":"RingoftheKing"},"content":"                + \"groupPredicate\u003d\" + FindCommandBuilder.DEFAULT_GROUPS_PRED","lastModifiedDate":"2024-03-19"},{"lineNumber":264,"author":{"gitId":"RingoftheKing"},"content":"                + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":265,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(findPhoneCommand.toString(), expectedPhoneChange);","lastModifiedDate":"2024-03-19"},{"lineNumber":266,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":267,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":268,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":269,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toStringMethod_withGroupChange() {","lastModifiedDate":"2024-03-19"},{"lineNumber":270,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate groupMatchesPredicate \u003d new GroupMatchesPredicate(List.of(\"CS2103T\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":271,"author":{"gitId":"RingoftheKing"},"content":"        FindCommand findPhoneCommand \u003d new FindCommandBuilder().withGroups(groupMatchesPredicate).build();","lastModifiedDate":"2024-03-19"},{"lineNumber":272,"author":{"gitId":"RingoftheKing"},"content":"        String expectedPhoneChange \u003d FindCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-19"},{"lineNumber":273,"author":{"gitId":"RingoftheKing"},"content":"                + \"{\"","lastModifiedDate":"2024-03-19"},{"lineNumber":274,"author":{"gitId":"Ragnapop"},"content":"                + \"nusIdPredicate\u003d\" + FindCommandBuilder.DEFAULT_NUSID_PRED + \", \"","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"RingoftheKing"},"content":"                + \"namePredicate\u003d\" + FindCommandBuilder.DEFAULT_NAME_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":276,"author":{"gitId":"RingoftheKing"},"content":"                + \"phonePredicate\u003d\" + FindCommandBuilder.DEFAULT_PHONE_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":277,"author":{"gitId":"RingoftheKing"},"content":"                + \"emailPredicate\u003d\" + FindCommandBuilder.DEFAULT_EMAIL_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":278,"author":{"gitId":"RingoftheKing"},"content":"                + \"tagPredicate\u003d\" + FindCommandBuilder.DEFAULT_TAG_PRED + \", \"","lastModifiedDate":"2024-03-19"},{"lineNumber":279,"author":{"gitId":"RingoftheKing"},"content":"                + \"groupPredicate\u003d\" + groupMatchesPredicate","lastModifiedDate":"2024-03-19"},{"lineNumber":280,"author":{"gitId":"RingoftheKing"},"content":"                + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":281,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(findPhoneCommand.toString(), expectedPhoneChange);","lastModifiedDate":"2024-03-19"},{"lineNumber":282,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":283,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RingoftheKing":167,"Ragnapop":42,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/GroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY_GROUP;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB_GROUP;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.testutil.GroupPersonDescriptorBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"class GroupCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"    public void execute_allFieldsSpecifiedUnfilteredListOnePerson_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        List\u003cPerson\u003e groupedPerson \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"        groupedPerson.add(model.getFilteredPersonList().get(0));","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        for (Person person : groupedPerson) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"            nusIds.add(person.getNusId());","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand.GroupPersonDescriptor descriptor \u003d new GroupPersonDescriptorBuilder(groupedPerson).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(nusIds, descriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"                Messages.format(groupedPerson));","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), groupedPerson.get(0));","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"    @Disabled","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"    public void execute_allFieldsSpecifiedUnfilteredListMultiplePerson_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        List\u003cPerson\u003e groupedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"        groupedPersons.add(model.getFilteredPersonList().get(0));","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        groupedPersons.add(model.getFilteredPersonList().get(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"        for (Person person : groupedPersons) {","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"            nusIds.add(person.getNusId());","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand.GroupPersonDescriptor descriptor \u003d new GroupPersonDescriptorBuilder(groupedPersons).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(nusIds, descriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"                Messages.format(GroupCommand.createGroupedPerson(groupedPersons, descriptor)));","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"        IntStream.range(0, groupedPersons.size())","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"                .forEach(index -\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"                    expectedModel.setPerson(model.getFilteredPersonList().get(index), groupedPersons.get(index));","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"                });","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"    public void execute_invalidPersonNusIdFilteredList_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Ragnapop"},"content":"        NusId nusId \u003d new NusId(\"E0000000\"); // NusId does not exist","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(nusId);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(nusIdSet, new GroupCommand.GroupPersonDescriptor());","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Ragnapop"},"content":"        assertCommandFailure(groupCommand, model, Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"    public void execute_partialInvalidPersonsNusIdFilteredList_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"        NusId nusId \u003d new NusId(\"E0000000\"); // NusId does not exist","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(nusId);","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(model.getFilteredPersonList().get(0).getNusId());","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(nusIdSet, new GroupCommand.GroupPersonDescriptor());","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"        assertCommandFailure(groupCommand, model, Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"Rikko1204"},"content":"    @Disabled","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"Ragnapop"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"Ragnapop"},"content":"        NusId nusId \u003d new NusId(\"E0000000\"); // NusId does not exist","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(nusId);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand.GroupPersonDescriptor descriptor \u003d new GroupPersonDescriptorBuilder().build();","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand editCommand \u003d new GroupCommand(nusIdSet, descriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"Ragnapop"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"Ragnapop"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdSetOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Rikko1204"},"content":"        nusIdSetOne.add(new NusId(VALID_NUSID_AMY));","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdEqualSetOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Rikko1204"},"content":"        nusIdEqualSetOne.add(new NusId(VALID_NUSID_AMY));","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Ragnapop"},"content":"        final GroupCommand standardCommand \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"Rikko1204"},"content":"                new GroupCommand(nusIdSetOne, DESC_AMY_GROUP);","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"Ragnapop"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"Ragnapop"},"content":"        GroupCommand.GroupPersonDescriptor copyDescriptor \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"Rikko1204"},"content":"                new GroupPersonDescriptorBuilder().withTag(VALID_TAG_AMY).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand commandWithSameValues \u003d new GroupCommand(nusIdEqualSetOne, copyDescriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"Ragnapop"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"Ragnapop"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"Ragnapop"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"Ragnapop"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"Ragnapop"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"Ragnapop"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"Ragnapop"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"Rikko1204"},"content":"        // assertFalse(standardCommand.equals(new GroupCommand(nusIdSetOne, DESC_AMY_GROUP)));","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"Ragnapop"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(standardCommand.equals(new GroupCommand(nusIdSetOne, DESC_BOB_GROUP)));","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"Ragnapop"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"Ragnapop"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(new NusId(VALID_NUSID_AMY));","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(new NusId(VALID_NUSID_BOB));","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"Ragnapop"},"content":"        GroupCommand.GroupPersonDescriptor groupPersonDescriptor \u003d new GroupCommand.GroupPersonDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(nusIdSet, groupPersonDescriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"Rikko1204"},"content":"        String expected \u003d GroupCommand.class.getCanonicalName() + \"{nusIds\u003d[\" + VALID_NUSID_AMY + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"Rikko1204"},"content":"                + VALID_NUSID_BOB + \"], groupPersonDescriptor\u003d\"","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"Ragnapop"},"content":"                + groupPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(expected, groupCommand.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Rikko1204":84,"Ragnapop":82}},{"path":"src/test/java/seedu/address/logic/commands/PinCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for PinCommand.","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"public class PinCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    public void execute_validNusIdFilteredList_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"        Person personToPin \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(\"E0123456\"); // This is the supposed NusId of the first person in the address list","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        PinCommand pinCommand \u003d new PinCommand(nusId);","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"        String expectedMessage \u003d String.format(PinCommand.MESSAGE_PIN_PERSON_SUCCESS,","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"                Messages.format(personToPin));","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        expectedModel.pinPerson(personToPin);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"        assertCommandSuccess(pinCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"    public void execute_invalidNusIdFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"cheahTJ"},"content":"        NusId testNusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"cheahTJ"},"content":"        PinCommand pinCommand \u003d new PinCommand(testNusId);","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"cheahTJ"},"content":"        assertCommandFailure(pinCommand, model, Messages.MESSAGE_NON_EXISTENT_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"cheahTJ"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"cheahTJ"},"content":"        NusId nusIdForFirstDeleteCommand \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"cheahTJ"},"content":"        NusId nusIdForSecondDeleteCommand \u003d new NusId(\"E2345678\");","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        PinCommand pinFirstCommand \u003d new PinCommand(nusIdForFirstDeleteCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"cheahTJ"},"content":"        PinCommand pinSecondCommand \u003d new PinCommand(nusIdForSecondDeleteCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        assertTrue(pinFirstCommand.equals(pinFirstCommand));","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"cheahTJ"},"content":"        // same values -\u003e return true","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"cheahTJ"},"content":"        PinCommand pinFirstCommandCopy \u003d new PinCommand(new NusId(\"E1234567\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        assertTrue(pinFirstCommand.equals(pinFirstCommandCopy));","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        assertFalse(pinFirstCommand.equals(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"        assertFalse(pinFirstCommand.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        assertFalse(pinFirstCommand.equals(pinSecondCommand));","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"        NusId testNusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"        PinCommand pinCommand \u003d new PinCommand(testNusId);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"        String expected \u003d PinCommand.class.getCanonicalName() + \"{targetnusId\u003d\" + testNusId.toString() + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(expected, pinCommand.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"cheahTJ":81}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCHEDULE_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_ADD_SUCCESS;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_DELETE_SUCCESS;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ScheduleCommand.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"    public void execute_allFieldsSpecifiedFilteredListSchedule_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        Person personToSchedule \u003d TypicalPersons.ALICE;","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"        Person personWithSchedule \u003d personInList.withSchedule(VALID_SCHEDULE_AMY).withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(personWithSchedule.getNusId(),","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"                personWithSchedule.getSchedule(), personWithSchedule.getRemark());","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ADD_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"                Messages.format(personWithSchedule));","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        expectedModel.setPerson(personToSchedule, personWithSchedule);","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"    public void execute_allFieldsSpecifiedFilteredListRemove_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        Person personToSchedule \u003d TypicalPersons.ALICE;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(personToSchedule);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        Person personWithOutSchedule \u003d personInList.withSchedule(\"\").withRemark(\"\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(personWithOutSchedule.getNusId(),","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"                personWithOutSchedule.getSchedule(), personWithOutSchedule.getRemark());","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"                Messages.format(personWithOutSchedule));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        expectedModel.setPerson(personToSchedule, personWithOutSchedule);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"    public void execute_invalidPersonUnfilteredList_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"        NusId nusId \u003d new NusId(\"E0000000\"); // NusId does not exist","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(nusId, new Schedule(VALID_SCHEDULE_AMY),","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_UNKNOWN_NUSID);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"        final ScheduleCommand standardCommand \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"                new ScheduleCommand(person.getNusId(), person.getSchedule(), person.getRemark());","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand commandWithSameValues \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"                new ScheduleCommand(person.getNusId(), person.getSchedule(), person.getRemark());","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"        // different schedule -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(standardCommand.equals(new ScheduleCommand(person.getNusId(),","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(VALID_SCHEDULE_AMY), person.getRemark())));","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(standardCommand.equals(new ScheduleCommand(person.getNusId(),","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Rikko1204"},"content":"                person.getSchedule(), new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(new NusId(VALID_NUSID_AMY),","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(VALID_SCHEDULE_AMY), new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"Rikko1204"},"content":"        String expected \u003d ScheduleCommand.class.getCanonicalName() + \"{nusId\u003d\" + VALID_NUSID_AMY","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"Rikko1204"},"content":"                + \", schedule\u003d\" + VALID_SCHEDULE_AMY + \", remark\u003d\" + VALID_REMARK_AMY + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"Rikko1204"},"content":"        assertEquals(expected, scheduleCommand.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Rikko1204":114}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewCommand.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"public class ViewCommandTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"        assertCommandSuccess(new ViewCommand(), model, ViewCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"        assertCommandSuccess(new ViewCommand(), model, ViewCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hjuntan":4,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NUSID_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NUSID_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NUSID_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_AMY;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_FRIEND;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"hjuntan"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withGroups(VALID_GROUP_FRIEND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NUSID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_BOB + GROUP_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"        // multiple groups - all accepted","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"        Person expectedPersonMultipleGroups \u003d new PersonBuilder(BOB).withGroups(VALID_GROUP_FRIEND, VALID_GROUP_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"        assertParseSuccess(parser, NUSID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"                + TAG_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND,","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"                new AddCommand(expectedPersonMultipleGroups));","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"hjuntan"},"content":"    public void parse_repeatedNonGroupValue_failure() {","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"        String validExpectedPersonString \u003d NUSID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"                + TAG_DESC_BOB + GROUP_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"        // multiple nusIds","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NUSID));","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"        // multiple tags","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"        assertParseFailure(parser, TAG_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"Rikko1204"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NUSID, PREFIX_NAME, PREFIX_TAG,","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"Rikko1204"},"content":"        // invalid nusId","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, INVALID_NUSID_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"Rikko1204"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NUSID));","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"hjuntan"},"content":"        // invalid tag","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"hjuntan"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"hjuntan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"Rikko1204"},"content":"        // invalid nusId","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NUSID_DESC,","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"Rikko1204"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NUSID));","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"hjuntan"},"content":"        // invalid tag","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"hjuntan"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_TAG_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"hjuntan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"hjuntan"},"content":"        // zero groups","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"hjuntan"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withGroups().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"Rikko1204"},"content":"        assertParseSuccess(parser, NUSID_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"Rikko1204"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"Rikko1204"},"content":"        // missing nusId prefix","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, VALID_NUSID_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":165,"author":{"gitId":"Rikko1204"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"hjuntan"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"hjuntan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"hjuntan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + TAG_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"hjuntan"},"content":"        // missing tag prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"hjuntan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_TAG_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"hjuntan"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_TAG_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"Rikko1204"},"content":"        // invalid nusId","lastModifiedDate":"2024-03-12"},{"lineNumber":191,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, INVALID_NUSID_DESC + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":192,"author":{"gitId":"Rikko1204"},"content":"                + TAG_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, NusId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":193,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":196,"author":{"gitId":"Rikko1204"},"content":"                + TAG_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_BOB + NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":200,"author":{"gitId":"Rikko1204"},"content":"                + TAG_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-12"},{"lineNumber":204,"author":{"gitId":"Rikko1204"},"content":"                + TAG_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":208,"author":{"gitId":"Rikko1204"},"content":"                + INVALID_TAG_DESC + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"hjuntan"},"content":"        // invalid group","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":212,"author":{"gitId":"Rikko1204"},"content":"                + TAG_DESC_BOB + INVALID_GROUP_DESC + VALID_GROUP_FRIEND, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":216,"author":{"gitId":"Rikko1204"},"content":"                + INVALID_TAG_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":219,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NUSID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-12"},{"lineNumber":220,"author":{"gitId":"Rikko1204"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND,","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Rikko1204":56,"hjuntan":28,"-":139}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.testutil.FindCommandBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"cheahTJ"},"content":"        NusId testNusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"                DeleteCommand.COMMAND_WORD + \" id/\" + testNusId);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new DeleteCommand(testNusId), command);","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        String defaultNusId \u003d \"E1234567\";","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"        String userInputNusId \u003d \" id/E1234567\";","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(defaultNusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"                + userInputNusId + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(new EditCommand(nusId, descriptor), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"RingoftheKing"},"content":"    public void parseCommand_findName() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"RingoftheKing"},"content":"                FindCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_NAME + String.join(\" \", keywords));","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(new FindCommandBuilder().withNamePred(","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"RingoftheKing"},"content":"                new NameContainsKeywordsPredicate(keywords)).build(), command);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"    public void parseCommand_schedule() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand command \u003d (ScheduleCommand) parser.parseCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"                ScheduleCommand.COMMAND_WORD + \" \" + PersonUtil.getPersonScheduleDetails(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"        assertEquals(new ScheduleCommand(person.getNusId(), person.getSchedule(), person.getRemark()), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"hjuntan"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD) instanceof ViewCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"hjuntan"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD + \" 3\") instanceof ViewCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cheahTJ":9,"Rikko1204":9,"RingoftheKing":5,"Ragnapop":1,"hjuntan":3,"-":89}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"        String argsString \u003d \"  some random string /t group with leading and trailing spaces \";","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"hjuntan":1,"-":149}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"     * equals to {@code expectedCommand}.Specialised for group command.","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    public static void assertParseSuccessGroup(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"            assertEquals(expectedCommand.toString(), command.toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Ragnapop":13,"-":39}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"    public void parse_validArgs_returnsDeleteCommandNusId() {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"        NusId testNusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"        assertParseSuccess(parser, \"delete id/E1234567\", new DeleteCommand(testNusId));","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"    public void parse_validArgs_returnsDeleteCommandGroup() {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"        Group testGroup \u003d new Group(\"husband\");","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"        assertParseSuccess(parser, \"delete g/husband\", new DeleteCommand(testGroup));","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"cheahTJ":2,"Ragnapop":9,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    private static final String GROUP_EMPTY \u003d \" \" + PREFIX_GROUP;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"cheahTJ"},"content":"        // no nusid specified","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \"E0123456 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \"E0123456 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_GROUP_DESC, Group.MESSAGE_CONSTRAINTS); // invalid group","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"hjuntan"},"content":"        // while parsing {@code PREFIX_GROUP} alone will reset the groups of the {@code Person} being edited,","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"        // parsing it together with a valid group results in error","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + GROUP_DESC_FRIEND + GROUP_DESC_HUSBAND","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"hjuntan"},"content":"                + GROUP_EMPTY, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + GROUP_DESC_FRIEND + GROUP_EMPTY","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"hjuntan"},"content":"                + GROUP_DESC_HUSBAND, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + GROUP_EMPTY + GROUP_DESC_FRIEND","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"                + GROUP_DESC_HUSBAND, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"                + VALID_TAG_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"cheahTJ"},"content":"        String defaultNusId \u003d \"E1234567\";","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(defaultNusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"cheahTJ"},"content":"        String userInputNusId \u003d \" id/E1234567\";","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"cheahTJ"},"content":"        String userInput \u003d userInputNusId + PHONE_DESC_BOB + GROUP_DESC_HUSBAND","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"hjuntan"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_AMY + NAME_DESC_AMY + GROUP_DESC_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"hjuntan"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withTag(VALID_TAG_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"hjuntan"},"content":"                .withGroups(VALID_GROUP_HUSBAND, VALID_GROUP_FRIEND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"        EditCommand expectedCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"        String defaultNusId \u003d \"E1234567\";","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(defaultNusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"        String userInputNusId \u003d \" id/E1234567\";","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"        String userInput \u003d userInputNusId + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"        EditCommand expectedCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"cheahTJ"},"content":"        String defaultNusId \u003d \"E1234567\";","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(defaultNusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"cheahTJ"},"content":"        String userInputNusId \u003d \" id/E1234567\";","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"cheahTJ"},"content":"        //Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"cheahTJ"},"content":"        String userInput \u003d userInputNusId + NAME_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"cheahTJ"},"content":"        EditCommand expectedCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"        userInput \u003d userInputNusId + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"cheahTJ"},"content":"        expectedCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"cheahTJ"},"content":"        userInput \u003d userInputNusId + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"cheahTJ"},"content":"        expectedCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"hjuntan"},"content":"        // tag","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"cheahTJ"},"content":"        userInput \u003d userInputNusId + TAG_DESC_AMY;","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"hjuntan"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTag(VALID_TAG_AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"cheahTJ"},"content":"        expectedCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"hjuntan"},"content":"        // groups","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"cheahTJ"},"content":"        userInput \u003d userInputNusId + GROUP_DESC_FRIEND;","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"hjuntan"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGroups(VALID_GROUP_FRIEND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"cheahTJ"},"content":"        expectedCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"cheahTJ"},"content":"        String userInputNusId \u003d \" id/E1234567\";","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"cheahTJ"},"content":"        String userInput \u003d userInputNusId + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"cheahTJ"},"content":"        userInput \u003d userInputNusId + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"hjuntan"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"cheahTJ"},"content":"        userInput \u003d userInputNusId + PHONE_DESC_AMY + TAG_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"hjuntan"},"content":"                + GROUP_DESC_FRIEND + PHONE_DESC_AMY + TAG_DESC_AMY + EMAIL_DESC_AMY + GROUP_DESC_FRIEND","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"hjuntan"},"content":"                + PHONE_DESC_BOB + TAG_DESC_BOB + EMAIL_DESC_BOB + GROUP_DESC_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"hjuntan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"cheahTJ"},"content":"        userInput \u003d userInputNusId + INVALID_PHONE_DESC + INVALID_TAG_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"hjuntan"},"content":"                + INVALID_PHONE_DESC + INVALID_TAG_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"hjuntan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"hjuntan"},"content":"    public void parse_resetGroups_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"cheahTJ"},"content":"        String defaultNusId \u003d \"E1234567\";","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(defaultNusId);","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"cheahTJ"},"content":"        String userInputNusId \u003d \" id/E1234567\";","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"cheahTJ"},"content":"        String userInput \u003d userInputNusId + GROUP_EMPTY;","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"hjuntan"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withGroups().build();","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"cheahTJ"},"content":"        EditCommand expectedCommand \u003d new EditCommand(nusId, descriptor);","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"cheahTJ":51,"hjuntan":32,"-":128}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import static seedu.address.logic.Messages.MESSAGE_AT_LEAST_ONE_FIELD_REQUIRED;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.testutil.FindCommandBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"                String.format(MESSAGE_AT_LEAST_ONE_FIELD_REQUIRED + FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"                new FindCommandBuilder().withNamePred(new NameContainsKeywordsPredicate(Arrays","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"                        .asList(\"Alice\", \"Bob\"))).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"RingoftheKing":8,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/GroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_HUSBAND;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccessGroup;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.testutil.GroupPersonDescriptorBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"class GroupCommandParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"    private GroupCommandParser parser \u003d new GroupCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"        assertParseFailure(parser, \"E0123456 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"        assertParseFailure(parser, \"E0123456 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"Ragnapop"},"content":"        //Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        NusId nusId \u003d new NusId(VALID_NUSID_AMY);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(nusId);","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        String userInput \u003d \" id/\" + nusId + GROUP_DESC_HUSBAND + TAG_DESC_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"        GroupCommand.GroupPersonDescriptor descriptor \u003d new GroupPersonDescriptorBuilder()","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"                .withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"                .withTag(VALID_TAG_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"                .build();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand expectedCommand \u003d new GroupCommand(nusIdSet, descriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        assertParseSuccessGroup(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"    public void parse_allFieldsSpecifiedMultipleValues_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"        NusId nusIdAmy \u003d new NusId(VALID_NUSID_AMY);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"        NusId nusIdBob \u003d new NusId(VALID_NUSID_BOB);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(nusIdAmy);","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(nusIdBob);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        String userInput \u003d \" id/\" + nusIdAmy + \" id/\" + nusIdBob + GROUP_DESC_HUSBAND + TAG_DESC_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand.GroupPersonDescriptor descriptor \u003d new GroupPersonDescriptorBuilder()","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"                .withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"                .withTag(VALID_TAG_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"                .build();","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand expectedCommand \u003d new GroupCommand(nusIdSet, descriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Ragnapop"},"content":"        assertParseSuccessGroup(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Ragnapop"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"Ragnapop"},"content":"        String defaultNusId \u003d \"E1234567\";","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"        NusId nusId \u003d new NusId((defaultNusId));","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"        Set\u003cNusId\u003e nusIdSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"        nusIdSet.add(nusId);","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Ragnapop"},"content":"        // tag","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"Ragnapop"},"content":"        String userInput \u003d \" id/\" + defaultNusId + TAG_DESC_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"Ragnapop"},"content":"        GroupCommand.GroupPersonDescriptor descriptor \u003d new GroupPersonDescriptorBuilder()","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"Ragnapop"},"content":"                .withTag(VALID_TAG_AMY).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"        GroupCommand expectedCommand \u003d new GroupCommand(nusIdSet, descriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Ragnapop"},"content":"        assertParseSuccessGroup(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Ragnapop"},"content":"        // group","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"Ragnapop"},"content":"        userInput \u003d \" id/\" + defaultNusId + GROUP_DESC_HUSBAND;","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"Ragnapop"},"content":"        descriptor \u003d new GroupPersonDescriptorBuilder()","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Ragnapop"},"content":"                .withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"        expectedCommand \u003d new GroupCommand(nusIdSet, descriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Ragnapop"},"content":"        assertParseSuccessGroup(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"Ragnapop"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"Ragnapop"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"Ragnapop"},"content":"        assertParseFailure(parser, \" id/E0123456\" + INVALID_GROUP_DESC, Group.MESSAGE_CONSTRAINTS); // invalid group","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Rikko1204":30,"Ragnapop":74}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    private static final String INVALID_NUSID \u003d \"e1234567\";","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"    private static final String INVALID_TAG \u003d \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"    private static final String INVALID_GROUP \u003d \"#friend\";","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"    private static final String INVALID_SCHEDULE \u003d \"2024-12-12\";","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"    private static final String VALID_NUSID \u003d \"E1234567\";","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    private static final String VALID_TAG \u003d \"Student\";","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"    private static final String VALID_GROUP_1 \u003d \"friend\";","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"    private static final String VALID_GROUP_2 \u003d \"neighbour\";","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"    private static final String VALID_SCHEDULE \u003d \"12-12-2020\";","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    private static final String VALID_REMARK \u003d \"I love Hong Jun\";","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"    public void parseNusId_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNusId((String) null));","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"    public void parseNusId_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNusId(INVALID_NUSID));","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"    public void parseNusId_validValueWithoutWhitespace_returnsNusId() throws Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"        NusId expectedNusId \u003d new NusId(VALID_NUSID);","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"        assertEquals(expectedNusId, ParserUtil.parseNusId(VALID_NUSID));","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"hjuntan"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"hjuntan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag((String) null));","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"hjuntan"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"hjuntan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"hjuntan"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"hjuntan"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG);","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"hjuntan"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG));","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"hjuntan"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"hjuntan"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG + WHITESPACE;","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"hjuntan"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG);","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"hjuntan"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"hjuntan"},"content":"    public void parseGroup_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"hjuntan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroup(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"hjuntan"},"content":"    public void parseGroup_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"hjuntan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroup(INVALID_GROUP));","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"hjuntan"},"content":"    public void parseGroup_validValueWithoutWhitespace_returnsGroup() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"hjuntan"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP_1);","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"hjuntan"},"content":"        assertEquals(expectedGroup, ParserUtil.parseGroup(VALID_GROUP_1));","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"hjuntan"},"content":"    public void parseGroup_validValueWithWhitespace_returnsTrimmedGroup() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"hjuntan"},"content":"        String groupWithWhitespace \u003d WHITESPACE + VALID_GROUP_1 + WHITESPACE;","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"hjuntan"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP_1);","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"hjuntan"},"content":"        assertEquals(expectedGroup, ParserUtil.parseGroup(groupWithWhitespace));","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"hjuntan"},"content":"    public void parseGroups_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"hjuntan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroups(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"hjuntan"},"content":"    public void parseGroups_collectionWithInvalidGroups_throwsParseException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"hjuntan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroups(Arrays.asList(VALID_GROUP_1,","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"hjuntan"},"content":"                INVALID_GROUP)));","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"hjuntan"},"content":"    public void parseGroups_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"hjuntan"},"content":"        assertTrue(ParserUtil.parseGroups(Collections.emptyList()).isEmpty());","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"hjuntan"},"content":"    public void parseGroups_collectionWithValidGroups_returnsGroupSet() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"hjuntan"},"content":"        Set\u003cGroup\u003e actualGroupSet \u003d ParserUtil.parseGroups(Arrays.asList(VALID_GROUP_1,","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"hjuntan"},"content":"                VALID_GROUP_2));","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"hjuntan"},"content":"        Set\u003cGroup\u003e expectedGroupSet \u003d new HashSet\u003cGroup\u003e(Arrays.asList(new Group(VALID_GROUP_1),","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"hjuntan"},"content":"                new Group(VALID_GROUP_2)));","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"hjuntan"},"content":"        assertEquals(expectedGroupSet, actualGroupSet);","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":225,"author":{"gitId":"Rikko1204"},"content":"    public void parseSchedule_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":226,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSchedule((String) null));","lastModifiedDate":"2024-03-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":230,"author":{"gitId":"Rikko1204"},"content":"    public void parseSchedule_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSchedule(INVALID_SCHEDULE));","lastModifiedDate":"2024-03-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":235,"author":{"gitId":"Rikko1204"},"content":"    public void parseSchedule_validValueWithoutWhitespace_returnsSchedule() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":236,"author":{"gitId":"Rikko1204"},"content":"        Schedule expectedSchedule \u003d new Schedule(VALID_SCHEDULE);","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"Rikko1204"},"content":"        assertEquals(expectedSchedule, ParserUtil.parseSchedule(VALID_SCHEDULE));","lastModifiedDate":"2024-03-17"},{"lineNumber":238,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":240,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":241,"author":{"gitId":"Rikko1204"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":242,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Rikko1204":35,"hjuntan":42,"-":167}},{"path":"src/test/java/seedu/address/logic/parser/PinCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheahTJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"cheahTJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.logic.commands.PinCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"public class PinCommandParserTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"    private PinCommandParser parser \u003d new PinCommandParser();","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"cheahTJ"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"cheahTJ"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \"E0123456 some random string\",","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"cheahTJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, PinCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \"E0123456 i/ string\",","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"cheahTJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, PinCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"    public void parse_validArg_returnsPinCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"        NusId testNusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"        assertParseSuccess(parser, \" id/E1234567\", new PinCommand(testNusId));","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"cheahTJ"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"cheahTJ"},"content":"        // This is invalid because it does not have the NusId prefix","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"cheahTJ"},"content":"        assertParseFailure(parser, \"E1234567\",","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"cheahTJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, PinCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"cheahTJ":39}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NUSID_DESC;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REMARK_DESC;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SCHEDULE_DESC;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NUSID_DESC_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SCHEDULE_DESC_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCHEDULE_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY,","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE,","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"    public void parse_validArg_returnsScheduleCommand() {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand expectedScheduleCommand \u003d new ScheduleCommand(new NusId(VALID_NUSID_AMY),","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(VALID_SCHEDULE_AMY), new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        ScheduleCommand expectedScheduleCommandRemove \u003d new ScheduleCommand(new NusId(VALID_NUSID_AMY),","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"                new Schedule(\"\"), new Remark(\"\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        assertParseSuccess(parser, NUSID_DESC_AMY + SCHEDULE_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"                expectedScheduleCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        assertParseSuccess(parser, NUSID_DESC_AMY, expectedScheduleCommandRemove);","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"    public void parse_missingArg_throwsParseException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"        // Missing NusId prefix","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, VALID_NUSID_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"        // Missing Remark","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_AMY + SCHEDULE_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"        // Missing Schedule","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"        // Missing NusId","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, SCHEDULE_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"        // Missing all prefixes","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, VALID_NUSID_AMY + VALID_SCHEDULE_AMY + VALID_REMARK_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"        // Schedule constraints","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_AMY + INVALID_SCHEDULE_DESC + REMARK_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"                Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"        // NusId constraints","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, INVALID_NUSID_DESC + SCHEDULE_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"                NusId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"        // Remark constraints","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_AMY + SCHEDULE_DESC_AMY + INVALID_REMARK_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"                Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"        // Repeated Schedule","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_AMY + SCHEDULE_DESC_AMY + SCHEDULE_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCHEDULE));","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"        // Repeated Remark","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_AMY + SCHEDULE_DESC_AMY + REMARK_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REMARK));","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"Rikko1204"},"content":"        // Repeated NusId","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"Rikko1204"},"content":"        assertParseFailure(parser, NUSID_DESC_AMY + NUSID_DESC_AMY + SCHEDULE_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"Rikko1204"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NUSID));","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Rikko1204":105}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTag(VALID_TAG_BOB).withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"hjuntan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTag(VALID_TAG_BOB).withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"hjuntan":4,"-":104}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"cheahTJ"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"cheahTJ"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":38,"author":{"gitId":"cheahTJ"},"content":"    private ModelManager modelManagerWithAddressBook \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"cheahTJ"},"content":"    public void filterPersonListWithNusId_existentNusId() {","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(\"E0123456\"); // This nusId exists in tbe typical address book","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"cheahTJ"},"content":"        Set\u003cGroup\u003e groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"cheahTJ"},"content":"        groups.add(new Group(\"friends\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"cheahTJ"},"content":"        Person personOfInterest \u003d new Person(nusId, new Name(\"Alice Pauline\"), new Phone(\"94351253\"),","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"cheahTJ"},"content":"                new Email(\"alice@example.com\"), new Tag(\"Student\"), groups,","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"cheahTJ"},"content":"                new Schedule(\"10-09-2020\"), new Remark(\"\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(personOfInterest, modelManagerWithAddressBook.filterPersonListWithNusId(nusId));","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"cheahTJ"},"content":"    public void filterPersonListWithNusId_nonexistentNusId() {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"cheahTJ"},"content":"        NusId nusId \u003d new NusId(\"E0000000\"); // This nusId does not in tbe typical address book","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"cheahTJ"},"content":"        assertTrue(modelManagerWithAddressBook.filterPersonListWithNusId(nusId) \u003d\u003d null);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"hjuntan"},"content":"    public void getScheduleFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"hjuntan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"hjuntan"},"content":"                modelManager.getScheduleFilteredPersonList().remove(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"hjuntan"},"content":"    public void noSchedulePerson_personNoScheduleInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"hjuntan"},"content":"        modelManager.addPerson(new PersonBuilder(ALICE).withSchedule(\"\").withRemark(\"\").build());","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"hjuntan"},"content":"        assertFalse(modelManager.getScheduleFilteredPersonList().contains(ALICE));","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"hjuntan"},"content":"    public void hasSchedulePerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"hjuntan"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"hjuntan"},"content":"        assertTrue(modelManager.getScheduleFilteredPersonList().contains(ALICE));","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"cheahTJ":32,"hjuntan":19,"-":132}},{"path":"src/test/java/seedu/address/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package seedu.address.model.group;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"public class GroupTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Group(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"    public void constructor_invalidGroupName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"        String invalidGroupName \u003d \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Group(invalidGroupName));","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"    public void isValidGroupName() {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"        // null group name","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Group.isValidGroupName(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"hjuntan":26}},{"path":"src/test/java/seedu/address/model/person/EmailMatchesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"public class EmailMatchesPredicateTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"    public void test_emailMatches_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate fullMatch \u003d new EmailMatchesPredicate(\"bobbyApples@gmail.com\");","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"        Person person \u003d new PersonBuilder().withEmail(\"bobbyApples@gmail.com\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(fullMatch.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate partialMatch \u003d new EmailMatchesPredicate(\"Apples\");","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(partialMatch.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate diffCaseMatch \u003d new EmailMatchesPredicate(\"aPPleS\");","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(diffCaseMatch.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate extraSpaces \u003d new EmailMatchesPredicate(\" apples \");","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(extraSpaces.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"    public void test_emailNoMatch_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"        Person person \u003d new PersonBuilder().withEmail(\"bobbyApples@gmail.com\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate noPartialMatch \u003d new EmailMatchesPredicate(\"WobblyApples\");","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"        assertFalse(noPartialMatch.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate spacesInBetween \u003d new EmailMatchesPredicate(\"bobby apples \");","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"        assertFalse(spacesInBetween.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"        String keyword \u003d \"bobby\";","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"        EmailMatchesPredicate e \u003d new EmailMatchesPredicate(keyword);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"RingoftheKing"},"content":"        String expected \u003d EmailMatchesPredicate.class.getCanonicalName() + \"{emailKeyword\u003d\" + keyword + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(e.toString(), expected);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"RingoftheKing":46}},{"path":"src/test/java/seedu/address/model/person/GroupMatchesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"public class GroupMatchesPredicateTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"    public void test_oneGroupOneKeyword() {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate predicateWithOneKeyword \u003d new GroupMatchesPredicate(List.of(\"CS2103T\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"        Person personWithOneGroup \u003d new PersonBuilder().withGroups(\"CS2103T\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(predicateWithOneKeyword.test(personWithOneGroup));","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"    public void test_multipleGroupsOneKeyword() {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate predicateWithOneKeyword \u003d new GroupMatchesPredicate(List.of(\"CS2103T\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"        Person personWithManyGroups \u003d new PersonBuilder().withGroups(\"CS2100\", \"CS2101\", \"CS2103T\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(predicateWithOneKeyword.test(personWithManyGroups));","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"    public void test_multipleGroupsManyKeywords() {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate predicateWithManyKeywords \u003d new GroupMatchesPredicate(List.of(\"CS2101\", \"CS2103T\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"        Person personWithManyGroups \u003d new PersonBuilder().withGroups(\"CS2100\", \"CS2101\", \"CS2103T\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(predicateWithManyKeywords.test(personWithManyGroups));","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"CS2101\", \"CS2103T\");","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"        GroupMatchesPredicate g \u003d new GroupMatchesPredicate(keywords);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"        String expected \u003d GroupMatchesPredicate.class.getCanonicalName() + \"{groupKeywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(g.toString(), expected);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"RingoftheKing":41}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"        // Successfully skips checking when not required to by the FindCommand class","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"        NameContainsKeywordsPredicate optionalParameterNotFilled \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"                new NameContainsKeywordsPredicate(List.of(FindCommand.NOT_REQUIRED_VALUE));","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(optionalParameterNotFilled.test(new PersonBuilder().build()));","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"hjuntan"},"content":"        // Keywords match phone, email and tag, but does not match name","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"hjuntan"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Student\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"hjuntan"},"content":"                .withEmail(\"alice@email.com\").withTag(\"Student\").build()));","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"RingoftheKing"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{nameKeywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RingoftheKing":7,"hjuntan":3,"-":81}},{"path":"src/test/java/seedu/address/model/person/NusIdMatchesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"class NusIdMatchesPredicateTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"    public void test_matchingNusId_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":"        Person person \u003d new PersonBuilder().withNusId(\"E0123456\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate fullMatch \u003d new NusIdMatchesPredicate(\"E0123456\");","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"        assertTrue(fullMatch.test(person));","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate partialPrefixMatch \u003d new NusIdMatchesPredicate(\"E0123\");","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"        assertTrue(partialPrefixMatch.test(person));","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"    public void test_noMatchingNusId_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"        Person person \u003d new PersonBuilder().withNusId(\"E0123456\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate fullMatch \u003d new NusIdMatchesPredicate(\"E0123457\");","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"        assertFalse(fullMatch.test(person));","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate partialPrefixMatch \u003d new NusIdMatchesPredicate(\"E0321\");","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"        assertFalse(partialPrefixMatch.test(person));","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"    void testToString() {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"        String nusIdToMatch \u003d \"E01234567\";","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"        NusIdMatchesPredicate p \u003d new NusIdMatchesPredicate(nusIdToMatch);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"        String expected \u003d NusIdMatchesPredicate.class.getCanonicalName() + \"{nusIdKeyword\u003d\" + nusIdToMatch + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"Ragnapop"},"content":"        assertEquals(p.toString(), expected);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"Ragnapop":41}},{"path":"src/test/java/seedu/address/model/person/NusIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"public class NusIdTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NusId(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"        String invalidNusId \u003d \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NusId(invalidNusId));","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    public void isValidNusId() {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        // null name","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(NullPointerException.class, () -\u003e NusId.isValidNusId(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        // invalid nusId","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\"\")); // empty string","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\" \")); // spaces only","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\"E\")); // letters only","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\"1234567\")); // numbers only","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\"e1234567\")); // Lower case letter","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\"e123456\")); // Less digits","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(NusId.isValidNusId(\"e12345678\")); // More digits","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        // valid nusId","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(NusId.isValidNusId(\"E0951501\")); // Correct format","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(NusId.isValidNusId(\"E0000000\")); // All 0","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"    public void equals() {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        NusId nusId \u003d new NusId(\"E1234567\");","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(nusId.equals(new NusId(\"E1234567\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(nusId.equals(nusId));","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(nusId.equals(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(nusId.equals(5.0f));","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(nusId.equals(new Name(\"E7654321\")));","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Rikko1204":62}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getGroups().remove(0));","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        // same id, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"                .withEmail(VALID_EMAIL_BOB).withTag(VALID_TAG_BOB).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        // different id, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNusId(VALID_NUSID_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    public void hasSchedule() {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        // has schedule -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        assertTrue(ALICE.hasSchedule());","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"        // no schedule -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"        Person alice \u003d new PersonBuilder(ALICE).withSchedule(\"\").build();","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        assertFalse(alice.hasSchedule());","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"        // different nusId -\u003e returns false","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withNusId(VALID_NUSID_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"hjuntan"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"hjuntan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTag(VALID_TAG_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"hjuntan"},"content":"        // different groups -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"hjuntan"},"content":"        String expected \u003d Person.class.getCanonicalName()","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"hjuntan"},"content":"                + \"{nusId\u003d\" + ALICE.getNusId() + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"hjuntan"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"                + \", tag\u003d\" + ALICE.getTag() + \", groups\u003d\" + ALICE.getGroups()","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"                + \", schedule\u003d\" + ALICE.getSchedule() + \", remark\u003d\" + ALICE.getRemark() + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Rikko1204":15,"hjuntan":15,"-":78}},{"path":"src/test/java/seedu/address/model/person/PhoneMatchesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"public class PhoneMatchesPredicateTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"    public void test_matchingPhone_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"        Person person \u003d new PersonBuilder().withPhone(\"91237654\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate fullMatch \u003d new PhoneMatchesPredicate(\"91237654\");","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(fullMatch.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate partialPrefixMatch \u003d new PhoneMatchesPredicate(\"9123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(partialPrefixMatch.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"    public void test_noMatchingPhone_returnsFalse() {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"        Person person \u003d new PersonBuilder().withPhone(\"91237654\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate noMatch \u003d new PhoneMatchesPredicate(\"98761234\");","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"        assertFalse(noMatch.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate partialMiddleMatch \u003d new PhoneMatchesPredicate(\"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"        assertFalse(partialMiddleMatch.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"        String numToMatch \u003d \"91234567\";","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"        PhoneMatchesPredicate p \u003d new PhoneMatchesPredicate(numToMatch);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"        String expected \u003d PhoneMatchesPredicate.class.getCanonicalName() + \"{phoneNumToMatch\u003d\" + numToMatch + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(p.toString(), expected);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"RingoftheKing":41}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 digits","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"        assertFalse(Phone.isValidPhone(\"12429384203\")); // more than 10 digits","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"        assertFalse(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 digits","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"        assertTrue(Phone.isValidPhone(\"9312315345\")); // exactly 10 digits","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ragnapop":6,"-":57}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"public class RemarkTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"        Remark remark \u003d new Remark(\"Hong Jun is my daddy\");","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(remark.equals(new Remark(\"Hong Jun is my daddy\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(remark.equals(5.0f));","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(remark.equals(new Remark(\"Hong Jun is still my daddy\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Rikko1204":35}},{"path":"src/test/java/seedu/address/model/person/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"public class ScheduleTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Schedule(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    public void constructor_invalidSchedule_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"        String invalidSchedule \u003d \"2020-12-12\";","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Schedule(invalidSchedule));","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    public void isValidSchedule() {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        // null schedule","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(NullPointerException.class, () -\u003e Schedule.isValidSchedule(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        // invalid Schedule","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(Schedule.isValidSchedule(\"31-31-2020\")); // Non-existent month","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(Schedule.isValidSchedule(\"12~12~2020\")); // ~ incorrectly used","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(Schedule.isValidSchedule(\"2020-12-12\")); // Incorrect format","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(Schedule.isValidSchedule(\"12-2020-12\")); // Incorrect format","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(Schedule.isValidSchedule(\"12-12-2020 12pm\")); // Extra strings","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"        assertFalse(Schedule.isValidSchedule(\"\")); // Empty string","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"        // valid schedule","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(Schedule.isValidSchedule(\"12-12-2020\")); // Correct format","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(Schedule.isValidSchedule(\"12/12/2020\")); // Correct format","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        Schedule schedule \u003d new Schedule(\"10-10-2020\");","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(schedule.equals(new Schedule(\"10-10-2020\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"        assertTrue(schedule.equals(schedule));","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(schedule.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(schedule.equals(5.0f));","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        assertFalse(schedule.equals(new Schedule(\"01-01-2010\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Rikko1204":58,"hjuntan":1}},{"path":"src/test/java/seedu/address/model/person/TagMatchesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"RingoftheKing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"RingoftheKing"},"content":"public class TagMatchesPredicateTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"    public void test_tagMatches_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":"        Person person \u003d new PersonBuilder().withTag(Tag.TagType.TA.toString()).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":"        TagMatchesPredicate validTagPredicate \u003d new TagMatchesPredicate(Tag.TagType.TA.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"        assertTrue(validTagPredicate.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"    public void test_tagNoMatch_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"        Person person \u003d new PersonBuilder().withTag(Tag.TagType.Professor.toString()).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"        TagMatchesPredicate noMatchPredicate \u003d new TagMatchesPredicate(Tag.TagType.TA.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"        assertFalse(noMatchPredicate.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"        TagMatchesPredicate gibberishPredicate \u003d new TagMatchesPredicate(\"GARBAGE_VALUE\");","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"        assertFalse(gibberishPredicate.test(person));","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"RingoftheKing"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"    public void test_toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"        String keyword \u003d Tag.TagType.TA.name();","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"        TagMatchesPredicate tagMatchesPredicate \u003d new TagMatchesPredicate(keyword);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"        String expected \u003d TagMatchesPredicate.class.getCanonicalName() + \"{tagKeyword\u003d\" + keyword + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"        assertEquals(tagMatchesPredicate.toString(), expected);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"RingoftheKing":38}},{"path":"src/test/java/seedu/address/model/person/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjuntan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"public class TagTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"hjuntan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"hjuntan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"    public void constructor_invalidTag_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"        String invalidTag \u003d \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"hjuntan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTag));","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"hjuntan"},"content":"    public void isValidTag() {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"hjuntan"},"content":"        // null tag","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"hjuntan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTag(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"        // invalid tags","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"hjuntan"},"content":"        assertFalse(Tag.isValidTag(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"        assertFalse(Tag.isValidTag(\" \")); // spaces only","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"        // valid tags","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"        assertTrue(Tag.isValidTag(\"Student\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"        assertTrue(Tag.isValidTag(\"Professor\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"hjuntan"},"content":"        assertTrue(Tag.isValidTag(\"TA\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"hjuntan"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"hjuntan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"hjuntan"},"content":"        Tag tag \u003d new Tag(\"Student\");","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        assertTrue(tag.equals(new Tag(\"Student\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        assertTrue(tag.equals(tag));","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        assertFalse(tag.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"hjuntan"},"content":"        assertFalse(tag.equals(5.0f));","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"hjuntan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"hjuntan"},"content":"        assertFalse(tag.equals(new Tag(\"Professor\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"hjuntan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"hjuntan"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"hjuntan":56}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"hjuntan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTag(VALID_TAG_BOB).withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"cheahTJ"},"content":"    public void pin_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"cheahTJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.pin(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"cheahTJ"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"cheahTJ"},"content":"    public void pinPerson_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"cheahTJ"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"cheahTJ"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"cheahTJ"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"cheahTJ"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"cheahTJ"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"cheahTJ"},"content":"        uniquePersonList.pin(BOB);","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"cheahTJ"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"hjuntan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTag(VALID_TAG_BOB).withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"cheahTJ":16,"hjuntan":4,"-":171}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    private static final String INVALID_NUSID \u003d \"e1234567\";","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"hjuntan"},"content":"    private static final String INVALID_TAG \u003d \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"hjuntan"},"content":"    private static final String INVALID_GROUP \u003d \"#friend\";","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    private static final String INVALID_SCHEDULE \u003d \"2024-12-12\";","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"hjuntan"},"content":"    private static final String VALID_NUSID \u003d BENSON.getNusId().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    private static final String VALID_TAG \u003d BENSON.getTag().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"    private static final String VALID_SCHEDULE \u003d BENSON.getSchedule().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"    private static final List\u003cJsonAdaptedGroup\u003e VALID_GROUPS \u003d BENSON.getGroups().stream()","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"            .map(JsonAdaptedGroup::new)","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"    public void toModelType_invalidNusId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(INVALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"        String expectedMessage \u003d NusId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"    public void toModelType_nullNusId_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(null, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, NusId.class.getSimpleName());","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, INVALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, null, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"hjuntan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, null,","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"Rikko1204"},"content":"                        INVALID_EMAIL, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"hjuntan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"Rikko1204"},"content":"                        null, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"hjuntan"},"content":"    public void toModelType_invalidTag_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, INVALID_TAG, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"hjuntan"},"content":"        String expectedMessage \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"hjuntan"},"content":"    public void toModelType_nullTag_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"hjuntan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, null, VALID_GROUPS, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"hjuntan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Tag.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"hjuntan"},"content":"    public void toModelType_invalidGroups_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"hjuntan"},"content":"        List\u003cJsonAdaptedGroup\u003e invalidGroups \u003d new ArrayList\u003c\u003e(VALID_GROUPS);","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"hjuntan"},"content":"        invalidGroups.add(new JsonAdaptedGroup(INVALID_GROUP));","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, invalidGroups, VALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"Rikko1204"},"content":"    public void toModelType_invalidSchedule_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"Rikko1204"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, INVALID_SCHEDULE, VALID_REMARK);","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"Rikko1204"},"content":"        String expectedMessage \u003d Schedule.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"Rikko1204"},"content":"    public void toModelType_nullSchedule_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"Rikko1204"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, null, VALID_REMARK);","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"Rikko1204"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Schedule.class.getSimpleName());","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"Rikko1204"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"Rikko1204"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"Rikko1204"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"Rikko1204"},"content":"                new JsonAdaptedPerson(VALID_NUSID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"Rikko1204"},"content":"                        VALID_EMAIL, VALID_TAG, VALID_GROUPS, VALID_SCHEDULE, null);","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"Rikko1204"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"Rikko1204"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Rikko1204":70,"hjuntan":18,"-":88}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"cheahTJ"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"cheahTJ"},"content":"        descriptor.setSchedule(person.getSchedule());","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"cheahTJ"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"        descriptor.setTag(person.getTag());","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"        descriptor.setGroups(person.getGroups());","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"     * Sets the {@code Tag} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"    public EditPersonDescriptorBuilder withTag(String tag) {","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"hjuntan"},"content":"        descriptor.setTag(new Tag(tag));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"hjuntan"},"content":"     * Parses the {@code groups} into a {@code Set\u003cGroup\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"hjuntan"},"content":"    public EditPersonDescriptorBuilder withGroups(String... groups) {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"hjuntan"},"content":"        Set\u003cGroup\u003e groupSet \u003d Stream.of(groups).map(Group::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"hjuntan"},"content":"        descriptor.setGroups(groupSet);","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"cheahTJ"},"content":"     * Sets the {@code Schedule} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"cheahTJ"},"content":"    public EditPersonDescriptorBuilder withSchedule(String schedule) {","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"cheahTJ"},"content":"        descriptor.setSchedule(new Schedule(schedule));","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"cheahTJ"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"cheahTJ"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"cheahTJ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"cheahTJ"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"cheahTJ"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"cheahTJ"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"cheahTJ"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"cheahTJ"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"cheahTJ":18,"hjuntan":10,"-":79}},{"path":"src/test/java/seedu/address/testutil/FindCommandBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RingoftheKing"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"RingoftheKing"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"RingoftheKing"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.EmailMatchesPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.GroupMatchesPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.NusIdMatchesPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.PhoneMatchesPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.TagMatchesPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"RingoftheKing"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"RingoftheKing"},"content":" * A class that aids in creating {@code FindCommand} instances for testing","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"RingoftheKing"},"content":" * The default {@code FindCommand} created results in no filtering","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"RingoftheKing"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"RingoftheKing"},"content":"public class FindCommandBuilder {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"    public static final NusIdMatchesPredicate DEFAULT_NUSID_PRED \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"            new NusIdMatchesPredicate(FindCommand.NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"RingoftheKing"},"content":"    public static final NameContainsKeywordsPredicate DEFAULT_NAME_PRED \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"RingoftheKing"},"content":"            new NameContainsKeywordsPredicate(List.of(FindCommand.NOT_REQUIRED_VALUE));","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"RingoftheKing"},"content":"    public static final EmailMatchesPredicate DEFAULT_EMAIL_PRED \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"RingoftheKing"},"content":"            new EmailMatchesPredicate(FindCommand.NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"RingoftheKing"},"content":"    public static final GroupMatchesPredicate DEFAULT_GROUPS_PRED \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"RingoftheKing"},"content":"            new GroupMatchesPredicate(List.of());","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"RingoftheKing"},"content":"    public static final PhoneMatchesPredicate DEFAULT_PHONE_PRED \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"RingoftheKing"},"content":"            new PhoneMatchesPredicate(FindCommand.NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"RingoftheKing"},"content":"    public static final TagMatchesPredicate DEFAULT_TAG_PRED \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"RingoftheKing"},"content":"            new TagMatchesPredicate(FindCommand.NOT_REQUIRED_VALUE);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"    private NusIdMatchesPredicate id;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"RingoftheKing"},"content":"    private NameContainsKeywordsPredicate n;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"RingoftheKing"},"content":"    private EmailMatchesPredicate e;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"RingoftheKing"},"content":"    private GroupMatchesPredicate g;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"RingoftheKing"},"content":"    private PhoneMatchesPredicate p;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"RingoftheKing"},"content":"    private TagMatchesPredicate t;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"RingoftheKing"},"content":"     * Constructs a Utility class to help build a FindCommand.","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"RingoftheKing"},"content":"     * All fields are initially set to be optional.","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"RingoftheKing"},"content":"    public FindCommandBuilder() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Ragnapop"},"content":"        id \u003d DEFAULT_NUSID_PRED;","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"RingoftheKing"},"content":"        n \u003d DEFAULT_NAME_PRED;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"RingoftheKing"},"content":"        e \u003d DEFAULT_EMAIL_PRED;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"RingoftheKing"},"content":"        g \u003d DEFAULT_GROUPS_PRED;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"RingoftheKing"},"content":"        p \u003d DEFAULT_PHONE_PRED;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"RingoftheKing"},"content":"        t \u003d DEFAULT_TAG_PRED;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"     * Changes the {@code FindCommand}\u0027s NusIdMatchesPredicate we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"    public FindCommandBuilder withNusId(NusIdMatchesPredicate nusIdPred) {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"        id \u003d nusIdPred;","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"     * Changes the {@code FindCommand}\u0027s NameContainsKeywordsPredicate we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"RingoftheKing"},"content":"    public FindCommandBuilder withNamePred(NameContainsKeywordsPredicate namePred) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"RingoftheKing"},"content":"        n \u003d namePred;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"RingoftheKing"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"RingoftheKing"},"content":"     * Changes the {@code FindCommand\u0027s} {@code EmailMatchesPredicate} we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"RingoftheKing"},"content":"    public FindCommandBuilder withEmail(EmailMatchesPredicate emailPred) {","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"RingoftheKing"},"content":"        e \u003d emailPred;","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"RingoftheKing"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"RingoftheKing"},"content":"     * Changes the {@code FindCommand\u0027s} {@code GroupMatchesPredicate} we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"RingoftheKing"},"content":"    public FindCommandBuilder withGroups(GroupMatchesPredicate groupsPred) {","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"RingoftheKing"},"content":"        g \u003d groupsPred;","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"RingoftheKing"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"RingoftheKing"},"content":"     * Changes the {@code FindCommand\u0027s} {@code PhoneMatchesPredicate} we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"RingoftheKing"},"content":"    public FindCommandBuilder withPhone(PhoneMatchesPredicate phonePred) {","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"RingoftheKing"},"content":"        p \u003d phonePred;","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"RingoftheKing"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"RingoftheKing"},"content":"     * Changes the {@code FindCommand\u0027s} {@code TagMatchesPredicate} we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"RingoftheKing"},"content":"    public FindCommandBuilder withTag(TagMatchesPredicate tagPred) {","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"RingoftheKing"},"content":"        t \u003d tagPred;","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"RingoftheKing"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"RingoftheKing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"RingoftheKing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"RingoftheKing"},"content":"     * Build the {@code FindCommand} we have customised.","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"RingoftheKing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"RingoftheKing"},"content":"    public FindCommand build() {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"Ragnapop"},"content":"        return new FindCommand(id, n, e, g, p, t);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"RingoftheKing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"RingoftheKing"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"RingoftheKing":85,"Ragnapop":20}},{"path":"src/test/java/seedu/address/testutil/GroupPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ragnapop"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Ragnapop"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"Ragnapop"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Ragnapop"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.logic.commands.GroupCommand.GroupPersonDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Ragnapop"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Ragnapop"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Ragnapop"},"content":" * A utility class to help with building GroupPersonDescriptor objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Ragnapop"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Ragnapop"},"content":"public class GroupPersonDescriptorBuilder {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Ragnapop"},"content":"    private GroupPersonDescriptor descriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Ragnapop"},"content":"    public GroupPersonDescriptorBuilder() {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Ragnapop"},"content":"        descriptor \u003d new GroupCommand.GroupPersonDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Ragnapop"},"content":"    public GroupPersonDescriptorBuilder(GroupPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"Ragnapop"},"content":"        this.descriptor \u003d new GroupPersonDescriptor(descriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Ragnapop"},"content":"     * Returns an {@code GroupPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"Ragnapop"},"content":"    public GroupPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"Ragnapop"},"content":"        descriptor \u003d new GroupPersonDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"Ragnapop"},"content":"        descriptor.setTag(person.getTag());","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"Ragnapop"},"content":"        descriptor.setGroups(person.getGroups());","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"     * Returns an {@code GroupPersonDescriptor} with fields containing {@code persons}\u0027s details","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"    public GroupPersonDescriptorBuilder(List\u003cPerson\u003e persons) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        descriptor \u003d new GroupPersonDescriptor();","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"        descriptor.setTag(persons.get(0).getTag());","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        descriptor.setGroups(persons.get(0).getGroups());","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"Ragnapop"},"content":"     * Sets the {@code Tag} of the {@code GroupPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"Ragnapop"},"content":"    public GroupPersonDescriptorBuilder withTag(String tag) {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"Ragnapop"},"content":"        descriptor.setTag(new Tag(tag));","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"Ragnapop"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"Ragnapop"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Ragnapop"},"content":"     * Parses the {@code groups} into a {@code Set\u003cGroup\u003e} and set it to the {@code GroupPersonDescriptor}","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"Ragnapop"},"content":"     * that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"Ragnapop"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"Ragnapop"},"content":"    public GroupPersonDescriptorBuilder withGroups(String... groups) {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"Ragnapop"},"content":"        Set\u003cGroup\u003e groupSet \u003d Stream.of(groups).map(Group::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"Ragnapop"},"content":"        descriptor.setGroups(groupSet);","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"Ragnapop"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"Ragnapop"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"Ragnapop"},"content":"    public GroupPersonDescriptor build() {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"Ragnapop"},"content":"        return descriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"Ragnapop"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"Ragnapop"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"Rikko1204":6,"Ragnapop":62}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.NusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"hjuntan"},"content":"    public static final String DEFAULT_NUSID \u003d \"E1234567\";","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"hjuntan"},"content":"    public static final String DEFAULT_TAG \u003d \"Student\";","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    public static final String DEFAULT_SCHEDULE \u003d \"12-12-2024\";","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    public static final String DEFAULT_REMARK \u003d \"Consultation at COM3\";","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"hjuntan"},"content":"    private NusId nusId;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"hjuntan"},"content":"    private Tag tag;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    private Set\u003cGroup\u003e groups;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"    private Schedule schedule;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"    private Remark remark;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"        nusId \u003d new NusId(DEFAULT_NUSID);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"        tag \u003d new Tag(DEFAULT_TAG);","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"hjuntan"},"content":"        groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        schedule \u003d new Schedule(DEFAULT_SCHEDULE);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"        nusId \u003d personToCopy.getNusId();","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"hjuntan"},"content":"        tag \u003d personToCopy.getTag();","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"hjuntan"},"content":"        groups \u003d new HashSet\u003c\u003e(personToCopy.getGroups());","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        schedule \u003d personToCopy.getSchedule();","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"hjuntan"},"content":"     * Sets the {@code NusId} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"    public PersonBuilder withNusId(String nusId) {","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"        this.nusId \u003d new NusId(nusId);","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"hjuntan"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"hjuntan"},"content":"     * Parses the {@code groups} into a {@code Set\u003cGroup\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"hjuntan"},"content":"    public PersonBuilder withGroups(String ... groups) {","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"hjuntan"},"content":"        this.groups \u003d SampleDataUtil.getGroupSet(groups);","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"hjuntan"},"content":"     * Sets the {@code Tag} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"hjuntan"},"content":"    public PersonBuilder withTag(String tag) {","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"hjuntan"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"Rikko1204"},"content":"     * Sets the {@code Schedule} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"Rikko1204"},"content":"    public PersonBuilder withSchedule(String schedule) {","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Rikko1204"},"content":"        this.schedule \u003d new Schedule(schedule);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Rikko1204"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"Rikko1204"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"Rikko1204"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Rikko1204"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Rikko1204"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"Rikko1204"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"Rikko1204"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":133,"author":{"gitId":"Rikko1204"},"content":"        return new Person(nusId, name, phone, email, tag, groups, schedule, remark);","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Rikko1204":27,"hjuntan":26,"-":83}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUSID;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"hjuntan"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        sb.append(PREFIX_NUSID + person.getNusId().value + \" \");","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"        sb.append(PREFIX_TAG + person.getTag().value.toString() + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"        person.getGroups().stream().forEach(","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"hjuntan"},"content":"            s -\u003e sb.append(PREFIX_GROUP + s.groupName + \" \")","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"    public static String getPersonScheduleDetails(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"        sb.append(PREFIX_NUSID + person.getNusId().value + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"        sb.append(PREFIX_SCHEDULE + person.getSchedule().date + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"hjuntan"},"content":"        descriptor.getTag().ifPresent(tag -\u003e sb.append(PREFIX_TAG).append(tag.value).append(\" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"hjuntan"},"content":"        if (descriptor.getGroups().isPresent()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"            Set\u003cGroup\u003e groups \u003d descriptor.getGroups().get();","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"            if (groups.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"hjuntan"},"content":"                sb.append(PREFIX_GROUP);","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"                groups.forEach(s -\u003e sb.append(PREFIX_GROUP).append(s.groupName).append(\" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Rikko1204":13,"hjuntan":11,"-":51}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_FRIEND;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NUSID_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCHEDULE_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SCHEDULE_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"hjuntan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withNusId(\"E0123456\").withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"hjuntan"},"content":"            .withTag(\"Student\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"            .withPhone(\"94351253\").withGroups(\"friends\")","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(\"10-09-2020\").withRemark(\"\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"hjuntan"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withNusId(\"E9682156\").withName(\"Benson Meier\")","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"            .withTag(\"Student\").withGroups(\"owesMoney\", \"friends\")","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(\"01-01-2020\").withRemark(\"Consultation at 3pm\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"hjuntan"},"content":"    public static final Person CARL \u003d new PersonBuilder().withNusId(\"E0358435\").withName(\"Carl Kurz\")","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"hjuntan"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"            .withTag(\"TA\").withSchedule(\"02-01-2020\").withRemark(\"\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"hjuntan"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withNusId(\"E1237864\").withName(\"Daniel Meier\")","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"hjuntan"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"            .withTag(\"Professor\").withGroups(\"friends\")","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(\"03/01/2020\").withRemark(\"Lunch\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"hjuntan"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withNusId(\"E6546506\").withName(\"Elle Meyer\")","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"hjuntan"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\")","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"            .withTag(\"TA\").withSchedule(\"09/09/2020\").withRemark(\"\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"hjuntan"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withNusId(\"E5419832\").withName(\"Fiona Kunz\")","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").withTag(\"None\")","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(\"04/01/2020\").withRemark(\"Meet at MRT\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"hjuntan"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withNusId(\"E3548135\").withName(\"George Best\")","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").withTag(\"Student\")","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(\"01-01-2020\").withRemark(\"\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"hjuntan"},"content":"    public static final Person HOON \u003d new PersonBuilder().withNusId(\"E3518132\").withName(\"Hoon Meier\")","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"            .withPhone(\"8482424\").withEmail(\"stefan@example.com\").withTag(\"Student\")","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(\"08-08-2020\").withRemark(\"\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"hjuntan"},"content":"    public static final Person IDA \u003d new PersonBuilder().withNusId(\"E9842465\").withName(\"Ida Mueller\")","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"            .withPhone(\"8482131\").withEmail(\"hans@example.com\").withTag(\"None\")","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(\"05-01-2024\").withRemark(\"Project meeting\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"hjuntan"},"content":"    public static final Person AMY \u003d new PersonBuilder().withNusId(VALID_NUSID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"hjuntan"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"            .withTag(VALID_TAG_AMY).withGroups(VALID_GROUP_FRIEND)","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(VALID_SCHEDULE_AMY).withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"hjuntan"},"content":"    public static final Person BOB \u003d new PersonBuilder().withNusId(VALID_NUSID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"hjuntan"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"hjuntan"},"content":"            .withTag(VALID_TAG_BOB).withGroups(VALID_GROUP_HUSBAND, VALID_GROUP_FRIEND)","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"            .withSchedule(VALID_SCHEDULE_BOB).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Rikko1204":24,"hjuntan":23,"-":46}}]
