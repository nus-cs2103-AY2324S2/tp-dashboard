[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F13-2/tp/actions)","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"# FAPro","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"## What is it?","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"**FAPro** is a desktop application for financial advisors to manage the contacts of their clients. This is especially built for those with more than 50 clients to handle.","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"## What value it brings?","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"This application revolutionizes client engagement for financial advisors by facilitating strategic communication and personalized service.","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"* It ensures advisors efficiently prioritize outreach, focusing on clients requiring immediate attention, thereby optimizing client satisfaction and retention.","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"* The system offers insights into clientsâ€™ financial product portfolios, enabling advisors to tailor advice and recommendations effectively.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"* Additionally, it streamlines scheduling, allowing for seamless planning of future communications.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"This approach not only elevates the advisor-client relationship but also enhances the advisor\u0027s ability to serve with precision and foresight, setting a new standard in client management excellence.","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"## Where can I find out more?","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"Check out our detailed documentation of this project at **[FAPro Product Website](https://ay2324s2-cs2103t-f13-2.github.io/tp/)**.","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"## Acknowledgements","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"SimHanKiong":1,"ziyang27":18,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"    archiveFileName \u003d \u0027fapro.jar\u0027","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"run {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ziyang27":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"### Sim Han Kiong","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"\u003cimg src\u003d\"images/simhankiong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"[[github](https://github.com/SimHanKiong)]","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"[[portfolio](team/simhankiong.md)]","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"[[email](e0957654@u.nus.edu)]","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"### Tan Yun Chao","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"tanyunchao"},"content":"\u003cimg src\u003d\"images/tanyunchao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"[[github](http://github.com/tanyunchao)]","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"[[portfolio](team/tanyunchao.md)]","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"[[email](tanyunchao@u.nus.edu)]","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"* Role: Developer, Git expert","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"* Responsibilities: Integration","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"### Tiong Chuan Yao","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"\u003cimg src\u003d\"images/colex2000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"[[github](http://github.com/Colex2000)]","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"[[portfolio](team/tiongchuanyao.md)]","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"[[email](tiongchuanyao@u.nus.edu)]","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"* Responsibilities: Testing + Scheduling and tracking","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"### Tan Zi Yang","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"\u003cimg src\u003d\"images/ziyang27.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"[[github](http://github.com/ziyang27)]","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"[[portfolio](team/tanziyang.md)]","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"[[email](tan.ziyang@u.nus.edu)]","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"* Responsibilities: Documentation + Deliverables and deadlines","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"SimHanKiong":1,"ziyang27":22,"Colex2000":1,"tanyunchao":1,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"# FAPro Developer Guide","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"ziyang27"},"content":"Here are the other classes in `Model` (omitted from the class diagram above) that are used for filtering the list which is exposed to outsiders:","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"ziyang27"},"content":"\u003cpuml src\u003d\"diagrams/PredicateClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"ziyang27"},"content":"How the filtering works:","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"ziyang27"},"content":"* When filtering is needed, the `XYZCommand` class (`XYZ` is a placeholder for the specific command name e.g., `SelectCommand`) passes a `Predicate` object (e.g., `IsSamePersonCommand`) to the `Model` component.","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"ziyang27"},"content":"* The `Model` component then ensures that the `Predicate` is not null before setting this `Predicate` in the `ObservableList\u003cPerson\u003e`.","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"ziyang27"},"content":"### Select feature","lastModifiedDate":"2024-03-25"},{"lineNumber":266,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":267,"author":{"gitId":"ziyang27"},"content":"#### Implementation","lastModifiedDate":"2024-03-25"},{"lineNumber":268,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":269,"author":{"gitId":"ziyang27"},"content":"The feature enables us to select a particular client using an index and displays the profile. The mechanism is then facilitated by `PersonProfile` UI component. Additionally, the following classes were modified slightly to integrate the select feature:","lastModifiedDate":"2024-03-25"},{"lineNumber":270,"author":{"gitId":"ziyang27"},"content":"* `CommandResult` â€‰â€”â€‰ Added a new `updateProfile` field and `CommandResult#isupdateProfile()` method to let the `MainWindow` know if there is a need to update the details in the aforementioned `PersonProfile`.","lastModifiedDate":"2024-03-25"},{"lineNumber":271,"author":{"gitId":"ziyang27"},"content":"* `Model` and `ModelManager` â€‰â€”â€‰ Added a new `selectedPerson` field which is initially declared with `null`. Reason: When a `ModelManager` is just built, no select command is called yet, thus there should not be any `selectedPerson`. Additionally, `Model#updateSelectedPerson()` and `Model#getSelectedPerson()` were also added.","lastModifiedDate":"2024-03-25"},{"lineNumber":272,"author":{"gitId":"ziyang27"},"content":"* `MainWindow` â€‰â€”â€‰ Modified the `MainWindow#fillInnerParts()` and `MainWindow#executeCommand()` methods to show and update the `PersonProfile`.","lastModifiedDate":"2024-03-25"},{"lineNumber":273,"author":{"gitId":"ziyang27"},"content":"* `EditCommand` â€‰â€”â€‰ Modified the `EditCommand#execute()` method to return a `CommandResult` with a `true` for `updateProfile` if the person-to-edit is currently selected. Reason: This is to enable the `PersonProfile` to reflect the changes made to the selected person, if needed.","lastModifiedDate":"2024-03-25"},{"lineNumber":274,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":275,"author":{"gitId":"ziyang27"},"content":"Given below is an example usage scenario of the select command","lastModifiedDate":"2024-03-25"},{"lineNumber":276,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":277,"author":{"gitId":"ziyang27"},"content":"Step 1. The user executes `select 1` command to select the 1st person in the address book. The `select` command calls `Model#updateSelectedPerson()`, resulting in the selected person to be stored in the `Model`.","lastModifiedDate":"2024-03-25"},{"lineNumber":278,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":279,"author":{"gitId":"ziyang27"},"content":"Step 2. The `select` command returns a `CommandResult` object with the `feedbackToUser` as the successfully-selected-person message, `showHelp` as false, `isExit` as false, `updateProfile` as true.","lastModifiedDate":"2024-03-25"},{"lineNumber":280,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"ziyang27"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":283,"author":{"gitId":"ziyang27"},"content":"**Note:** If a command fails its execution, it will return a `CommandException` with the relevant message instead, just like the other commands.","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":285,"author":{"gitId":"ziyang27"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":286,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":287,"author":{"gitId":"ziyang27"},"content":"Step 3. The `CommandResult` is used in the `MainWindow#executeCommand()` method. Since, `CommandResult#isupdateProfile()` returns true for a `select` command, the `selectedPerson` is retrieved using `Logic#getSelectedPerson` and displayed in the `PersonProfile` using `PersonProfile#setPerson()`.","lastModifiedDate":"2024-03-25"},{"lineNumber":288,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":289,"author":{"gitId":"ziyang27"},"content":"The following sequence diagram shows how a select operation goes through the `MainWindow` and `PersonProfile` component:","lastModifiedDate":"2024-03-25"},{"lineNumber":290,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":291,"author":{"gitId":"ziyang27"},"content":"\u003cpuml src\u003d\"diagrams/SelectSequenceDiagram.puml\" alt\u003d\"SelectSequenceDiagram\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":292,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":293,"author":{"gitId":"ziyang27"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-25"},{"lineNumber":294,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"ziyang27"},"content":"**Aspect: How to select a person:**","lastModifiedDate":"2024-03-25"},{"lineNumber":296,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":297,"author":{"gitId":"ziyang27"},"content":"* **Alternative 1 (current choice):** Select using index.","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"ziyang27"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2024-03-25"},{"lineNumber":299,"author":{"gitId":"ziyang27"},"content":"    * Cons: Not very intuitive, have to look up the name, reference the index before selecting the person.","lastModifiedDate":"2024-03-25"},{"lineNumber":300,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":301,"author":{"gitId":"ziyang27"},"content":"* **Alternative 2:** Select using name.","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"ziyang27"},"content":"    * Pros: More intuitive and easy to select.","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"ziyang27"},"content":"    * Cons: May result in bugs due to the issue of duplicate names.","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"ziyang27"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"ziyang27"},"content":"* is a financial advisor","lastModifiedDate":"2024-02-29"},{"lineNumber":326,"author":{"gitId":"ziyang27"},"content":"* is currently studying at the same time","lastModifiedDate":"2024-02-29"},{"lineNumber":327,"author":{"gitId":"ziyang27"},"content":"* has a need to manage over 50 clients while juggling with school commitments","lastModifiedDate":"2024-02-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"SimHanKiong"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app and revolutionizes client engagement","lastModifiedDate":"2024-03-04"},{"lineNumber":334,"author":{"gitId":"SimHanKiong"},"content":"for financial advisors by facilitating strategic communication and personalized service.","lastModifiedDate":"2024-03-04"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                     | I want to â€¦â€‹                                                      | So that I canâ€¦â€‹                                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"SimHanKiong"},"content":"|---------|---------------------------------------------|-------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"| `* * *` | new user                                    | see usage instructions                                            | refer to instructions when I forget how to use the App                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"| `* * *` | user                                        | add a new person                                                  |                                                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"| `* * *` | user                                        | delete a person                                                   | remove entries that I no longer need                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"SimHanKiong"},"content":"| `* * *` | user                                        | find a person by name                                             | locate details of people without having to go through the entire list                                       |","lastModifiedDate":"2024-03-03"},{"lineNumber":347,"author":{"gitId":"ziyang27"},"content":"| `* * *` | financial advisor with more than 50 clients | easily identity those that I haven\u0027t reach out to for a long time | contact them and check on their progress as well as well-being                                              |","lastModifiedDate":"2024-02-29"},{"lineNumber":348,"author":{"gitId":"ziyang27"},"content":"| `* * *` | financial advisor with many upcoming meeting | easily view my schedule                                           | plan and prepare the respective information for the respective meetings, serving the client more effectively |","lastModifiedDate":"2024-02-29"},{"lineNumber":349,"author":{"gitId":"SimHanKiong"},"content":"| `* * *` | financial advisor who provides multiple plans for my clients | tag clients based on their existing plans                         | keep track of which clients hold which policies                                                             |","lastModifiedDate":"2024-03-04"},{"lineNumber":350,"author":{"gitId":"SimHanKiong"},"content":"| `* * *` | financial advisor who provides multiple plans for my clients | find clients based on their existing plans                        | provide personalised service to each type of policy holder                                                  |","lastModifiedDate":"2024-03-04"},{"lineNumber":351,"author":{"gitId":"ziyang27"},"content":"| `* * *` | financial advisor with more than 50 clients | view a client\u0027s profile with a few simple commands                | have the relevant information at hand when planning and during the consultations                            |","lastModifiedDate":"2024-02-29"},{"lineNumber":352,"author":{"gitId":"ziyang27"},"content":"| `* * `  | financial advisor with more than 50 clients | set reminders for all the clients\u0027 birthday                       | build personal connection through timely greetings                                                          |","lastModifiedDate":"2024-02-29"},{"lineNumber":353,"author":{"gitId":"SimHanKiong"},"content":"| `*`     | user with many people in the address book  | sort people by name                                               | locate a person easily                                                                                      |","lastModifiedDate":"2024-03-03"},{"lineNumber":354,"author":{"gitId":"ziyang27"},"content":"| `*`     | financial advisor who wants to help my clients reach their goals  | keep track of their goals and financial progress                  | provide a more curated and personalized service                                                             |","lastModifiedDate":"2024-02-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"ziyang27"},"content":"(For all use cases below, the **System** is `FAPro` and the **Actor** is the `financial advisor`, unless specified otherwise)","lastModifiedDate":"2024-03-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"SimHanKiong"},"content":"1.  User requests to list people","lastModifiedDate":"2024-03-03"},{"lineNumber":367,"author":{"gitId":"SimHanKiong"},"content":"2.  AddressBook shows a list of people","lastModifiedDate":"2024-03-03"},{"lineNumber":368,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-29"},{"lineNumber":375,"author":{"gitId":"ziyang27"},"content":"  Use case ends.","lastModifiedDate":"2024-02-29"},{"lineNumber":376,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":377,"author":{"gitId":"ziyang27"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-02-29"},{"lineNumber":378,"author":{"gitId":"ziyang27"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2024-02-29"},{"lineNumber":379,"author":{"gitId":"ziyang27"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-29"},{"lineNumber":380,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":381,"author":{"gitId":"ziyang27"},"content":"**Use case: Adding a client**","lastModifiedDate":"2024-03-07"},{"lineNumber":382,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":383,"author":{"gitId":"ziyang27"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":384,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":385,"author":{"gitId":"tanyunchao"},"content":"1.  User add a new client by providing the necessary information including the person\u0027s name, phone number, email, address, optional tags, optional upcoming and optional upcoming.","lastModifiedDate":"2024-03-26"},{"lineNumber":386,"author":{"gitId":"ziyang27"},"content":"2.  FAPro validates the provided information and adds the person to the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":387,"author":{"gitId":"ziyang27"},"content":"3.  FAPro shows the client information in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":388,"author":{"gitId":"ziyang27"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":389,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":390,"author":{"gitId":"ziyang27"},"content":"**Use case: Edit a client\u0027s info**","lastModifiedDate":"2024-03-07"},{"lineNumber":391,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":392,"author":{"gitId":"ziyang27"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":393,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":394,"author":{"gitId":"ziyang27"},"content":"1.  User edits an existing client\u0027s information in FAPro by providing the updated information.","lastModifiedDate":"2024-03-07"},{"lineNumber":395,"author":{"gitId":"ziyang27"},"content":"2.  FAPro validates the provided information and edits the information.","lastModifiedDate":"2024-03-07"},{"lineNumber":396,"author":{"gitId":"ziyang27"},"content":"3.  FAPro shows the updated client information in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":397,"author":{"gitId":"ziyang27"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":398,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":399,"author":{"gitId":"ziyang27"},"content":"**Use case: Find a client by name**","lastModifiedDate":"2024-03-07"},{"lineNumber":400,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":401,"author":{"gitId":"ziyang27"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":403,"author":{"gitId":"ziyang27"},"content":"1.  User provides one or more keywords for the seach.","lastModifiedDate":"2024-03-07"},{"lineNumber":404,"author":{"gitId":"ziyang27"},"content":"2.  FAPro performs a case-insensitive search for people whose names contain any of the provided keywords.","lastModifiedDate":"2024-03-07"},{"lineNumber":405,"author":{"gitId":"ziyang27"},"content":"3.  FAPro returns a list of people matching at least one keyword.","lastModifiedDate":"2024-03-07"},{"lineNumber":406,"author":{"gitId":"ziyang27"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":407,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":408,"author":{"gitId":"ziyang27"},"content":"**Use case: Viewing a client\u0027s profile**","lastModifiedDate":"2024-02-29"},{"lineNumber":409,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":410,"author":{"gitId":"ziyang27"},"content":"**MSS**","lastModifiedDate":"2024-02-29"},{"lineNumber":411,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":412,"author":{"gitId":"SimHanKiong"},"content":"1.  User requests to list people","lastModifiedDate":"2024-03-03"},{"lineNumber":413,"author":{"gitId":"SimHanKiong"},"content":"2.  FAPro shows a list of people","lastModifiedDate":"2024-03-03"},{"lineNumber":414,"author":{"gitId":"ziyang27"},"content":"3.  User requests to view the profile of the client in the list","lastModifiedDate":"2024-02-29"},{"lineNumber":415,"author":{"gitId":"ziyang27"},"content":"4.  FAPro shows the detailed profile of the client","lastModifiedDate":"2024-02-29"},{"lineNumber":416,"author":{"gitId":"ziyang27"},"content":"    Use case ends.","lastModifiedDate":"2024-02-29"},{"lineNumber":417,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":418,"author":{"gitId":"ziyang27"},"content":"**Extensions**","lastModifiedDate":"2024-02-29"},{"lineNumber":419,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"SimHanKiong"},"content":"**Use case: Tagging a client**","lastModifiedDate":"2024-03-04"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":429,"author":{"gitId":"SimHanKiong"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":430,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":431,"author":{"gitId":"SimHanKiong"},"content":"1.  User requests to list people","lastModifiedDate":"2024-03-04"},{"lineNumber":432,"author":{"gitId":"SimHanKiong"},"content":"2.  AddressBook shows a list of people","lastModifiedDate":"2024-03-04"},{"lineNumber":433,"author":{"gitId":"SimHanKiong"},"content":"3.  User requests to tag a specific person in the list with a specified tag","lastModifiedDate":"2024-03-04"},{"lineNumber":434,"author":{"gitId":"SimHanKiong"},"content":"4.  AddressBook tags the person","lastModifiedDate":"2024-03-04"},{"lineNumber":435,"author":{"gitId":"SimHanKiong"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":436,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":437,"author":{"gitId":"SimHanKiong"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":438,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":439,"author":{"gitId":"SimHanKiong"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-04"},{"lineNumber":440,"author":{"gitId":"SimHanKiong"},"content":"  Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":441,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":442,"author":{"gitId":"SimHanKiong"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-04"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":444,"author":{"gitId":"SimHanKiong"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":445,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":446,"author":{"gitId":"SimHanKiong"},"content":"**Use case: Removing tags from a client**","lastModifiedDate":"2024-03-04"},{"lineNumber":447,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":448,"author":{"gitId":"SimHanKiong"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":450,"author":{"gitId":"SimHanKiong"},"content":"1.  User requests to list people","lastModifiedDate":"2024-03-04"},{"lineNumber":451,"author":{"gitId":"SimHanKiong"},"content":"2.  AddressBook shows a list of people","lastModifiedDate":"2024-03-04"},{"lineNumber":452,"author":{"gitId":"SimHanKiong"},"content":"3.  User requests to remove tags from a specific person in the list","lastModifiedDate":"2024-03-04"},{"lineNumber":453,"author":{"gitId":"SimHanKiong"},"content":"4.  AddressBook removes the tags of the person","lastModifiedDate":"2024-03-04"},{"lineNumber":454,"author":{"gitId":"SimHanKiong"},"content":"    Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":455,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":456,"author":{"gitId":"SimHanKiong"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":457,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":458,"author":{"gitId":"SimHanKiong"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-04"},{"lineNumber":459,"author":{"gitId":"SimHanKiong"},"content":"  Use case ends.","lastModifiedDate":"2024-03-04"},{"lineNumber":460,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":461,"author":{"gitId":"SimHanKiong"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-04"},{"lineNumber":462,"author":{"gitId":"SimHanKiong"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-04"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":465,"author":{"gitId":"SimHanKiong"},"content":"**Use case: Finding all clients that contain any of the tags**","lastModifiedDate":"2024-03-04"},{"lineNumber":466,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":467,"author":{"gitId":"SimHanKiong"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":468,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":469,"author":{"gitId":"SimHanKiong"},"content":"1.  User requests to find people containing any of the specified tags","lastModifiedDate":"2024-03-04"},{"lineNumber":470,"author":{"gitId":"SimHanKiong"},"content":"2.  AddressBook shows a list of people","lastModifiedDate":"2024-03-04"},{"lineNumber":471,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":472,"author":{"gitId":"SimHanKiong"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":473,"author":{"gitId":"SimHanKiong"},"content":"* 1a. One of the tags do not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":474,"author":{"gitId":"SimHanKiong"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":475,"author":{"gitId":"SimHanKiong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-04"},{"lineNumber":476,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":477,"author":{"gitId":"SimHanKiong"},"content":"**Use case: Finding all clients that contain all the tags**","lastModifiedDate":"2024-03-04"},{"lineNumber":478,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":479,"author":{"gitId":"SimHanKiong"},"content":"**MSS**","lastModifiedDate":"2024-03-04"},{"lineNumber":480,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":481,"author":{"gitId":"SimHanKiong"},"content":"1.  User requests to find people containing all the specified tags","lastModifiedDate":"2024-03-04"},{"lineNumber":482,"author":{"gitId":"SimHanKiong"},"content":"2.  AddressBook shows a list of people","lastModifiedDate":"2024-03-04"},{"lineNumber":483,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":484,"author":{"gitId":"SimHanKiong"},"content":"**Extensions**","lastModifiedDate":"2024-03-04"},{"lineNumber":485,"author":{"gitId":"SimHanKiong"},"content":"* 1a. One of the tags do not exist.","lastModifiedDate":"2024-03-04"},{"lineNumber":486,"author":{"gitId":"SimHanKiong"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2024-03-04"},{"lineNumber":487,"author":{"gitId":"SimHanKiong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-04"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"Colex2000"},"content":"**Use case: Clearing all contacts in FAPro**","lastModifiedDate":"2024-03-06"},{"lineNumber":490,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":491,"author":{"gitId":"Colex2000"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":492,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":493,"author":{"gitId":"Colex2000"},"content":"1.  User requests to clear all contacts.","lastModifiedDate":"2024-03-06"},{"lineNumber":494,"author":{"gitId":"Colex2000"},"content":"2.  The system clears all contacts.","lastModifiedDate":"2024-03-06"},{"lineNumber":495,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":496,"author":{"gitId":"Colex2000"},"content":"**Use case: Exiting FAPro**","lastModifiedDate":"2024-03-06"},{"lineNumber":497,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":498,"author":{"gitId":"Colex2000"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":499,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":500,"author":{"gitId":"Colex2000"},"content":"1.  User enters the exit command.","lastModifiedDate":"2024-03-06"},{"lineNumber":501,"author":{"gitId":"Colex2000"},"content":"2.  FAPro closes the window and its system.","lastModifiedDate":"2024-03-06"},{"lineNumber":502,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":503,"author":{"gitId":"Colex2000"},"content":"**Use case: Finding all contacts who were last contacted**","lastModifiedDate":"2024-03-25"},{"lineNumber":504,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":505,"author":{"gitId":"Colex2000"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":506,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":507,"author":{"gitId":"Colex2000"},"content":"1.  User requests to see all contacts who were last contacted.","lastModifiedDate":"2024-03-25"},{"lineNumber":508,"author":{"gitId":"Colex2000"},"content":"2.  AddressBook shows a list of contacts who were last contacted sorted by least to most recent.","lastModifiedDate":"2024-03-25"},{"lineNumber":509,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":510,"author":{"gitId":"tanyunchao"},"content":"**Use case: Finding all upcoming contacts with appointments**","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":512,"author":{"gitId":"tanyunchao"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":513,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":514,"author":{"gitId":"ziyang27"},"content":"1.  User requests to find people containing an upcoming appointment.","lastModifiedDate":"2024-03-07"},{"lineNumber":515,"author":{"gitId":"tanyunchao"},"content":"2.  AddressBook shows the list of people, ordering them from the nearest to the farthest upcoming appointment based on date.","lastModifiedDate":"2024-03-26"},{"lineNumber":516,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":517,"author":{"gitId":"tanyunchao"},"content":"**Extensions**","lastModifiedDate":"2024-03-28"},{"lineNumber":518,"author":{"gitId":"tanyunchao"},"content":"* 1a. No clients with any upcoming info","lastModifiedDate":"2024-03-28"},{"lineNumber":519,"author":{"gitId":"tanyunchao"},"content":"  * 1ai. The system would show a blank list.","lastModifiedDate":"2024-03-28"},{"lineNumber":520,"author":{"gitId":"tanyunchao"},"content":"    Use case resumes at step 1. ","lastModifiedDate":"2024-03-28"},{"lineNumber":521,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"SimHanKiong"},"content":"2.  Should be able to hold up to 1000 people without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-03"},{"lineNumber":527,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"ziyang27"},"content":"4.  The data in FAPro should be stored locally and should be in a human editable text file.","lastModifiedDate":"2024-03-07"},{"lineNumber":529,"author":{"gitId":"ziyang27"},"content":"5.  Should not use a _DBMS_ to store data.","lastModifiedDate":"2024-03-07"},{"lineNumber":530,"author":{"gitId":"ziyang27"},"content":"6.  Should work without requiring an installer.","lastModifiedDate":"2024-03-07"},{"lineNumber":531,"author":{"gitId":"ziyang27"},"content":"7.  Should not depend on any _remote server_.","lastModifiedDate":"2024-03-07"},{"lineNumber":532,"author":{"gitId":"ziyang27"},"content":"8.  _GUI_ should work well for standard screen resolutions 1920x080 and higher, and, for screen scales 100% and 125%.","lastModifiedDate":"2024-03-07"},{"lineNumber":533,"author":{"gitId":"ziyang27"},"content":"9.  The size of the documents should not exceed 15MB/file.","lastModifiedDate":"2024-03-07"},{"lineNumber":534,"author":{"gitId":"ziyang27"},"content":"10. The size of the final FAPro product should not exceed 100MB.","lastModifiedDate":"2024-03-07"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"ziyang27"},"content":"* **DBMS**: Database Management System, a software suite that facilitates the creation, management, and manipulation of databases.","lastModifiedDate":"2024-03-07"},{"lineNumber":543,"author":{"gitId":"ziyang27"},"content":"* **Remote server**: A computer system or software application that provides services or resources to other computers or clients over a network, typically the internet.","lastModifiedDate":"2024-03-07"},{"lineNumber":544,"author":{"gitId":"ziyang27"},"content":"* **GUI**: Graphic User Interface, a visual interface that allows users to interact with electronic devices or software using graphical icons, menus, and other graphical elements, rather than text-based commands","lastModifiedDate":"2024-03-07"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":554,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":555,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"SimHanKiong"},"content":"1. Deleting a person while all people are being shown","lastModifiedDate":"2024-03-03"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"SimHanKiong"},"content":"   1. Prerequisites: List all people using the `list` command. Multiple people in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SimHanKiong":72,"ziyang27":109,"Colex2000":21,"tanyunchao":12,"-":385}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"# FAPro User Guide","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"FAPro is a **desktop app for managing clients\u0027 contacts, optimized for use via a Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"If you","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"* are a financial advisor,","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"* can type fast,","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"* have more than 50 clients,","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"FAPro can get your client management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"1. Download the latest `fapro.jar` from [here](https://github.com/AY2324S2-CS2103T-F13-2/tp/releases).","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FAPro.","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar fapro.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to FAPro.","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"* `DATETIME` format must be in `DD-MM-YYYY HHmm` format.","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"### Adding a client : `add`","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"Adds a client to FAPro.","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Colex2000"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]â€¦â€‹ [lc/DATETIME]`","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"**Tip:** A client can have any number of tags (including 0)","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Colex2000"},"content":"**Note:** t/ and lc/ : tag and last contacted field is optional.","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"Colex2000"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 lc/16-03-2024 0800`","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"### Listing all clients : `list`","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"Shows a list of all clients in FAPro.","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"### Editing a client : `edit`","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"Edits an existing client in FAPro.","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Colex2000"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]... [lc/DATETIME]`","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"SimHanKiong"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"SimHanKiong"},"content":"* You can remove all the clientâ€™s tags by typing `t/` without","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Colex2000"},"content":"* Last contacted `lc/` should not have future `DATETIME` and must be valid. ","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"SimHanKiong"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"SimHanKiong"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"SimHanKiong"},"content":"### Locating clients by name : `find`","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"SimHanKiong"},"content":"Finds clients whose names contain any of the given keywords.","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"SimHanKiong"},"content":"* Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"SimHanKiong"},"content":"### Locating clients by tag : `findtagsor`","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":148,"author":{"gitId":"SimHanKiong"},"content":"Finds clients who contain one of the specified tags.","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":150,"author":{"gitId":"SimHanKiong"},"content":"Format: `findtagsor TAG [MORE_TAGS]`","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":152,"author":{"gitId":"SimHanKiong"},"content":"* The search is case-insensitive. e.g. `CaR` will match `car`.","lastModifiedDate":"2024-03-04"},{"lineNumber":153,"author":{"gitId":"SimHanKiong"},"content":"* As long as the client has 1 tag that matches, the client will be listed.","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"SimHanKiong"},"content":"* Only full words will be matched e.g. `cars` will not match `car`.","lastModifiedDate":"2024-03-04"},{"lineNumber":155,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":156,"author":{"gitId":"SimHanKiong"},"content":"Examples:","lastModifiedDate":"2024-03-04"},{"lineNumber":157,"author":{"gitId":"SimHanKiong"},"content":"* `findtagsor car` returns all clients with a `car` tag.","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"SimHanKiong"},"content":"* `findtagsor HOUSING` returns all clients with a `housing` tag.","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":160,"author":{"gitId":"SimHanKiong"},"content":"### Locating clients by tag : `findtagsand`","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"SimHanKiong"},"content":"Finds clients who contain all the specified tags.","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"SimHanKiong"},"content":"Format: `findtagsand TAG [MORE_TAGS]`","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"SimHanKiong"},"content":"* The search is case-insensitive. e.g. `CaR` will match `car`.","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"SimHanKiong"},"content":"* Client must contain all tags to be listed.","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"SimHanKiong"},"content":"* Only full words will be matched e.g. `cars` will not match `car`.","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"SimHanKiong"},"content":"Examples:","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"SimHanKiong"},"content":"* `findtagsand car covid` returns all clients with `car` and `covid` tags.","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"SimHanKiong"},"content":"* `findtagsand HOUSING` returns all clients with a `housing` tag.","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"SimHanKiong"},"content":"### Add tags to a client : `addtags`","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"SimHanKiong"},"content":"Add tags to specified client.","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"SimHanKiong"},"content":"Format: `addtags INDEX t/TAG [t/MORE_TAGS]`","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"SimHanKiong"},"content":"* Add tags to the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"SimHanKiong"},"content":"* At least one tag must be provided.","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"SimHanKiong"},"content":"* Duplicate tags will be ignored.","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"SimHanKiong"},"content":"* Tags are case-insensitive. e.g. `cAr` and `car` are the same tags.","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"SimHanKiong"},"content":"Examples:","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"SimHanKiong"},"content":"* `addtags 1 t/car t/covid` adds `car` and `covid` tags to the 1st client. ","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"SimHanKiong"},"content":"* `addtags 2 t/HOUSING` adds `housing` tag to the 2nd client.","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"SimHanKiong"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"SimHanKiong"},"content":"Deletes the specified client from FAPro.","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"SimHanKiong"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"SimHanKiong"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"SimHanKiong"},"content":"* `list` followed by `delete 2` deletes the 2nd client in FAPro.","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"SimHanKiong"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"SimHanKiong"},"content":"### Viewing the detailed profile a client : `select`","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":205,"author":{"gitId":"SimHanKiong"},"content":"View a more detailed profile of the specified client from FAPro.","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":207,"author":{"gitId":"ziyang27"},"content":"Format: `select INDEX`","lastModifiedDate":"2024-02-29"},{"lineNumber":208,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":209,"author":{"gitId":"ziyang27"},"content":"* Displays the profile of the client at the specified `INDEX`.","lastModifiedDate":"2024-02-29"},{"lineNumber":210,"author":{"gitId":"SimHanKiong"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"ziyang27"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2024-02-29"},{"lineNumber":212,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":213,"author":{"gitId":"ziyang27"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":214,"author":{"gitId":"SimHanKiong"},"content":"* `list` followed by `select 2` shows the detailed profile of the 2nd client in FAPro.","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"ziyang27"},"content":"* `find bernice` followed by `select 1` shows the detailed profile of the 1st client in the results of the `find` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"ziyang27"},"content":"  ![result for \u0027select 2\u0027](images/select1Result.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":219,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":220,"author":{"gitId":"tanyunchao"},"content":"### View contacts of all upcoming appointments : `upcoming`","lastModifiedDate":"2024-03-07"},{"lineNumber":221,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":222,"author":{"gitId":"ziyang27"},"content":"View all the contacts of all upcoming appointments ordered by date (earliest to latest).","lastModifiedDate":"2024-03-07"},{"lineNumber":223,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":224,"author":{"gitId":"tanyunchao"},"content":"Format: `upcoming`","lastModifiedDate":"2024-03-07"},{"lineNumber":225,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":226,"author":{"gitId":"Colex2000"},"content":"* `upcoming` displays all upcoming appointments.","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":228,"author":{"gitId":"tanyunchao"},"content":"Examples:","lastModifiedDate":"2024-03-07"},{"lineNumber":229,"author":{"gitId":"Colex2000"},"content":"* `upcoming` would show the 3 contacts if there are 3 contacts with upcoming appointments.","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":231,"author":{"gitId":"Colex2000"},"content":"### View contacts of all last contacted clients : `lastcontact`","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":233,"author":{"gitId":"Colex2000"},"content":"View all the contacts that has last contacted date and time ordered by date (oldest to recent).","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":235,"author":{"gitId":"Colex2000"},"content":"Format: `lastcontact`","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":237,"author":{"gitId":"Colex2000"},"content":"* Displays all clients with last contacted field and sorted in oldest date first.","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":239,"author":{"gitId":"Colex2000"},"content":"Example:","lastModifiedDate":"2024-03-06"},{"lineNumber":240,"author":{"gitId":"Colex2000"},"content":"* `lastcontact` would filter the contacts and show all contacts that has last contacted date time.","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"SimHanKiong"},"content":"Clears all entries from FAPro.","lastModifiedDate":"2024-03-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"ziyang27"},"content":"FAPro data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"ziyang27"},"content":"FAPro data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-02-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":265,"author":{"gitId":"ziyang27"},"content":"If your changes to the data file makes its format invalid, FAPro will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-29"},{"lineNumber":266,"author":{"gitId":"SimHanKiong"},"content":"Furthermore, certain edits can cause FAPro to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"ziyang27"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FAPro home folder.","lastModifiedDate":"2024-02-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"ziyang27"},"content":"-----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-07"},{"lineNumber":288,"author":{"gitId":"SimHanKiong"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]â€¦â€‹` \u003cbr\u003e e.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2024-03-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"SimHanKiong"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g. `delete 3`","lastModifiedDate":"2024-03-04"},{"lineNumber":291,"author":{"gitId":"SimHanKiong"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹`\u003cbr\u003e e.g.`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-03-04"},{"lineNumber":292,"author":{"gitId":"SimHanKiong"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find James Jake`","lastModifiedDate":"2024-03-04"},{"lineNumber":293,"author":{"gitId":"SimHanKiong"},"content":"**TagFind**| `tagfind TAG` \u003cbr\u003e e.g. `tagfind car`","lastModifiedDate":"2024-03-04"},{"lineNumber":294,"author":{"gitId":"Colex2000"},"content":"**Lastcontact**| `lastcontact`","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"tanyunchao"},"content":"**Upcoming**| `upcoming`","lastModifiedDate":"2024-03-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"SimHanKiong"},"content":"**Select** | `select INDEX`\u003cbr\u003e e.g. `select 1`","lastModifiedDate":"2024-03-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SimHanKiong":76,"ziyang27":30,"Colex2000":21,"tanyunchao":10,"-":161}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eFAPro\u003c/a\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ziyang27":1,"-":66}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"Person *--\u003e LastContact","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Colex2000":1,"-":21}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"tanyunchao"},"content":"Class Upcoming","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"Class LastContact","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"tanyunchao"},"content":"Person *--\u003e Upcoming","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"Person *--\u003e LastContact","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"tanyunchao"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"tanyunchao"},"content":"Tag -[hidden]right-\u003e Upcoming","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"Upcoming -[hidden]right-\u003e LastContact","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"SimHanKiong":1,"Colex2000":2,"tanyunchao":4,"-":55}},{"path":"docs/diagrams/PredicateClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"skinparam arrowColor MODEL_COLOR_T4","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"package \"Predicate classes\" {","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPredicate\" as Predicate","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"Class \"IsSamePersonPredicate\"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"Class \"NameContainsKeywordsPredicate\"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"Class \"TagsOrFoundPredicate\"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"Class \"TagsAndFoundPredicate\"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"Class \"HasLastContactedPredicate\"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"Class \"SelectCommand\"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"Class \"FindCommand\"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"Class \"FindTagsOrCommand\"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"Class \"FindTagsAndCommand\"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"Class \"LastContactCommand\"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"SelectCommand ..\u003e IsSamePersonPredicate : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"FindCommand --\u003e NameContainsKeywordsPredicate","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"IsSamePersonPredicate .up.|\u003e Predicate","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"NameContainsKeywordsPredicate .up.|\u003e Predicate","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"FindTagsOrCommand --\u003e TagsOrFoundPredicate","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"FindTagsAndCommand --\u003e TagsAndFoundPredicate","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"LastContactCommand --\u003e HasLastContactedPredicate","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"TagsOrFoundPredicate ..|\u003e Predicate","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"TagsAndFoundPredicate ..|\u003e Predicate","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"HasLastContactedPredicate ..|\u003e Predicate","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"SimHanKiong":8,"ziyang27":20,"Colex2000":4}},{"path":"docs/diagrams/SelectSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"!include style.puml","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"participant \":PersonProfile\" as PersonProfile UI_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"box LOGIC LOGIC_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"participant \"u:LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"[-\u003e MainWindow : executeCommand(\"select 1\")","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"activate MainWindow","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"MainWindow -\u003e LogicManager : execute(\"select 1\")","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"activate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"LogicManager --\u003e MainWindow : new CommandResult()","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"MainWindow -\u003e LogicManager : getSelectedPerson()","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"activate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"LogicManager -\u003e Model : getSelectedPerson()","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"activate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"Model --\u003e LogicManager : selectedPerson","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"deactivate","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"LogicManager --\u003e MainWindow : selectedPerson","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"deactivate","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"MainWindow -\u003e PersonProfile : setPerson(selectedPerson)","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"activate PersonProfile","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"PersonProfile --\u003e MainWindow","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"deactivate PersonProfile","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"[\u003c-- MainWindow : commandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"ziyang27":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"Class PersonProfile","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"MainWindow *-down-\u003e \"1\" PersonProfile","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"PersonProfile --|\u003e UiPart","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"PersonProfile ..\u003e Model","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ziyang27":4,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"# FAPro","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F13-2/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S2-CS2103T-F13-2)","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ziyang27":3,"-":18}},{"path":"docs/team/simhankiong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"  layout: default.md","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"* **Project management**:","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"  * User Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"* **Community**:","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"* **Tools**:","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"ziyang27":46}},{"path":"docs/team/tanyunchao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"  layout: default.md","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"* **Project management**:","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"  * User Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"* **Community**:","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"* **Tools**:","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"ziyang27":46}},{"path":"docs/team/tanziyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"  layout: default.md","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"* **Project management**:","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"  * User Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"* **Community**:","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"* **Tools**:","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"ziyang27":46}},{"path":"docs/team/tiongchuanyao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"  layout: default.md","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"* **Project management**:","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"  * User Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"* **Community**:","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"* **Tools**:","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"ziyang27":46}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"    /** Returns the selected person to view the profile */","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    Person getSelectedPerson();","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"    ObservableList\u003cPerson\u003e getSortedAndFilteredPersonList();","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ziyang27":3,"Colex2000":1,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"    public Person getSelectedPerson() {","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"        return model.getSelectedPerson();","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"Colex2000"},"content":"    public ObservableList\u003cPerson\u003e getSortedAndFilteredPersonList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"Colex2000"},"content":"        return model.getSortedPersonList();","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ziyang27":5,"Colex2000":5,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"tanyunchao"},"content":"        builder.append(\"; Upcoming: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"tanyunchao"},"content":"                .append(person.getUpcoming());","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"        builder.append(\"; Last contacted: \")","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"                .append(person.getLastcontact().toString())","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"tanyunchao"},"content":"                .append(\";\");","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Colex2000":2,"tanyunchao":3,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTCONTACT;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"tanyunchao"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"tanyunchao"},"content":"            + \"[\" + PREFIX_UPCOMING + \"UPCOMING] \"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"            + \"[\" + PREFIX_LASTCONTACT + \"LASTCONTACT]\\n\"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"tanyunchao"},"content":"            + PREFIX_TAG + \"owesMoney\"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"tanyunchao"},"content":"            + PREFIX_UPCOMING + \"01-01-2021 12:00\"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"            + PREFIX_LASTCONTACT + \"13-03-2024 0641\";","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"        model.sortFilteredPersonList(null); // Resetting the sort order","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Colex2000":4,"tanyunchao":5,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":" * Adds tags to an existing person in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"public class AddTagsCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    public static final String COMMAND_WORD \u003d \"addtags\";","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"            + \": Adds tags to the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 t/car t/health\";","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added tags to Person: %1$s\";","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"    public static final String MESSAGE_NOT_ADDED \u003d \"At least one tag must be provided\";","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    private final Index index;","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"     * @param tags to be added to the person","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"    public AddTagsCommand(Index index, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedPersonList();","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(personToEdit.getTags());","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"        updatedTags.addAll(tags);","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"                personToEdit.getAddress(), updatedTags, personToEdit.getUpcoming(), personToEdit.getLastcontact());","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"        model.setToInitialList();","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"        if (!(other instanceof AddTagsCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand otherCommand \u003d (AddTagsCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"        return index.equals(otherCommand.index)","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"                \u0026\u0026 tags.equals(otherCommand.tags);","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"SimHanKiong":91}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    /** Profile panel should be updated. */","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"    private final boolean updateProfile;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        this.updateProfile \u003d false;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean updateProfile) {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"        this.updateProfile \u003d updateProfile;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"    public boolean isUpdateProfile() {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"        return updateProfile;","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"ziyang27"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"ziyang27"},"content":"                \u0026\u0026 updateProfile \u003d\u003d otherCommandResult.updateProfile;","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"ziyang27"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, updateProfile);","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"ziyang27"},"content":"                .add(\"updateProfile\", updateProfile)","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ziyang27":22,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTCONTACT;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"tanyunchao"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"            + \"[\" + PREFIX_UPCOMING + \"UPCOMING] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"            + \"[\" + PREFIX_LASTCONTACT + \"LASTCONTACT]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedPersonList();","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"        boolean updateProfile \u003d false;","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"        Person selectedPerson \u003d model.getSelectedPerson();","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"        if (personToEdit.isSamePerson(model.getSelectedPerson())) {","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"ziyang27"},"content":"            model.updateSelectedPerson(editedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"            updateProfile \u003d true;","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"Colex2000"},"content":"        model.setToInitialList();","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"ziyang27"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)),","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"ziyang27"},"content":"                false, false, updateProfile);","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"tanyunchao"},"content":"        Upcoming updatedUpcoming \u003d editPersonDescriptor.getUpcoming().orElse(personToEdit.getUpcoming());","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"Colex2000"},"content":"        LastContact updatedLastContact \u003d editPersonDescriptor.getLastcontact().orElse(personToEdit.getLastcontact());","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"tanyunchao"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedUpcoming,","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"tanyunchao"},"content":"                updatedLastContact);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"tanyunchao"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"tanyunchao"},"content":"     * replace the corresponding field value of the person.","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"tanyunchao"},"content":"        private Upcoming upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"Colex2000"},"content":"        private LastContact lastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"tanyunchao"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"tanyunchao"},"content":"            setUpcoming(toCopy.upcoming);","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"Colex2000"},"content":"            setLastContact(toCopy.lastContact);","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"Colex2000"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, upcoming, lastContact);","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"tanyunchao"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2024-03-17"},{"lineNumber":226,"author":{"gitId":"tanyunchao"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"tanyunchao"},"content":"        public void setUpcoming(Upcoming upcoming) {","lastModifiedDate":"2024-03-15"},{"lineNumber":235,"author":{"gitId":"tanyunchao"},"content":"            this.upcoming \u003d upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":236,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"tanyunchao"},"content":"        public Optional\u003cUpcoming\u003e getUpcoming() {","lastModifiedDate":"2024-03-15"},{"lineNumber":239,"author":{"gitId":"tanyunchao"},"content":"            return Optional.ofNullable(upcoming);","lastModifiedDate":"2024-03-15"},{"lineNumber":240,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":241,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":242,"author":{"gitId":"Colex2000"},"content":"        public void setLastContact(LastContact lastContact) {","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"Colex2000"},"content":"            this.lastContact \u003d lastContact;","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":245,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":246,"author":{"gitId":"Colex2000"},"content":"        public Optional\u003cLastContact\u003e getLastcontact() {","lastModifiedDate":"2024-03-18"},{"lineNumber":247,"author":{"gitId":"Colex2000"},"content":"            return Optional.ofNullable(lastContact);","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":265,"author":{"gitId":"tanyunchao"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":266,"author":{"gitId":"Colex2000"},"content":"                    \u0026\u0026 Objects.equals(upcoming, otherEditPersonDescriptor.upcoming)","lastModifiedDate":"2024-03-18"},{"lineNumber":267,"author":{"gitId":"Colex2000"},"content":"                    \u0026\u0026 Objects.equals(lastContact, otherEditPersonDescriptor.lastContact);","lastModifiedDate":"2024-03-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":278,"author":{"gitId":"tanyunchao"},"content":"                    .add(\"upcoming\", upcoming)","lastModifiedDate":"2024-03-15"},{"lineNumber":279,"author":{"gitId":"Colex2000"},"content":"                    .add(\"lastcontact\", lastContact)","lastModifiedDate":"2024-03-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":282,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Colex2000":21,"ziyang27":9,"tanyunchao":24,"-":230}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"SimHanKiong":1,"-":58}},{"path":"src/main/java/seedu/address/logic/commands/FindTagsAndCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsAndFoundPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":" * Finds and lists all persons in address book who contains all the tags in the argument.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" * Tag matching is case sensitive.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"public class FindTagsAndCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    public static final String COMMAND_WORD \u003d \"findtagsand\";","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons who contains all of the tags \"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"            + \"Parameters: TAG [MORE_TAGS]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"            + \"Example: \" + COMMAND_WORD + \" car health death\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    private final TagsAndFoundPredicate predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    public FindTagsAndCommand(TagsAndFoundPredicate predicate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        if (!(other instanceof FindTagsAndCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand otherFindTagsAndCommand \u003d (FindTagsAndCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        return predicate.equals(otherFindTagsAndCommand.predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SimHanKiong":58}},{"path":"src/main/java/seedu/address/logic/commands/FindTagsOrCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsOrFoundPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":" * Finds and lists all persons in address book who contains any of tags in the argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" * Tag matching is case sensitive.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"public class FindTagsOrCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    public static final String COMMAND_WORD \u003d \"findtagsor\";","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons who contains any of the tags \"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"            + \"Parameters: TAG [MORE_TAGS]...\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"            + \"Example: \" + COMMAND_WORD + \" car health death\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    private final TagsOrFoundPredicate predicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    public FindTagsOrCommand(TagsOrFoundPredicate predicate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        if (!(other instanceof FindTagsOrCommand)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand otherFindTagOrCommand \u003d (FindTagsOrCommand) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        return predicate.equals(otherFindTagOrCommand.predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SimHanKiong":58}},{"path":"src/main/java/seedu/address/logic/commands/LastContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.HasLastContactedPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":" * Tags a person with last contacted date and time in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"public class LastContactCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    public static final Comparator\u003cPerson\u003e SORT_COMPARATOR \u003d (person1, person2) -\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"        // Assuming getLastContact() can be null and getDateTime() can also be null.","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"        LocalDateTime lastContactDateTime1 \u003d (person1.getLastcontact() !\u003d null)","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"                ? person1.getLastcontact().getDateTime() : null;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        LocalDateTime lastContactDateTime2 \u003d (person2.getLastcontact() !\u003d null)","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"                ? person2.getLastcontact().getDateTime() : null;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"        // Handling nulls to ensure they are sorted to the end.","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"        if (lastContactDateTime1 \u003d\u003d null \u0026\u0026 lastContactDateTime2 \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"            return 0; // Both are equal in terms of sorting.","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"        } else if (lastContactDateTime1 \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"            return 1; // Nulls are considered greater to sort them to the end.","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"        } else if (lastContactDateTime2 \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"            return -1; // Non-nulls come before nulls.","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"        // If both dates are non-null, compare them directly.","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"        return lastContactDateTime1.compareTo(lastContactDateTime2);","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"    };","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"    public static final String COMMAND_WORD \u003d \"lastcontact\";","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Show a list of last contacted clients \"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"            + \"sorted according to dateTime\";","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients with last contact dates,\"","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"            + \" starting with the oldest date\";","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"    private static final HasLastContactedPredicate HAS_LAST_CONTACTED_PREDICATE \u003d new HasLastContactedPredicate();","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"        model.sortFilteredPersonList(null); // Resetting the sort order","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"        model.updateFilteredPersonList(HAS_LAST_CONTACTED_PREDICATE);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"        model.sortFilteredPersonList(SORT_COMPARATOR);","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"        if (!(other instanceof LastContactCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"        LastContactCommand otherLastContactCommand \u003d (LastContactCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Colex2000"},"content":"        return HAS_LAST_CONTACTED_PREDICATE.equals(otherLastContactCommand.HAS_LAST_CONTACTED_PREDICATE);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Colex2000":73}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"        model.sortFilteredPersonList(null); // Resetting the sort order","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Colex2000":1,"-":24}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":" * Selects a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"            + \": Selects the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"    public static final String MESSAGE_SELECT_PERSON_SUCCESS \u003d \"Selected Person: %1$s\";","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d\";","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"     * Constructs a SelectCommand object.","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"     * @param targetIndex The index of the person in the filtered person list to select.","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    public SelectCommand(Index targetIndex) {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedPersonList();","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"        Person personToSelect \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"        model.updateSelectedPerson(personToSelect);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_PERSON_SUCCESS, Messages.format(personToSelect)),","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"                false, false, true);","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"        if (!(other instanceof SelectCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"        SelectCommand otherSelectCommand \u003d (SelectCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"        return targetIndex.equals(otherSelectCommand.targetIndex);","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ziyang27":77,"Colex2000":1}},{"path":"src/main/java/seedu/address/logic/commands/UpcomingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyunchao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"tanyunchao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"tanyunchao"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.HasUpcomingPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"tanyunchao"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":" * Represents a command that sorts all persons by upcoming dates.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"tanyunchao"},"content":"public class UpcomingCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"tanyunchao"},"content":"    public static final String COMMAND_WORD \u003d \"upcoming\";","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"tanyunchao"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"tanyunchao"},"content":"            + \": Sorts all persons by upcoming dates.\\n\";","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"tanyunchao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all persons by upcoming dates,\"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"tanyunchao"},"content":"            + \" starting with the earliest date.\";","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"tanyunchao"},"content":"    private static final HasUpcomingPredicate HAS_UPCOMING_PREDICATE \u003d new HasUpcomingPredicate();","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"tanyunchao"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"tanyunchao"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"tanyunchao"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"tanyunchao"},"content":"        model.updateFilteredPersonList(HAS_UPCOMING_PREDICATE);","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"tanyunchao"},"content":"        model.sortFilteredPersonList(new UpcomingComparator());","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"tanyunchao"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"tanyunchao"},"content":"     * Comparator for sorting Person objects by upcoming dates","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"tanyunchao"},"content":"    public class UpcomingComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"tanyunchao"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"tanyunchao"},"content":"        public int compare(Person p1, Person p2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"tanyunchao"},"content":"            return p1.getUpcoming().compareTo(p2.getUpcoming());","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"tanyunchao"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"tanyunchao"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"tanyunchao"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"tanyunchao"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"tanyunchao"},"content":"        if (!(obj instanceof UpcomingCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"tanyunchao"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"tanyunchao"},"content":"        UpcomingCommand other \u003d (UpcomingCommand) obj;","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"tanyunchao"},"content":"        return HAS_UPCOMING_PREDICATE.equals(other.HAS_UPCOMING_PREDICATE);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"tanyunchao"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"tanyunchao":58}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTCONTACT;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"tanyunchao"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"tanyunchao"},"content":"                PREFIX_ADDRESS, PREFIX_TAG, PREFIX_UPCOMING,","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"                PREFIX_LASTCONTACT);","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d ParserUtil.parseUpcoming(argMultimap.getValue(PREFIX_UPCOMING).orElse(\"\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"        LastContact lastcontact \u003d ParserUtil.parseLastContact(argMultimap.getValue(PREFIX_LASTCONTACT).orElse(\"\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"tanyunchao"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, upcoming, lastcontact);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"tanyunchao"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"tanyunchao"},"content":"     * in the given","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Colex2000":3,"ziyang27":1,"tanyunchao":8,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddTagsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":" * Parses input arguments and creates a new AddTagsCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"public class AddTagsCommandParser implements Parser\u003cAddTagsCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagsCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"     * and returns an AddTagsCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    public AddTagsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        Index index;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        if (tagList.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"            throw new ParseException(AddTagsCommand.MESSAGE_NOT_ADDED);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(tagList);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"        return new AddTagsCommand(index, tags);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"SimHanKiong":49}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.FindTagsAndCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.FindTagsOrCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"import seedu.address.logic.commands.LastContactCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.logic.commands.UpcomingCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"            return new SelectCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"        case FindTagsOrCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"            return new FindTagsOrCommandParser().parse(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"        case FindTagsAndCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"            return new FindTagsAndCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"        case AddTagsCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"            return new AddTagsCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"tanyunchao"},"content":"        case UpcomingCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"tanyunchao"},"content":"            return new UpcomingCommand();","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Colex2000"},"content":"        case LastContactCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Colex2000"},"content":"            return new LastContactCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SimHanKiong":13,"Colex2000":4,"ziyang27":4,"tanyunchao":4,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":"    public static final Prefix PREFIX_UPCOMING \u003d new Prefix(\"u/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"    public static final Prefix PREFIX_LASTCONTACT \u003d new Prefix(\"lc/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Colex2000":1,"tanyunchao":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTCONTACT;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"tanyunchao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"                PREFIX_TAG, PREFIX_UPCOMING, PREFIX_LASTCONTACT);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"tanyunchao"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"            PREFIX_ADDRESS, PREFIX_UPCOMING, PREFIX_LASTCONTACT);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":68,"author":{"gitId":"tanyunchao"},"content":"        if (argMultimap.getValue(PREFIX_UPCOMING).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"            if (argMultimap.getValue(PREFIX_UPCOMING).get().isEmpty()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"Colex2000"},"content":"                        Upcoming.MESSAGE_EDIT_EMPTY_STRING_EXCEPTION));","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"tanyunchao"},"content":"            editPersonDescriptor.setUpcoming(ParserUtil.parseUpcoming(argMultimap.getValue(PREFIX_UPCOMING).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Colex2000"},"content":"        if (argMultimap.getValue(PREFIX_LASTCONTACT).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"            if (argMultimap.getValue(PREFIX_LASTCONTACT).get().isEmpty()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"                        LastContact.MESSAGE_EDIT_EMPTY_STRING_EXCEPTION));","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"            editPersonDescriptor.setLastContact(ParserUtil.parseLastContact(argMultimap","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"                    .getValue(PREFIX_LASTCONTACT).get()));","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Colex2000":17,"tanyunchao":6,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/FindTagsAndCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.FindTagsAndCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsAndFoundPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":" * Parses input arguments and creates a new FindTagsOrCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"public class FindTagsAndCommandParser implements Parser\u003cFindTagsAndCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagsOrCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * and returns a FindTagsOrCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    public FindTagsAndCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagsAndCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        String[] tags \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(Arrays.asList(tags));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        return new FindTagsAndCommand(new TagsAndFoundPredicate(tagSet));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SimHanKiong":36}},{"path":"src/main/java/seedu/address/logic/parser/FindTagsOrCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.FindTagsOrCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsOrFoundPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":" * Parses input arguments and creates a new FindTagsOrCommand object","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"public class FindTagsOrCommandParser implements Parser\u003cFindTagsOrCommand\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagsOrCommand","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * and returns a FindTagsOrCommand object for execution.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    public FindTagsOrCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagsOrCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        String[] tags \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(Arrays.asList(tags));","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        return new FindTagsOrCommand(new TagsOrFoundPredicate(tagSet));","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SimHanKiong":36}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"        return new Tag(trimmedTag.toLowerCase());","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"tanyunchao"},"content":"     * Represents an upcoming event or task.","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"tanyunchao"},"content":"     * It provides methods to validate and parse the upcoming string.","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"tanyunchao"},"content":"    public static Upcoming parseUpcoming(String upcoming) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"tanyunchao"},"content":"        requireNonNull(upcoming);","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"tanyunchao"},"content":"        String trimmedUpcoming \u003d upcoming.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"tanyunchao"},"content":"        if (!Upcoming.isValidUpcoming(trimmedUpcoming)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"tanyunchao"},"content":"            throw new ParseException(Upcoming.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"tanyunchao"},"content":"        return new Upcoming(trimmedUpcoming);","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":141,"author":{"gitId":"Colex2000"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"Colex2000"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"Colex2000"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"Colex2000"},"content":"    public static LastContact parseLastContact(String lastContact) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"Colex2000"},"content":"        requireNonNull(lastContact);","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"Colex2000"},"content":"        String trimmedLastContact \u003d lastContact.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"Colex2000"},"content":"        if (!LastContact.isValidDateTime(trimmedLastContact)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":150,"author":{"gitId":"Colex2000"},"content":"            throw new ParseException(String.format(LastContact.MESSAGE_CONSTRAINTS, trimmedLastContact));","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"Colex2000"},"content":"        return new LastContact(trimmedLastContact);","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SimHanKiong":1,"Colex2000":15,"tanyunchao":15,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/SelectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" * Parses input arguments and creates a new SelectCommand object","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"public class SelectCommandParser implements Parser\u003cSelectCommand\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectCommand","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     * and returns a SelectCommand object for execution.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public SelectCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"            return new SelectCommand(index);","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ziyang27":29}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"ziyang27"},"content":"    /** Returns the selected person to view the profile. */","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"ziyang27"},"content":"    Person getSelectedPerson();","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"     * Updates the person to be selected to {@code person}.","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"ziyang27"},"content":"     * @throws NullPointerException if {@code person} is null.","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"    void updateSelectedPerson(Person person);","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"Colex2000"},"content":"    void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"Colex2000"},"content":"    ObservableList\u003cPerson\u003e getSortedPersonList();","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"Colex2000"},"content":"    void setToInitialList();","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Colex2000":6,"ziyang27":10,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"    private FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"    private final SortedList\u003cPerson\u003e sortedPersons;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"    private final FilteredList\u003cPerson\u003e initialPersons;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"    private Person selectedPerson \u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"        sortedPersons \u003d new SortedList\u003c\u003e(filteredPersons);","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"        initialPersons \u003d filteredPersons;","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"ziyang27"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Selected Person Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"ziyang27"},"content":"    public Person getSelectedPerson() {","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"ziyang27"},"content":"        return selectedPerson;","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"ziyang27"},"content":"    public void updateSelectedPerson(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"ziyang27"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"ziyang27"},"content":"        selectedPerson \u003d person;","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":152,"author":{"gitId":"Colex2000"},"content":"    public void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2024-03-22"},{"lineNumber":153,"author":{"gitId":"Colex2000"},"content":"        sortedPersons.setComparator(comparator);","lastModifiedDate":"2024-03-23"},{"lineNumber":154,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":155,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":156,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"Colex2000"},"content":"    public ObservableList\u003cPerson\u003e getSortedPersonList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"Colex2000"},"content":"        return sortedPersons;","lastModifiedDate":"2024-03-23"},{"lineNumber":159,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":160,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"ziyang27"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"ziyang27"},"content":"                \u0026\u0026 (selectedPerson \u003d\u003d null","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"ziyang27"},"content":"                    ? otherModelManager.selectedPerson \u003d\u003d null","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"ziyang27"},"content":"                    : selectedPerson.equals(otherModelManager.selectedPerson));","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"Colex2000"},"content":"     * Maintains the filtered list.","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"Colex2000"},"content":"    public void setToInitialList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"Colex2000"},"content":"        this.filteredPersons \u003d this.initialPersons;","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Colex2000":22,"ziyang27":18,"-":148}},{"path":"src/main/java/seedu/address/model/person/HasLastContactedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":" * Tests that a {@code Person}\u0027s {@code LastContact} is present.","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"public class HasLastContactedPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"tanyunchao"},"content":"        return person.getLastcontact().hasLastContacted();","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"Colex2000":13,"tanyunchao":1}},{"path":"src/main/java/seedu/address/model/person/HasUpcomingPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyunchao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"tanyunchao"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"tanyunchao"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"tanyunchao"},"content":" * A predicate that checks if a {@code Person} has {@code Upcoming} appointments.","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"tanyunchao"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"tanyunchao"},"content":"public class HasUpcomingPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"     * Tests if the given person has upcoming events.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"tanyunchao"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":"     * @param person The person to be tested.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":"     * @return true if the person has upcoming events, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"tanyunchao"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"tanyunchao"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"tanyunchao"},"content":"        return person.getUpcoming().hasUpcoming();","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"tanyunchao"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"tanyunchao":20}},{"path":"src/main/java/seedu/address/model/person/IsSamePersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"public class IsSamePersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"    private final Person selectedPerson;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    public IsSamePersonPredicate(Person selectedPerson) {","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"        this.selectedPerson \u003d selectedPerson;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"        return this.selectedPerson \u003d\u003d person;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"        if (!(other instanceof IsSamePersonPredicate)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        IsSamePersonPredicate otherisSamePersonPredicate \u003d (IsSamePersonPredicate) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"        return selectedPerson \u003d\u003d otherisSamePersonPredicate.selectedPerson;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"        return new ToStringBuilder(this).add(\"selected person\", selectedPerson).toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ziyang27":42}},{"path":"src/main/java/seedu/address/model/person/LastContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":" * Represents a client\u0027s last contacted date and time in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"public class LastContact implements Comparable\u003cLastContact\u003e {","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"tanyunchao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Invalid input/date. Please follow the date format: \"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"            + \"DD-MM-YYYY HHmm, ensure that the date is valid and not in the future.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    public static final String MESSAGE_EDIT_EMPTY_STRING_EXCEPTION \u003d \"Last contacted can only take DD-MM-YYYY HHmm \"","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"            + \"dateTime format, and it should not be blank\";","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HHmm\")","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"    private boolean hasLastContact;","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"     * @param dateTime A valid dateTime.","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"    public LastContact(String dateTime) {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"        if (dateTime.isEmpty()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"            this.hasLastContact \u003d false;","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"            this.dateTime \u003d null;","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"            return;","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"        this.hasLastContact \u003d true;","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime, DATETIME_FORMATTER);","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"     * Returns true if a given string is in valid dateTime format.","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"tanyunchao"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"     * @param dateTime String to parse into formatter to check whether is valid.","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"    public static boolean isValidDateTime(String dateTime) {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"        if (dateTime.isEmpty()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"            return true;","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(trimmedDateTime, DATETIME_FORMATTER);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"            return !parsedDateTime.isAfter(LocalDateTime.now()); // Successfully parsed, input matches the format","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"            return false; // Parsing failed, input does not match the format","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"     * Returns true if the person has a last contacted field. False otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"     * @return true if person has last contacted. False otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"tanyunchao"},"content":"    public boolean hasLastContacted() {","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"        return this.hasLastContact;","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"        return this.dateTime;","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"    public int compareTo(LastContact other) {","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"        return this.dateTime.compareTo(other.dateTime);","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Colex2000"},"content":"        if (!hasLastContact) {","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"Colex2000"},"content":"            return \"\";","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":86,"author":{"gitId":"Colex2000"},"content":"        return this.dateTime.format(DATETIME_FORMATTER);","lastModifiedDate":"2024-03-22"},{"lineNumber":87,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"Colex2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"Colex2000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"Colex2000"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"Colex2000"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Colex2000"},"content":"        if (!(other instanceof LastContact)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Colex2000"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"Colex2000"},"content":"        LastContact otherDateTime \u003d (LastContact) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"Colex2000"},"content":"        return this.dateTime.equals(otherDateTime.dateTime);","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"Colex2000"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"Colex2000"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"Colex2000"},"content":"        return this.dateTime.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Colex2000":103,"tanyunchao":5}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"SimHanKiong":1,"-":44}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tanyunchao"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"tanyunchao"},"content":" * immutable.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"tanyunchao"},"content":"    private final Upcoming upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"    private final LastContact lastcontact;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"tanyunchao"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Upcoming upcoming,","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"tanyunchao"},"content":"            LastContact lastcontact) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"tanyunchao"},"content":"        requireAllNonNull(name, phone, email, address, tags, upcoming, lastcontact);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"tanyunchao"},"content":"        this.upcoming \u003d upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"        this.lastcontact \u003d lastcontact;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"tanyunchao"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"tanyunchao"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"tanyunchao"},"content":"    public Upcoming getUpcoming() {","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"tanyunchao"},"content":"        return upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"    public boolean hasUpcoming() {","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"        return upcoming.hasUpcoming();","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"    public LastContact getLastcontact() {","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"        return lastcontact;","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"ziyang27"},"content":"    public boolean hasLastcontact() {","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"ziyang27"},"content":"        return lastcontact.hasLastContacted();","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"tanyunchao"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"tanyunchao"},"content":"                \u0026\u0026 upcoming.equals(otherPerson.upcoming)","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Colex2000"},"content":"                \u0026\u0026 lastcontact.equals(otherPerson.lastcontact);","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"tanyunchao"},"content":"        return Objects.hash(name, phone, email, address, tags, upcoming);","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"tanyunchao"},"content":"                .add(\"upcoming\", upcoming)","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"Colex2000"},"content":"                .add(\"lastcontact\", lastcontact)","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Colex2000":8,"ziyang27":8,"tanyunchao":17,"-":111}},{"path":"src/main/java/seedu/address/model/person/Upcoming.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyunchao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"tanyunchao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"tanyunchao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"tanyunchao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"tanyunchao"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"tanyunchao"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"tanyunchao"},"content":" * Represents a Person\u0027s upcoming appointment in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":" * {@link #isValidUpcoming(String)}","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"tanyunchao"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"tanyunchao"},"content":"public class Upcoming implements Comparable\u003cUpcoming\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"tanyunchao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Invalid input/date. Please follow the date format: \"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"tanyunchao"},"content":"            + \"DD-MM-YYYY HHmm and ensure that the date is valid.\";","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"    public static final String MESSAGE_EDIT_EMPTY_STRING_EXCEPTION \u003d \"Upcoming can only take DD-MM-YYYY HHmm \"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"            + \"dateTime format, and it should not be blank\";","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"tanyunchao"},"content":"    private static final String DATETIME_FORMAT \u003d \"dd-MM-uuuu HHmm\";","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"tanyunchao"},"content":"    private static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATETIME_FORMAT)","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"tanyunchao"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"tanyunchao"},"content":"    private boolean hasUpcoming;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"tanyunchao"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"tanyunchao"},"content":"     * Constructs an {@code Upcoming} object from a valid date and time string in","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"tanyunchao"},"content":"     * the format \"DD-MM-YYYY HH:MM\".","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"tanyunchao"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"tanyunchao"},"content":"     * @param dateTimeStr a string representing the date and time in the format","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"tanyunchao"},"content":"     *                    \"DD-MM-YYYY HH:MM\"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"tanyunchao"},"content":"    public Upcoming(String dateTimeStr) {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"tanyunchao"},"content":"        requireNonNull(dateTimeStr);","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"tanyunchao"},"content":"        checkArgument(isValidUpcoming(dateTimeStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"tanyunchao"},"content":"        if (dateTimeStr.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"tanyunchao"},"content":"            this.hasUpcoming \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"tanyunchao"},"content":"            this.dateTime \u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"tanyunchao"},"content":"            return;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"tanyunchao"},"content":"        this.hasUpcoming \u003d true;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"tanyunchao"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTimeStr, DATETIME_FORMATTER);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"tanyunchao"},"content":"     * Checks if the given string is a valid date and time combination in the format","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"tanyunchao"},"content":"     * \"DD-MM-YYYY HH:MM\".","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"tanyunchao"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"tanyunchao"},"content":"     * @param dateTimeStr a string representing the date and time in the format","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"tanyunchao"},"content":"     *                    \"DD-MM-YYYY HH:MM\"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"tanyunchao"},"content":"     * @return true if the string is a valid date and time combination, false","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"tanyunchao"},"content":"     *         otherwise","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"tanyunchao"},"content":"    public static boolean isValidUpcoming(String dateTimeStr) {","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"tanyunchao"},"content":"        if (dateTimeStr.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"tanyunchao"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"tanyunchao"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"tanyunchao"},"content":"            LocalDateTime.parse(dateTimeStr, DATETIME_FORMATTER);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"tanyunchao"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"tanyunchao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"tanyunchao"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"tanyunchao"},"content":"     * Returns true if there are upcoming events or tasks associated with this","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"tanyunchao"},"content":"     * person.","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"tanyunchao"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"tanyunchao"},"content":"     * @return true if there are upcoming events or tasks associated with this","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"tanyunchao"},"content":"     *         person, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"tanyunchao"},"content":"    public boolean hasUpcoming() {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"tanyunchao"},"content":"        return this.hasUpcoming;","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"tanyunchao"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"tanyunchao"},"content":"    public int compareTo(Upcoming other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"tanyunchao"},"content":"        return this.dateTime.compareTo(other.dateTime);","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"tanyunchao"},"content":"     * Returns a string representation of this {@code Upcoming} object.","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"tanyunchao"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"tanyunchao"},"content":"     * @return a string representation of this object","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"tanyunchao"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"tanyunchao"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"tanyunchao"},"content":"        if (!hasUpcoming) {","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"tanyunchao"},"content":"            return \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"tanyunchao"},"content":"        return dateTime.format(DATETIME_FORMATTER);","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"tanyunchao"},"content":"     * Checks if this {@code Upcoming} object is equal to another object.","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"tanyunchao"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"tanyunchao"},"content":"     * @param obj the object to compare with","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"tanyunchao"},"content":"     * @return true if the objects are equal, false otherwise","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"tanyunchao"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"tanyunchao"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"tanyunchao"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"tanyunchao"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"tanyunchao"},"content":"        if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"tanyunchao"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"tanyunchao"},"content":"        Upcoming other \u003d (Upcoming) obj;","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"tanyunchao"},"content":"        if (!this.hasUpcoming \u0026\u0026 !other.hasUpcoming) {","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"tanyunchao"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"tanyunchao"},"content":"        return this.hasUpcoming \u003d\u003d other.hasUpcoming \u0026\u0026 this.dateTime.equals(other.dateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"tanyunchao"},"content":"     * Returns the hash code value for this {@code Upcoming} object.","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"tanyunchao"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"tanyunchao"},"content":"     * @return the hash code value for this object","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"tanyunchao"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"tanyunchao"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"tanyunchao"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"tanyunchao"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Colex2000":2,"tanyunchao":130}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric without spaces\";","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SimHanKiong":1,"-":61}},{"path":"src/main/java/seedu/address/model/tag/TagsAndFoundPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches all the tags given.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"public class TagsAndFoundPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    public TagsAndFoundPredicate(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        return person.getTags().containsAll(tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        if (!(other instanceof TagsAndFoundPredicate)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate otherTagsAndFoundPredicate \u003d (TagsAndFoundPredicate) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        return tags.equals(otherTagsAndFoundPredicate.tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        return new ToStringBuilder(this).add(\"tags\", tags).toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SimHanKiong":44}},{"path":"src/main/java/seedu/address/model/tag/TagsOrFoundPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the tags given.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"public class TagsOrFoundPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    public TagsOrFoundPredicate(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        return tags.stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"                .anyMatch(tag -\u003e person.getTags().contains(tag));","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        if (!(other instanceof TagsOrFoundPredicate)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate otherTagOrFoundPredicate \u003d (TagsOrFoundPredicate) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"        return tags.equals(otherTagOrFoundPredicate.tags);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        return new ToStringBuilder(this).add(\"tags\", tags).toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SimHanKiong":45}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"    public static final LastContact DUMMY_LASTCONTACT \u003d new LastContact(\"05-03-2024 0600\");","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"tanyunchao"},"content":"                getTagSet(\"friends\"), new Upcoming(\"23-08-2024 1500\"), DUMMY_LASTCONTACT),","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"tanyunchao"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Upcoming(\"08-08-2024 1515\"), DUMMY_LASTCONTACT),","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"tanyunchao"},"content":"                getTagSet(\"neighbours\"), new Upcoming(\"03-03-2024 0930\"), DUMMY_LASTCONTACT),","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"tanyunchao"},"content":"                getTagSet(\"family\"), new Upcoming(\"01-01-2024 1200\"), DUMMY_LASTCONTACT),","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"tanyunchao"},"content":"                getTagSet(\"classmates\"), new Upcoming(\"12-12-2023 1800\"), DUMMY_LASTCONTACT),","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"tanyunchao"},"content":"                getTagSet(\"colleagues\"), new Upcoming(\"25-12-2023 2000\"), DUMMY_LASTCONTACT)","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Colex2000":2,"tanyunchao":7,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"tanyunchao"},"content":"    private final String upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"    private final String lastcontact;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"tanyunchao"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"upcoming\") String upcoming,","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"tanyunchao"},"content":"            @JsonProperty(\"lastcontact\") String lastcontact) {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tanyunchao"},"content":"        this.upcoming \u003d upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"        this.lastcontact \u003d lastcontact;","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"tanyunchao"},"content":"        upcoming \u003d source.getUpcoming().toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"        lastcontact \u003d source.getLastcontact().toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"tanyunchao"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"tanyunchao"},"content":"     * {@code Person} object.","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"tanyunchao"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"tanyunchao"},"content":"     *                               the adapted person.","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"tanyunchao"},"content":"        if (upcoming \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"tanyunchao"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"tanyunchao"},"content":"                    Upcoming.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"tanyunchao"},"content":"        if (!Upcoming.isValidUpcoming(upcoming)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"tanyunchao"},"content":"            throw new IllegalValueException(Upcoming.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"tanyunchao"},"content":"        final Upcoming modelUpcoming \u003d new Upcoming(upcoming);","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"tanyunchao"},"content":"        if (lastcontact \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"tanyunchao"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"tanyunchao"},"content":"                    LastContact.class.getSimpleName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"tanyunchao"},"content":"        final LastContact modelLastContact \u003d new LastContact(lastcontact);","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"tanyunchao"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelUpcoming, modelLastContact);","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Colex2000":4,"tanyunchao":27,"-":105}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    private PersonProfile personProfile;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"    private StackPane personProfilePlaceholder;","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"Colex2000"},"content":"        personListPanel \u003d new PersonListPanel(logic.getSortedAndFilteredPersonList());","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"ziyang27"},"content":"        personProfile \u003d new PersonProfile();","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"ziyang27"},"content":"        personProfilePlaceholder.getChildren().add(personProfile.getRoot());","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"ziyang27"},"content":"            if (commandResult.isUpdateProfile()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"ziyang27"},"content":"                personProfile.setPerson(logic.getSelectedPerson());","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ziyang27":11,"Colex2000":1,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"tanyunchao"},"content":"    private Label upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"    private Label lastcontact;","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"        if (person.hasUpcoming()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"            upcoming.setVisible(true);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"            upcoming.setManaged(true);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"            upcoming.setText(\"Upcoming: \" + person.getUpcoming().toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"            upcoming.setVisible(false);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"            upcoming.setManaged(false);","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"        if (person.hasLastcontact()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setVisible(true);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setManaged(true);","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"            lastcontact.setText(\"Last contacted: \" + person.getLastcontact().toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setVisible(false);","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setManaged(false);","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Colex2000":2,"ziyang27":17,"tanyunchao":1,"-":55}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"        FilteredList\u003cPerson\u003e filteredData \u003d new FilteredList\u003c\u003e(personList);","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"        SortedList\u003cPerson\u003e sortableData \u003d new SortedList\u003c\u003e(filteredData);","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"        personListView.setItems(sortableData);","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Colex2000":5,"-":48}},{"path":"src/main/java/seedu/address/ui/PersonProfile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":" * An UI component that displays profile of a {@code Person}.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"public class PersonProfile extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"    private static final String FXML \u003d \"PersonProfile.fxml\";","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"    private Person person;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"    private VBox profilePane;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    private Label name;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    private Label phone;","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"    private Label address;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"    private Label email;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    private FlowPane tags;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"    private Label upcoming;","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"    private Label lastcontact;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"     * Creates a {@code PersonProfile}.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"    public PersonProfile() {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"        super(FXML);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"        profilePane.setVisible(false);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"     * Creates a {@code PersonProfile} with the given {@code Person}.","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"    public PersonProfile(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"        super(FXML);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"        phone.setText(\"Phone number: \" + person.getPhone().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"        setOptionalFields();","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"        person.getTags().stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"        profilePane.setVisible(true);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"     * Updates the {@code PersonProfile} with the given {@code Person}.","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"    public void setPerson(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"        phone.setText(\"Phone number: \" + person.getPhone().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"ziyang27"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"ziyang27"},"content":"        setOptionalFields();","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"ziyang27"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"ziyang27"},"content":"        person.getTags().stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"ziyang27"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"ziyang27"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"ziyang27"},"content":"        profilePane.setVisible(true);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"ziyang27"},"content":"    private void setOptionalFields() {","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"ziyang27"},"content":"        if (person.hasUpcoming()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"ziyang27"},"content":"            upcoming.setVisible(true);","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"            upcoming.setManaged(true);","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"            upcoming.setText(\"Upcoming: \" + person.getUpcoming().toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"ziyang27"},"content":"            upcoming.setVisible(false);","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"            upcoming.setManaged(false);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"ziyang27"},"content":"        if (person.hasLastcontact()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setVisible(true);","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setManaged(true);","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setText(\"Last contacted: \" + person.getLastcontact().toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"ziyang27"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setVisible(false);","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"ziyang27"},"content":"            lastcontact.setManaged(false);","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyang27":107}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":356,"author":{"gitId":"ziyang27"},"content":"#profilePane .label {","lastModifiedDate":"2024-03-19"},{"lineNumber":357,"author":{"gitId":"ziyang27"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-19"},{"lineNumber":358,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"ziyang27":6,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"         title\u003d\"FAPro\" minWidth\u003d\"800\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"        \u003cHBox minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"          \u003cVBox fx:id\u003d\"personProfile\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"400\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"            \u003cStackPane fx:id\u003d\"personProfilePlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ziyang27":11,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"120\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"tanyunchao"},"content":"      \u003cLabel fx:id\u003d\"upcoming\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$upcoming\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"      \u003cLabel fx:id\u003d\"lastcontact\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$lastcontacted\"/\u003e","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ziyang27":1,"Colex2000":1,"tanyunchao":1,"-":33}},{"path":"src/main/resources/view/PersonProfile.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"\u003cVBox id\u003d\"profilePane\" fx:id\u003d\"profilePane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"  \u003cGridPane\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"225\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"      \u003cVBox spacing\u003d\"5\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"        \u003cImageView\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"          \u003cimage\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"            \u003cImage url\u003d\"@/images/profile.jpg\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"          \u003c/image\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"          \u003cfitWidth\u003e175\u003c/fitWidth\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"          \u003cfitHeight\u003e180\u003c/fitHeight\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"100\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"      \u003cLabel text\u003d\"Contact Information\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"      \u003cLabel fx:id\u003d\"upcoming\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$upcoming\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"      \u003cLabel fx:id\u003d\"lastcontact\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$lastcontacted\"/\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"100\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"      \u003cLabel text\u003d\"Existing Plans\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ziyang27":49}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTCONTACT_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UPCOMING_DESC_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"Colex2000"},"content":"    public void getSortedPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"Colex2000"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getSortedAndFilteredPersonList().remove(0));","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"tanyunchao"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + UPCOMING_DESC_AMY + LASTCONTACT_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Colex2000":6,"tanyunchao":2,"-":174}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"ziyang27"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"ziyang27"},"content":"        public Person getSelectedPerson() {","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"ziyang27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"ziyang27"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"ziyang27"},"content":"        public void updateSelectedPerson(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"ziyang27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"Colex2000"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"Colex2000"},"content":"        public void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2024-03-23"},{"lineNumber":174,"author":{"gitId":"Colex2000"},"content":"            // Do nothing","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":176,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":177,"author":{"gitId":"Colex2000"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":178,"author":{"gitId":"Colex2000"},"content":"        public ObservableList\u003cPerson\u003e getSortedPersonList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":179,"author":{"gitId":"Colex2000"},"content":"            return null;","lastModifiedDate":"2024-03-23"},{"lineNumber":180,"author":{"gitId":"Colex2000"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":181,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"Colex2000"},"content":"        @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"Colex2000"},"content":"        public void setToInitialList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"ziyang27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Colex2000":13,"ziyang27":13,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/AddTagsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"public class AddTagsCommandTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_addTagsUnfilteredList_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(\"car\", \"health\");","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).addTags(tagList).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand command \u003d new AddTagsCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"                TagBuilder.build(tagList));","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(AddTagsCommand.MESSAGE_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(\"car\", \"health\");","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand command \u003d new AddTagsCommand(outOfBoundIndex, TagBuilder.build(tagList));","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(\"car\", \"health\");","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand command \u003d new AddTagsCommand(outOfBoundIndex, TagBuilder.build(tagList));","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList1 \u003d List.of(\"car\", \"health\");","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList2 \u003d List.of(\"covid\", \"health\");","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand firstCommand \u003d new AddTagsCommand(INDEX_FIRST_PERSON, TagBuilder.build(tagList1));","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand secondCommand \u003d new AddTagsCommand(INDEX_FIRST_PERSON, TagBuilder.build(tagList2));","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand thirdCommand \u003d new AddTagsCommand(INDEX_SECOND_PERSON, TagBuilder.build(tagList1));","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand firstCommandCopy \u003d new AddTagsCommand(INDEX_FIRST_PERSON, TagBuilder.build(tagList1));","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(thirdCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(\"car\", \"health\");","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"        Set\u003cTag\u003e tags \u003d TagBuilder.build(tagList);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand command \u003d new AddTagsCommand(index, tags);","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"        String expected \u003d AddTagsCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", tags\u003d\" + tags + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(expected, command.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"SimHanKiong":102}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"        // different updateProfile value -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"        // different updateProfile value -\u003e returns different hashcode","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"                + \", exit\u003d\" + commandResult.isExit()","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"                + \", updateProfile\u003d\" + commandResult.isUpdateProfile() + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"ziyang27":9,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTCONTACT;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"tanyunchao"},"content":"    public static final String VALID_UPCOMING_AMY \u003d \"12-12-2024 1200\";","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"tanyunchao"},"content":"    public static final String VALID_UPCOMING_BOB \u003d \"05-05-2024 1700\";","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"    public static final String VALID_LAST_CONTACT \u003d \"13-03-2024 0600\";","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"    public static final String VALID_LAST_CONTACT_AMY \u003d \"13-03-2024 1600\";","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"    public static final String VALID_LAST_CONTACT_BOB \u003d \"13-03-2024 1700\";","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"tanyunchao"},"content":"    public static final String UPCOMING_DESC_AMY \u003d \" \" + PREFIX_UPCOMING + VALID_UPCOMING_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"tanyunchao"},"content":"    public static final String UPCOMING_DESC_BOB \u003d \" \" + PREFIX_UPCOMING + VALID_UPCOMING_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"    public static final String LASTCONTACT_AMY \u003d \" \" + PREFIX_LASTCONTACT + VALID_LAST_CONTACT;","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"    public static final String LASTCONTACT_BOB \u003d \" \" + PREFIX_LASTCONTACT + VALID_LAST_CONTACT;","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"                .withTags(VALID_TAG_FRIEND).withUpcoming(VALID_UPCOMING_AMY).withLastContact(VALID_LAST_CONTACT_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"                .build();","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withUpcoming(VALID_UPCOMING_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"                .withLastContact(VALID_LAST_CONTACT_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Colex2000":11,"tanyunchao":5,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_CONTACT_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_CONTACT_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UPCOMING_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UPCOMING_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"ziyang27"},"content":"    public void execute_allFieldsSpecifiedHasSelectedPerson_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"        model.updateSelectedPerson(personToEdit);","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"ziyang27"},"content":"        expectedModel.updateSelectedPerson(editedPerson);","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"ziyang27"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false,","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"ziyang27"},"content":"                true);","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"ziyang27"},"content":"        assertCommandSuccess(editCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"tanyunchao"},"content":"        EditPersonDescriptor editedDescriptor \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"tanyunchao"},"content":"                .withUpcoming(VALID_UPCOMING_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"SimHanKiong"},"content":"        EditPersonDescriptor editedDescriptorLastContact \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"Colex2000"},"content":"                .withLastContact(VALID_LAST_CONTACT_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"tanyunchao"},"content":"        // different upcoming -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(DESC_AMY.equals(editedDescriptor));","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"tanyunchao"},"content":"        // different upcoming, same other fields -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"tanyunchao"},"content":"        editedDescriptor \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"tanyunchao"},"content":"                .withUpcoming(VALID_UPCOMING_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(DESC_AMY.equals(editedDescriptor));","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"tanyunchao"},"content":"        // same upcoming, different other fields -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"tanyunchao"},"content":"        editedDescriptor \u003d new EditPersonDescriptorBuilder(DESC_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"tanyunchao"},"content":"                .withUpcoming(VALID_UPCOMING_AMY).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(DESC_AMY.equals(editedDescriptor));","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"Colex2000"},"content":"        // different lastcontact -\u003e return false","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(DESC_AMY.equals(editedDescriptorLastContact));","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"Colex2000"},"content":"        // different lastcontact, same other fields -\u003e return false","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"SimHanKiong"},"content":"        editedDescriptorLastContact \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"Colex2000"},"content":"                .withLastContact(VALID_LAST_CONTACT_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(DESC_AMY.equals(editedDescriptorLastContact));","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"Colex2000"},"content":"        // same lastcontact -\u003e return true","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"SimHanKiong"},"content":"        editedDescriptorLastContact \u003d new EditPersonDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"Colex2000"},"content":"                .withLastContact(VALID_LAST_CONTACT_AMY).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(DESC_AMY.equals(editedDescriptorLastContact));","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"SimHanKiong":6,"Colex2000":11,"ziyang27":11,"tanyunchao":18,"-":177}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"tanyunchao"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", upcoming\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"                + editPersonDescriptor.getUpcoming().orElse(null) + \", lastcontact\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"                + editPersonDescriptor.getLastcontact().orElse(null) + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Colex2000":2,"tanyunchao":1,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"SimHanKiong":2,"-":90}},{"path":"src/test/java/seedu/address/logic/commands/FindTagsAndCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsAndFoundPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTagsOrCommand}.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"public class FindTagsAndCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate firstPredicate \u003d preparePredicate(\"first\");","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate secondPredicate \u003d preparePredicate(\"second\");","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand firstCommand \u003d new FindTagsAndCommand(firstPredicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand secondCommand \u003d new FindTagsAndCommand(secondPredicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand firstCommandCopy \u003d new FindTagsAndCommand(firstPredicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_zeroTags_allPersonsFound() {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, getTypicalPersons().size());","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand command \u003d new FindTagsAndCommand(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(getTypicalPersons(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_oneTag_multiplePersonsFound() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(\"car\");","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand command \u003d new FindTagsAndCommand(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(List.of(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_oneTagWrongCase_multiplePersonsFound() {","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(\"Car\");","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand command \u003d new FindTagsAndCommand(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(List.of(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_multipleTags_onePersonWithAllTagsFound() {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(\"car Death\");","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand command \u003d new FindTagsAndCommand(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(List.of(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_multipleTags_onePersonWithNotAllTagsFound() {","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(\"flight covid\");","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand command \u003d new FindTagsAndCommand(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(List.of(DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(\"tag\");","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand command \u003d new FindTagsAndCommand(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"        String expected \u003d FindTagsAndCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(expected, command.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"     * Parses {@code userInput} into a {@code TagsAndFoundPredicate}.","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"    private TagsAndFoundPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(userInput.split(\"\\\\s+\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"        return new TagsAndFoundPredicate(TagBuilder.build(tagList));","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SimHanKiong":115}},{"path":"src/test/java/seedu/address/logic/commands/FindTagsOrCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsOrFoundPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTagsOrCommand}.","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"public class FindTagsOrCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate firstPredicate \u003d preparePredicate(\"first\");","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate secondPredicate \u003d preparePredicate(\"second\");","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand firstCommand \u003d new FindTagsOrCommand(firstPredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand secondCommand \u003d new FindTagsOrCommand(secondPredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand firstCommandCopy \u003d new FindTagsOrCommand(firstPredicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_zeroTags_noPersonFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand command \u003d new FindTagsOrCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_oneTag_multiplePersonsFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(\"car\");","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand command \u003d new FindTagsOrCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(List.of(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_oneTagWrongCase_multiplePersonsFound() {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(\"Car\");","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand command \u003d new FindTagsOrCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(List.of(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_multipleTags_multiplePersonsFromOneTagFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(\"car death test\");","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand command \u003d new FindTagsOrCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(List.of(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"    public void execute_multipleTags_multiplePersonsFromDifferentTagsFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(\"death Health covid\");","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand command \u003d new FindTagsOrCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(List.of(BENSON, CARL, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(\"tag\");","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand command \u003d new FindTagsOrCommand(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"        String expected \u003d FindTagsOrCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(expected, command.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"     * Parses {@code userInput} into a {@code TagsOrFoundPredicate}.","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"SimHanKiong"},"content":"    private TagsOrFoundPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(userInput.split(\"\\\\s+\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"        return new TagsOrFoundPredicate(TagBuilder.build(tagList));","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SimHanKiong":116}},{"path":"src/test/java/seedu/address/logic/commands/LastContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.commands.LastContactCommand.SORT_COMPARATOR;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.HasLastContactedPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":" * Contains integration tests (interaction with the Model) and unit tests for LastContactCommand.","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"public class LastContactCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"    private Model model;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"    public void execute_lastContactListIsNotFiltered_showsSameList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"        assertCommandSuccess(new LastContactCommand(), model,","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"                LastContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"    public void execute_lastContactListIsFiltered_showsSortedAndFiltered() {","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"        model.updateFilteredPersonList(new HasLastContactedPredicate());","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"        model.sortFilteredPersonList(SORT_COMPARATOR);","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"        expectedModel.updateFilteredPersonList(new HasLastContactedPredicate());","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"        expectedModel.sortFilteredPersonList(SORT_COMPARATOR);","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"        assertCommandSuccess(new LastContactCommand(), model,","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"                LastContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"    public void compare_personsWithNullLastContact_datesHandledCorrectly() {","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"        // Create two Person instances with null last contacts","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"        Person firstPersonWithNullLastContact \u003d new PersonBuilder().withLastContact(\"\").build();","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"        Person secondPersonWithNullLastContact \u003d new PersonBuilder().withLastContact(\"\").build();","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"        Person thirdPersonWithValidLastContact \u003d new PersonBuilder().withLastContact(\"24-03-2024 0935\").build();","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"        boolean isNullLastContact \u003d firstPersonWithNullLastContact.getLastcontact() \u003d\u003d null;","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"        boolean isNotNullLastContact \u003d thirdPersonWithValidLastContact.getLastcontact() !\u003d null;","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"        // Comparator from LastContactCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Colex2000"},"content":"        Comparator\u003cPerson\u003e sortComparator \u003d LastContactCommand.SORT_COMPARATOR;","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"        // Applying the comparator","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"        int comparisonResult \u003d sortComparator.compare(firstPersonWithNullLastContact, secondPersonWithNullLastContact);","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"        int comparisonResult2 \u003d sortComparator.compare(firstPersonWithNullLastContact, thirdPersonWithValidLastContact);","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"        int comparisonResult3 \u003d sortComparator.compare(thirdPersonWithValidLastContact, firstPersonWithNullLastContact);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"        // Since both last contact dates are null, we expect the comparator to consider them equal","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Colex2000"},"content":"        assertEquals(0, comparisonResult);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"        // Since only first person has Null last contact, we should expect 1","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"        assertEquals(1, comparisonResult2);","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Colex2000"},"content":"        // Since only second person has Null last contact, we should expect -1","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Colex2000"},"content":"        assertEquals(-1, comparisonResult3);","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"        // Test for null and non-null LastContact","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"        assertFalse(isNullLastContact);","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"        assertTrue(isNotNullLastContact);","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Colex2000"},"content":"        LastContactCommand lastContactFirstCommand \u003d new LastContactCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"Colex2000"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"Colex2000"},"content":"        assertTrue(lastContactFirstCommand.equals(lastContactFirstCommand));","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"Colex2000"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"Colex2000"},"content":"        LastContactCommand lastContactFirstCommandCopy \u003d new LastContactCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Colex2000"},"content":"        assertTrue(lastContactFirstCommand.equals(lastContactFirstCommandCopy));","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"Colex2000"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"Colex2000"},"content":"        assertFalse(lastContactFirstCommand.equals(1));","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"Colex2000"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"Colex2000"},"content":"        assertFalse(lastContactFirstCommand.equals(null));","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Colex2000":100}},{"path":"src/test/java/seedu/address/logic/commands/SelectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.logic.commands.SelectCommand.MESSAGE_SELECT_PERSON_SUCCESS;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"import seedu.address.model.person.IsSamePersonPredicate;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":" * {@code SelectCommand}.","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"public class SelectCommandTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"        Person personToSelect \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SELECT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"                Messages.format(personToSelect));","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"        expectedModel.updateSelectedPerson(personToSelect);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false, true);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"        assertCommandSuccess(selectCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"        assertEquals(ALICE, model.getSelectedPerson());","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"        assertCommandFailure(selectCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"        Person personToSelect \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SELECT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"                Messages.format(personToSelect));","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"        IsSamePersonPredicate predicate \u003d preparePredicate(personToSelect);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"        expectedModel.updateSelectedPerson(personToSelect);","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false, true);","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"        assertCommandSuccess(selectCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ziyang27"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"ziyang27"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"ziyang27"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ziyang27"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"ziyang27"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"ziyang27"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"ziyang27"},"content":"        assertCommandFailure(selectCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"ziyang27"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"        SelectCommand selectFirstCommand \u003d new SelectCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"        SelectCommand selectSecondCommand \u003d new SelectCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"ziyang27"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"ziyang27"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"ziyang27"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"ziyang27"},"content":"        SelectCommand selectFirstCommandCopy \u003d new SelectCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ziyang27"},"content":"        assertTrue(selectFirstCommand.equals(selectFirstCommandCopy));","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"ziyang27"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"ziyang27"},"content":"        assertFalse(selectFirstCommand.equals(1));","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"ziyang27"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"ziyang27"},"content":"        assertFalse(selectFirstCommand.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"ziyang27"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"ziyang27"},"content":"        assertFalse(selectFirstCommand.equals(selectSecondCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"ziyang27"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"ziyang27"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"ziyang27"},"content":"        SelectCommand selectCommand \u003d new SelectCommand(targetIndex);","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"ziyang27"},"content":"        String expected \u003d SelectCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"ziyang27"},"content":"        assertEquals(expected, selectCommand.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"ziyang27"},"content":"     * Parses {@code selectedPerson} into a {@code IsSamePersonPredicate}.","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"ziyang27"},"content":"    private IsSamePersonPredicate preparePredicate(Person selectedPerson) {","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"ziyang27"},"content":"        return new IsSamePersonPredicate(selectedPerson);","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ziyang27":129}},{"path":"src/test/java/seedu/address/logic/commands/UpcomingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyunchao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"tanyunchao"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"tanyunchao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.HasUpcomingPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"tanyunchao"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"tanyunchao"},"content":" * Contains integration tests (interaction with the Model) and unit tests for UpcomingCommand.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"tanyunchao"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"tanyunchao"},"content":"public class UpcomingCommandTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"tanyunchao"},"content":"    private Model model;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"tanyunchao"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"tanyunchao"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"tanyunchao"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"tanyunchao"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"tanyunchao"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"tanyunchao"},"content":"    public void execute_upcomingListIsNotFiltered_showsSameList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"tanyunchao"},"content":"        assertCommandSuccess(new UpcomingCommand(), model,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"tanyunchao"},"content":"                UpcomingCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"tanyunchao"},"content":"    public void execute_upcomingListIsFiltered_showsSortedAndFiltered() {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"tanyunchao"},"content":"        UpcomingCommand upcomingCommand \u003d new UpcomingCommand();","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"tanyunchao"},"content":"        UpcomingCommand.UpcomingComparator comparator \u003d upcomingCommand.new UpcomingComparator();","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"tanyunchao"},"content":"        model.updateFilteredPersonList(new HasUpcomingPredicate());","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"tanyunchao"},"content":"        model.sortFilteredPersonList(comparator);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"tanyunchao"},"content":"        expectedModel.updateFilteredPersonList(new HasUpcomingPredicate());","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"tanyunchao"},"content":"        expectedModel.sortFilteredPersonList(comparator);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"tanyunchao"},"content":"        assertCommandSuccess(new UpcomingCommand(), model,","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"tanyunchao"},"content":"                UpcomingCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"tanyunchao"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"tanyunchao"},"content":"        UpcomingCommand upcomingFirstCommand \u003d new UpcomingCommand();","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"tanyunchao"},"content":"        UpcomingCommand upcomingSecondCommand \u003d new UpcomingCommand();","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"tanyunchao"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcomingFirstCommand.equals(upcomingFirstCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"tanyunchao"},"content":"        // same instance -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcomingFirstCommand.equals(upcomingSecondCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"tanyunchao"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(upcomingFirstCommand.equals(new Object()));","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"tanyunchao"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(upcomingFirstCommand.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"tanyunchao"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"tanyunchao":66}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTCONTACT_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LASTCONTACT_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.UPCOMING_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_CONTACT;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"                .withLastContact(VALID_LAST_CONTACT).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"tanyunchao"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + UPCOMING_DESC_BOB + LASTCONTACT_BOB,","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"tanyunchao"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"                .withLastContact(VALID_LAST_CONTACT).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"tanyunchao"},"content":"                        + TAG_DESC_FRIEND + UPCOMING_DESC_BOB + LASTCONTACT_BOB,","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"tanyunchao"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withUpcoming(\"\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"Colex2000"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"Colex2000"},"content":"                + LASTCONTACT_AMY,","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Colex2000":9,"tanyunchao":5,"-":190}},{"path":"src/test/java/seedu/address/logic/parser/AddTagsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"public class AddTagsCommandParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagsCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    private AddTagsCommandParser parser \u003d new AddTagsCommandParser();","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        // no index specified","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        // no field specified","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"1\", AddTagsCommand.MESSAGE_NOT_ADDED);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        // no index and no field specified","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        // negative index","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"-5\" + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        // zero index","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"0\" + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"1 i/string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_inValidTag_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_validFields_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(VALID_TAG_FRIEND, VALID_TAG_HUSBAND);","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand expectedCommand \u003d new AddTagsCommand(targetIndex, TagBuilder.build(tagList));","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"        String userInput1 \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"        assertParseSuccess(parser, userInput1, expectedCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"        String userInput2 \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND + \"\\n  \\t\" + TAG_DESC_HUSBAND + \"\\t\";","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"        assertParseSuccess(parser, userInput2, expectedCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"SimHanKiong":79}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.AddTagsCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.FindTagsAndCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.FindTagsOrCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"import seedu.address.logic.commands.LastContactCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.logic.commands.UpcomingCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsAndFoundPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsOrFoundPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"    public void parseCommand_select() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"        SelectCommand command \u003d (SelectCommand) parser.parseCommand(","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"                SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"        assertEquals(new SelectCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"    public void parseCommand_findTagsOr() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tags \u003d List.of(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand command \u003d (FindTagsOrCommand) parser.parseCommand(","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"                FindTagsOrCommand.COMMAND_WORD + \" \" + String.join(\" \", tags));","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(new FindTagsOrCommand(new TagsOrFoundPredicate(TagBuilder.build(tags))), command);","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"    public void parseCommand_findTagsAnd() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tags \u003d List.of(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand command \u003d (FindTagsAndCommand) parser.parseCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"                FindTagsAndCommand.COMMAND_WORD + \" \" + String.join(\" \", tags));","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(new FindTagsAndCommand(new TagsAndFoundPredicate(TagBuilder.build(tags))), command);","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"SimHanKiong"},"content":"    public void parseCommand_addTags() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tags \u003d List.of(\"foo\");","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"        AddTagsCommand command \u003d (AddTagsCommand) parser.parseCommand(AddTagsCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"SimHanKiong"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_TAG + tags.get(0));","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(new AddTagsCommand(INDEX_FIRST_PERSON, TagBuilder.build(tags)), command);","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"tanyunchao"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"tanyunchao"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"Colex2000"},"content":"    public void parseCommand_lastContact() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"Colex2000"},"content":"        assertTrue(parser.parseCommand(LastContactCommand.COMMAND_WORD) instanceof LastContactCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"Colex2000"},"content":"        assertTrue(parser.parseCommand(LastContactCommand.COMMAND_WORD + \" 3\") instanceof LastContactCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"tanyunchao"},"content":"    public void parseCommand_upcoming() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(parser.parseCommand(\"upcoming\") instanceof UpcomingCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(parser.parseCommand(\"upcoming 3\") instanceof UpcomingCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"SimHanKiong":34,"Colex2000":7,"ziyang27":8,"tanyunchao":9,"-":95}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTCONTACT;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":213,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":214,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":215,"author":{"gitId":"Colex2000"},"content":"    public void parse_upcomingFieldEmpty_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":216,"author":{"gitId":"Colex2000"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":217,"author":{"gitId":"Colex2000"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_UPCOMING;","lastModifiedDate":"2024-03-23"},{"lineNumber":218,"author":{"gitId":"Colex2000"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-23"},{"lineNumber":219,"author":{"gitId":"Colex2000"},"content":"                Upcoming.MESSAGE_EDIT_EMPTY_STRING_EXCEPTION);","lastModifiedDate":"2024-03-23"},{"lineNumber":220,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":221,"author":{"gitId":"Colex2000"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2024-03-23"},{"lineNumber":222,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":223,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":224,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":225,"author":{"gitId":"Colex2000"},"content":"    public void parse_lastContactFieldEmpty_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":226,"author":{"gitId":"Colex2000"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-23"},{"lineNumber":227,"author":{"gitId":"Colex2000"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_LASTCONTACT;","lastModifiedDate":"2024-03-23"},{"lineNumber":228,"author":{"gitId":"Colex2000"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-23"},{"lineNumber":229,"author":{"gitId":"Colex2000"},"content":"                LastContact.MESSAGE_EDIT_EMPTY_STRING_EXCEPTION);","lastModifiedDate":"2024-03-23"},{"lineNumber":230,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":231,"author":{"gitId":"Colex2000"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2024-03-23"},{"lineNumber":232,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":233,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Colex2000":26,"-":208}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"SimHanKiong":2,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/FindTagsAndCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.FindTagsAndCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsAndFoundPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"public class FindTagsAndCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    private FindTagsAndCommandParser parser \u003d new FindTagsAndCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagsAndCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"!#@#$\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_validArgs_returnsFindTagsOrCommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(\"car\", \"health\");","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsAndCommand expectedCommand \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"                new FindTagsAndCommand(new TagsAndFoundPredicate(TagBuilder.build(tagList)));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        assertParseSuccess(parser, \"car health\", expectedCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"        assertParseSuccess(parser, \" \\n car \\n \\t health  \\t\", expectedCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SimHanKiong":40}},{"path":"src/test/java/seedu/address/logic/parser/FindTagsOrCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.logic.commands.FindTagsOrCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.TagsOrFoundPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"public class FindTagsOrCommandParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    private FindTagsOrCommandParser parser \u003d new FindTagsOrCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagsOrCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"        assertParseFailure(parser, \"!#@#$\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"    public void parse_validArgs_returnsFindTagsOrCommand() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(\"car\", \"health\");","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        FindTagsOrCommand expectedCommand \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"                new FindTagsOrCommand(new TagsOrFoundPredicate(TagBuilder.build(tagList)));","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        assertParseSuccess(parser, \"car health\", expectedCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        assertParseSuccess(parser, \" \\n car \\n \\t health  \\t\", expectedCommand);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SimHanKiong":41}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"tanyunchao"},"content":"    private static final String INVALID_UPCOMING \u003d \"12-12-2024\";","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"    private static final String INVALID_LASTCONTACT \u003d \"12-12-2024\";","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"tanyunchao"},"content":"    private static final String VALID_UPCOMING \u003d \"12-12-2024 1200\";","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"    private static final String VALID_LASTCONTACT \u003d \"13-03-2024 0600\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"tanyunchao"},"content":"    public void parseUpcoming_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"tanyunchao"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseUpcoming(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":209,"author":{"gitId":"tanyunchao"},"content":"    public void parseUpcoming_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":210,"author":{"gitId":"tanyunchao"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUpcoming(INVALID_UPCOMING));","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":213,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":214,"author":{"gitId":"tanyunchao"},"content":"    public void parseUpcoming_validValueWithoutWhitespace_returnsUpcoming() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"tanyunchao"},"content":"        Upcoming expectedUpcoming \u003d new Upcoming(VALID_UPCOMING);","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(expectedUpcoming, ParserUtil.parseUpcoming(VALID_UPCOMING));","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":220,"author":{"gitId":"tanyunchao"},"content":"    public void parseUpcoming_validValueWithWhitespace_returnsTrimmedUpcoming() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":221,"author":{"gitId":"tanyunchao"},"content":"        String upcomingWithWhitespace \u003d WHITESPACE + VALID_UPCOMING + WHITESPACE;","lastModifiedDate":"2024-03-17"},{"lineNumber":222,"author":{"gitId":"tanyunchao"},"content":"        Upcoming expectedUpcoming \u003d new Upcoming(VALID_UPCOMING);","lastModifiedDate":"2024-03-17"},{"lineNumber":223,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(expectedUpcoming, ParserUtil.parseUpcoming(upcomingWithWhitespace));","lastModifiedDate":"2024-03-17"},{"lineNumber":224,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":225,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"Colex2000"},"content":"    public void parseLastContact_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"Colex2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLastContact(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"Colex2000"},"content":"    public void parseLastContact_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"Colex2000"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLastContact(INVALID_LASTCONTACT));","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":235,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":236,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"Colex2000"},"content":"    public void parseLastContact_validValueWithoutWhitespace_returnsLastContact() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"Colex2000"},"content":"        LastContact expectedLastContact \u003d new LastContact(VALID_LASTCONTACT);","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"Colex2000"},"content":"        assertEquals(expectedLastContact, ParserUtil.parseLastContact(VALID_LASTCONTACT));","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":242,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"Colex2000"},"content":"    public void parseLastContact_validValueWithWhitespace_returnsTrimmedLastContact() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"Colex2000"},"content":"        String lastContactWithWhitespace \u003d WHITESPACE + VALID_LASTCONTACT + WHITESPACE;","lastModifiedDate":"2024-03-18"},{"lineNumber":245,"author":{"gitId":"Colex2000"},"content":"        LastContact expectedLastContact \u003d new LastContact(VALID_LASTCONTACT);","lastModifiedDate":"2024-03-18"},{"lineNumber":246,"author":{"gitId":"Colex2000"},"content":"        assertEquals(expectedLastContact, ParserUtil.parseLastContact(lastContactWithWhitespace));","lastModifiedDate":"2024-03-18"},{"lineNumber":247,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Colex2000":26,"tanyunchao":26,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/SelectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":" * outside of the SelectCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"public class SelectCommandParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    private SelectCommandParser parser \u003d new SelectCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"    public void parse_validArgs_returnsSelectCommand() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"        assertParseSuccess(parser, \"1\", new SelectCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ziyang27":32}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"ziyang27"},"content":"        // other modelManager has no selectedPerson -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"ziyang27"},"content":"        modelManager.updateSelectedPerson(ALICE);","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"ziyang27"},"content":"        assertFalse(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"ziyang27"},"content":"        // same selectedPerson -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"ziyang27"},"content":"        modelManagerCopy.updateSelectedPerson(ALICE);","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"ziyang27"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"ziyang27"},"content":"        // different selectedPerson -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"ziyang27"},"content":"        modelManagerCopy.updateSelectedPerson(BENSON);","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"ziyang27"},"content":"        assertFalse(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ziyang27":12,"-":132}},{"path":"src/test/java/seedu/address/model/person/HasUpcomingPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyunchao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"tanyunchao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"public class HasUpcomingPredicateTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":"    public void test_hasUpcoming_returnsTrue() {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":"        // Create a person with upcoming events","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"tanyunchao"},"content":"        Person personWithUpcoming \u003d new PersonBuilder().withUpcoming(\"23-08-2024 1600\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"tanyunchao"},"content":"        // Create the predicate","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"tanyunchao"},"content":"        HasUpcomingPredicate predicate \u003d new HasUpcomingPredicate();","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"tanyunchao"},"content":"        // Test the predicate","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(predicate.test(personWithUpcoming));","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"tanyunchao"},"content":"    public void test_noUpcoming_returnsFalse() {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"tanyunchao"},"content":"        // Create a person without upcoming events","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"tanyunchao"},"content":"        Person personWithoutUpcoming \u003d new PersonBuilder().withUpcoming(\"\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"tanyunchao"},"content":"        // Create the predicate","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"tanyunchao"},"content":"        HasUpcomingPredicate predicate \u003d new HasUpcomingPredicate();","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"tanyunchao"},"content":"        // Test the predicate","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(predicate.test(personWithoutUpcoming));","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"tanyunchao"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"tanyunchao":35}},{"path":"src/test/java/seedu/address/model/person/LastContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"class LastContactTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"    void constructor_nullDateTime_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LastContact(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    void constructor_emptyDateTime_throwsNullPointerException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"        String validDateTime \u003d \"\";","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"        LastContact lastContact \u003d new LastContact(validDateTime);","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        assertEquals(validDateTime, lastContact.toString());","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"        assertNull(lastContact.getDateTime());","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"    void constructor_invalidDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"        String invalidDateTime \u003d \"32-12-2020 2500\"; // This date and time are invalid","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LastContact(invalidDateTime));","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"    void constructor_validDateTime_createsLastContact() {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"        String validDateTime \u003d \"05-03-2024 0600\";","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"        LastContact lastContact \u003d new LastContact(validDateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"        assertEquals(validDateTime, lastContact.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"    void isValidDateTime() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"        // Invalid date formats","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"        assertFalse(LastContact.isValidDateTime(\"31-02-2020 2400\")); // Invalid date and time","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"        assertFalse(LastContact.isValidDateTime(\"05-13-2024 0600\")); // Invalid month","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"        assertTrue(LastContact.isValidDateTime(\"\")); // Empty string","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LastContact(\"30-12-2024 2359\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"        // Valid date format","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"        assertTrue(LastContact.isValidDateTime(\"05-03-2024 0600\")); // Valid date and time","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"    void compareTo() {","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"        LastContact lastcontact1 \u003d new LastContact(\"05-03-2024 0600\");","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"        LastContact lastcontact2 \u003d new LastContact(\"05-03-2024 0600\");","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"        LastContact lastcontact3 \u003d new LastContact(\"05-03-2024 0500\");","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"        assertEquals(0, lastcontact1.compareTo(lastcontact2));","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"        assertEquals(1, lastcontact1.compareTo(lastcontact3));","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Colex2000"},"content":"    void getDateTimeString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Colex2000"},"content":"        String validDateTime \u003d \"05-03-2024 0600\";","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Colex2000"},"content":"        LastContact lastContact \u003d new LastContact(validDateTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Colex2000"},"content":"        assertEquals(validDateTime, lastContact.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"    void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Colex2000"},"content":"        LastContact lastContact1 \u003d new LastContact(\"05-03-2024 0600\");","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Colex2000"},"content":"        LastContact lastContact2 \u003d new LastContact(\"05-03-2024 0600\");","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Colex2000"},"content":"        LastContact lastContact3 \u003d new LastContact(\"06-03-2024 0600\");","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"        assertFalse(lastContact1.equals(null)); // test null return false","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"Colex2000"},"content":"        assertEquals(lastContact1, lastContact2); // Same date and time","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Colex2000"},"content":"        assertFalse(lastContact1.equals(lastContact3)); // Different date and time","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"    void hashCodeTest() {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"        LastContact lastContact1 \u003d new LastContact(\"05-03-2024 0600\");","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"        LastContact lastContact2 \u003d new LastContact(\"05-03-2024 0600\");","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"Colex2000"},"content":"        assertEquals(lastContact1.hashCode(), lastContact2.hashCode()); // Same hash code for same date and time","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Colex2000":85}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"SimHanKiong":1,"-":85}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_CONTACT_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UPCOMING_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"    public void has_upcomingField() {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withUpcoming(\"\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"        // has upcoming field -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"        assertTrue(ALICE.hasUpcoming());","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"        // no upcoming field -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"        assertFalse(editedAlice.hasUpcoming());","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"    public void has_lastcontactField() {","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withLastContact(\"\").build();","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"        // has lastcontact field -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"        assertTrue(ALICE.hasLastcontact());","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"        // no lastcontact field -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"        assertFalse(editedAlice.hasLastcontact());","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":116,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"tanyunchao"},"content":"        // different upcoming -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"tanyunchao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withUpcoming(VALID_UPCOMING_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"tanyunchao"},"content":"        // different lastcontact -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"tanyunchao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLastContact(VALID_LAST_CONTACT_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"tanyunchao"},"content":"    public void hashCode_samePersonFields_sameHashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"tanyunchao"},"content":"        // same object -\u003e same hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"tanyunchao"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(ALICE.hashCode(), aliceCopy.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"tanyunchao"},"content":"        // different object, same fields -\u003e same hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"tanyunchao"},"content":"        Person otherAliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(ALICE.hashCode(), otherAliceCopy.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"tanyunchao"},"content":"    public void hashCode_differentPersonFields_differentHashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"tanyunchao"},"content":"        // different person -\u003e different hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"tanyunchao"},"content":"        assertNotEquals(ALICE.hashCode(), BOB.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"tanyunchao"},"content":"        // different name -\u003e different hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"tanyunchao"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(\"Different Name\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"tanyunchao"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"tanyunchao"},"content":"        // different phone -\u003e different hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"tanyunchao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(\"12345678\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"tanyunchao"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"tanyunchao"},"content":"        // different email -\u003e different hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"tanyunchao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(\"different@example.com\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"tanyunchao"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"tanyunchao"},"content":"        // different address -\u003e different hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"tanyunchao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(\"Different Address\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"tanyunchao"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"tanyunchao"},"content":"        // different tags -\u003e different hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"tanyunchao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(\"differentTag\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"tanyunchao"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"tanyunchao"},"content":"        // different upcoming -\u003e different hash code","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"tanyunchao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withUpcoming(\"01-01-2024 1200\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"tanyunchao"},"content":"        assertNotEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"tanyunchao"},"content":"        // different lastcontact -\u003e same hash code (lastcontact not included in hashCode)","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"tanyunchao"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLastContact(\"01-01-2023 1200\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":168,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(ALICE.hashCode(), editedAlice.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"Colex2000"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"tanyunchao"},"content":"                + \", upcoming\u003d\" + ALICE.getUpcoming()","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"tanyunchao"},"content":"                + \", lastcontact\u003d\" + ALICE.getLastcontact() + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ziyang27":22,"Colex2000":1,"tanyunchao":56,"-":100}},{"path":"src/test/java/seedu/address/model/person/UpcomingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanyunchao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"tanyunchao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"tanyunchao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"tanyunchao"},"content":"public class UpcomingTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":"    public void constructor_validDateTimeString_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"tanyunchao"},"content":"        // Valid date and time string","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(Upcoming.isValidUpcoming(\"01-01-2022 1200\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(Upcoming.isValidUpcoming(\"\")); // Empty string is considered valid","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(\"01-01-2022 1200\", upcoming.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"tanyunchao"},"content":"    public void constructor_invalidDateTimeString_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"tanyunchao"},"content":"        // Invalid date and time string","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"tanyunchao"},"content":"        String invalidDateTime \u003d \"2022-01-01 12:00\"; // Invalid format","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"tanyunchao"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Upcoming(invalidDateTime));","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"tanyunchao"},"content":"    public void compareTo_sameDateTime_returnsZero() {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-04-2023 1500\");","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"01-04-2023 1500\");","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(0, upcoming1.compareTo(upcoming2));","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"tanyunchao"},"content":"    public void compareTo_laterDateTime_returnsPositive() {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-04-2023 1500\");","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"01-04-2023 1400\");","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcoming1.compareTo(upcoming2) \u003e 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"tanyunchao"},"content":"    public void compareTo_earlierDateTime_returnsNegative() {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-04-2023 1400\");","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"01-04-2023 1500\");","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcoming1.compareTo(upcoming2) \u003c 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"tanyunchao"},"content":"    public void compareTo_nullUpcoming_throws() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-04-2023 1500\");","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"tanyunchao"},"content":"        // Assuming you want to throw an exception when comparing with a null Upcoming","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"tanyunchao"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"tanyunchao"},"content":"            upcoming1.compareTo(upcoming2);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"tanyunchao"},"content":"            // Fail the test if no exception is thrown","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"tanyunchao"},"content":"            throw new AssertionError(\"Expected NullPointerException\");","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"tanyunchao"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"tanyunchao"},"content":"            // Expected exception, test passed","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"tanyunchao"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"tanyunchao"},"content":"    public void compareTo_differentDayMonthYear_returnsCorrectValue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-04-2023 1500\");","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"02-05-2024 1600\");","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcoming1.compareTo(upcoming2) \u003c 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcoming2.compareTo(upcoming1) \u003e 0);","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"tanyunchao"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcoming.equals(upcoming));","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"tanyunchao"},"content":"    public void equals_nullObject_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(upcoming.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"tanyunchao"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(upcoming.equals(\"01-01-2022 1200\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"tanyunchao"},"content":"    public void equals_sameDateTime_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcoming1.equals(upcoming2));","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"tanyunchao"},"content":"    public void equals_differentDateTime_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"02-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(upcoming1.equals(upcoming2));","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"tanyunchao"},"content":"    public void equals_differentUpcomingStatus_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"01-04-2023 1500\");","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(upcoming1.equals(upcoming2));","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"tanyunchao"},"content":"    public void equals_oneUpcomingEmpty_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"01-04-2023 1500\");","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(upcoming1.equals(upcoming2));","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"tanyunchao"},"content":"    public void equals_bothUpcomingEmpty_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcoming1.equals(upcoming2));","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"tanyunchao"},"content":"    public void hashCode_sameDateTime_returnsSameHashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(upcoming1.hashCode(), upcoming2.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"tanyunchao"},"content":"    public void hashCode_differentDateTime_returnsDifferentHashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming1 \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming2 \u003d new Upcoming(\"02-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"tanyunchao"},"content":"        assertNotEquals(upcoming1.hashCode(), upcoming2.hashCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"tanyunchao"},"content":"    public void toString_hasUpcoming_returnsFormattedDateTime() {","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"tanyunchao"},"content":"        String expected \u003d \"01-01-2022 1200\";","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(expected, upcoming.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"tanyunchao"},"content":"    public void toString_noUpcoming_returnsEmptyString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d new Upcoming(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"tanyunchao"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"tanyunchao"},"content":"        assertEquals(expected, upcoming.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"tanyunchao"},"content":"    public void hasUpcoming_true() {","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d new Upcoming(\"01-01-2022 1200\");","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"tanyunchao"},"content":"        assertTrue(upcoming.hasUpcoming());","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"tanyunchao"},"content":"    public void hasUpcoming_false() {","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"tanyunchao"},"content":"        Upcoming upcoming \u003d new Upcoming(\"\");","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"tanyunchao"},"content":"        assertFalse(upcoming.hasUpcoming());","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"tanyunchao"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"tanyunchao":169}},{"path":"src/test/java/seedu/address/model/tag/TagsAndFoundPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"public class TagsAndFoundPredicateTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e firstTagList \u003d List.of(\"first\");","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e secondTagList \u003d List.of(\"first\", \"second\");","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate firstPredicate \u003d preparePredicate(firstTagList);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate secondPredicate \u003d preparePredicate(secondTagList);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate firstPredicateCopy \u003d preparePredicate(firstTagList);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    public void test_tagFound_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(List.of(\"car\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"car\", \"health\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\", \"health\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"car\", \"health\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\", \"health\", \"flight\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of());","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"Car\", \"Health\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\", \"health\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    public void test_tagNotFound_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(List.of(\"motorcycle\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"car\", \"health\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"car\", \"health\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"health\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"car\", \"health\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"car\", \"covid\").build()));","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(\"tag1\", \"tag2\");","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"        TagsAndFoundPredicate predicate \u003d preparePredicate(tagList);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"        String expected \u003d TagsAndFoundPredicate.class.getCanonicalName() + \"{tags\u003d\" + TagBuilder.build(tagList) + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"     * Parses {@code userInput} into a {@code TagsAndFoundPredicate}.","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"    private TagsAndFoundPredicate preparePredicate(List\u003cString\u003e tagList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"        return new TagsAndFoundPredicate(TagBuilder.build(tagList));","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"SimHanKiong":78}},{"path":"src/test/java/seedu/address/model/tag/TagsOrFoundPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"public class TagsOrFoundPredicateTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e firstTagList \u003d List.of(\"first\");","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e secondTagList \u003d List.of(\"first\", \"second\");","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate firstPredicate \u003d preparePredicate(firstTagList);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate secondPredicate \u003d preparePredicate(secondTagList);","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate firstPredicateCopy \u003d preparePredicate(firstTagList);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    public void test_tagFound_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(List.of(\"car\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"car\", \"health\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"health\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"car\", \"health\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\", \"covid\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"car\", \"health\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\", \"health\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"Car\", \"Health\", \"CAR\", \"HEAlth\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"car\", \"health\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    public void test_tagNotFound_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(List.of());","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"car\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"        predicate \u003d preparePredicate(List.of(\"motorcycle\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"car\", \"health\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e tagList \u003d List.of(\"tag1\", \"tag2\");","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"        TagsOrFoundPredicate predicate \u003d preparePredicate(tagList);","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        String expected \u003d TagsOrFoundPredicate.class.getCanonicalName() + \"{tags\u003d\" + TagBuilder.build(tagList) + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"     * Parses {@code userInput} into a {@code TagsOrFoundPredicate}.","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"    private TagsOrFoundPredicate preparePredicate(List\u003cString\u003e tagList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"        return new TagsOrFoundPredicate(TagBuilder.build(tagList));","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SimHanKiong":75}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"tanyunchao"},"content":"    private static final String INVALID_UPCOMING \u003d \"12-12-2024\";","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"    private static final String INVALID_LASTCONTACT \u003d \"05-09-20000 1920\";","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"    private static final String VALID_LASTCONTACT \u003d BENSON.getLastcontact().toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"tanyunchao"},"content":"    private static final String VALID_UPCOMING \u003d BENSON.getUpcoming().toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Colex2000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"tanyunchao"},"content":"                VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"tanyunchao"},"content":"                invalidTags, VALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"tanyunchao"},"content":"    public void toModelType_invalidUpcoming_throwsIllegalValueException() {","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, INVALID_UPCOMING, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"tanyunchao"},"content":"        String expectedMessage \u003d Upcoming.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"tanyunchao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"tanyunchao"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"tanyunchao"},"content":"    public void toModelType_nullUpcoming_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"tanyunchao"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, null, VALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"tanyunchao"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"tanyunchao"},"content":"                Upcoming.class.getSimpleName());","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"tanyunchao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"Colex2000"},"content":"    public void toModelType_invalidLastContact_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"Colex2000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, INVALID_LASTCONTACT);","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"Colex2000"},"content":"        String expectedMessage \u003d String.format(LastContact.MESSAGE_CONSTRAINTS, INVALID_LASTCONTACT);","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"Colex2000"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"Colex2000"},"content":"    public void toModelType_nullLastContact_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"Colex2000"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"tanyunchao"},"content":"                VALID_TAGS, VALID_UPCOMING, null);","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"Colex2000"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LastContact.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"Colex2000"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Colex2000":19,"tanyunchao":38,"-":96}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"        this.descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"tanyunchao"},"content":"        descriptor.setUpcoming(person.getUpcoming());","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"        descriptor.setLastContact(person.getLastcontact());","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"Colex2000"},"content":"     * Sets the {@code LastContact} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"Colex2000"},"content":"     * @param lastcontact the dateTime string provided.","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"Colex2000"},"content":"     * @return the EditPersonDescriptorBuilder object.","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"Colex2000"},"content":"    public EditPersonDescriptorBuilder withLastContact(String lastcontact) {","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"Colex2000"},"content":"        descriptor.setLastContact(new LastContact(lastcontact));","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"Colex2000"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"tanyunchao"},"content":"     * Sets the {@code Upcoming} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"tanyunchao"},"content":"    public EditPersonDescriptorBuilder withUpcoming(String upcoming) {","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"tanyunchao"},"content":"        descriptor.setUpcoming(new Upcoming(upcoming));","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"tanyunchao"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Colex2000":13,"tanyunchao":10,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.LastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":"import seedu.address.model.person.Upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"tanyunchao"},"content":"    public static final String DEFAULT_UPCOMING \u003d \"12-12-2024 1200\";","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"    public static final String DEFAULT_LASTCONTACT \u003d \"13-03-2024 0600\";","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"tanyunchao"},"content":"    private Upcoming upcoming;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"    private LastContact lastContact;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"tanyunchao"},"content":"        upcoming \u003d new Upcoming(DEFAULT_UPCOMING);","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"        lastContact \u003d new LastContact(DEFAULT_LASTCONTACT);","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"tanyunchao"},"content":"        upcoming \u003d personToCopy.getUpcoming();","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"        lastContact \u003d personToCopy.getLastcontact();","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and add it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"    public PersonBuilder addTags(List\u003cString\u003e tagList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"        this.tags.addAll(TagBuilder.build(tagList));","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"        return this;","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"tanyunchao"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"tanyunchao"},"content":"     * Sets the {@code Upcoming} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"tanyunchao"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"tanyunchao"},"content":"    public PersonBuilder withUpcoming(String upcoming) {","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"tanyunchao"},"content":"        this.upcoming \u003d new Upcoming(upcoming);","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"tanyunchao"},"content":"        return this;","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"tanyunchao"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"tanyunchao"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"Colex2000"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"Colex2000"},"content":"     * Sets the {@code LastContact} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"Colex2000"},"content":"     * @param lastContact consists of a string of date and time","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"Colex2000"},"content":"     * @return the person we are building","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"Colex2000"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"Colex2000"},"content":"    public PersonBuilder withLastContact(String lastContact) {","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"Colex2000"},"content":"        this.lastContact \u003d new LastContact(lastContact);","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"Colex2000"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":130,"author":{"gitId":"tanyunchao"},"content":"        return new Person(name, phone, email, address, tags, upcoming, lastContact);","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"SimHanKiong":9,"Colex2000":15,"tanyunchao":14,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTCONTACT;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPCOMING;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"tanyunchao"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"tanyunchao"},"content":"        sb.append(PREFIX_UPCOMING + person.getUpcoming().toString() + \" \");","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"        sb.append(PREFIX_LASTCONTACT + person.getLastcontact().toString() + \" \");","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"tanyunchao"},"content":"     * Returns the part of command string for the given","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"tanyunchao"},"content":"     * {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"tanyunchao"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"tanyunchao"},"content":"        descriptor.getUpcoming()","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"Colex2000"},"content":"                .ifPresent(upcoming -\u003e sb.append(PREFIX_UPCOMING).append(upcoming).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Colex2000"},"content":"        descriptor.getLastcontact()","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Colex2000"},"content":"                .ifPresent(lastContact -\u003e sb.append(PREFIX_LASTCONTACT)","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Colex2000"},"content":"                        .append(lastContact).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Colex2000":6,"tanyunchao":7,"-":58}},{"path":"src/test/java/seedu/address/testutil/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Colex2000"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Colex2000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Colex2000"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Colex2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Colex2000"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Colex2000"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Colex2000"},"content":"    public void getSamplePersons_correctlyCreatesSamplePersons() {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Colex2000"},"content":"        Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Colex2000"},"content":"        assertNotNull(samplePersons);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Colex2000"},"content":"        assertEquals(6, samplePersons.length); // Assuming there are 6 sample persons","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Colex2000"},"content":"        // Check details of the first sample person","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Colex2000"},"content":"        Person firstPerson \u003d samplePersons[0];","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Colex2000"},"content":"        assertEquals(\"Alex Yeoh\", firstPerson.getName().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Colex2000"},"content":"        assertEquals(\"87438807\", firstPerson.getPhone().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Colex2000"},"content":"        assertEquals(\"alexyeoh@example.com\", firstPerson.getEmail().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Colex2000"},"content":"        assertEquals(\"Blk 30 Geylang Street 29, #06-40\", firstPerson.getAddress().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Colex2000"},"content":"        assertTrue(firstPerson.getTags().contains(new Tag(\"friends\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Colex2000"},"content":"        assertEquals(SampleDataUtil.DUMMY_LASTCONTACT, firstPerson.getLastcontact());","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Colex2000"},"content":"    public void getSampleAddressBook_correctlyPopulatesSampleAddressBook() {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Colex2000"},"content":"        ReadOnlyAddressBook sampleAb \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Colex2000"},"content":"        assertNotNull(sampleAb);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Colex2000"},"content":"        // The address book should have the same number of persons as the sample data","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Colex2000"},"content":"        assertEquals(6, sampleAb.getPersonList().size());","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Colex2000"},"content":"        // Verify some details of the first person in the address book","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Colex2000"},"content":"        Person firstPersonInAddressBook \u003d sampleAb.getPersonList().get(0);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Colex2000"},"content":"        assertEquals(\"Alex Yeoh\", firstPersonInAddressBook.getName().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Colex2000"},"content":"        assertEquals(\"87438807\", firstPersonInAddressBook.getPhone().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Colex2000"},"content":"        assertEquals(\"alexyeoh@example.com\", firstPersonInAddressBook.getEmail().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Colex2000"},"content":"        assertEquals(\"Blk 30 Geylang Street 29, #06-40\", firstPersonInAddressBook.getAddress().toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Colex2000"},"content":"        assertTrue(firstPersonInAddressBook.getTags().contains(new Tag(\"friends\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Colex2000"},"content":"        assertEquals(SampleDataUtil.DUMMY_LASTCONTACT, firstPersonInAddressBook.getLastcontact());","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Colex2000"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Colex2000"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Colex2000"},"content":"    public void getTagSet_createsCorrectTagSet() {","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Colex2000"},"content":"        Set\u003cTag\u003e tags \u003d SampleDataUtil.getTagSet(\"friends\", \"colleagues\");","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Colex2000"},"content":"        assertNotNull(tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Colex2000"},"content":"        assertEquals(2, tags.size());","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Colex2000"},"content":"        assertTrue(tags.contains(new Tag(\"friends\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Colex2000"},"content":"        assertTrue(tags.contains(new Tag(\"colleagues\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"Colex2000"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Colex2000"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Colex2000":60}},{"path":"src/test/java/seedu/address/testutil/TagBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":" * A utility to help build a set of tags","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"public class TagBuilder {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    public static Set\u003cTag\u003e build(List\u003cString\u003e tagList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"        return tagList.stream().map(tag -\u003e new Tag(tag.toLowerCase())).collect(Collectors.toSet());","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"SimHanKiong":18}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UPCOMING_AMY;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"tanyunchao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UPCOMING_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"tanyunchao"},"content":"            .withTags(\"car\")","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"tanyunchao"},"content":"            .withUpcoming(\"01-05-2024 1500\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"tanyunchao"},"content":"            .withTags(\"death\", \"car\")","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"tanyunchao"},"content":"            .withUpcoming(\"06-06-2024 1600\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"            .withTags(\"health\")","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"            .withUpcoming(\"05-05-2024 1234\")","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"            .build();","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"            .withTags(\"covid\", \"flight\", \"disability\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"tanyunchao"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"tanyunchao"},"content":"            .withUpcoming(VALID_UPCOMING_AMY)","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"tanyunchao"},"content":"            .build();","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"tanyunchao"},"content":"            .withUpcoming(VALID_UPCOMING_BOB)","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"SimHanKiong":2,"ziyang27":11,"tanyunchao":10,"-":68}}]
