[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"## What type of PR is this? (check all applicable)","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] Refactor","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] Feature","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] Bug Fix","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] Optimization","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] Documentation Update","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"## Description","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"-   Describe your changes.","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"## Related Tickets \u0026 Documents","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"-   Related Issue #","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"## Added/updated tests?","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"_We encourage you to keep the code coverage percentage at 75% and above for new changes._","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] Yes","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] No, and this is why: \u003c_please replace this line with details on why tests","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"    have not been included_\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] No, there are UI changes that I\u0027m unable to cover.","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"-   [ ] I need help with writing tests","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"## [Optional] Are there any post deployment tasks we need to perform?","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"shawnnlimm":27}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F11-1/tp/graph/badge.svg?token\u003dBHN72CM28D)](https://codecov.io/gh/AY2324S2-CS2103T-F11-1/tp)","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"### nerdTrackerPlus","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"Are you a Computer Science TA having troubles with keeping track of student details and their progress?","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"Introducing nerdTrackerPlus, your ultimate companion in managing student details and tracking their progress effortlessly!","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"Designed with Computer Science Teaching Assistants in mind, nerdTrackerPlus streamlines the process of organizing student information, grading assignments, and monitoring their academic journey. Say goodbye to the hassle of scattered spreadsheets and endless paperwork â€“ with nerdTrackerPlus, you\u0027ll have everything you need at your fingertips to excel in your role as a TA. Let\u0027s simplify your workload and elevate your teaching experience together!\"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"### Documentation","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"For the detailed documentation of this project, see the **[nerdTrackerPlus Product Website](https://ay2324s2-cs2103t-f11-1.github.io/tp/)**.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"### Acknowledgements","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"shawnnlimm":13,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"    archiveFileName \u003d \u0027nerdTrackerPlus.jar\u0027","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"run {","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"shawnnlimm":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"### Shawn Lim","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/shawnnlimm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"[[github](https://github.com/shawnnlimm)]","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"* Role: Developer","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"### Ryo Seah","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/ryo-seah.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"[[github](http://github.com/Ryo-Seah)]","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"* Responsibilities: Everything","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"### Dylan Wong","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/thewongdylan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"[[github](http://github.com/thewongdylan)]","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"* Responsibilities: Everything","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"### James Shen","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"\u003cimg src\u003d\"images/shamesjen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"[[github](http://github.com/shamesjen)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"* Responsibilities: Search Features, filter","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"shawnnlimm":6,"-":29,"shamesjen":4,"Ryo-Seah":3,"thewongdylan":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"* nerdTrackerPlus is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/)","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"![Structure of the UI Component](images/dg/UiClassDiagram.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"shawnnlimm"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/dg/DeleteSequenceDiagram.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"shawnnlimm"},"content":"### Mark Participation feature","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"shawnnlimm"},"content":"#### Implementation","lastModifiedDate":"2024-04-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":162,"author":{"gitId":"shawnnlimm"},"content":"The `markp` command allows users to mark the participation score of students for a particular week. It takes in an index representing the index of the person to mark in the list, as well as a week number representing the target week to mark.","lastModifiedDate":"2024-04-11"},{"lineNumber":163,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"shawnnlimm"},"content":"To better understand how the mark command is executed, below is a sequence diagram to provide a visual representation.","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"shawnnlimm"},"content":"![MarkParticipationSequenceDiagram](assets/dg/MarkParticipationSequenceDiagram.png)","lastModifiedDate":"2024-04-11"},{"lineNumber":167,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"shawnnlimm"},"content":"The sequence diagrams below provide information for the respective reference frames.","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"shawnnlimm"},"content":"![MarkParticipation](assets/dg/SDMarkParticipation.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"shawnnlimm"},"content":"![CreateMarkCommandResult](assets/dg/SDMarkParticipationCommandResult.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"thewongdylan"},"content":"![CommitAddressbook](assets/dg/SDMarkParticipationCommitAddressbook.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"shawnnlimm"},"content":"#### Design considerations","lastModifiedDate":"2024-04-11"},{"lineNumber":177,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":178,"author":{"gitId":"shawnnlimm"},"content":"**Aspect: How to mark a student\u0027s participation score:**","lastModifiedDate":"2024-04-11"},{"lineNumber":179,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":180,"author":{"gitId":"shawnnlimm"},"content":"* **Current implementation:** Creates a new person with updated participation scores.","lastModifiedDate":"2024-04-11"},{"lineNumber":181,"author":{"gitId":"thewongdylan"},"content":"    * Pros: Ensures immutability of each person object, which reduces the potential for unintended side effects caused by mutable state changes.","lastModifiedDate":"2024-04-13"},{"lineNumber":182,"author":{"gitId":"shawnnlimm"},"content":"    * Cons: May incur some performance overhead since we are creating a new copy of a person each time the command is called.","lastModifiedDate":"2024-04-11"},{"lineNumber":183,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":184,"author":{"gitId":"shawnnlimm"},"content":"* **Alternative:** Update the participation field of the existing person object.","lastModifiedDate":"2024-04-11"},{"lineNumber":185,"author":{"gitId":"shawnnlimm"},"content":"    * Pros: Will use less memory since we are not recreating a person object.","lastModifiedDate":"2024-04-11"},{"lineNumber":186,"author":{"gitId":"shawnnlimm"},"content":"    * Cons: Person become mutable, which might be challenging to test and ensure correctness as the state changes constantly.","lastModifiedDate":"2024-04-11"},{"lineNumber":187,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"shamesjen"},"content":"### Filter feature","lastModifiedDate":"2024-04-14"},{"lineNumber":189,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":190,"author":{"gitId":"shamesjen"},"content":"#### Implementation","lastModifiedDate":"2024-04-14"},{"lineNumber":191,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":192,"author":{"gitId":"shamesjen"},"content":"The \u0027filter\u0027 command allows users to filter the currently shown list of students based on tags that match any of the specified tags given with","lastModifiedDate":"2024-04-14"},{"lineNumber":193,"author":{"gitId":"shamesjen"},"content":"the command. It takes in the \u0027filter\u0027 keyword as well as one or more alphanumeric tags separated by a space.","lastModifiedDate":"2024-04-14"},{"lineNumber":194,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":195,"author":{"gitId":"shamesjen"},"content":"To better understand how the filter command is executed, below is a sequence diagram to provide a visual representation.","lastModifiedDate":"2024-04-14"},{"lineNumber":196,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":197,"author":{"gitId":"shamesjen"},"content":"![FilterCommandSequenceDiagram](assets/dg/FilterCommandSequenceDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":198,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":199,"author":{"gitId":"shamesjen"},"content":"The sequence diagrams below provide information for the respective reference frames.","lastModifiedDate":"2024-04-14"},{"lineNumber":200,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"shamesjen"},"content":"![FilterCommand](assets/dg/SDFilterStudents.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":202,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":203,"author":{"gitId":"shamesjen"},"content":"![FilterCommandResult](assets/dg/SDFilterCommandResult.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":204,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":205,"author":{"gitId":"shamesjen"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-14"},{"lineNumber":206,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":207,"author":{"gitId":"shamesjen"},"content":"**Aspect: How to filter the students shown by tag:**","lastModifiedDate":"2024-04-14"},{"lineNumber":208,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":209,"author":{"gitId":"shamesjen"},"content":"* **Current implementation:** By using a PersonContainsTagPredicate, we update the filteredList in the Model which displays the students in the GUI.","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"shamesjen"},"content":"    * Pros: Allows the filter command to use existing methods in the Model to filter the list of students. This reduces the negative side effects of the filter command.","lastModifiedDate":"2024-04-14"},{"lineNumber":211,"author":{"gitId":"shamesjen"},"content":"    * Cons: The current implementation is dependent on the Model class and any bugs there renders the method useless.","lastModifiedDate":"2024-04-14"},{"lineNumber":212,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":213,"author":{"gitId":"shamesjen"},"content":"* **Alternative:** By using a separate class to filter the students.","lastModifiedDate":"2024-04-14"},{"lineNumber":214,"author":{"gitId":"shamesjen"},"content":"    * Pros: Reduces the dependency on the Model class and allows for easier testing of the filter command.","lastModifiedDate":"2024-04-14"},{"lineNumber":215,"author":{"gitId":"shamesjen"},"content":"    * Cons: Requires additional classes to be created which may increase the complexity of the codebase.","lastModifiedDate":"2024-04-14"},{"lineNumber":216,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":217,"author":{"gitId":"thewongdylan"},"content":"### Grade Assignment feature","lastModifiedDate":"2024-04-13"},{"lineNumber":218,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":219,"author":{"gitId":"thewongdylan"},"content":"#### Implementation","lastModifiedDate":"2024-04-13"},{"lineNumber":220,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":221,"author":{"gitId":"thewongdylan"},"content":"The `grade` command allows users to assign a score to a particular student for a particular assignment. It takes in an index representing the index of the person to grade in the list, the name of the assignment to be graded, as well as a grade representing the grade to assign.","lastModifiedDate":"2024-04-13"},{"lineNumber":222,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":223,"author":{"gitId":"thewongdylan"},"content":"To better understand how the grade command is executed, below is a sequence diagram to provide a visual representation.","lastModifiedDate":"2024-04-13"},{"lineNumber":224,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":225,"author":{"gitId":"thewongdylan"},"content":"![GradeAssignmentSequenceDiagram](assets/dg/GradeAssignmentSequenceDiagram.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":226,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":227,"author":{"gitId":"thewongdylan"},"content":"The sequence diagrams below provide information for the respective reference frames.","lastModifiedDate":"2024-04-13"},{"lineNumber":228,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":229,"author":{"gitId":"thewongdylan"},"content":"![GradeAssignment](assets/dg/SDGradeAssignment.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":230,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":231,"author":{"gitId":"thewongdylan"},"content":"![CreateGradeAssignmentCommandResult](assets/dg/SDGradeAssignmentCommandResult.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":233,"author":{"gitId":"thewongdylan"},"content":"![CommitAddressbook](assets/dg/SDGradeAssignmentCommitAddressbook.png)","lastModifiedDate":"2024-04-13"},{"lineNumber":234,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":235,"author":{"gitId":"thewongdylan"},"content":"#### Design considerations","lastModifiedDate":"2024-04-13"},{"lineNumber":236,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":237,"author":{"gitId":"thewongdylan"},"content":"**Aspect: How to grade a student for a specific assignment:**","lastModifiedDate":"2024-04-13"},{"lineNumber":238,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":239,"author":{"gitId":"thewongdylan"},"content":"* **Current implementation:** Creates a new person with updated assignment grade.","lastModifiedDate":"2024-04-13"},{"lineNumber":240,"author":{"gitId":"thewongdylan"},"content":"    * Pros: Ensures immutability of each person object, which reduces the potential for unintended side effects caused by mutable state changes.","lastModifiedDate":"2024-04-13"},{"lineNumber":241,"author":{"gitId":"thewongdylan"},"content":"    * Cons: May incur some performance overhead since we are creating a new copy of a person each time the command is called.","lastModifiedDate":"2024-04-13"},{"lineNumber":242,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":243,"author":{"gitId":"thewongdylan"},"content":"* **Alternative:** Update the assignment field of the existing person object.","lastModifiedDate":"2024-04-13"},{"lineNumber":244,"author":{"gitId":"thewongdylan"},"content":"    * Pros: Will use less memory since we are not recreating a person object.","lastModifiedDate":"2024-04-13"},{"lineNumber":245,"author":{"gitId":"thewongdylan"},"content":"    * Cons: Person become mutable, which might be challenging to test and ensure correctness as the state changes constantly.","lastModifiedDate":"2024-04-13"},{"lineNumber":246,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":247,"author":{"gitId":"thewongdylan"},"content":"**Aspect: Range and state of grades that can be assigned for an assignment:**","lastModifiedDate":"2024-04-13"},{"lineNumber":248,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":249,"author":{"gitId":"thewongdylan"},"content":"* **Current implementation:** Grades are defaulted to 0 upon the creation of an assignment, and are displayed as yellow text boxes.","lastModifiedDate":"2024-04-13"},{"lineNumber":250,"author":{"gitId":"thewongdylan"},"content":"    * Pros: Allows for easy visual distinction between assignments with 0 and nonzero grades.","lastModifiedDate":"2024-04-13"},{"lineNumber":251,"author":{"gitId":"thewongdylan"},"content":"    * Cons: Does not allow for distinction between assignments with grade 0 and ungraded assignments.","lastModifiedDate":"2024-04-13"},{"lineNumber":252,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":253,"author":{"gitId":"thewongdylan"},"content":"* **Alternative:** Implement a new state for assignments: ungraded, displayed as red text boxes.","lastModifiedDate":"2024-04-13"},{"lineNumber":254,"author":{"gitId":"thewongdylan"},"content":"    * Pros: Will allow for distinction between assignments with grade 0 and ungraded assignments.","lastModifiedDate":"2024-04-13"},{"lineNumber":255,"author":{"gitId":"thewongdylan"},"content":"    * Cons: Requires additional work by users to assign grades to ungraded assignments, since there would no longer be a default grade of 0.","lastModifiedDate":"2024-04-13"},{"lineNumber":256,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":257,"author":{"gitId":"thewongdylan"},"content":"### Undo/redo feature","lastModifiedDate":"2024-03-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"thewongdylan"},"content":"#### Implementation","lastModifiedDate":"2024-03-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"thewongdylan"},"content":"The undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList`, `commandResultList`, and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"thewongdylan"},"content":"* `VersionedAddressBook#commitInitial()`â€‰â€”â€‰Saves the initial address book state (upon initialisation) in its history.","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"thewongdylan"},"content":"* `VersionedAddressBook#getUndoneCommand()`â€‰â€”â€‰Fetches information about the command that was undone.","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"thewongdylan"},"content":"* `VersionedAddressBook#getRedoneCommand()`â€‰â€”â€‰Fetches information about the command that was redone.","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"thewongdylan"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`, `Model#redoAddressBook()`, `Model#getAddressBookUndoneCommand()`, and `Model#getAddressBookRedoneCommand()` respectively.","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"thewongdylan"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state, saved with `VersionedAddressBook#commitInitial()`.","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"shawnnlimm"},"content":"![UndoRedoState0](images/dg/UndoRedoState0.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"thewongdylan"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, the `CommandResult` of the delete command to be saved in `commandResultList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"shawnnlimm"},"content":"![UndoRedoState1](images/dg/UndoRedoState1.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"shawnnlimm"},"content":"![UndoRedoState2](images/dg/UndoRedoState2.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"thewongdylan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":288,"author":{"gitId":"thewongdylan"},"content":":information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`. The command will also not be saved into `commandResultList`.","lastModifiedDate":"2024-03-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"shawnnlimm"},"content":"![UndoRedoState3](images/dg/UndoRedoState3.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"thewongdylan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":297,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"thewongdylan"},"content":":information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"shawnnlimm"},"content":"![UndoSequenceDiagram](images/dg/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"thewongdylan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":309,"author":{"gitId":"thewongdylan"},"content":":information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-03-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":315,"author":{"gitId":"shawnnlimm"},"content":"![UndoSequenceDiagram](images/dg/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":317,"author":{"gitId":"thewongdylan"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state. It also returns information about the redone command through `Model#getAddressBookRedoneCommand()`.","lastModifiedDate":"2024-03-21"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"thewongdylan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":321,"author":{"gitId":"thewongdylan"},"content":":information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-03-21"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"thewongdylan"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will not call `Model#commitAddressBook()`, `Model#undoAddressBook()`, or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-21"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"shawnnlimm"},"content":"![UndoRedoState4](images/dg/UndoRedoState4.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"thewongdylan"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. This is determined by calling `VersionedAddressBook#shouldPurge()`, and if there are future state to be purged, `VersionedAddressBook#purge()` will be called.","lastModifiedDate":"2024-03-21"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":331,"author":{"gitId":"thewongdylan"},"content":"Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-03-21"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"shawnnlimm"},"content":"![UndoRedoState5](images/dg/UndoRedoState5.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"images/dg/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"thewongdylan"},"content":"* **Current implementation:** Saves the entire address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":344,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"thewongdylan"},"content":"* **Alternative:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-03-21"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"Ryo-Seah"},"content":"### Add Assignment Feature","lastModifiedDate":"2024-04-14"},{"lineNumber":353,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":354,"author":{"gitId":"Ryo-Seah"},"content":"#### Implementation","lastModifiedDate":"2024-04-14"},{"lineNumber":355,"author":{"gitId":"Ryo-Seah"},"content":"The Add Assignment feature allows users to add assignments to users in the address book. An Assignment is represented by","lastModifiedDate":"2024-04-14"},{"lineNumber":356,"author":{"gitId":"Ryo-Seah"},"content":"the Assignment class, which contains the assignment name and score. The command takes in a list of assignment","lastModifiedDate":"2024-04-14"},{"lineNumber":357,"author":{"gitId":"Ryo-Seah"},"content":"names then creates and adds a list of those assignments to the Assignment list of all users that do not already","lastModifiedDate":"2024-04-14"},{"lineNumber":358,"author":{"gitId":"Ryo-Seah"},"content":"have an assignment with the same name. The assignments are initiated with a score of 0 and saved to the storage file.","lastModifiedDate":"2024-04-14"},{"lineNumber":359,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":360,"author":{"gitId":"Ryo-Seah"},"content":"To better understand how the add assignment command is executed, below is a sequence diagram to provide a visual representation.","lastModifiedDate":"2024-04-14"},{"lineNumber":361,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":362,"author":{"gitId":"Ryo-Seah"},"content":"![AddAssignmentSequenceDiagram](assets/dg/AddAssignmentSequenceDiagram.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":363,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":364,"author":{"gitId":"Ryo-Seah"},"content":"The sequence diagrams below provide information for the respective reference frames.","lastModifiedDate":"2024-04-14"},{"lineNumber":365,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":366,"author":{"gitId":"Ryo-Seah"},"content":"![AddAssignment](assets/dg/SDAddAssignment.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"Ryo-Seah"},"content":"![CreateAddAssignmentCommandResult](assets/dg/SDAddAssignmentCommandResult.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":369,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":370,"author":{"gitId":"Ryo-Seah"},"content":"![CommitAddressbook](assets/dg/SDAddAssignmentCommitAddressbook.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":371,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":372,"author":{"gitId":"Ryo-Seah"},"content":"#### Design considerations","lastModifiedDate":"2024-04-14"},{"lineNumber":373,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":374,"author":{"gitId":"Ryo-Seah"},"content":"**Aspect: How to add assignments to students:**","lastModifiedDate":"2024-04-14"},{"lineNumber":375,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":376,"author":{"gitId":"Ryo-Seah"},"content":"* **Current implementation:** Creates a new person with updated assignment list.","lastModifiedDate":"2024-04-14"},{"lineNumber":377,"author":{"gitId":"Ryo-Seah"},"content":"    * Pros: Ensures immutability of each person object, which reduces the potential for unintended side effects caused by mutable state changes.","lastModifiedDate":"2024-04-14"},{"lineNumber":378,"author":{"gitId":"Ryo-Seah"},"content":"    * Cons: May incur some performance overhead since we are creating a new copy of a person each time the command is called.","lastModifiedDate":"2024-04-14"},{"lineNumber":379,"author":{"gitId":"Ryo-Seah"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-04-14"},{"lineNumber":380,"author":{"gitId":"Ryo-Seah"},"content":"* **Alternative:** Update the assignment list of the existing person object.","lastModifiedDate":"2024-04-14"},{"lineNumber":381,"author":{"gitId":"Ryo-Seah"},"content":"    * Pros: Will use less memory since we are not recreating a person object.","lastModifiedDate":"2024-04-14"},{"lineNumber":382,"author":{"gitId":"Ryo-Seah"},"content":"    * Cons: Person become mutable, which might be challenging to test and ensure correctness as the state changes constantly.","lastModifiedDate":"2024-04-14"},{"lineNumber":383,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":384,"author":{"gitId":"Ryo-Seah"},"content":"**Aspect: How to handle duplicate Assignments:**","lastModifiedDate":"2024-04-14"},{"lineNumber":385,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":386,"author":{"gitId":"Ryo-Seah"},"content":"* **Current implementation:** Checks if the assignment already exists in the person\u0027s assignment list.","lastModifiedDate":"2024-04-14"},{"lineNumber":387,"author":{"gitId":"Ryo-Seah"},"content":"Adds the assignment if it does not exist. Duplicates are ignored as long as one person on the list does not have the assignment.","lastModifiedDate":"2024-04-14"},{"lineNumber":388,"author":{"gitId":"Ryo-Seah"},"content":"    * Pros: Ensures that duplicate assignments are not added to the person\u0027s assignment list.","lastModifiedDate":"2024-04-14"},{"lineNumber":389,"author":{"gitId":"Ryo-Seah"},"content":"    * Cons: Does not tell user which are ignored.","lastModifiedDate":"2024-04-14"},{"lineNumber":390,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":391,"author":{"gitId":"Ryo-Seah"},"content":"* **Alternative:** Checks if the duplicates exists in each person\u0027s assignment list, prompt user to confirm if they want to add the assignment.","lastModifiedDate":"2024-04-14"},{"lineNumber":392,"author":{"gitId":"Ryo-Seah"},"content":"    * Pros: Ensures that the user is aware of the duplicates and can decide if they want to add the assignment.","lastModifiedDate":"2024-04-14"},{"lineNumber":393,"author":{"gitId":"Ryo-Seah"},"content":"    * Cons: May be cumbersome for the user if they have many duplicates and have large student list.","lastModifiedDate":"2024-04-14"},{"lineNumber":394,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":396,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"shawnnlimm"},"content":"* Has a need to manage a significant number students from tutorial classes","lastModifiedDate":"2024-04-13"},{"lineNumber":420,"author":{"gitId":"shawnnlimm"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2024-04-13"},{"lineNumber":421,"author":{"gitId":"shawnnlimm"},"content":"* Can type fast","lastModifiedDate":"2024-04-13"},{"lineNumber":422,"author":{"gitId":"shawnnlimm"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"shawnnlimm"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2024-04-13"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"shawnnlimm"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-06"},{"lineNumber":426,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":427,"author":{"gitId":"shawnnlimm"},"content":"nerdTrackerPlus helps Computer Science TAs manage students contacts through a CLI interface, which is much faster than a typical mouse/GUI driven app.","lastModifiedDate":"2024-03-06"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                | I want to â€¦â€‹                                                     | So that I canâ€¦â€‹                                                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"shamesjen"},"content":"|----------|------------------------|------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-12"},{"lineNumber":436,"author":{"gitId":"-"},"content":"| `* * *`  | new user               | see usage instructions                                           | refer to instructions when I forget how to use the App                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"shawnnlimm"},"content":"| `* * *`  | CS2109S teaching staff | add a new student                                                | keep track of their contact details                                                           |","lastModifiedDate":"2024-03-28"},{"lineNumber":438,"author":{"gitId":"shawnnlimm"},"content":"| `* * *`  | CS2109S teaching staff | delete a student                                                 | remove student entries that I no longer need                                                  |","lastModifiedDate":"2024-03-28"},{"lineNumber":439,"author":{"gitId":"shawnnlimm"},"content":"| `* * *`  | CS2109S teaching staff | list students                                                    | view all students currently in my contacts                                                    |","lastModifiedDate":"2024-03-28"},{"lineNumber":440,"author":{"gitId":"shawnnlimm"},"content":"| `* * *`  | CS2109S teaching staff | find a student by name                                           | locate details of students without having to go through the entire list                       |","lastModifiedDate":"2024-03-28"},{"lineNumber":441,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | edit student details                                             | ensure that student details are always updated                                                |","lastModifiedDate":"2024-04-12"},{"lineNumber":442,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | filter students by tag                                           | make it easier to search for students in a specific module or class                           |","lastModifiedDate":"2024-04-12"},{"lineNumber":443,"author":{"gitId":"shawnnlimm"},"content":"| `* * *`  | CS2109S teaching staff | add tags to students                                             | categorize student contacts for reference                                                     |","lastModifiedDate":"2024-03-28"},{"lineNumber":444,"author":{"gitId":"shawnnlimm"},"content":"| `* * *`  | CS2109S teaching staff | delete tags from students                                        | remove tags from students that do not belong to that category                                 |","lastModifiedDate":"2024-03-28"},{"lineNumber":445,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | mark the attendance for a student for a specific week            | so that I can keep track of their tutorial attendance over the course of the module           |","lastModifiedDate":"2024-04-12"},{"lineNumber":446,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | mark the participation score for a student for a specific week   | so that I can keep track of their tutorial participation scores over the course of the module |","lastModifiedDate":"2024-04-12"},{"lineNumber":447,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | mark the attendance for all students for a specific week         | so that I can easily mark the attendance of a tutorial class                                  |","lastModifiedDate":"2024-04-12"},{"lineNumber":448,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | mark the participation score for all student for a specific week | so that I can easily mark the participation of the entire tutorial class                      |","lastModifiedDate":"2024-04-12"},{"lineNumber":449,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | unmark the attendance for a student for a specific week          | so that I can correct myself in case attendance was marked wrongly                            |","lastModifiedDate":"2024-04-12"},{"lineNumber":450,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | unmark the participation score for a student for a specific week | so that I can correct myself in case participation scores were marked wrongly                 |","lastModifiedDate":"2024-04-12"},{"lineNumber":451,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | add assignments based on my course\u0027s assessment structure        | so that I can keep track of my student\u0027s assignments                                          |","lastModifiedDate":"2024-04-12"},{"lineNumber":452,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | remove assignments                                               | so that I can remove assignments that were added by mistake                                   |","lastModifiedDate":"2024-04-12"},{"lineNumber":453,"author":{"gitId":"shamesjen"},"content":"| `* * *`  | CS2109S teaching staff | grade assignments that were added                                | so that I can keep track of the grades that my students received for the various assignments  |","lastModifiedDate":"2024-04-12"},{"lineNumber":454,"author":{"gitId":"shawnnlimm"},"content":"| `* *`    | CS2109S teaching staff | undo a previously issued command                                 | so that it is convenient to undo any mistakes made                                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":455,"author":{"gitId":"shawnnlimm"},"content":"| `* *`    | CS2109S teaching staff | redo a previously undone command                                 | so that I can restore the last changes that were undone                                       |","lastModifiedDate":"2024-04-13"},{"lineNumber":456,"author":{"gitId":"shawnnlimm"},"content":"| `* * *`  | user                   | close and exit the app                                           |                                                                                               |","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"shawnnlimm"},"content":"(For all use cases below, the **System** is `nerdTrackerPlus` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-06"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":463,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":465,"author":{"gitId":"shawnnlimm"},"content":"**Use case UC01: Adding a student**","lastModifiedDate":"2024-03-06"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":467,"author":{"gitId":"thewongdylan"},"content":"***Main Success Scenario (MSS)***","lastModifiedDate":"2024-04-11"},{"lineNumber":468,"author":{"gitId":"shawnnlimm"},"content":"1. User request to add student.","lastModifiedDate":"2024-03-06"},{"lineNumber":469,"author":{"gitId":"shawnnlimm"},"content":"2. nerdTrackerPlus adds the students with the relevant particulars.","lastModifiedDate":"2024-03-06"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":473,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":474,"author":{"gitId":"thewongdylan"},"content":"* 1a. User inputs invalid particulars/is missing some particulars.","lastModifiedDate":"2024-04-11"},{"lineNumber":475,"author":{"gitId":"thewongdylan"},"content":"  * 1a1. nerdTrackerPlus shows an error message indicating invalid input.","lastModifiedDate":"2024-04-11"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":477,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-11"},{"lineNumber":478,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":479,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":480,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":481,"author":{"gitId":"thewongdylan"},"content":"**Use case UC02: List students**","lastModifiedDate":"2024-04-11"},{"lineNumber":482,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":483,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":484,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students.","lastModifiedDate":"2024-04-11"},{"lineNumber":485,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":486,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":487,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":488,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":489,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":490,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":491,"author":{"gitId":"thewongdylan"},"content":"**Use case UC03: Edit student details**","lastModifiedDate":"2024-04-11"},{"lineNumber":492,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":493,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":494,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students.","lastModifiedDate":"2024-04-11"},{"lineNumber":495,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":496,"author":{"gitId":"thewongdylan"},"content":"3. User request to edit certain details of a specific student.","lastModifiedDate":"2024-04-11"},{"lineNumber":497,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus successfully edits student\u0027s details.","lastModifiedDate":"2024-04-11"},{"lineNumber":498,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":499,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":500,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":501,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":502,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"thewongdylan"},"content":"* 3a. User inputs invalid index or student particulars.","lastModifiedDate":"2024-04-11"},{"lineNumber":507,"author":{"gitId":"thewongdylan"},"content":"    * 3a1. nerdTrackerPlus shows an error message indicating invalid index/student particulars.","lastModifiedDate":"2024-04-11"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"thewongdylan"},"content":"**Use case UC04: Find student**","lastModifiedDate":"2024-04-11"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":516,"author":{"gitId":"thewongdylan"},"content":"1. User requests to search for a specific student/students in the contacts list by name.","lastModifiedDate":"2024-04-11"},{"lineNumber":517,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows all students in the list with the matching name.","lastModifiedDate":"2024-04-11"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":522,"author":{"gitId":"thewongdylan"},"content":"* 1a. User searches with invalid input.","lastModifiedDate":"2024-04-11"},{"lineNumber":523,"author":{"gitId":"thewongdylan"},"content":"    * 1a1. nerdTrackerPlus shows an error message indicating invalid search input.","lastModifiedDate":"2024-04-11"},{"lineNumber":524,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":525,"author":{"gitId":"thewongdylan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-04-11"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":528,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":529,"author":{"gitId":"thewongdylan"},"content":"**Use case UC05: Delete a student**","lastModifiedDate":"2024-04-11"},{"lineNumber":530,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":531,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":532,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students.","lastModifiedDate":"2024-04-11"},{"lineNumber":533,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":534,"author":{"gitId":"thewongdylan"},"content":"3. User requests to delete a specific student in the list.","lastModifiedDate":"2024-04-11"},{"lineNumber":535,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus deletes the student.","lastModifiedDate":"2024-04-11"},{"lineNumber":536,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":537,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":538,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":539,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":540,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"thewongdylan"},"content":"* 3a. User inputs invalid index.","lastModifiedDate":"2024-04-11"},{"lineNumber":545,"author":{"gitId":"thewongdylan"},"content":"    * 3a1. nerdTrackerPlus shows an error message indicating invalid index for deletion.","lastModifiedDate":"2024-04-11"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":547,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-11"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":549,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":550,"author":{"gitId":"thewongdylan"},"content":"**Use case UC06: Remove tag from individual student**","lastModifiedDate":"2024-04-11"},{"lineNumber":551,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":552,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has added a tag(s) to the specified student.","lastModifiedDate":"2024-04-11"},{"lineNumber":553,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":554,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":555,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":556,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students.","lastModifiedDate":"2024-04-11"},{"lineNumber":557,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":558,"author":{"gitId":"thewongdylan"},"content":"3. User requests to remove a specific tag(s) from a specific student.","lastModifiedDate":"2024-04-11"},{"lineNumber":559,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus successfully removes the specified tag(s) from that student.","lastModifiedDate":"2024-04-11"},{"lineNumber":560,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":561,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":564,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":565,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":566,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":567,"author":{"gitId":"thewongdylan"},"content":"  Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":568,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":569,"author":{"gitId":"thewongdylan"},"content":"* 3a. User inputs invalid index or tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":570,"author":{"gitId":"thewongdylan"},"content":"    * 3a1. nerdTrackerPlus shows an error message indicating invalid index or tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":571,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":572,"author":{"gitId":"thewongdylan"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2024-04-11"},{"lineNumber":573,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":574,"author":{"gitId":"thewongdylan"},"content":"* 3b. User inputs tag that does not exist on the student.","lastModifiedDate":"2024-04-11"},{"lineNumber":575,"author":{"gitId":"thewongdylan"},"content":"    * 3b1. nerdTrackerPlus shows an error message indicating that the specified student does not have the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":576,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":577,"author":{"gitId":"thewongdylan"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2024-04-11"},{"lineNumber":578,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":579,"author":{"gitId":"thewongdylan"},"content":"**Use case UC07: Remove tag from all students**","lastModifiedDate":"2024-04-11"},{"lineNumber":580,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":581,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has added a tag(s) to all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":582,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":583,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":584,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":585,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students.","lastModifiedDate":"2024-04-11"},{"lineNumber":586,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":587,"author":{"gitId":"thewongdylan"},"content":"3. User requests to remove a specific tag(s) from all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":588,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus successfully removes the specified tag(s) from all students who have that tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":589,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":590,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":591,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":592,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":595,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":596,"author":{"gitId":"thewongdylan"},"content":"  Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":597,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":598,"author":{"gitId":"thewongdylan"},"content":"* 3a. User inputs invalid index or tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":599,"author":{"gitId":"thewongdylan"},"content":"    * 3a1. nerdTrackerPlus shows an error message indicating invalid index or tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":600,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":601,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-11"},{"lineNumber":602,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":603,"author":{"gitId":"thewongdylan"},"content":"* 3b. User inputs tag that does not exist on any student.","lastModifiedDate":"2024-04-11"},{"lineNumber":604,"author":{"gitId":"thewongdylan"},"content":"    * 3b1. nerdTrackerPlus shows an error message indicating that the specified tag does not exist on any student.","lastModifiedDate":"2024-04-11"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":609,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":610,"author":{"gitId":"thewongdylan"},"content":"**Use case UC08: Filter students by tag**","lastModifiedDate":"2024-04-11"},{"lineNumber":611,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":612,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":613,"author":{"gitId":"thewongdylan"},"content":"1. User requests to filter students by a specific tag(s).","lastModifiedDate":"2024-04-11"},{"lineNumber":614,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus filters the list of students based on the specified tag(s).","lastModifiedDate":"2024-04-11"},{"lineNumber":615,"author":{"gitId":"thewongdylan"},"content":"3. nerdTrackerPlus displays the filtered list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":616,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":617,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":618,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":619,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":620,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":621,"author":{"gitId":"thewongdylan"},"content":"* 1a. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":622,"author":{"gitId":"thewongdylan"},"content":"    * 1a1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":623,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":624,"author":{"gitId":"shawnnlimm"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":625,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":626,"author":{"gitId":"thewongdylan"},"content":"* 1b. Invalid tag input.","lastModifiedDate":"2024-04-11"},{"lineNumber":627,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating invalid tag input.","lastModifiedDate":"2024-04-11"},{"lineNumber":628,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":629,"author":{"gitId":"thewongdylan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-04-11"},{"lineNumber":630,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":631,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":632,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":633,"author":{"gitId":"thewongdylan"},"content":"**Use case UC09: Mark individual participation score for a student**","lastModifiedDate":"2024-04-11"},{"lineNumber":634,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":635,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":636,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":637,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":638,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":639,"author":{"gitId":"thewongdylan"},"content":"3. User requests to mark the participation score of a specific student in a specific week.","lastModifiedDate":"2024-04-11"},{"lineNumber":640,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus successfully marks the student\u0027s participation score.","lastModifiedDate":"2024-04-11"},{"lineNumber":641,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":642,"author":{"gitId":"shawnnlimm"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":643,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":644,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":645,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":646,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":647,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":648,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":649,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":650,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":651,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":652,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":653,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":654,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":655,"author":{"gitId":"thewongdylan"},"content":"* 3a. User inputs invalid index or week number.","lastModifiedDate":"2024-04-11"},{"lineNumber":656,"author":{"gitId":"thewongdylan"},"content":"    * 3a1. nerdTrackerPlus shows an error message indicating invalid index or week number.","lastModifiedDate":"2024-04-11"},{"lineNumber":657,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":658,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":659,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":660,"author":{"gitId":"thewongdylan"},"content":"* 3b. User inputs invalid participation score.","lastModifiedDate":"2024-04-11"},{"lineNumber":661,"author":{"gitId":"thewongdylan"},"content":"    * 3b1. nerdTrackerPlus shows an error message indicating invalid participation score.","lastModifiedDate":"2024-04-11"},{"lineNumber":662,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":663,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":664,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":665,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":666,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":667,"author":{"gitId":"thewongdylan"},"content":"**Use case UC10: Unmark individual participation score for a student**","lastModifiedDate":"2024-04-11"},{"lineNumber":668,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":669,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has marked participation for the specified student.","lastModifiedDate":"2024-04-11"},{"lineNumber":670,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":671,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":672,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":673,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":674,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":675,"author":{"gitId":"thewongdylan"},"content":"3. User requests to unmark the participation score of a specific student in a specific week.","lastModifiedDate":"2024-04-11"},{"lineNumber":676,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus successfully unmarks the student\u0027s participation score.","lastModifiedDate":"2024-04-11"},{"lineNumber":677,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":678,"author":{"gitId":"shawnnlimm"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":679,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":680,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":681,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":682,"author":{"gitId":"shawnnlimm"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":683,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":684,"author":{"gitId":"shawnnlimm"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":685,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":686,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":687,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":688,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":689,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":690,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":691,"author":{"gitId":"thewongdylan"},"content":"* 3a. User inputs invalid index or week number.","lastModifiedDate":"2024-04-11"},{"lineNumber":692,"author":{"gitId":"thewongdylan"},"content":"    * 3a1. nerdTrackerPlus shows an error message indicating invalid index or week number.","lastModifiedDate":"2024-04-11"},{"lineNumber":693,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":694,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":695,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":696,"author":{"gitId":"thewongdylan"},"content":"* 3b. User inputs invalid participation score.","lastModifiedDate":"2024-04-11"},{"lineNumber":697,"author":{"gitId":"thewongdylan"},"content":"    * 3b1. nerdTrackerPlus shows an error message indicating invalid participation score.","lastModifiedDate":"2024-04-11"},{"lineNumber":698,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":699,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":700,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":701,"author":{"gitId":"thewongdylan"},"content":"* 3c. User tries to unmark a student\u0027s participation score that has not been marked.","lastModifiedDate":"2024-04-11"},{"lineNumber":702,"author":{"gitId":"thewongdylan"},"content":"    * 3c1. nerdTrackerPlus shows an error message indicating that the student\u0027s participation score has not been marked.","lastModifiedDate":"2024-04-11"},{"lineNumber":703,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":704,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":705,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":706,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":707,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":708,"author":{"gitId":"thewongdylan"},"content":"**Use case UC11: Mark individual attendance for a student**","lastModifiedDate":"2024-04-11"},{"lineNumber":709,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":710,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":711,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":712,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":713,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":714,"author":{"gitId":"thewongdylan"},"content":"3. User requests to mark the attendance of a specific student in a specific week.","lastModifiedDate":"2024-04-11"},{"lineNumber":715,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus successfully marks the student\u0027s attendance.","lastModifiedDate":"2024-04-11"},{"lineNumber":716,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":717,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":718,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":719,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":720,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":721,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":722,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":723,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":724,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":725,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":726,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":727,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":728,"author":{"gitId":"shawnnlimm"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":729,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":730,"author":{"gitId":"thewongdylan"},"content":"* 3a. User inputs invalid index or week number.","lastModifiedDate":"2024-04-11"},{"lineNumber":731,"author":{"gitId":"thewongdylan"},"content":"    * 3a1. nerdTrackerPlus shows an error message indicating invalid index or week number.","lastModifiedDate":"2024-04-11"},{"lineNumber":732,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":733,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":734,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":735,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":736,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":737,"author":{"gitId":"thewongdylan"},"content":"**Use case UC12: Unmark individual attendance for a student**","lastModifiedDate":"2024-04-11"},{"lineNumber":738,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":739,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has marked attendance for the specified student.","lastModifiedDate":"2024-04-11"},{"lineNumber":740,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":741,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":742,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":743,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":744,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":745,"author":{"gitId":"thewongdylan"},"content":"3. User requests to unmark the attendance of a specific student in a specific week.","lastModifiedDate":"2024-04-11"},{"lineNumber":746,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus successfully unmarks the student\u0027s attendance.","lastModifiedDate":"2024-04-11"},{"lineNumber":747,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":748,"author":{"gitId":"shawnnlimm"},"content":"   Use case ends.","lastModifiedDate":"2024-03-13"},{"lineNumber":749,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":750,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":751,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":752,"author":{"gitId":"shawnnlimm"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-13"},{"lineNumber":753,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":754,"author":{"gitId":"shawnnlimm"},"content":"    Use case ends.","lastModifiedDate":"2024-03-13"},{"lineNumber":755,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":756,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":757,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":758,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":759,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":760,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":761,"author":{"gitId":"shawnnlimm"},"content":"* 3a. User inputs invalid index or week number.","lastModifiedDate":"2024-03-13"},{"lineNumber":762,"author":{"gitId":"thewongdylan"},"content":"    * 3a1. nerdTrackerPlus shows an error message indicating invalid index or week number.","lastModifiedDate":"2024-04-11"},{"lineNumber":763,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":764,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":765,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":766,"author":{"gitId":"thewongdylan"},"content":"* 3b. User inputs invalid participation score.","lastModifiedDate":"2024-04-11"},{"lineNumber":767,"author":{"gitId":"thewongdylan"},"content":"    * 3b1. nerdTrackerPlus shows an error message indicating invalid participation score.","lastModifiedDate":"2024-04-11"},{"lineNumber":768,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":769,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":770,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":771,"author":{"gitId":"thewongdylan"},"content":"* 3c. User tries to unmark a student\u0027s attendance that has not been marked.","lastModifiedDate":"2024-04-11"},{"lineNumber":772,"author":{"gitId":"thewongdylan"},"content":"    * 3c1. nerdTrackerPlus shows an error message indicating that the student\u0027s attendance has not been marked.","lastModifiedDate":"2024-04-11"},{"lineNumber":773,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":774,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":775,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":776,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":777,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":778,"author":{"gitId":"thewongdylan"},"content":"**Use case UC13: Mark all participation scores for all students**","lastModifiedDate":"2024-04-11"},{"lineNumber":779,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":780,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":781,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":782,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":783,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":784,"author":{"gitId":"thewongdylan"},"content":"3. User requests to mark all students\u0027 participation scores for a specific week.","lastModifiedDate":"2024-04-11"},{"lineNumber":785,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus marks the participation score for all students for the specified week.","lastModifiedDate":"2024-04-11"},{"lineNumber":786,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":787,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":788,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":789,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":790,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":791,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":792,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":793,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":794,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":795,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":796,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":797,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":798,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":799,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":800,"author":{"gitId":"thewongdylan"},"content":"* 2a. The specified week is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":801,"author":{"gitId":"thewongdylan"},"content":"    * 2a1. nerdTrackerPlus shows an error message indicating an invalid week.","lastModifiedDate":"2024-04-11"},{"lineNumber":802,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":803,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":804,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":805,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":806,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":807,"author":{"gitId":"thewongdylan"},"content":"**Use case UC14: Unmark all participation scores for all students**","lastModifiedDate":"2024-04-11"},{"lineNumber":808,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":809,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has marked participation for all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":810,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":811,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":812,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":813,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":814,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":815,"author":{"gitId":"thewongdylan"},"content":"3. User requests to unmark all students\u0027 participation scores for a specific week.","lastModifiedDate":"2024-04-11"},{"lineNumber":816,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus unmarks the participation score for all students for the specified week.","lastModifiedDate":"2024-04-11"},{"lineNumber":817,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":818,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":819,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":820,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":821,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":822,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":823,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":824,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":825,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":826,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":827,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":828,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":829,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":830,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":831,"author":{"gitId":"thewongdylan"},"content":"* 2a. The specified week is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":832,"author":{"gitId":"thewongdylan"},"content":"    * 2a1. nerdTrackerPlus shows an error message indicating an invalid week.","lastModifiedDate":"2024-04-11"},{"lineNumber":833,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":834,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":835,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":836,"author":{"gitId":"thewongdylan"},"content":"* 2b. 1 or more students in the filtered list has participation score equal to 0 for the specified week.","lastModifiedDate":"2024-04-11"},{"lineNumber":837,"author":{"gitId":"thewongdylan"},"content":"  * 2b1. nerdTrackerPlus shows an error message indicating that the participation score for 1 or more students is already 0 for the specified week.","lastModifiedDate":"2024-04-11"},{"lineNumber":838,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":839,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":840,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":841,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":842,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":843,"author":{"gitId":"thewongdylan"},"content":"**Use case UC15: Mark all attendance for all students**","lastModifiedDate":"2024-04-11"},{"lineNumber":844,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":845,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":846,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":847,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":848,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":849,"author":{"gitId":"thewongdylan"},"content":"3. User requests to mark all students\u0027 attendance for a specific week.","lastModifiedDate":"2024-04-11"},{"lineNumber":850,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus marks the attendance for all students for the specified week.","lastModifiedDate":"2024-04-11"},{"lineNumber":851,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":852,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":853,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":854,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":855,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":856,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":857,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":858,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":859,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":860,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":861,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":862,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":863,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":864,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":865,"author":{"gitId":"thewongdylan"},"content":"* 2a. The specified week is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":866,"author":{"gitId":"thewongdylan"},"content":"    * 2a1. nerdTrackerPlus shows an error message indicating an invalid week.","lastModifiedDate":"2024-04-11"},{"lineNumber":867,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":868,"author":{"gitId":"shawnnlimm"},"content":"    Use case ends.","lastModifiedDate":"2024-03-13"},{"lineNumber":869,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":870,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-03-13"},{"lineNumber":871,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":872,"author":{"gitId":"thewongdylan"},"content":"**Use case UC16: Unmark all attendance for all students**","lastModifiedDate":"2024-04-11"},{"lineNumber":873,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":874,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has marked attendance for all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":875,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":876,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":877,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":878,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":879,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":880,"author":{"gitId":"thewongdylan"},"content":"3. User requests to unmark all students\u0027 attendance for a specific week.","lastModifiedDate":"2024-04-11"},{"lineNumber":881,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus unmarks the attendance for all students for the specified week.","lastModifiedDate":"2024-04-11"},{"lineNumber":882,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":883,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":884,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":885,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":886,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":887,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":888,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":889,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":890,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":891,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":892,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":893,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":894,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":895,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":896,"author":{"gitId":"thewongdylan"},"content":"* 2a. The specified week is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":897,"author":{"gitId":"thewongdylan"},"content":"    * 2a1. nerdTrackerPlus shows an error message indicating an invalid week.","lastModifiedDate":"2024-04-11"},{"lineNumber":898,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":899,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":900,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":901,"author":{"gitId":"thewongdylan"},"content":"* 2b. 1 or more students in the filtered list has attendance equal to 0 for the specified week.","lastModifiedDate":"2024-04-11"},{"lineNumber":902,"author":{"gitId":"thewongdylan"},"content":"    * 2b1. nerdTrackerPlus shows an error message indicating that the attendance for 1 or more students is already 0 for the specified week.","lastModifiedDate":"2024-04-11"},{"lineNumber":903,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":904,"author":{"gitId":"shawnnlimm"},"content":"    Use case ends.","lastModifiedDate":"2024-03-13"},{"lineNumber":905,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":906,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-03-13"},{"lineNumber":907,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":908,"author":{"gitId":"thewongdylan"},"content":"**Use case UC17: Add assignment for all students**","lastModifiedDate":"2024-04-11"},{"lineNumber":909,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":910,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":911,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":912,"author":{"gitId":"thewongdylan"},"content":"1. User requests to list students/filter students by a specific tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":913,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a (filtered) list of students.","lastModifiedDate":"2024-04-11"},{"lineNumber":914,"author":{"gitId":"thewongdylan"},"content":"3. User requests to add a new assignment with specific details.","lastModifiedDate":"2024-04-11"},{"lineNumber":915,"author":{"gitId":"thewongdylan"},"content":"4. nerdTrackerPlus adds the assignment with the specified details to the filtered.","lastModifiedDate":"2024-04-11"},{"lineNumber":916,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":917,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":918,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":919,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":920,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":921,"author":{"gitId":"thewongdylan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-04-11"},{"lineNumber":922,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":923,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":924,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":925,"author":{"gitId":"thewongdylan"},"content":"* 1b. No students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":926,"author":{"gitId":"thewongdylan"},"content":"    * 1b1. nerdTrackerPlus shows an error message indicating no students match the specified tag.","lastModifiedDate":"2024-04-11"},{"lineNumber":927,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":928,"author":{"gitId":"thewongdylan"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":929,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":930,"author":{"gitId":"thewongdylan"},"content":"* 2a. User provides incomplete or invalid details for the assignment.","lastModifiedDate":"2024-04-11"},{"lineNumber":931,"author":{"gitId":"thewongdylan"},"content":"    * 2a1. nerdTrackerPlus shows an error message indicating the incomplete or invalid details.","lastModifiedDate":"2024-04-11"},{"lineNumber":932,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":933,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-11"},{"lineNumber":934,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":935,"author":{"gitId":"thewongdylan"},"content":"* 2b. User attempts to add assignment that already exists for all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":936,"author":{"gitId":"thewongdylan"},"content":"    * 2b1. nerdTrackerPlus shows an error message indicating that the assignment already exists for all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":937,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":938,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-11"},{"lineNumber":939,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":940,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":941,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":942,"author":{"gitId":"thewongdylan"},"content":"**Use case UC18: Remove assignment for all students**","lastModifiedDate":"2024-04-11"},{"lineNumber":943,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":944,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has added an assignment for at least 1 student.","lastModifiedDate":"2024-04-11"},{"lineNumber":945,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":946,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":947,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":948,"author":{"gitId":"thewongdylan"},"content":"1. User requests to remove a specific assignment from all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":949,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus removes the assignment from all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":950,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":951,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":952,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":953,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":954,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":955,"author":{"gitId":"thewongdylan"},"content":"* 1a. The specified assignment does not exist on any student.","lastModifiedDate":"2024-04-11"},{"lineNumber":956,"author":{"gitId":"thewongdylan"},"content":"    * 1a1. nerdTrackerPlus displays a message indicating that the assignment does not exist on any student.","lastModifiedDate":"2024-04-11"},{"lineNumber":957,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":958,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-11"},{"lineNumber":959,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":960,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":961,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":962,"author":{"gitId":"thewongdylan"},"content":"**Use case UC19: Grade assignment for a student**","lastModifiedDate":"2024-04-11"},{"lineNumber":963,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":964,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has added an assignment for the specified student.","lastModifiedDate":"2024-04-11"},{"lineNumber":965,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":966,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":967,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":968,"author":{"gitId":"thewongdylan"},"content":"1. User requests to grade a specific assignment for a specific student with a specific score.","lastModifiedDate":"2024-04-11"},{"lineNumber":969,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus assigns the specified score for the specified assignment to the specified student.","lastModifiedDate":"2024-04-11"},{"lineNumber":970,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":971,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":972,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":973,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":974,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":975,"author":{"gitId":"thewongdylan"},"content":"* 1a. The specified assignment or student does not exist.","lastModifiedDate":"2024-04-11"},{"lineNumber":976,"author":{"gitId":"thewongdylan"},"content":"    * 1a1. nerdTrackerPlus shows an error message indicating an invalid assignment or student.","lastModifiedDate":"2024-04-11"},{"lineNumber":977,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":978,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-11"},{"lineNumber":979,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":980,"author":{"gitId":"thewongdylan"},"content":"* 2a. The provided grade is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":981,"author":{"gitId":"thewongdylan"},"content":"    * 2a1. nerdTrackerPlus shows an error message indicating an invalid grade input.","lastModifiedDate":"2024-04-11"},{"lineNumber":982,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":983,"author":{"gitId":"thewongdylan"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-04-11"},{"lineNumber":984,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":985,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":986,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":987,"author":{"gitId":"thewongdylan"},"content":"**Use case UC20: View help**","lastModifiedDate":"2024-04-11"},{"lineNumber":988,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":989,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":990,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":991,"author":{"gitId":"thewongdylan"},"content":"1. User requests to view help.","lastModifiedDate":"2024-04-11"},{"lineNumber":992,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus shows a link to the nerdTrackerPlus User Guide.","lastModifiedDate":"2024-04-11"},{"lineNumber":993,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":994,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":995,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":996,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":997,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":998,"author":{"gitId":"thewongdylan"},"content":"**Use case UC21: Undo a previously issued command**","lastModifiedDate":"2024-04-11"},{"lineNumber":999,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1000,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has issued a command that can be undone (changed data).","lastModifiedDate":"2024-04-11"},{"lineNumber":1001,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1002,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":1003,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1004,"author":{"gitId":"thewongdylan"},"content":"1. User requests to undo the previously issued command.","lastModifiedDate":"2024-03-21"},{"lineNumber":1005,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus undoes the previously issued command.","lastModifiedDate":"2024-03-21"},{"lineNumber":1006,"author":{"gitId":"thewongdylan"},"content":"3. nerdTrackerPlus shows a message indicating the command that was undone.","lastModifiedDate":"2024-03-21"},{"lineNumber":1007,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1008,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-03-21"},{"lineNumber":1009,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1010,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":1011,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1012,"author":{"gitId":"thewongdylan"},"content":"* 1a. There is no command to undo.","lastModifiedDate":"2024-03-21"},{"lineNumber":1013,"author":{"gitId":"thewongdylan"},"content":"    * 1a1. nerdTrackerPlus shows an error message.","lastModifiedDate":"2024-03-21"},{"lineNumber":1014,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1015,"author":{"gitId":"thewongdylan"},"content":"  Use case ends.","lastModifiedDate":"2024-03-21"},{"lineNumber":1016,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1017,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-03-21"},{"lineNumber":1018,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1019,"author":{"gitId":"thewongdylan"},"content":"**Use case UC22: Redo a previously undone command**","lastModifiedDate":"2024-04-11"},{"lineNumber":1020,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1021,"author":{"gitId":"thewongdylan"},"content":"***Precondition***: User has undone at least 1 command immediately prior.","lastModifiedDate":"2024-04-11"},{"lineNumber":1022,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1023,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":1024,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1025,"author":{"gitId":"thewongdylan"},"content":"1. User requests to redo the previously undone command.","lastModifiedDate":"2024-03-21"},{"lineNumber":1026,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus redoes the previously undone command.","lastModifiedDate":"2024-03-21"},{"lineNumber":1027,"author":{"gitId":"thewongdylan"},"content":"3. nerdTrackerPlus shows a message indicating the command that was redone.","lastModifiedDate":"2024-03-21"},{"lineNumber":1028,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1029,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-03-21"},{"lineNumber":1030,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1031,"author":{"gitId":"thewongdylan"},"content":"***Extensions***","lastModifiedDate":"2024-04-11"},{"lineNumber":1032,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1033,"author":{"gitId":"thewongdylan"},"content":"* 1a. There is no command to redo.","lastModifiedDate":"2024-03-21"},{"lineNumber":1034,"author":{"gitId":"thewongdylan"},"content":"    * 1a1. nerdTrackerPlus shows an error message.","lastModifiedDate":"2024-03-21"},{"lineNumber":1035,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1036,"author":{"gitId":"thewongdylan"},"content":"  Use case ends.","lastModifiedDate":"2024-03-21"},{"lineNumber":1037,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1038,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-03-21"},{"lineNumber":1039,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1040,"author":{"gitId":"thewongdylan"},"content":"**Use case UC23: Clear all students**","lastModifiedDate":"2024-04-11"},{"lineNumber":1041,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1042,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":1043,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1044,"author":{"gitId":"thewongdylan"},"content":"1. User requests to clear all students.","lastModifiedDate":"2024-04-11"},{"lineNumber":1045,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus clears all students from the list.","lastModifiedDate":"2024-04-11"},{"lineNumber":1046,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1047,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":1048,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1049,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":1050,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1051,"author":{"gitId":"thewongdylan"},"content":"**Use case UC24: Exit nerdTrackerPlus**","lastModifiedDate":"2024-04-11"},{"lineNumber":1052,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1053,"author":{"gitId":"thewongdylan"},"content":"***MSS***","lastModifiedDate":"2024-04-11"},{"lineNumber":1054,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1055,"author":{"gitId":"thewongdylan"},"content":"1. User requests to exit nerdTrackerPlus.","lastModifiedDate":"2024-04-11"},{"lineNumber":1056,"author":{"gitId":"thewongdylan"},"content":"2. nerdTrackerPlus exits.","lastModifiedDate":"2024-04-11"},{"lineNumber":1057,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1058,"author":{"gitId":"thewongdylan"},"content":"   Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":1059,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1060,"author":{"gitId":"thewongdylan"},"content":"---","lastModifiedDate":"2024-04-11"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":1067,"author":{"gitId":"shawnnlimm"},"content":"4. The commands should be clear and concise that are easy for teaching assistants to understand and use without extensive training.","lastModifiedDate":"2024-03-06"},{"lineNumber":1068,"author":{"gitId":"shawnnlimm"},"content":"5. The application should only be designed for a single user.","lastModifiedDate":"2024-03-06"},{"lineNumber":1069,"author":{"gitId":"shawnnlimm"},"content":"6. The application should respond promptly to user inputs, with minimal latency between command execution and feedback.","lastModifiedDate":"2024-03-06"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1073,"author":{"gitId":"Ryo-Seah"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2024-04-11"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":1075,"author":{"gitId":"shawnnlimm"},"content":"* **API**: Application Programming Interface, a set of rules, protocols, and tools that allows different software applications to communicate with each other.","lastModifiedDate":"2024-03-06"},{"lineNumber":1076,"author":{"gitId":"shawnnlimm"},"content":"* **GUI**: Graphical User Interface, a type of user interface that allows users to interact with a computer system using graphical elements on the screen such as windows, icons, menus, and buttons.","lastModifiedDate":"2024-03-06"},{"lineNumber":1077,"author":{"gitId":"shawnnlimm"},"content":"* **CLI**: Command Line Interface, a text based interface used to interact with computer programs and operating systems by typing commands into a terminal or command prompt.","lastModifiedDate":"2024-04-13"},{"lineNumber":1078,"author":{"gitId":"shawnnlimm"},"content":"* **MSS**: Main Success Scenario, a sequence of events or steps that occur when a system or software application operates as intended, without any errors or exceptions.","lastModifiedDate":"2024-04-13"},{"lineNumber":1079,"author":{"gitId":"shawnnlimm"},"content":"* **JSON**: JavaScript Object Notation, a lightweight data interchange format used for transmitting structured data between systems in a human-readable and machine-parseable way.","lastModifiedDate":"2024-04-13"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1087,"author":{"gitId":"shawnnlimm"},"content":"The commands are used based on the default sample data that is generated by nerdTrackerPlus upon launch.","lastModifiedDate":"2024-04-11"},{"lineNumber":1088,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1089,"author":{"gitId":"thewongdylan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":1090,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":1091,"author":{"gitId":"thewongdylan"},"content":":information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2024-03-21"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1100,"author":{"gitId":"shawnnlimm"},"content":"    1. Download `nerdTrackerPlus.jar` and copy into an empty folder","lastModifiedDate":"2024-04-11"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1102,"author":{"gitId":"shawnnlimm"},"content":"    2. Double-click the jar file or run `java -jar nerdTrackerPlus.jar`. \u003cbr\u003e Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-04-11"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1104,"author":{"gitId":"shawnnlimm"},"content":"2. Saving window preferences","lastModifiedDate":"2024-04-11"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1108,"author":{"gitId":"shawnnlimm"},"content":"    2. Re-launch the app by double-clicking the jar file or running `java -jar nerdTrackerPlus.jar` .\u003cbr\u003e Expected: The most recent window size and location is retained.","lastModifiedDate":"2024-04-11"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1110,"author":{"gitId":"shawnnlimm"},"content":"3. Closing the app using the `exit` command","lastModifiedDate":"2024-04-11"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1112,"author":{"gitId":"shawnnlimm"},"content":"    1. Type the command `exit` into the command line and hit enter. \u003cbr\u003e Expected: The app window closes.","lastModifiedDate":"2024-04-11"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1114,"author":{"gitId":"shawnnlimm"},"content":"4. Closing the app by clicking on the close button","lastModifiedDate":"2024-04-11"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1116,"author":{"gitId":"shawnnlimm"},"content":"    1. Click the close button on the top right hand corner of the app window. \u003cbr\u003e Expected: The app window closes.","lastModifiedDate":"2024-04-11"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1118,"author":{"gitId":"shawnnlimm"},"content":"### Adding a student","lastModifiedDate":"2024-04-11"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1120,"author":{"gitId":"shawnnlimm"},"content":"1. Adding a student to nerdTrackerPlus","lastModifiedDate":"2024-04-11"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1122,"author":{"gitId":"shawnnlimm"},"content":"    1. Test case: `add n/Bob Lee e/boblee@u.nus.edu m/A1234567A tl/bobthelee69 t/CS2109S` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1123,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If there is no student named Bob Lee currently in nerdTrackerPlus, Bob Lee will be added with the corresponding details. Otherwise, an error message will be shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1125,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `add n/Danielle Marsh e/daniellemarsh@u.nus.edu m/A9876543Z tl/danimarsh12` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1126,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If there is no student named Danielle Marsh currently in nerdTrackerPlus, Danielle Marsh will be added to nerdTrackerPlus with the corresponding details. Otherwise, an error message will be shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1127,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1128,"author":{"gitId":"shawnnlimm"},"content":"    3. Incorrect test cases to try: `add`, `add n/Danielle`, `add n/Danielle* e/dani@u.nus.edu tl/danimarsh12 m/A9876543Z`, `add n/Danielle* e/dani@u.nus.edu tl/danimarsh12`..., where one or more compulsory fields are missing, incorrect command format etc. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1129,"author":{"gitId":"shawnnlimm"},"content":"       Expected: No student is added. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1130,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1131,"author":{"gitId":"shawnnlimm"},"content":"### Listing students","lastModifiedDate":"2024-04-11"},{"lineNumber":1132,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1133,"author":{"gitId":"shawnnlimm"},"content":"1. Listing students in nerdTrackerPlus","lastModifiedDate":"2024-04-11"},{"lineNumber":1134,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1135,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: All students in nerdTrackerPlus is already shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1136,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1137,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `list` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1138,"author":{"gitId":"shawnnlimm"},"content":"       Expected: No change to current list","lastModifiedDate":"2024-04-11"},{"lineNumber":1139,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1140,"author":{"gitId":"shawnnlimm"},"content":"2. Listing all students when the list is currently filtered","lastModifiedDate":"2024-04-11"},{"lineNumber":1141,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1142,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: Some students are already filtered out using the `filter` or `find` command.","lastModifiedDate":"2024-04-11"},{"lineNumber":1143,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1144,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `list` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1145,"author":{"gitId":"shawnnlimm"},"content":"       Expected: Current list shows all students in nerdTrackerPlus (including ones that were previously filtered out).","lastModifiedDate":"2024-04-11"},{"lineNumber":1146,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1147,"author":{"gitId":"shawnnlimm"},"content":"### Editing a student","lastModifiedDate":"2024-04-11"},{"lineNumber":1148,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1149,"author":{"gitId":"shawnnlimm"},"content":"1. Editing student details in nerdTrackerPlus","lastModifiedDate":"2024-04-11"},{"lineNumber":1150,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1151,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: Student already exist in nerdTrackerPlus","lastModifiedDate":"2024-04-11"},{"lineNumber":1152,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1153,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `edit 1 n/Adam Lee` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1154,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If there is no student already named Adam Lee in nerdTrackerPlus, the first student in the list will be renamed to `Adam Lee`. Otherwise, an error message will be shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1155,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1156,"author":{"gitId":"shawnnlimm"},"content":"    3. Test case: `edit 1 n/Adam Lee tl/adamlee01` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1157,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If there is no student already named Adam Lee in nerdTrackerPlus, the first student in the list will be renamed to `Adam Lee` and his telegram handle will be changed to `adamlee01`. Otherwise, an error message will be shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1158,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1159,"author":{"gitId":"shawnnlimm"},"content":"    4. Incorrect test cases to try: `edit`, `edit 0`, `edit 1 n/Adam*`. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1160,"author":{"gitId":"shawnnlimm"},"content":"       Expected: Edit command is not executed. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1161,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1162,"author":{"gitId":"shawnnlimm"},"content":"### Finding students","lastModifiedDate":"2024-04-11"},{"lineNumber":1163,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1164,"author":{"gitId":"shawnnlimm"},"content":"1. Finding students in nerdTrackerPlus","lastModifiedDate":"2024-04-11"},{"lineNumber":1165,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1166,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: nerdTrackerPlus contains some students.","lastModifiedDate":"2024-04-11"},{"lineNumber":1167,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1168,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `find charlotte` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1169,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If there is no student named `charlotte`, there will be no students displayed. Otherwise, students whose names contain `charlotte` will be displayed.","lastModifiedDate":"2024-04-11"},{"lineNumber":1170,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1171,"author":{"gitId":"shawnnlimm"},"content":"    3. Incorrect test cases to try: `find` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1172,"author":{"gitId":"shawnnlimm"},"content":"       Expected: `find` command is not executed. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1173,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1174,"author":{"gitId":"shawnnlimm"},"content":"### Deleting a student","lastModifiedDate":"2024-04-11"},{"lineNumber":1175,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1176,"author":{"gitId":"shawnnlimm"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2024-04-11"},{"lineNumber":1177,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1178,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2024-04-11"},{"lineNumber":1179,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1180,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `delete 1` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1181,"author":{"gitId":"shawnnlimm"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-04-11"},{"lineNumber":1182,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1183,"author":{"gitId":"shawnnlimm"},"content":"    3. Incorrect test cases to try: `delete`, `delete 0`, `delete x` (where x is larger than the number of students in the list) \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1184,"author":{"gitId":"shawnnlimm"},"content":"      Expected: No person is deleted. Error details shown in the status message.","lastModifiedDate":"2024-04-11"},{"lineNumber":1185,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1186,"author":{"gitId":"shawnnlimm"},"content":"### Removing tag from a student","lastModifiedDate":"2024-04-11"},{"lineNumber":1187,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1188,"author":{"gitId":"shawnnlimm"},"content":"1. Removing a tag from a student","lastModifiedDate":"2024-04-11"},{"lineNumber":1189,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1190,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: Tag to remove exists on student.","lastModifiedDate":"2024-04-11"},{"lineNumber":1191,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1192,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `removetag 1 t/CS2109S` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1193,"author":{"gitId":"shawnnlimm"},"content":"      Expected: If the tag `CS2109S` exists on the first student in the list, the tag will be successfully removed. Otherwise, no tag is removed and an error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1194,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1195,"author":{"gitId":"shawnnlimm"},"content":"    3. Incorrect test cases to try: `removetag`, `removetag 0`, `removetag x` (where x is larger than the number of students in the list) \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1196,"author":{"gitId":"shawnnlimm"},"content":"      Expected: `removetag` command is not executed. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1197,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1198,"author":{"gitId":"shawnnlimm"},"content":"### Marking / Un-marking participation","lastModifiedDate":"2024-04-11"},{"lineNumber":1199,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1200,"author":{"gitId":"shawnnlimm"},"content":"1. Marking / Un-marking the participation score of a student for a specific week","lastModifiedDate":"2024-04-11"},{"lineNumber":1201,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1202,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: nerdTrackerPlus contains some students.","lastModifiedDate":"2024-04-11"},{"lineNumber":1203,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1204,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `markp 1 3` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1205,"author":{"gitId":"shawnnlimm"},"content":"       Expected: Participation score of the first student in the list is incremented by 1 for week 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":1206,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1207,"author":{"gitId":"shawnnlimm"},"content":"    3. Test case: `unmarkp 1 3` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1208,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If the participation score of the first student in the list is greater than 0, it will be decremented by 1. Otherwise, score is not decremented and an error message is shown","lastModifiedDate":"2024-04-11"},{"lineNumber":1209,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1210,"author":{"gitId":"shawnnlimm"},"content":"    4. Incorrect test cases to try: `markp`, `unmarkp`, `markp 0 3`, `unmarkp 1 14`, where the `INDEX` or `WEEK_NUMBER` is not within the valid range. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1211,"author":{"gitId":"shawnnlimm"},"content":"       Expected: Participation score is not marked / unmarked. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1212,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1213,"author":{"gitId":"shawnnlimm"},"content":"### Marking / Un-marking attendance","lastModifiedDate":"2024-04-11"},{"lineNumber":1214,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1215,"author":{"gitId":"shawnnlimm"},"content":"1. Marking / Un-marking the attendance of a student for a specific week","lastModifiedDate":"2024-04-11"},{"lineNumber":1216,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1217,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: nerdTrackerPlus contains some students.","lastModifiedDate":"2024-04-11"},{"lineNumber":1218,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1219,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `marka 1 3` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1220,"author":{"gitId":"shawnnlimm"},"content":"       Expected: Attendance of the first student in the list is marked for week 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":1221,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1222,"author":{"gitId":"shawnnlimm"},"content":"    3. Test case: `unmarka 1 3` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1223,"author":{"gitId":"shawnnlimm"},"content":"       Expected: Attendance of the first student in the list is unmarked for week 3.","lastModifiedDate":"2024-04-11"},{"lineNumber":1224,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1225,"author":{"gitId":"shawnnlimm"},"content":"    4. Incorrect test cases to try: `marka`, `unmarka`, `marka 0 3`, `unmarka 1 14`, where the `INDEX` or `WEEK_NUMBER` is not within the valid range. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1226,"author":{"gitId":"shawnnlimm"},"content":"       Expected: Attendance is not marked / unmarked. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1227,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1228,"author":{"gitId":"shawnnlimm"},"content":"### Adding an assignment","lastModifiedDate":"2024-04-11"},{"lineNumber":1229,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1230,"author":{"gitId":"shawnnlimm"},"content":"1. Adding an assignment to all students in the list.","lastModifiedDate":"2024-04-11"},{"lineNumber":1231,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1232,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: nerdTrackerPlus contains some students.","lastModifiedDate":"2024-04-11"},{"lineNumber":1233,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1234,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `adda a/assignment1` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1235,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If at least 1 student does not have `assignment1`, it is added to those students in the list. Otherwise, no assignments are added and an error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1236,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1237,"author":{"gitId":"shawnnlimm"},"content":"    3. Test case: `adda a/assignment1 a/assignment2` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1238,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If at least 1 student does not have `assignment1` or `assignment2`, the missing assignment is added to those students in the list. Otherwise, no assignments are added and an error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1239,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1240,"author":{"gitId":"shawnnlimm"},"content":"    4. Incorrect test cases to try: `adda`, `adda a/assignment1*`, `adda assignment1`... \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1241,"author":{"gitId":"shawnnlimm"},"content":"       Expected: No new assignments are added. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1242,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1243,"author":{"gitId":"shawnnlimm"},"content":"### Removing an assignment","lastModifiedDate":"2024-04-11"},{"lineNumber":1244,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1245,"author":{"gitId":"shawnnlimm"},"content":"1. Remove an assignment from all students in the list.","lastModifiedDate":"2024-04-11"},{"lineNumber":1246,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1247,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: nerdTrackerPlus contains some students that have some assignments.","lastModifiedDate":"2024-04-11"},{"lineNumber":1248,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1249,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `removea a/assignment1` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1250,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If at least 1 student has `assignment1`, then it is removed from all students in the list that has `assignment1`. Otherwise, an error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1251,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1252,"author":{"gitId":"shawnnlimm"},"content":"    3. Test case: `removea a/assignment1 a/assignment2` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1253,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If at least 1 student has `assignment1` or `assignment2`, these assignments will be removed from them. Otherwise, an error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1254,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1255,"author":{"gitId":"shawnnlimm"},"content":"    4. Incorrect test cases to try: `removea`, `removea assignment1`, `removea a/assignment*`... \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1256,"author":{"gitId":"shawnnlimm"},"content":"       Expected: No assignments are removed. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1257,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1258,"author":{"gitId":"shawnnlimm"},"content":"### Grading an assignment","lastModifiedDate":"2024-04-11"},{"lineNumber":1259,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1260,"author":{"gitId":"shawnnlimm"},"content":"1. Grades an assignment for a student.","lastModifiedDate":"2024-04-11"},{"lineNumber":1261,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1262,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: nerdTrackerPlus contains some students that have some assignments.","lastModifiedDate":"2024-04-11"},{"lineNumber":1263,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1264,"author":{"gitId":"shawnnlimm"},"content":"    2. Test case: `grade 1 100 a/assignment1` \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1265,"author":{"gitId":"shawnnlimm"},"content":"       Expected: If the first student in the list has `assignment1`, it will be graded with a score of 100. Otherwise, `assignment1` will not be graded and an error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1266,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1267,"author":{"gitId":"shawnnlimm"},"content":"    3. Incorrect test cases to try: `grade`, `grade 0 100 a/assignment1`, `grade 1 -1 a/assignment1`, `grade 1 100 assignment1`... \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1268,"author":{"gitId":"shawnnlimm"},"content":"       Expected: Grade command is not executed. Error message is shown.","lastModifiedDate":"2024-04-11"},{"lineNumber":1269,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1270,"author":{"gitId":"shawnnlimm"},"content":"### Saving / Loading data from data file","lastModifiedDate":"2024-04-11"},{"lineNumber":1271,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1272,"author":{"gitId":"shawnnlimm"},"content":"1. Saving and loading data from data file.","lastModifiedDate":"2024-04-11"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1274,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: Current data located at `data/addressbook.json` is valid.","lastModifiedDate":"2024-04-11"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1276,"author":{"gitId":"shawnnlimm"},"content":"    2. Perform some commands that changes data in nerdTrackerPlus (e.g. adding a student, editing student details)","lastModifiedDate":"2024-04-11"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1278,"author":{"gitId":"shawnnlimm"},"content":"    3. Close and launch nerdTrackerPlus again. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1279,"author":{"gitId":"shawnnlimm"},"content":"       Expected: nerdTrackerPlus correctly displays the updated data.","lastModifiedDate":"2024-04-11"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1281,"author":{"gitId":"shawnnlimm"},"content":"2. Dealing with corrupted data file.","lastModifiedDate":"2024-04-11"},{"lineNumber":1282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1283,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: The data file exists and is located at `data/addressbook.json`.","lastModifiedDate":"2024-04-11"},{"lineNumber":1284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1285,"author":{"gitId":"shawnnlimm"},"content":"    2. Add an invalid character to the `addressbook.json` (e.g. add a * to the start of file).","lastModifiedDate":"2024-04-11"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1287,"author":{"gitId":"shawnnlimm"},"content":"    3. Close and launch nerdTrackerPlus again. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1288,"author":{"gitId":"shawnnlimm"},"content":"       Expected: nerdTrackerPlus does not display any data and an error message is shown in the terminal.","lastModifiedDate":"2024-04-11"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1290,"author":{"gitId":"shawnnlimm"},"content":"3. Dealing with missing data file.","lastModifiedDate":"2024-04-11"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1292,"author":{"gitId":"shawnnlimm"},"content":"    1. Prerequisites: The data file exists and is located at `data/addressbook.json`.","lastModifiedDate":"2024-04-11"},{"lineNumber":1293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1294,"author":{"gitId":"shawnnlimm"},"content":"    2. Delete the data file located at `data/addressbook.json`.","lastModifiedDate":"2024-04-11"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1296,"author":{"gitId":"shawnnlimm"},"content":"    3. Close and launch nerdTrackerPlus again. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1297,"author":{"gitId":"shawnnlimm"},"content":"       Expected: New data file created at `data/addressbook.json` containing some sample data.","lastModifiedDate":"2024-04-11"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1299,"author":{"gitId":"Ryo-Seah"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2024-04-11"},{"lineNumber":1300,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1301,"author":{"gitId":"Ryo-Seah"},"content":"**Team Size**: 4 members \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1302,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1303,"author":{"gitId":"Ryo-Seah"},"content":"Given below are the planned future enhancements for our application.","lastModifiedDate":"2024-04-11"},{"lineNumber":1304,"author":{"gitId":"Ryo-Seah"},"content":"Once the current version is stable, we plan to implement the following features:","lastModifiedDate":"2024-04-11"},{"lineNumber":1305,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1306,"author":{"gitId":"shawnnlimm"},"content":"1. Change unique identifier from Student Name to Student Matriculation Number","lastModifiedDate":"2024-04-13"},{"lineNumber":1307,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1308,"author":{"gitId":"shawnnlimm"},"content":"   * **Description**: Currently, the unique identifier for each student is generated based on the student\u0027s name.","lastModifiedDate":"2024-04-13"},{"lineNumber":1309,"author":{"gitId":"shawnnlimm"},"content":"   This can be problematic since the matriculation number is unique for each student, and it is possible for multiple students to have the same name. \u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":1310,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1311,"author":{"gitId":"shawnnlimm"},"content":"   * **Enhancement**: To resolve this, we plan to change the unique identifier of each student to be based on the student\u0027s","lastModifiedDate":"2024-04-13"},{"lineNumber":1312,"author":{"gitId":"Ryo-Seah"},"content":"   matriculation number instead, since this is unique to each student.","lastModifiedDate":"2024-04-11"},{"lineNumber":1313,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1314,"author":{"gitId":"shawnnlimm"},"content":"   * **Example**: If a user adds a new student with name `Alex Yeoh` when `Alex Yeoh` already exists in nerdTrackerPlus, the command will successfully execute so long as their matriculation number is unique.","lastModifiedDate":"2024-04-13"},{"lineNumber":1315,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":1316,"author":{"gitId":"shawnnlimm"},"content":"2. Setting participation scores","lastModifiedDate":"2024-04-13"},{"lineNumber":1317,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":1318,"author":{"gitId":"shawnnlimm"},"content":"    * **Description**: Currently, `markp` and `markallp` commands as well as the corresponding unmark commands","lastModifiedDate":"2024-04-13"},{"lineNumber":1319,"author":{"gitId":"Ryo-Seah"},"content":"only increment or decrement participation scores by 1. To set a students score to 3 for example,","lastModifiedDate":"2024-04-11"},{"lineNumber":1320,"author":{"gitId":"shawnnlimm"},"content":"the `markp` command must be executed multiple times.","lastModifiedDate":"2024-04-13"},{"lineNumber":1321,"author":{"gitId":"shawnnlimm"},"content":"This can be an inconvenient for teaching assistant who might want to increment scores by more than 1.\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":1322,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":1323,"author":{"gitId":"shawnnlimm"},"content":"    * **Enhancement**: We plan to modify `markp` commands and its variants to allow users to set specific scores instead of just incrementing it by 1.","lastModifiedDate":"2024-04-13"},{"lineNumber":1324,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1325,"author":{"gitId":"shawnnlimm"},"content":"    * **Example**: Users can now input `markp 1 3 s/5` to mark the participation score of the first student in week 3 to be 5 by specifying the score with the `s/` prefix.","lastModifiedDate":"2024-04-13"},{"lineNumber":1326,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1327,"author":{"gitId":"shawnnlimm"},"content":"3. Assignments to contain max score and weightage","lastModifiedDate":"2024-04-13"},{"lineNumber":1328,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":1329,"author":{"gitId":"shawnnlimm"},"content":"   * **Description**: Currently, the **Assignment** class only contains the name of the assignment and the score obtained by","lastModifiedDate":"2024-04-13"},{"lineNumber":1330,"author":{"gitId":"Ryo-Seah"},"content":"   the student. This does not allow for the calculation of the student\u0027s grade based on the assignment, as well as how","lastModifiedDate":"2024-04-11"},{"lineNumber":1331,"author":{"gitId":"Ryo-Seah"},"content":"   much an assignment grade affects a student\u0027s total score.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1332,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1333,"author":{"gitId":"shawnnlimm"},"content":"   * **Enhancement**: We can modify the Assignment class to contain **totalScore** and **weightagePercent** as Integer and Float fields respectively. These will be compulsory fields on the constructor and will be used to calculate the student\u0027s total score and grade.","lastModifiedDate":"2024-04-13"},{"lineNumber":1334,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":1335,"author":{"gitId":"shawnnlimm"},"content":"   * **Example**: If `assignment1` has a maximum score of 100 and a student has scored 50 for that assignment, instead of displaying `assignment1` as `assignment1: 50`, it will be displayed as `assignment1: 50/100`.","lastModifiedDate":"2024-04-13"},{"lineNumber":1336,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1337,"author":{"gitId":"shawnnlimm"},"content":"4. Accept floats for scores","lastModifiedDate":"2024-04-13"},{"lineNumber":1338,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1339,"author":{"gitId":"shawnnlimm"},"content":"   * **Description**: Currently, the **assignmentScore** field in the **Assignment** class only accepts integers.","lastModifiedDate":"2024-04-13"},{"lineNumber":1340,"author":{"gitId":"shawnnlimm"},"content":"   This can be limiting as assignment scores might contain decimals.\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":1341,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1342,"author":{"gitId":"shawnnlimm"},"content":"   * **Enhancement**: We plan to change the **assignmentScore** field to accept floats.","lastModifiedDate":"2024-04-13"},{"lineNumber":1343,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1344,"author":{"gitId":"shawnnlimm"},"content":"   * **Example**: Users can now input `grade 1 50.5 a/assignment1` to grade the first student\u0027s assignment1 score to 50.5.","lastModifiedDate":"2024-04-13"},{"lineNumber":1345,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1346,"author":{"gitId":"shawnnlimm"},"content":"5.  **unmarkalla** and **unmarkallp** commands should work as long as one student has a nonzero participation or attendance score","lastModifiedDate":"2024-04-13"},{"lineNumber":1347,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1348,"author":{"gitId":"shawnnlimm"},"content":"    * **Description**: Currently **unmarkallp** and **unmarkalla** commands will throw an error if one student has zero participation score or attendance score respectively. This makes their use case extremely narrow and limited. \u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":1349,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1350,"author":{"gitId":"shawnnlimm"},"content":"    * **Enhancement**: We plan to change this so that the commands will work as long as one student has a nonzero score.","lastModifiedDate":"2024-04-13"},{"lineNumber":1351,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1352,"author":{"gitId":"shawnnlimm"},"content":"    * **Example**: Suppose the first student in the list has a participation score of 0 for week 3, while the rest of the students have a score of 1. `unmarkp 3` will successfully unmark the participation score of all students in week 3 except for the first student.","lastModifiedDate":"2024-04-13"},{"lineNumber":1353,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":1354,"author":{"gitId":"shawnnlimm"},"content":"6. **grade** command to allow setting of assignment score to 0","lastModifiedDate":"2024-04-13"},{"lineNumber":1355,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":1356,"author":{"gitId":"shawnnlimm"},"content":"    * **Description**: Currently **grade** command only allows changing of assignment score to a non-zero positive integer.","lastModifiedDate":"2024-04-13"},{"lineNumber":1357,"author":{"gitId":"Ryo-Seah"},"content":"This is limiting if the score needs to be changed to 0 to be ungraded. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":1358,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":1359,"author":{"gitId":"shawnnlimm"},"content":"    * **Enhancement**: We plan to modify the **grade** command to allow users to grade an assignment score as 0.","lastModifiedDate":"2024-04-13"},{"lineNumber":1360,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":1361,"author":{"gitId":"shawnnlimm"},"content":"    * **Example**: Users can now input `grade 1 0 a/assignment1` to grade the first student\u0027s assignment1 score to 0.","lastModifiedDate":"2024-04-13"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1363,"author":{"gitId":"shawnnlimm"},"content":"7. More robust error handling for `marka` and `markalla` commands","lastModifiedDate":"2024-04-14"},{"lineNumber":1364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1365,"author":{"gitId":"shawnnlimm"},"content":"   * **Description**: Our `marka` and `markalla` commands currently do not have checks to see if the current student has already been marked before. If a user has issued the same `marka` command multiple times, this would result in a user needing to perform several `undo` commands to before being able to undo the `marka` command.","lastModifiedDate":"2024-04-14"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1367,"author":{"gitId":"shawnnlimm"},"content":"   * **Enhancement**: Throw an error if the user attempts to mark the attendance of a student who has already been marked before.","lastModifiedDate":"2024-04-14"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1369,"author":{"gitId":"shawnnlimm"},"content":"   * **Example**: If a user tries to mark a student who has already been marked before, an error message: `Student has already been marked` will be shown.","lastModifiedDate":"2024-04-14"},{"lineNumber":1370,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":1371,"author":{"gitId":"shawnnlimm"},"content":"8. **filter** command to be case-sensitive","lastModifiedDate":"2024-04-14"},{"lineNumber":1372,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":1373,"author":{"gitId":"shawnnlimm"},"content":"  * **Description**: Our filter command currently is case-insensitive, and users are unable to filter between 2 similar tags such as `G19Group1` and `g19group1`.","lastModifiedDate":"2024-04-14"},{"lineNumber":1374,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":1375,"author":{"gitId":"shawnnlimm"},"content":"  * **Enhancement**: Modify filter command to be case-sensitive.","lastModifiedDate":"2024-04-14"},{"lineNumber":1376,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":1377,"author":{"gitId":"shawnnlimm"},"content":"  * **Example**: Executing the command `filter cs2109s` would only filter students with tag `cs2109s`, even if some students have the tag `CS2109S`.","lastModifiedDate":"2024-04-14"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1379,"author":{"gitId":"shamesjen"},"content":"## **Appendix: Effort**","lastModifiedDate":"2024-04-12"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1381,"author":{"gitId":"shamesjen"},"content":"### Ideation Phase","lastModifiedDate":"2024-04-12"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1383,"author":{"gitId":"shamesjen"},"content":"nerdTrackerPlus was created by a collective desire to fill a niche that the group was deeply familiar","lastModifiedDate":"2024-04-12"},{"lineNumber":1384,"author":{"gitId":"shawnnlimm"},"content":"with - supporting teaching assistants managing the administrative side of things so that they could focus","lastModifiedDate":"2024-04-13"},{"lineNumber":1385,"author":{"gitId":"shamesjen"},"content":"on the more important issue, teaching their classes.","lastModifiedDate":"2024-04-12"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1387,"author":{"gitId":"shawnnlimm"},"content":"Armed with this understanding of the target users, we leveraged our experiences and insights to","lastModifiedDate":"2024-04-13"},{"lineNumber":1388,"author":{"gitId":"shamesjen"},"content":"identify the unique challenges and requirements of teaching assistants.","lastModifiedDate":"2024-04-12"},{"lineNumber":1389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1390,"author":{"gitId":"shamesjen"},"content":"We wanted to address the day-to-day hurdles faced by TAs, such as tracking attendance, monitoring","lastModifiedDate":"2024-04-12"},{"lineNumber":1391,"author":{"gitId":"shamesjen"},"content":"participation, managing assignments, and keeping track of the grades. The diversity of these challenges","lastModifiedDate":"2024-04-12"},{"lineNumber":1392,"author":{"gitId":"shamesjen"},"content":"highlighted the need for a versatile tool capable of streamlining these tasks.","lastModifiedDate":"2024-04-12"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1394,"author":{"gitId":"shamesjen"},"content":"At this point, we started drafting user stories that will serve as a foundation for the nerdTrackerPlus.","lastModifiedDate":"2024-04-12"},{"lineNumber":1395,"author":{"gitId":"shamesjen"},"content":"These stories were diverse, covering scenarios like a TA struggling to keep track of participation or","lastModifiedDate":"2024-04-12"},{"lineNumber":1396,"author":{"gitId":"shamesjen"},"content":"also difficulties in managing keeping track of the grades of the students for their different assignments.","lastModifiedDate":"2024-04-12"},{"lineNumber":1397,"author":{"gitId":"shamesjen"},"content":"From the set of user stories, we then carefully dissected them to extract key features that would allow","lastModifiedDate":"2024-04-12"},{"lineNumber":1398,"author":{"gitId":"shamesjen"},"content":"the nerdTrackerPlus effectively address the issues faced by the TAs.","lastModifiedDate":"2024-04-12"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1400,"author":{"gitId":"shamesjen"},"content":"From this process, we were able to successfully distill the first set of features, namely the edit,","lastModifiedDate":"2024-04-12"},{"lineNumber":1401,"author":{"gitId":"shamesjen"},"content":"removetags, filter and mark commands. With these basic commands, we were able to consult our peers and","lastModifiedDate":"2024-04-12"},{"lineNumber":1402,"author":{"gitId":"shamesjen"},"content":"professors for feedback.","lastModifiedDate":"2024-04-12"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1404,"author":{"gitId":"shamesjen"},"content":"We received many pieces of feedback that were extremely useful to the development of our project. Many","lastModifiedDate":"2024-04-12"},{"lineNumber":1405,"author":{"gitId":"shamesjen"},"content":"pieces of feedback allowed us to see the areas that we as the developers missed out on when we were","lastModifiedDate":"2024-04-12"},{"lineNumber":1406,"author":{"gitId":"shamesjen"},"content":"ideating for the application. Such examples included things like having a mark command to handle both","lastModifiedDate":"2024-04-12"},{"lineNumber":1407,"author":{"gitId":"shamesjen"},"content":"participation and attendance was confusing and unnecessary. Following this critical part of our","lastModifiedDate":"2024-04-12"},{"lineNumber":1408,"author":{"gitId":"shamesjen"},"content":"application\u0027s development, we decided on the new feature list and this resulted in a vast repertoire of a","lastModifiedDate":"2024-04-12"},{"lineNumber":1409,"author":{"gitId":"shamesjen"},"content":"total of 24 commands, all with the goal of addressing the issues faced by our user group.","lastModifiedDate":"2024-04-12"},{"lineNumber":1410,"author":{"gitId":"shamesjen"},"content":"This expansion in the commands allowed us to focus on the specific needs and we split each issue into","lastModifiedDate":"2024-04-12"},{"lineNumber":1411,"author":{"gitId":"shamesjen"},"content":"smaller parts. This allowed for a more comprehensive and meaningful feature set that is more robust in","lastModifiedDate":"2024-04-12"},{"lineNumber":1412,"author":{"gitId":"shamesjen"},"content":"tackling the issues faced by our user group.","lastModifiedDate":"2024-04-12"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1414,"author":{"gitId":"shamesjen"},"content":"### OOP Principles","lastModifiedDate":"2024-04-12"},{"lineNumber":1415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1416,"author":{"gitId":"shamesjen"},"content":"nerdTrackerPlus was built upon the AB3 application so we already had a basis to start building upon.","lastModifiedDate":"2024-04-12"},{"lineNumber":1417,"author":{"gitId":"shamesjen"},"content":"However, to ensure that we are able to track the students, attendance, participation and assignments,","lastModifiedDate":"2024-04-12"},{"lineNumber":1418,"author":{"gitId":"shamesjen"},"content":"we introduced new classes that adhered to OOP principles that allowed us to extend the use cases of the","lastModifiedDate":"2024-04-12"},{"lineNumber":1419,"author":{"gitId":"shamesjen"},"content":"different classes that were already present. This can be seen from the creation of the","lastModifiedDate":"2024-04-12"},{"lineNumber":1420,"author":{"gitId":"shamesjen"},"content":"versionedAddressBook.java which allowed for the undo and redo commands to function. We also created","lastModifiedDate":"2024-04-12"},{"lineNumber":1421,"author":{"gitId":"shamesjen"},"content":"multiple classes for the different commands and updated the model to include Assignments (which includes","lastModifiedDate":"2024-04-12"},{"lineNumber":1422,"author":{"gitId":"shamesjen"},"content":"both the Assignment and the grade of the assignment).","lastModifiedDate":"2024-04-12"},{"lineNumber":1423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1424,"author":{"gitId":"shamesjen"},"content":"Another example is in the filter command. The filter command differs from the find command as the filter","lastModifiedDate":"2024-04-12"},{"lineNumber":1425,"author":{"gitId":"shamesjen"},"content":"command is searching through the tags. Hence, it was vital for us to create a new","lastModifiedDate":"2024-04-12"},{"lineNumber":1426,"author":{"gitId":"shamesjen"},"content":"PersonContainsTagPredicate class to allow the filter command to search through the tags.","lastModifiedDate":"2024-04-12"},{"lineNumber":1427,"author":{"gitId":"shamesjen"},"content":"Many other examples of this exists in the different commands we have like the mark attendance and","lastModifiedDate":"2024-04-12"},{"lineNumber":1428,"author":{"gitId":"shamesjen"},"content":"mark participation commands. These commands are reflected directly onto the GUI so changes must be","lastModifiedDate":"2024-04-12"},{"lineNumber":1429,"author":{"gitId":"shamesjen"},"content":"incorporated into the existing code seamlessly and to do that, we had to first understand the existing","lastModifiedDate":"2024-04-12"},{"lineNumber":1430,"author":{"gitId":"shamesjen"},"content":"code before writing our own commands.","lastModifiedDate":"2024-04-12"},{"lineNumber":1431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1432,"author":{"gitId":"shamesjen"},"content":"Finally, the last and most important thing was to incorporate our new features into the existing save and","lastModifiedDate":"2024-04-12"},{"lineNumber":1433,"author":{"gitId":"shamesjen"},"content":"load commands. We basically switched out the current implementation with our own implementation that saves","lastModifiedDate":"2024-04-12"},{"lineNumber":1434,"author":{"gitId":"shamesjen"},"content":"the updated information like the assignments, participation scores, attendance and also the student","lastModifiedDate":"2024-04-12"},{"lineNumber":1435,"author":{"gitId":"shawnnlimm"},"content":"(including the name, matric number, telegram handle and email address). This new implementation allows us to","lastModifiedDate":"2024-04-13"},{"lineNumber":1436,"author":{"gitId":"shamesjen"},"content":"parse all the information we want to save into a JSON file and because we created the new implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":1437,"author":{"gitId":"shamesjen"},"content":"on storing, we also created the corresponding load functions to load the saved JSON data into the","lastModifiedDate":"2024-04-12"},{"lineNumber":1438,"author":{"gitId":"shamesjen"},"content":"application on initialisation.","lastModifiedDate":"2024-04-12"},{"lineNumber":1439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1440,"author":{"gitId":"shamesjen"},"content":"### Built for Students, by Students","lastModifiedDate":"2024-04-12"},{"lineNumber":1441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1442,"author":{"gitId":"shamesjen"},"content":"Our main focus for the nerdTrackerPlus was to create a seamless, integrated and efficient tool for","lastModifiedDate":"2024-04-12"},{"lineNumber":1443,"author":{"gitId":"shamesjen"},"content":"teaching assistants. To save time reduce the hassle from having too many GUI items, we chose a","lastModifiedDate":"2024-04-12"},{"lineNumber":1444,"author":{"gitId":"shamesjen"},"content":"Command Line Interface (CLI) approach to using our application.","lastModifiedDate":"2024-04-12"},{"lineNumber":1445,"author":{"gitId":"shamesjen"},"content":"This was also due to the fact that being Computer Science Teaching Assistants, our user group was highly","lastModifiedDate":"2024-04-12"},{"lineNumber":1446,"author":{"gitId":"shamesjen"},"content":"likely to be adept at using the CLI and would feel right at home with it compared to maybe a different","lastModifiedDate":"2024-04-12"},{"lineNumber":1447,"author":{"gitId":"shamesjen"},"content":"target audience.","lastModifiedDate":"2024-04-12"},{"lineNumber":1448,"author":{"gitId":"shamesjen"},"content":"The nerdTrackerPlus empowers our users to manage the academic details efficiently. The TAs can easily add","lastModifiedDate":"2024-04-12"},{"lineNumber":1449,"author":{"gitId":"shamesjen"},"content":"update, filter, mark both students and assignments easily, all in the application. This is helped by the","lastModifiedDate":"2024-04-12"},{"lineNumber":1450,"author":{"gitId":"shamesjen"},"content":"use of the index of displayed items for quick interactions. The find and filter commands are also","lastModifiedDate":"2024-04-12"},{"lineNumber":1451,"author":{"gitId":"shamesjen"},"content":"extremely helpful to the TAs, allowing them to quickly locate and update the necessary student or students.","lastModifiedDate":"2024-04-12"},{"lineNumber":1452,"author":{"gitId":"shamesjen"},"content":"We also have messages to reflect the status of a command, like SUCCESS or in the case of an error, we","lastModifiedDate":"2024-04-12"},{"lineNumber":1453,"author":{"gitId":"shamesjen"},"content":"would help the user by giving a sample use case and also show the parameters for the command. The help","lastModifiedDate":"2024-04-12"},{"lineNumber":1454,"author":{"gitId":"shamesjen"},"content":"command also directs the user to the user guide, enhancing the support for users.","lastModifiedDate":"2024-04-12"},{"lineNumber":1455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1456,"author":{"gitId":"shamesjen"},"content":"### GUI updates","lastModifiedDate":"2024-04-12"},{"lineNumber":1457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1458,"author":{"gitId":"shamesjen"},"content":"The most important GUI update is the color coded nature of our updated GUI. For participation and","lastModifiedDate":"2024-04-12"},{"lineNumber":1459,"author":{"gitId":"shamesjen"},"content":"attendance, if a student is missing in either, the corresponding field will be colored red to indicate an","lastModifiedDate":"2024-04-12"},{"lineNumber":1460,"author":{"gitId":"shamesjen"},"content":"absence or lack of participation and this will allow the teaching staff to easily identify who did not","lastModifiedDate":"2024-04-12"},{"lineNumber":1461,"author":{"gitId":"shamesjen"},"content":"participate or was absent. For assignments, the same color coding is applied, but with different colors to","lastModifiedDate":"2024-04-12"},{"lineNumber":1462,"author":{"gitId":"shamesjen"},"content":"differentiate the assignments with the attendance and participation scores.","lastModifiedDate":"2024-04-12"},{"lineNumber":1463,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1464,"author":{"gitId":"shamesjen"},"content":"### Testing","lastModifiedDate":"2024-04-12"},{"lineNumber":1465,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1466,"author":{"gitId":"shawnnlimm"},"content":"nerdTrackerPlus has a Testing Coverage of above 75% which is an indication of rigorous testing on the","lastModifiedDate":"2024-04-13"},{"lineNumber":1467,"author":{"gitId":"shamesjen"},"content":"part of the developer team. Having a high testing coverage is extremely important as it allows us to test","lastModifiedDate":"2024-04-12"},{"lineNumber":1468,"author":{"gitId":"shamesjen"},"content":"new code and see if the new code that we push may have any negative side effects.","lastModifiedDate":"2024-04-12"},{"lineNumber":1469,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1470,"author":{"gitId":"shamesjen"},"content":"### Software Engineering Practices","lastModifiedDate":"2024-04-12"},{"lineNumber":1471,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1472,"author":{"gitId":"shamesjen"},"content":"Our development process embraced rigorous software engineering practices. We adopted the standard format","lastModifiedDate":"2024-04-12"},{"lineNumber":1473,"author":{"gitId":"shamesjen"},"content":"in the course for clearer commit messages and enforced a review process requiring approval from at least","lastModifiedDate":"2024-04-12"},{"lineNumber":1474,"author":{"gitId":"shamesjen"},"content":"one team members for each pull request, enhancing code quality and team awareness.","lastModifiedDate":"2024-04-12"},{"lineNumber":1475,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":1476,"author":{"gitId":"shamesjen"},"content":"We standardized pull request templates for detailed descriptions and checklists, ensuring thorough testing","lastModifiedDate":"2024-04-12"},{"lineNumber":1477,"author":{"gitId":"shamesjen"},"content":"and maintenance of code coverage standards. Additionally, we experimented with git workflows to optimize","lastModifiedDate":"2024-04-12"},{"lineNumber":1478,"author":{"gitId":"shamesjen"},"content":"productivity, employing both forking and feature workflows based on the nature of the task to facilitate","lastModifiedDate":"2024-04-12"},{"lineNumber":1479,"author":{"gitId":"shamesjen"},"content":"collaborative development and efficient integration of changes.","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"shawnnlimm":373,"-":348,"shamesjen":123,"Ryo-Seah":71,"thewongdylan":564}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"Are you a CS2109S TA (Teaching Assistant) conducting multiple tutorials a week? Are you having troubles with keeping track of student attendance and participation scores during tutorials?","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"Introducing nerdTrackerPlus, your ultimate companion in managing student details and tracking their progress effortlessly!","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"nerdTrackerPlus is a **desktop app** specifically designed for **CS2109S tutors**. It helps you manage student details and progress for your tutorials. nerdTrackerPlus is optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, nerdTrackerPlus can get your student management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"nerdTrackerPlus contains several key features to address these issues such as `markp` and `marka` commands to help you keep track of participation scores and attendance, as well as `adda` to add custom assignments to students!","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"## Table of Contents","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"- Table of Contents","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"1. Download the latest `nerdTrackerPlus.jar` from [here](https://github.com/AY2324S2-CS2103T-F11-1/tp/releases).","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your nerdTrackerPlus.","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar nerdTrackerPlus.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"   * `list` : Lists all students.","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"   * `add n/John Doe m/A1234567A e/e1234567@u.nus.edu tl/johnthedoe` : Adds a student named `John Doe` to nerdTrackerPlus.","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"   * `delete 3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"   * `clear` : Deletes all students.","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times (unless otherwise stated).\u003cbr\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"* For commands that require `INDEX`, it must be specified before parameters. \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"  e.g. `edit n/Adam 1` is incorrect while `edit 1 n/Adam` is correct.","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"### General commands","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"shawnnlimm"},"content":"#### Viewing help : `help`","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"shawnnlimm"},"content":"Shows you a message explaining how to access the help page.","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"shawnnlimm"},"content":"![help message](images/ug/helpMessage.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"shawnnlimm"},"content":"`help`","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"shawnnlimm"},"content":"#### Undoing a previous command : `undo`","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"shawnnlimm"},"content":"Undoes the previous command you executed that changed data.","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"shawnnlimm"},"content":"`undo`","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"shawnnlimm"},"content":"* Only undoes a command if it has changed data in nerdTrackerPlus since launch.","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"shawnnlimm"},"content":"* Will not undo if no commands were issued beforehand.","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"shawnnlimm"},"content":"* `marka 1 3` to mark the attendance of student 1 in week 3, followed by `undo`","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"shawnnlimm"},"content":"![undo](images/ug/undoExample.png)","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                                               | How to resolve                                                                     |","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"shawnnlimm"},"content":"|:----------------------------------------------------------------|:-----------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                                 | Ensure that the command word provided is correct.                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"shawnnlimm"},"content":"| Unable to undo since there were no previously issued commands.  | Ensure that at least 1 command was previously used before using the undo command.  |","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"shawnnlimm"},"content":"#### Redoing a previously undone command : `redo`","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"shawnnlimm"},"content":"Redoes the previous command that you undid.","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":125,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"shawnnlimm"},"content":"`redo`","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"shawnnlimm"},"content":"* Redo command must be issued immediately after an undo command.","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"shawnnlimm"},"content":"* Will only redo the command that was undone immediately prior.","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"shawnnlimm"},"content":"* Will not redo if no commands were undone beforehand.","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"shawnnlimm"},"content":"* Maximum number of redo commands issued cannot be greater than the number of undo command issued. \u003cbr\u003e e.g. If only 2 undo commands were issued, only a maximum of 2 redo commands can be used.","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"shawnnlimm"},"content":"* `marka 1 3` to mark the attendance of student 1 in week 3, followed by `undo`, then `redo`","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"shawnnlimm"},"content":"![redo](images/ug/redoExample.png)","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                                              | How to resolve                                                                      |","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"shawnnlimm"},"content":"|:---------------------------------------------------------------|:------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                                | Ensure that the command word provided is correct.                                   |","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"shawnnlimm"},"content":"| Unable to redo since there were no previously issued commands. | Ensure that at least 1 command was previously undone before using the redo command. |","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"shawnnlimm"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"shawnnlimm"},"content":"Clears all your student entries from nerdTrackerPlus.","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"shawnnlimm"},"content":"`clear`","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"shawnnlimm"},"content":"* `clear`","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":162,"author":{"gitId":"shawnnlimm"},"content":"![clear](images/ug/clearExample.png)","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":165,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"shawnnlimm"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":168,"author":{"gitId":"shawnnlimm"},"content":"Exits the program.","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":170,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"shawnnlimm"},"content":"`exit`","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"shawnnlimm"},"content":"* `exit`","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":179,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"shawnnlimm"},"content":"### Managing students","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"shawnnlimm"},"content":"#### Adding a student : `add`","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"shawnnlimm"},"content":"Adds a student from your tutorial class to nerdTrackerPlus.","lastModifiedDate":"2024-04-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":187,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"shawnnlimm"},"content":"`add n/NAME m/MATRIC_NUMBER e/EMAIL tl/TELEGRAM_HANDLE [t/TAG]â€¦â€‹`","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"shawnnlimm"},"content":"A student can have any number of tags (including 0)","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"shawnnlimm"},"content":"|       Field       | Prefix |                    Required                     | Requirements                                                                                                      |","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"shawnnlimm"},"content":"|:-----------------:|:------:|:-----------------------------------------------:|:------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":198,"author":{"gitId":"shawnnlimm"},"content":"|      `NAME`       |  `n/`  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | Name of the student. It should only contain alphanumeric characters and spaces.                                   |","lastModifiedDate":"2024-04-08"},{"lineNumber":199,"author":{"gitId":"shawnnlimm"},"content":"|  `MATRIC_NUMBER`  |  `m/`  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | Matriculation number of the student. It should start and end with a capital letter and have 7 digits in between.  |","lastModifiedDate":"2024-04-08"},{"lineNumber":200,"author":{"gitId":"shawnnlimm"},"content":"|      `EMAIL`      |  `e/`  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | Email of the student. Email should match the format: `local-part@domain`.                                         |","lastModifiedDate":"2024-04-14"},{"lineNumber":201,"author":{"gitId":"shawnnlimm"},"content":"| `TELEGRAM_HANDLE` | `tl/`  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | Telegram username of the student. It should only contain alphanumeric characters.                                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"shawnnlimm"},"content":"|       `TAG`       |  `t/`  | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | Tag(s) for the student. It should only contain alphanumeric characters and spaces. Tags specified must be unique. |","lastModifiedDate":"2024-04-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"shawnnlimm"},"content":"* A student is uniquely identified by their `NAME`. This field is case-sensitive.","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"shawnnlimm"},"content":"* You may add multiple tags to a student by specifying the `t/` prefix multiple times.","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"shawnnlimm"},"content":"* If 2 identical tags are specified (e.g. t/tag1 t/tag1), only 1 tag will be added.","lastModifiedDate":"2024-04-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":209,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"shawnnlimm"},"content":"* `add n/John Doe m/A1234567Z e/johnd@u.nus.edu tl/johndoe01 t/cs2109s` \u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"shawnnlimm"},"content":"![addStudent](images/ug/addStudentExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                                                                            | How to resolve                                                                                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"shawnnlimm"},"content":"|:---------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":219,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                                                              | Ensure that the command word provided is correct.                                              |","lastModifiedDate":"2024-04-10"},{"lineNumber":220,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                                                                       | Ensure that all required fields are provided.                                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":221,"author":{"gitId":"shawnnlimm"},"content":"| Names should only contain alphanumeric characters and spaces, and it should not be blank     | Ensure that the name does not include any special characters.                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":222,"author":{"gitId":"shawnnlimm"},"content":"| Emails should be of the format local-part@domain and adhere to the following constraints:... | Ensure that the email follows the correct format specified                                     |","lastModifiedDate":"2024-04-10"},{"lineNumber":223,"author":{"gitId":"shawnnlimm"},"content":"| Matric numbers should begin and end with capital letters, and comprise 7 digits in between.  | Ensure that the matric number is in the correct format.                                        |","lastModifiedDate":"2024-04-10"},{"lineNumber":224,"author":{"gitId":"shawnnlimm"},"content":"| Telegram Handle should be alphanumeric without whitespaces                                   | Ensure that the telegram handle does not contain any whitespaces or special characters.        |","lastModifiedDate":"2024-04-10"},{"lineNumber":225,"author":{"gitId":"shawnnlimm"},"content":"| Tags names should be alphanumeric                                                            | Ensure that the tags does not contain any special characters or whitespaces.                   |","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"shawnnlimm"},"content":"| This person already exists in the address book                                               | Ensure that the name of the new student to be added does not already exist in nerdTrackerPlus. |","lastModifiedDate":"2024-04-10"},{"lineNumber":227,"author":{"gitId":"shawnnlimm"},"content":"| Multiple values specified for the following single-valued field(s)                           | Ensure that there are no duplicates for single valued fields.                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":228,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":231,"author":{"gitId":"shawnnlimm"},"content":"#### Listing all students : `list`","lastModifiedDate":"2024-04-10"},{"lineNumber":232,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"shawnnlimm"},"content":"Shows you a list of all students in nerdTrackerPlus.","lastModifiedDate":"2024-04-13"},{"lineNumber":234,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":236,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"shawnnlimm"},"content":"`list`","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"shawnnlimm"},"content":"* `list`","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"shawnnlimm"},"content":"![listStudent](images/ug/listExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":244,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"shawnnlimm"},"content":"#### Editing a student : `edit`","lastModifiedDate":"2024-04-10"},{"lineNumber":248,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"shawnnlimm"},"content":"Edits your students\u0027 details in nerdTrackerPlus.","lastModifiedDate":"2024-04-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"shawnnlimm"},"content":"`edit INDEX [n/NAME] [m/MATRIC_NUMBER] [e/EMAIL] [tl/TELEGRAM_HANDLE] [t/TAG]â€¦â€‹`","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"shawnnlimm"},"content":"|       Field       |                     Prefix                      |                    Required                     | Requirements                                                                                                             |","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"shawnnlimm"},"content":"|:-----------------:|:-----------------------------------------------:|:-----------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":259,"author":{"gitId":"shawnnlimm"},"content":"|      `INDEX`      | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | `INDEX` **must be a positive integer** 1, 2, 3 â€¦â€‹ \u003cbr\u003e`INDEX` cannot be greater than the number of students in the list. |","lastModifiedDate":"2024-04-10"},{"lineNumber":260,"author":{"gitId":"shawnnlimm"},"content":"|      `NAME`       |                      `n/`                       | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | Name of the student. It should only contain alphanumeric characters and spaces.                                          |","lastModifiedDate":"2024-04-08"},{"lineNumber":261,"author":{"gitId":"shawnnlimm"},"content":"|  `MATRIC_NUMBER`  |                      `m/`                       | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | Matriculation number of the student. It should start and end with a capital letter and have 7 digits in between.         |","lastModifiedDate":"2024-04-08"},{"lineNumber":262,"author":{"gitId":"shawnnlimm"},"content":"|      `EMAIL`      |                      `e/`                       | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | Email of the student. Email should match the format: `local-part@domain`.                                                |","lastModifiedDate":"2024-04-14"},{"lineNumber":263,"author":{"gitId":"shawnnlimm"},"content":"| `TELEGRAM_HANDLE` |                      `tl/`                      | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | Telegram username of the student. It should only contain alphanumeric characters.                                        |","lastModifiedDate":"2024-04-10"},{"lineNumber":264,"author":{"gitId":"shawnnlimm"},"content":"|       `TAG`       |                      `t/`                       | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | Tag(s) for the student. It should only contain alphanumeric characters and spaces.                                       |","lastModifiedDate":"2024-04-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"shawnnlimm"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"shawnnlimm"},"content":"* `INDEX` **must** be specified before the other parameters.","lastModifiedDate":"2024-04-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"shawnnlimm"},"content":"* When editing tags, the existing tags of the student will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"shawnnlimm"},"content":"* You can remove all the studentâ€™s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"shawnnlimm"},"content":"*  `edit 1 n/Alex Lim tl/alexlim01` Edits the name and telegram handle of the first student to be `Alex Lim` and `alexlim01` respectively.","lastModifiedDate":"2024-04-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"shawnnlimm"},"content":"![editStudent](images/ug/editStudentExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":283,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                                                                            | How to resolve                                                                                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":284,"author":{"gitId":"shawnnlimm"},"content":"|:---------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":285,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                                                              | Ensure that the command word provided is correct.                                              |","lastModifiedDate":"2024-04-10"},{"lineNumber":286,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                                                                       | Ensure that all required fields are provided.                                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":287,"author":{"gitId":"shawnnlimm"},"content":"| At least one field to edit must be provided.                                                 | Ensure that at least 1 field to edit is specified.                                             |","lastModifiedDate":"2024-04-10"},{"lineNumber":288,"author":{"gitId":"shawnnlimm"},"content":"| The person index provided is invalid                                                         | Ensure that the index provided is not greater than the number of students in the list.         |","lastModifiedDate":"2024-04-10"},{"lineNumber":289,"author":{"gitId":"shawnnlimm"},"content":"| Names should only contain alphanumeric characters and spaces, and it should not be blank     | Ensure that the name does not include any special characters.                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":290,"author":{"gitId":"shawnnlimm"},"content":"| Emails should be of the format local-part@domain and adhere to the following constraints:... | Ensure that the email follows the correct format specified                                     |","lastModifiedDate":"2024-04-10"},{"lineNumber":291,"author":{"gitId":"shawnnlimm"},"content":"| Matric numbers should begin and end with capital letters, and comprise 7 digits in between.  | Ensure that the matric number is in the correct format.                                        |","lastModifiedDate":"2024-04-10"},{"lineNumber":292,"author":{"gitId":"shawnnlimm"},"content":"| Telegram Handle should be alphanumeric without whitespaces                                   | Ensure that the telegram handle does not contain any whitespaces or special characters.        |","lastModifiedDate":"2024-04-10"},{"lineNumber":293,"author":{"gitId":"shawnnlimm"},"content":"| Tags names should be alphanumeric                                                            | Ensure that the tags does not contain any special characters or whitespaces.                   |","lastModifiedDate":"2024-04-10"},{"lineNumber":294,"author":{"gitId":"shawnnlimm"},"content":"| This person already exists in the address book                                               | Ensure that the name of the new student to be added does not already exist in nerdTrackerPlus. |","lastModifiedDate":"2024-04-10"},{"lineNumber":295,"author":{"gitId":"shawnnlimm"},"content":"| Multiple values specified for the following single-valued field(s)                           | Ensure that there are no duplicates for single valued fields.                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":298,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":299,"author":{"gitId":"shawnnlimm"},"content":"#### Locating students by name : `find`","lastModifiedDate":"2024-04-10"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"shawnnlimm"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2024-04-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":304,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"shawnnlimm"},"content":"`find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":307,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"shawnnlimm"},"content":"|      Field       |                     Prefix                     |                     Required                     | Requirements |","lastModifiedDate":"2024-04-04"},{"lineNumber":310,"author":{"gitId":"shawnnlimm"},"content":"|:----------------:|:----------------------------------------------:|:------------------------------------------------:|:-------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":311,"author":{"gitId":"shawnnlimm"},"content":"|    `KEYWORD`     | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | NIL          |","lastModifiedDate":"2024-04-08"},{"lineNumber":312,"author":{"gitId":"shawnnlimm"},"content":"| `MORE_KEYWORDS`  | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e |  \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | NIL          |","lastModifiedDate":"2024-04-08"},{"lineNumber":313,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":314,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"shawnnlimm"},"content":"* students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"shawnnlimm"},"content":"* `find alex charlotte` returns `Alex Yeoh` and `Charlotte Oliveiro`","lastModifiedDate":"2024-04-10"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"shawnnlimm"},"content":"![findStudent](images/ug/findStudentsExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential error:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":331,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered | How to resolve                                    |","lastModifiedDate":"2024-04-10"},{"lineNumber":332,"author":{"gitId":"shawnnlimm"},"content":"|:------------------|:--------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":333,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command   | Ensure that the command word provided is correct. |","lastModifiedDate":"2024-04-10"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":337,"author":{"gitId":"shawnnlimm"},"content":"#### Deleting a student : `delete`","lastModifiedDate":"2024-04-10"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"shawnnlimm"},"content":"Deletes a student from your student list nerdTrackerPlus.","lastModifiedDate":"2024-04-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":343,"author":{"gitId":"shawnnlimm"},"content":"`delete INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":345,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":347,"author":{"gitId":"shawnnlimm"},"content":"|      Field      |                     Prefix                      |                     Required                     | Requirements                                                                                                             |","lastModifiedDate":"2024-04-04"},{"lineNumber":348,"author":{"gitId":"shawnnlimm"},"content":"|:---------------:|:-----------------------------------------------:|:------------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":349,"author":{"gitId":"shawnnlimm"},"content":"|     `INDEX`     | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | `INDEX` **must be a positive integer** 1, 2, 3 â€¦â€‹ \u003cbr\u003e`INDEX` cannot be greater than the number of students in the list. |","lastModifiedDate":"2024-04-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":351,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":353,"author":{"gitId":"shawnnlimm"},"content":"* Deletes the student at the specified `INDEX`.","lastModifiedDate":"2024-04-04"},{"lineNumber":354,"author":{"gitId":"shawnnlimm"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2024-04-04"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":356,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"shawnnlimm"},"content":"* `list` followed by `delete 1` deletes the 1st student, Alex Yeoh, in nerdTrackerPlus.","lastModifiedDate":"2024-04-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":360,"author":{"gitId":"shawnnlimm"},"content":"![deleteStudent](images/ug/deleteStudentExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":361,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":362,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":363,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":364,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                     | How to resolve                                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":365,"author":{"gitId":"shawnnlimm"},"content":"|:--------------------------------------|:----------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":366,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                       | Ensure that the command word provided is correct.                                       |","lastModifiedDate":"2024-04-10"},{"lineNumber":367,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                | Ensure that all required fields are provided.                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":368,"author":{"gitId":"shawnnlimm"},"content":"| The person index provided is invalid  | Ensure that the index provided is not greater than the number of students in the list.  |","lastModifiedDate":"2024-04-10"},{"lineNumber":369,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":370,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":371,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":372,"author":{"gitId":"shawnnlimm"},"content":"#### Remove tag from a student : `removetag`","lastModifiedDate":"2024-04-10"},{"lineNumber":373,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":374,"author":{"gitId":"shawnnlimm"},"content":"Deletes the specified tag from a student in nerdTrackerPlus.","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":377,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":378,"author":{"gitId":"shawnnlimm"},"content":"`removetag INDEX t/TAGâ€¦`","lastModifiedDate":"2024-04-10"},{"lineNumber":379,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":380,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":381,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":382,"author":{"gitId":"shawnnlimm"},"content":"|  Field  |                     Prefix                     |                    Required                     | Requirements                                                                                                                              |","lastModifiedDate":"2024-04-04"},{"lineNumber":383,"author":{"gitId":"shawnnlimm"},"content":"|:-------:|:----------------------------------------------:|:-----------------------------------------------:|:------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":384,"author":{"gitId":"shawnnlimm"},"content":"| `INDEX` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | `INDEX` **must be a positive integer** 1, 2, 3 â€¦â€‹ \u003cbr\u003e`INDEX` cannot be greater than the number of students in the list.                  |","lastModifiedDate":"2024-04-08"},{"lineNumber":385,"author":{"gitId":"shawnnlimm"},"content":"|  `TAG`  |                      `t/`                      | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | It should only contain alphanumeric characters. Tag must exist on the student. At least 1 or more tags must be specified.                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":386,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":387,"author":{"gitId":"shawnnlimm"},"content":"* Removes tags of the student at the specified `INDEX`.","lastModifiedDate":"2024-04-04"},{"lineNumber":388,"author":{"gitId":"shawnnlimm"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2024-04-04"},{"lineNumber":389,"author":{"gitId":"shawnnlimm"},"content":"* `TAG` is case-sensitive.","lastModifiedDate":"2024-04-08"},{"lineNumber":390,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":391,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":392,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":393,"author":{"gitId":"shawnnlimm"},"content":"* `list` followed by `removetag 1 t/G19Group1` removes the G19Group1 tag from the 1st student in nerdTrackerPlus.","lastModifiedDate":"2024-04-08"},{"lineNumber":394,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":395,"author":{"gitId":"shawnnlimm"},"content":"![removeTag](images/ug/removeTagExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":396,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":397,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":398,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":399,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                        | How to resolve                                                                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":400,"author":{"gitId":"shawnnlimm"},"content":"|:-----------------------------------------|:---------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":401,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                          | Ensure that the command word provided is correct.                                      |","lastModifiedDate":"2024-04-10"},{"lineNumber":402,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                   | Ensure that all required fields are provided.                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":403,"author":{"gitId":"shawnnlimm"},"content":"| Index is not a non-zero unsigned integer | Ensure that the index provided is a positive integer.                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":404,"author":{"gitId":"shawnnlimm"},"content":"| The person index provided is invalid     | Ensure that the index provided is not greater than the number of students in the list. |","lastModifiedDate":"2024-04-10"},{"lineNumber":405,"author":{"gitId":"shawnnlimm"},"content":"| This person does not have that tag       | Ensure that the person specified at the index contains the tag.                        |","lastModifiedDate":"2024-04-10"},{"lineNumber":406,"author":{"gitId":"shawnnlimm"},"content":"| Tags names should be alphanumeric        | Ensure that the tags does not contain any special characters or whitespaces.           |","lastModifiedDate":"2024-04-10"},{"lineNumber":407,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":408,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":409,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":410,"author":{"gitId":"shawnnlimm"},"content":"####  Remove tag(s) from all students : `removetagall`","lastModifiedDate":"2024-04-10"},{"lineNumber":411,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":412,"author":{"gitId":"shawnnlimm"},"content":"Deletes the specified tag(s) from all students in the displayed list that have the tag(s).","lastModifiedDate":"2024-04-14"},{"lineNumber":413,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":414,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":415,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":416,"author":{"gitId":"shawnnlimm"},"content":"`removetagall t/TAG(S)â€¦â€‹`","lastModifiedDate":"2024-04-04"},{"lineNumber":417,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":418,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":419,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":420,"author":{"gitId":"shawnnlimm"},"content":"|  Field   | Prefix |                    Required                     | Requirements                                                                                                      |","lastModifiedDate":"2024-04-04"},{"lineNumber":421,"author":{"gitId":"shawnnlimm"},"content":"|:--------:|:------:|:-----------------------------------------------:|:------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":422,"author":{"gitId":"shawnnlimm"},"content":"| `TAG(S)` |  `t/`  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | Tag on a student. It should only contain alphanumeric characters. Tag must exist on at least 1 student.           |","lastModifiedDate":"2024-04-08"},{"lineNumber":423,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":424,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":425,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":426,"author":{"gitId":"shawnnlimm"},"content":"* More than 1 tag can be specified to be removed.","lastModifiedDate":"2024-04-04"},{"lineNumber":427,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":428,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"shawnnlimm"},"content":"`removetagall t/G19Group1` removes the G19Group1 tag from the first 3 students in the list.","lastModifiedDate":"2024-04-08"},{"lineNumber":430,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"shawnnlimm"},"content":"![removeTagAll](images/ug/removeTagAllExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                  | How to resolve                                                               |","lastModifiedDate":"2024-04-10"},{"lineNumber":436,"author":{"gitId":"shawnnlimm"},"content":"|:-----------------------------------|:-----------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":437,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                    | Ensure that the command word provided is correct.                            |","lastModifiedDate":"2024-04-10"},{"lineNumber":438,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format             | Ensure that all required fields are provided.                                |","lastModifiedDate":"2024-04-10"},{"lineNumber":439,"author":{"gitId":"shawnnlimm"},"content":"| No persons have any of the tag(s)  | Ensure that at least 1 person has the tag specified.                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":440,"author":{"gitId":"shawnnlimm"},"content":"| Tags names should be alphanumeric  | Ensure that the tags does not contain any special characters or whitespaces. |","lastModifiedDate":"2024-04-10"},{"lineNumber":441,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":442,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":443,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":444,"author":{"gitId":"shawnnlimm"},"content":"#### Filtering by tags : `filter`","lastModifiedDate":"2024-04-10"},{"lineNumber":445,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":446,"author":{"gitId":"shawnnlimm"},"content":"Filters all students from your list of students in nerdTrackerPlus with the specified tags.","lastModifiedDate":"2024-04-13"},{"lineNumber":447,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":448,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":449,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":450,"author":{"gitId":"shawnnlimm"},"content":"`filter TAGâ€¦â€‹`","lastModifiedDate":"2024-04-10"},{"lineNumber":451,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":452,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":453,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":454,"author":{"gitId":"shawnnlimm"},"content":"| Field  |                     Prefix                     |                     Required                     | Requirements                                     |","lastModifiedDate":"2024-04-04"},{"lineNumber":455,"author":{"gitId":"shawnnlimm"},"content":"|:------:|:----------------------------------------------:|:------------------------------------------------:|:-------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":456,"author":{"gitId":"shawnnlimm"},"content":"| `TAG`  | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | Tag should only contain alphanumeric characters. |","lastModifiedDate":"2024-04-10"},{"lineNumber":457,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":458,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":459,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":460,"author":{"gitId":"shamesjen"},"content":"* If `filter` is used and more than 1 tag is used to filter, students that match any one of the tags will be shown.","lastModifiedDate":"2024-04-09"},{"lineNumber":461,"author":{"gitId":"shawnnlimm"},"content":"* `filter` command is case-insensitive e.g. filter `G19Group1` will filter students with both `G19Group1` and `g19group1` tags.","lastModifiedDate":"2024-04-14"},{"lineNumber":462,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":463,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":464,"author":{"gitId":"shawnnlimm"},"content":"* `filter family`","lastModifiedDate":"2024-04-10"},{"lineNumber":465,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":466,"author":{"gitId":"shawnnlimm"},"content":"![filterStudent](images/ug/filterStudentExample.png)","lastModifiedDate":"2024-04-10"},{"lineNumber":467,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":468,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":469,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":470,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                  | How to resolve                                                               |","lastModifiedDate":"2024-04-10"},{"lineNumber":471,"author":{"gitId":"shawnnlimm"},"content":"|:-----------------------------------|:-----------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":472,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                    | Ensure that the command word provided is correct.                            |","lastModifiedDate":"2024-04-10"},{"lineNumber":473,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format             | Ensure that all required fields are provided.                                |","lastModifiedDate":"2024-04-10"},{"lineNumber":474,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":475,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":476,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":477,"author":{"gitId":"shawnnlimm"},"content":"### Managing participation, attendance and assignments","lastModifiedDate":"2024-04-10"},{"lineNumber":478,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":479,"author":{"gitId":"shawnnlimm"},"content":"#### Marking individual participation scores : `markp`","lastModifiedDate":"2024-04-10"},{"lineNumber":480,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":481,"author":{"gitId":"shawnnlimm"},"content":"Marks the participation score of a specific student from your tutorial class.","lastModifiedDate":"2024-04-13"},{"lineNumber":482,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":483,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":484,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":485,"author":{"gitId":"shawnnlimm"},"content":"`markp INDEX WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":486,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":487,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":488,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":489,"author":{"gitId":"shawnnlimm"},"content":"|     Field     |                     Prefix                     |                      Required                      | Requirements                                                                                                          |","lastModifiedDate":"2024-03-28"},{"lineNumber":490,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:----------------------------------------------:|:--------------------------------------------------:|:----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":491,"author":{"gitId":"shawnnlimm"},"content":"|    `INDEX`    | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e |  \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e   | INDEX **must be a positive integer** 1, 2, 3 â€¦â€‹ \u003cbr\u003e INDEX cannot be greater than the number of students in the list. |","lastModifiedDate":"2024-04-08"},{"lineNumber":492,"author":{"gitId":"shawnnlimm"},"content":"| `WEEK_NUMBER` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e |  \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e   | WEEK_NUMBER **must be a valid week from the range [3, 13]**.                                                          |","lastModifiedDate":"2024-04-08"},{"lineNumber":493,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":494,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":495,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":496,"author":{"gitId":"shawnnlimm"},"content":"* Marks the participation score of the student at the specified `INDEX` in the specified `WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":497,"author":{"gitId":"shawnnlimm"},"content":"* The `INDEX` refers to the index number shown in the displayed student list.","lastModifiedDate":"2024-04-04"},{"lineNumber":498,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":499,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":500,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":501,"author":{"gitId":"shawnnlimm"},"content":"* `markp 1 3` marks the participation score of Alex Yeoh in week 3.","lastModifiedDate":"2024-04-08"},{"lineNumber":502,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":503,"author":{"gitId":"shawnnlimm"},"content":"![markParticipationIndividual](images/ug/markParticipationIndividualExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":504,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":505,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":506,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":507,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                     | How to resolve                                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":508,"author":{"gitId":"shawnnlimm"},"content":"|:--------------------------------------|:----------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":509,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                       | Ensure that the command word provided is correct.                                       |","lastModifiedDate":"2024-04-10"},{"lineNumber":510,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                | Ensure that all required fields are provided.                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":511,"author":{"gitId":"shawnnlimm"},"content":"| The person index provided is invalid  | Ensure that the index provided is not greater than the number of students in the list.  |","lastModifiedDate":"2024-04-10"},{"lineNumber":512,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid          | Ensure that the week number is in the range [3, 13] inclusive.                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":513,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":514,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":515,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":516,"author":{"gitId":"shawnnlimm"},"content":"#### Un-marking individual participation scores : `unmarkp`","lastModifiedDate":"2024-04-10"},{"lineNumber":517,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":518,"author":{"gitId":"shawnnlimm"},"content":"Un-marks the participation score of a specific student from your tutorial class.","lastModifiedDate":"2024-04-13"},{"lineNumber":519,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":520,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":521,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":522,"author":{"gitId":"shawnnlimm"},"content":"`unmarkp INDEX WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":523,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":524,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":526,"author":{"gitId":"shawnnlimm"},"content":"|     Field     |                     Prefix                     |                    Required                     | Requirements                                                                                                          |","lastModifiedDate":"2024-04-04"},{"lineNumber":527,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:----------------------------------------------:|:-----------------------------------------------:|:----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":528,"author":{"gitId":"shawnnlimm"},"content":"|    `INDEX`    | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | INDEX **must be a positive integer** 1, 2, 3 â€¦â€‹ \u003cbr\u003e INDEX cannot be greater than the number of students in the list. |","lastModifiedDate":"2024-04-08"},{"lineNumber":529,"author":{"gitId":"shawnnlimm"},"content":"| `WEEK_NUMBER` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | WEEK_NUMBER **must be a valid week from the range [3, 13]**.                                                          |","lastModifiedDate":"2024-04-08"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":531,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":533,"author":{"gitId":"shawnnlimm"},"content":"* Un-marks the participation score of the student at the specified `INDEX` in the specified `WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":534,"author":{"gitId":"shawnnlimm"},"content":"* The `INDEX` refers to the index number shown in the displayed student list.","lastModifiedDate":"2024-04-04"},{"lineNumber":535,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":536,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":537,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":538,"author":{"gitId":"shawnnlimm"},"content":"* `markp 1 3` followed by `unmarkp 1 3`","lastModifiedDate":"2024-04-08"},{"lineNumber":539,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":540,"author":{"gitId":"shawnnlimm"},"content":"![unmarkParticipationIndividual](images/ug/unmarkParticipationIndividualExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":541,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":542,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":543,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":544,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                                                     | How to resolve                                                                                |","lastModifiedDate":"2024-04-10"},{"lineNumber":545,"author":{"gitId":"shawnnlimm"},"content":"|:----------------------------------------------------------------------|:----------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":546,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                                       | Ensure that the command word provided is correct.                                             |","lastModifiedDate":"2024-04-10"},{"lineNumber":547,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                                                | Ensure that all required fields are provided.                                                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":548,"author":{"gitId":"shawnnlimm"},"content":"| The person index provided is invalid                                  | Ensure that the index provided is not greater than the number of students in the list.        |","lastModifiedDate":"2024-04-10"},{"lineNumber":549,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid                                          | Ensure that the week number is in the range [3, 13] inclusive.                                |","lastModifiedDate":"2024-04-10"},{"lineNumber":550,"author":{"gitId":"shawnnlimm"},"content":"| Participation for `STUDENT_NAME` in Week `WEEK_NUMBER` is already 0   | Ensure that all students in the currently filtered list have at least 1 participation score.  |","lastModifiedDate":"2024-04-10"},{"lineNumber":551,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":552,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":553,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":554,"author":{"gitId":"shawnnlimm"},"content":"#### Marking individual attendance scores : `marka`","lastModifiedDate":"2024-04-10"},{"lineNumber":555,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":556,"author":{"gitId":"shawnnlimm"},"content":"Marks the attendance of a specific student from your tutorial class.","lastModifiedDate":"2024-04-13"},{"lineNumber":557,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":558,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":559,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":560,"author":{"gitId":"shawnnlimm"},"content":"`marka INDEX WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":561,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":562,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":563,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":564,"author":{"gitId":"Ryo-Seah"},"content":"|     Field     |                     Prefix                      |                    Required                     | Requirements                                                                                                          |","lastModifiedDate":"2024-03-29"},{"lineNumber":565,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:-----------------------------------------------:|:-----------------------------------------------:|:----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":566,"author":{"gitId":"shawnnlimm"},"content":"|    `INDEX`    | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | INDEX **must be a positive integer** 1, 2, 3 â€¦â€‹ \u003cbr\u003e INDEX cannot be greater than the number of students in the list. |","lastModifiedDate":"2024-04-08"},{"lineNumber":567,"author":{"gitId":"shawnnlimm"},"content":"| `WEEK_NUMBER` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | WEEK_NUMBER **must be a valid week from the range [3, 13]**.                                                          |","lastModifiedDate":"2024-04-08"},{"lineNumber":568,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":569,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":570,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":571,"author":{"gitId":"shawnnlimm"},"content":"* Marks the attendance of the student at the specified `INDEX` in the specified `WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":572,"author":{"gitId":"shawnnlimm"},"content":"* The `INDEX` refers to the index number shown in the displayed student list.","lastModifiedDate":"2024-04-04"},{"lineNumber":573,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":574,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":575,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":576,"author":{"gitId":"shawnnlimm"},"content":"* `marka 1 3` marks the attendance of Alex Yeoh in week 3.","lastModifiedDate":"2024-04-08"},{"lineNumber":577,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":578,"author":{"gitId":"shawnnlimm"},"content":"![markAttendanceIndividual](images/ug/markAttendanceIndividualExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":579,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":580,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":581,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":582,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                     | How to resolve                                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":583,"author":{"gitId":"shawnnlimm"},"content":"|:--------------------------------------|:----------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":584,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                       | Ensure that the command word provided is correct.                                       |","lastModifiedDate":"2024-04-10"},{"lineNumber":585,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                | Ensure that all required fields are provided.                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":586,"author":{"gitId":"shawnnlimm"},"content":"| The person index provided is invalid  | Ensure that the index provided is not greater than the number of students in the list.  |","lastModifiedDate":"2024-04-10"},{"lineNumber":587,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid          | Ensure that the week number is in the range [3, 13] inclusive.                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":588,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":589,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":590,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":591,"author":{"gitId":"shawnnlimm"},"content":"#### Un-marking individual attendance scores : `unmarka`","lastModifiedDate":"2024-04-10"},{"lineNumber":592,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":593,"author":{"gitId":"shawnnlimm"},"content":"Un-marks the attendance of a specific student from your tutorial class.","lastModifiedDate":"2024-04-13"},{"lineNumber":594,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":595,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":596,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":597,"author":{"gitId":"shawnnlimm"},"content":"`unmarka INDEX WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":598,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":599,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":600,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":601,"author":{"gitId":"shawnnlimm"},"content":"|     Field     |                     Prefix                      |                    Required                     | Requirements                                                                                                          |","lastModifiedDate":"2024-04-04"},{"lineNumber":602,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:-----------------------------------------------:|:-----------------------------------------------:|:----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":603,"author":{"gitId":"shawnnlimm"},"content":"|    `INDEX`    | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | INDEX **must be a positive integer** 1, 2, 3 â€¦â€‹ \u003cbr\u003e INDEX cannot be greater than the number of students in the list. |","lastModifiedDate":"2024-04-08"},{"lineNumber":604,"author":{"gitId":"shawnnlimm"},"content":"| `WEEK_NUMBER` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | WEEK_NUMBER **must be a valid week from the range [3, 13]**.                                                          |","lastModifiedDate":"2024-04-08"},{"lineNumber":605,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":606,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":607,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":608,"author":{"gitId":"shawnnlimm"},"content":"* Un-marks the attendance of the student at the specified `INDEX` in the specified `WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":609,"author":{"gitId":"shawnnlimm"},"content":"* The `INDEX` refers to the index number shown in the displayed student list.","lastModifiedDate":"2024-04-04"},{"lineNumber":610,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":611,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":612,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":613,"author":{"gitId":"shawnnlimm"},"content":"* `marka 1 3` followed by `unmarka 1 3` unmarks the attendance of Alex Yeoh in week 3.","lastModifiedDate":"2024-04-10"},{"lineNumber":614,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":615,"author":{"gitId":"shawnnlimm"},"content":"![unmarkAttendanceIndividual](images/ug/unmarkAttendanceIndividualExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":616,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":617,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":618,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":619,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                     | How to resolve                                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":620,"author":{"gitId":"shawnnlimm"},"content":"|:--------------------------------------|:----------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":621,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                       | Ensure that the command word provided is correct.                                       |","lastModifiedDate":"2024-04-10"},{"lineNumber":622,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                | Ensure that all required fields are provided.                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":623,"author":{"gitId":"shawnnlimm"},"content":"| The person index provided is invalid  | Ensure that the index provided is not greater than the number of students in the list.  |","lastModifiedDate":"2024-04-10"},{"lineNumber":624,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid          | Ensure that the week number is in the range [3, 13] inclusive.                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":625,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":626,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":627,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":628,"author":{"gitId":"shawnnlimm"},"content":"#### Marking all participation scores : `markallp`","lastModifiedDate":"2024-04-10"},{"lineNumber":629,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":630,"author":{"gitId":"shawnnlimm"},"content":"Marks the participation scores of all students in the filtered list for a given week.","lastModifiedDate":"2024-04-04"},{"lineNumber":631,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":632,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":633,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":634,"author":{"gitId":"shawnnlimm"},"content":"`markallp WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":635,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":636,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":637,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":638,"author":{"gitId":"Ryo-Seah"},"content":"|     Field     |                     Prefix                     |                    Required                     | Requirements                                                 |","lastModifiedDate":"2024-03-29"},{"lineNumber":639,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:----------------------------------------------:|:-----------------------------------------------:|:-------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":640,"author":{"gitId":"shawnnlimm"},"content":"| `WEEK_NUMBER` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | WEEK_NUMBER **must be a valid week from the range [3, 13]**. |","lastModifiedDate":"2024-04-08"},{"lineNumber":641,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":642,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":643,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":644,"author":{"gitId":"shawnnlimm"},"content":"* `list` followed by `markallp 3` marks all students in the list for week 3.","lastModifiedDate":"2024-04-08"},{"lineNumber":645,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":646,"author":{"gitId":"shawnnlimm"},"content":"![markParticipationAll](images/ug/markParticipationAllExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":647,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":648,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":649,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":650,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                     | How to resolve                                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":651,"author":{"gitId":"shawnnlimm"},"content":"|:--------------------------------------|:----------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":652,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                       | Ensure that the command word provided is correct.                                       |","lastModifiedDate":"2024-04-10"},{"lineNumber":653,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                | Ensure that all required fields are provided.                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":654,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid          | Ensure that the week number is in the range [3, 13] inclusive.                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":655,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":656,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":657,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":658,"author":{"gitId":"shawnnlimm"},"content":"#### Un-marking all participation scores : `unmarkallp`","lastModifiedDate":"2024-04-10"},{"lineNumber":659,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":660,"author":{"gitId":"shawnnlimm"},"content":"Un-marks the participation scores of all students in the filtered list for a given week.","lastModifiedDate":"2024-04-04"},{"lineNumber":661,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":662,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":663,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":664,"author":{"gitId":"shawnnlimm"},"content":"`unmarkallp WEEK_NUMBER`","lastModifiedDate":"2024-04-08"},{"lineNumber":665,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":666,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":667,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":668,"author":{"gitId":"shawnnlimm"},"content":"|     Field     |                     Prefix                     |                    Required                     | Requirements                                                 |","lastModifiedDate":"2024-04-04"},{"lineNumber":669,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:----------------------------------------------:|:-----------------------------------------------:|:-------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":670,"author":{"gitId":"shawnnlimm"},"content":"| `WEEK_NUMBER` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | WEEK_NUMBER **must be a valid week from the range [3, 13]**. |","lastModifiedDate":"2024-04-08"},{"lineNumber":671,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":672,"author":{"gitId":"thewongdylan"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":673,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":674,"author":{"gitId":"thewongdylan"},"content":"* If 1 or more students has participation score `0`, the `unmarkallp` command will not proceed, and will not un-mark all other students\u0027 participation scores even if they have scores greater than `0`.","lastModifiedDate":"2024-04-08"},{"lineNumber":675,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":676,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":677,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":678,"author":{"gitId":"shawnnlimm"},"content":"* `markallp 3` followed by `unmarkallp 3` unmarks the participation score of all students in week 3.","lastModifiedDate":"2024-04-08"},{"lineNumber":679,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":680,"author":{"gitId":"shawnnlimm"},"content":"![unmarkParticipationAll](images/ug/unmarkParticipationAllExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":681,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":682,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":683,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":684,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                                                    | How to resolve                                                                               |","lastModifiedDate":"2024-04-10"},{"lineNumber":685,"author":{"gitId":"shawnnlimm"},"content":"|:---------------------------------------------------------------------|:---------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":686,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                                      | Ensure that the command word provided is correct.                                            |","lastModifiedDate":"2024-04-10"},{"lineNumber":687,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                                               | Ensure that all required fields are provided.                                                |","lastModifiedDate":"2024-04-10"},{"lineNumber":688,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid                                         | Ensure that the week number is in the range [3, 13] inclusive.                               |","lastModifiedDate":"2024-04-10"},{"lineNumber":689,"author":{"gitId":"shawnnlimm"},"content":"| Participation for `STUDENT_NAME` in Week `WEEK_NUMBER` is already 0  | Ensure that all students in the currently filtered list have at least 1 participation score. |","lastModifiedDate":"2024-04-10"},{"lineNumber":690,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":691,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":692,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":693,"author":{"gitId":"shawnnlimm"},"content":"#### Marking all attendance scores : `markalla`","lastModifiedDate":"2024-04-10"},{"lineNumber":694,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":695,"author":{"gitId":"shawnnlimm"},"content":"Marks the attendance of all students in the filtered list for a given week.","lastModifiedDate":"2024-04-04"},{"lineNumber":696,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":697,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":698,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":699,"author":{"gitId":"shawnnlimm"},"content":"`markalla WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":700,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":701,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":702,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":703,"author":{"gitId":"Ryo-Seah"},"content":"|     Field     |                     Prefix                      |                    Required                     | Requirements                                                 |","lastModifiedDate":"2024-03-31"},{"lineNumber":704,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:-----------------------------------------------:|:-----------------------------------------------:|:-------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":705,"author":{"gitId":"shawnnlimm"},"content":"| `WEEK_NUMBER` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e | WEEK_NUMBER **must be a valid week from the range [3, 13]**. |","lastModifiedDate":"2024-04-08"},{"lineNumber":706,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":707,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":708,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":709,"author":{"gitId":"shawnnlimm"},"content":"* `list` followed by `markalla 3` marks the attendance all students in week 3.","lastModifiedDate":"2024-04-08"},{"lineNumber":710,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":711,"author":{"gitId":"shawnnlimm"},"content":"![markAttendanceAll](images/ug/markAttendanceAllExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":712,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":713,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":714,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":715,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                     | How to resolve                                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":716,"author":{"gitId":"shawnnlimm"},"content":"|:--------------------------------------|:----------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":717,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                       | Ensure that the command word provided is correct.                                       |","lastModifiedDate":"2024-04-10"},{"lineNumber":718,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                | Ensure that all required fields are provided.                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":719,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid          | Ensure that the week number is in the range [3, 13] inclusive.                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":720,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":721,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":722,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":723,"author":{"gitId":"shawnnlimm"},"content":"#### Un-marking all attendance scores : `unmarkalla`","lastModifiedDate":"2024-04-10"},{"lineNumber":724,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":725,"author":{"gitId":"shawnnlimm"},"content":"Un-marks the attendance of all students in the filtered list for a given week.","lastModifiedDate":"2024-04-04"},{"lineNumber":726,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":727,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":728,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":729,"author":{"gitId":"shawnnlimm"},"content":"`unmarkalla WEEK_NUMBER`","lastModifiedDate":"2024-04-04"},{"lineNumber":730,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":731,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":732,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":733,"author":{"gitId":"shawnnlimm"},"content":"|     Field     |                     Prefix                      |                     Required                     | Requirements                                                 |","lastModifiedDate":"2024-04-04"},{"lineNumber":734,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:-----------------------------------------------:|:------------------------------------------------:|:-------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":735,"author":{"gitId":"shawnnlimm"},"content":"| `WEEK_NUMBER` | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | WEEK_NUMBER **must be a valid week from the range [3, 13]**. |","lastModifiedDate":"2024-04-08"},{"lineNumber":736,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":737,"author":{"gitId":"thewongdylan"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":738,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":739,"author":{"gitId":"thewongdylan"},"content":"* If 1 or more students has attendance score `0`, the `unmarkalla` command will not proceed, and will not un-mark all other students\u0027 attendance scores even if they have scores greater than `0`.","lastModifiedDate":"2024-04-08"},{"lineNumber":740,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":741,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":742,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":743,"author":{"gitId":"shawnnlimm"},"content":"* `markalla 3` followed by `unmarkalla 3` un-marks the attendance of all students in week 3.","lastModifiedDate":"2024-04-08"},{"lineNumber":744,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":745,"author":{"gitId":"shawnnlimm"},"content":"![unmarkAttendanceAll](images/ug/unmarkAttendanceAllExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":746,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":747,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":748,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":749,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                     | How to resolve                                                                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":750,"author":{"gitId":"shawnnlimm"},"content":"|:--------------------------------------|:----------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":751,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                       | Ensure that the command word provided is correct.                                       |","lastModifiedDate":"2024-04-10"},{"lineNumber":752,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                | Ensure that all required fields are provided.                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":753,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid          | Ensure that the week number is in the range [3, 13] inclusive.                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":754,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":755,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":756,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":757,"author":{"gitId":"shawnnlimm"},"content":"#### Adding a custom assignment : `adda`","lastModifiedDate":"2024-04-10"},{"lineNumber":758,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":759,"author":{"gitId":"shawnnlimm"},"content":"Adds assignment(s) to all students in your filtered list if they do not already exist.","lastModifiedDate":"2024-04-13"},{"lineNumber":760,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":761,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":762,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":763,"author":{"gitId":"shawnnlimm"},"content":"`adda a/ASSIGNMENTâ€¦â€‹`","lastModifiedDate":"2024-04-04"},{"lineNumber":764,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":765,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":766,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":767,"author":{"gitId":"shawnnlimm"},"content":"|      Field      | Prefix |                     Required                     | Requirements                                                          |","lastModifiedDate":"2024-04-04"},{"lineNumber":768,"author":{"gitId":"shawnnlimm"},"content":"|:---------------:|:------:|:------------------------------------------------:|:----------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":769,"author":{"gitId":"shawnnlimm"},"content":"| `ASSIGNMENT...` |   a/   | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | Assignment(s) should only contain alphanumeric characters.            |","lastModifiedDate":"2024-04-08"},{"lineNumber":770,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":771,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":772,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":773,"author":{"gitId":"shawnnlimm"},"content":"* Each assignment is case-sensitive e.g. `a/assignment1` and `a/Assignment1` are 2 different assignments.","lastModifiedDate":"2024-04-08"},{"lineNumber":774,"author":{"gitId":"shawnnlimm"},"content":"* Duplicate assignments will be ignored e.g. If `a/assignment1` and `a/assignment1` are specified, only 1 assignment is added.","lastModifiedDate":"2024-04-10"},{"lineNumber":775,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":776,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":777,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":778,"author":{"gitId":"shawnnlimm"},"content":"* `adda a/assignment1 a/assignment2`","lastModifiedDate":"2024-04-04"},{"lineNumber":779,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":780,"author":{"gitId":"shawnnlimm"},"content":"![addAssignment](images/ug/addAssignmentExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":781,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":782,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                                                                 | How to resolve                                                                                                    |","lastModifiedDate":"2024-04-10"},{"lineNumber":783,"author":{"gitId":"shawnnlimm"},"content":"|:----------------------------------------------------------------------------------|:------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":784,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                                                   | Ensure that the command word provided is correct.                                                                 |","lastModifiedDate":"2024-04-10"},{"lineNumber":785,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                                                            | Ensure that all required fields are provided.                                                                     |","lastModifiedDate":"2024-04-10"},{"lineNumber":786,"author":{"gitId":"shawnnlimm"},"content":"| Assignment names should be alphanumeric                                           | Ensure that assignment names contain only alphanumeric characters.                                                |","lastModifiedDate":"2024-04-10"},{"lineNumber":787,"author":{"gitId":"shawnnlimm"},"content":"| No new assignments added. All students already have the assignment(s) specified.  | Ensure that the new assignment to be added does not currently exist on **ALL** the students in the filtered list. |","lastModifiedDate":"2024-04-10"},{"lineNumber":788,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":789,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":790,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":791,"author":{"gitId":"shawnnlimm"},"content":"#### Removing a custom assignment : `removea`","lastModifiedDate":"2024-04-10"},{"lineNumber":792,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":793,"author":{"gitId":"shawnnlimm"},"content":"Removes assignment(s) from all students in your filtered list if they have them.","lastModifiedDate":"2024-04-13"},{"lineNumber":794,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":795,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":796,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":797,"author":{"gitId":"shawnnlimm"},"content":"`removea a/ASSIGNMENTâ€¦`","lastModifiedDate":"2024-04-10"},{"lineNumber":798,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":799,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":800,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":801,"author":{"gitId":"Ryo-Seah"},"content":"|     Field     | Prefix |                     Required                     | Requirements                                                                                                       |","lastModifiedDate":"2024-04-05"},{"lineNumber":802,"author":{"gitId":"shawnnlimm"},"content":"|:-------------:|:------:|:------------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":803,"author":{"gitId":"shawnnlimm"},"content":"| `ASSIGNMENTâ€¦` |   a/   | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | Assignment(s) should only contain alphanumeric characters. At least 1 assignment specified must exist on students. |","lastModifiedDate":"2024-04-10"},{"lineNumber":804,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":805,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":806,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":807,"author":{"gitId":"shawnnlimm"},"content":"* Each assignment is case-sensitive e.g. `a/assignment1` and `a/Assignment1` are 2 different assignments.","lastModifiedDate":"2024-04-08"},{"lineNumber":808,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":809,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":810,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":811,"author":{"gitId":"shawnnlimm"},"content":"* `adda a/assignment1 a/assignment2` followed by `removea a/assignment1 a/assignment2`","lastModifiedDate":"2024-04-08"},{"lineNumber":812,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":813,"author":{"gitId":"shawnnlimm"},"content":"![removeAssignment](images/ug/removeAssignmentExample.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":814,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":815,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":816,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":817,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                                                      | How to resolve                                                     |","lastModifiedDate":"2024-04-10"},{"lineNumber":818,"author":{"gitId":"shawnnlimm"},"content":"|:-----------------------------------------------------------------------|:-------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":819,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                                        | Ensure that the command word provided is correct.                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":820,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                                                 | Ensure that all required fields are provided.                      |","lastModifiedDate":"2024-04-10"},{"lineNumber":821,"author":{"gitId":"shawnnlimm"},"content":"| Assignment names should be alphanumeric                                | Ensure that assignment names contain only alphanumeric characters. |","lastModifiedDate":"2024-04-10"},{"lineNumber":822,"author":{"gitId":"shawnnlimm"},"content":"| No assignments removed. No students have the assignment(s) specified.  | Ensure that the assigment specified exist on at least 1 student.   |","lastModifiedDate":"2024-04-10"},{"lineNumber":823,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":824,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":825,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":826,"author":{"gitId":"shawnnlimm"},"content":"#### Grading a custom assignment : `grade`","lastModifiedDate":"2024-04-10"},{"lineNumber":827,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":828,"author":{"gitId":"shawnnlimm"},"content":"Grades and assigns a score to an assignment for a given student in your tutorial class.","lastModifiedDate":"2024-04-13"},{"lineNumber":829,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":830,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eFormat:\u003c/h4\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":831,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":832,"author":{"gitId":"Ryo-Seah"},"content":"`grade INDEX SCORE a/ASSIGNMENT`","lastModifiedDate":"2024-04-05"},{"lineNumber":833,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":834,"author":{"gitId":"Ryo-Seah"},"content":"\u003ch4\u003eFields:\u003c/h4\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":835,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":836,"author":{"gitId":"Ryo-Seah"},"content":"|    Field     |                     Prefix                      |                     Required                     | Requirements                                                                                                                  |","lastModifiedDate":"2024-04-05"},{"lineNumber":837,"author":{"gitId":"shawnnlimm"},"content":"|:------------:|:-----------------------------------------------:|:------------------------------------------------:|:------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-14"},{"lineNumber":838,"author":{"gitId":"shawnnlimm"},"content":"|   `INDEX`    | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | INDEX **must be a positive integer** 1, 2, 3 â€¦â€‹ \u003cbr\u003e INDEX cannot be greater than the number of students in the list.         |","lastModifiedDate":"2024-04-08"},{"lineNumber":839,"author":{"gitId":"shawnnlimm"},"content":"|   `SCORE`    | \u003cimg width\u003d25px src\u003d\"assets/ug/red_cross.png\"\u003e  | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | SCORE **must be a positive integer** 1, 2 â€¦â€‹. \u003cbr\u003e Score must be between the range [1, MAX_INT], where MAX_INT is 2147483647. |","lastModifiedDate":"2024-04-14"},{"lineNumber":840,"author":{"gitId":"shawnnlimm"},"content":"| `ASSIGNMENT` |                       a/                        | \u003cimg width\u003d30px src\u003d\"assets/ug/green_tick.svg\"\u003e  | Assignment should only contain alphanumeric characters. Assignment must exist on the specified student.                       |","lastModifiedDate":"2024-04-08"},{"lineNumber":841,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":842,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eNotes:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":843,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":844,"author":{"gitId":"shawnnlimm"},"content":"* The fields INDEX and SCORE **must** precede before the ASSIGNMENT. \u003cbr\u003ee.g. `grade a/assignment1 1 100` is incorrect while `grade 1 100 a/assignment1` is correct.","lastModifiedDate":"2024-04-10"},{"lineNumber":845,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003eExample:\u003c/h4\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":846,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":847,"author":{"gitId":"shawnnlimm"},"content":"* `grade 1 100 a/assignment1`","lastModifiedDate":"2024-04-10"},{"lineNumber":848,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":849,"author":{"gitId":"shawnnlimm"},"content":"![gradeAssignment](images/ug/gradeAssignmentExample.png)","lastModifiedDate":"2024-04-10"},{"lineNumber":850,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":851,"author":{"gitId":"shawnnlimm"},"content":"\u003ch4\u003ePotential errors:\u003c/h4\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":852,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":853,"author":{"gitId":"shawnnlimm"},"content":"| Error encountered                              | How to resolve                                                                                            |","lastModifiedDate":"2024-04-10"},{"lineNumber":854,"author":{"gitId":"shawnnlimm"},"content":"|:-----------------------------------------------|:----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":855,"author":{"gitId":"shawnnlimm"},"content":"| Unknown command                                | Ensure that the command word provided is correct.                                                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":856,"author":{"gitId":"shawnnlimm"},"content":"| Invalid command format                         | Ensure that all required fields are provided.                                                             |","lastModifiedDate":"2024-04-10"},{"lineNumber":857,"author":{"gitId":"shawnnlimm"},"content":"| Invalid arguments provided for Grade Command.  | Ensure that the score provided is an integer between the range [1, MAX_INT], where MAX_INT is 2147483647. |","lastModifiedDate":"2024-04-14"},{"lineNumber":858,"author":{"gitId":"shawnnlimm"},"content":"| Index is not a non-zero unsigned integer.      | Ensure that the index provided is a positive integer.                                                     |","lastModifiedDate":"2024-04-10"},{"lineNumber":859,"author":{"gitId":"shawnnlimm"},"content":"| The person index provided is invalid           | Ensure that the index provided is not greater than the number of students in the list.                    |","lastModifiedDate":"2024-04-10"},{"lineNumber":860,"author":{"gitId":"shawnnlimm"},"content":"| The week provided is invalid                   | Ensure that the week number is in the range [3, 13] inclusive.                                            |","lastModifiedDate":"2024-04-10"},{"lineNumber":861,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":862,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-14"},{"lineNumber":863,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":864,"author":{"gitId":"shawnnlimm"},"content":"## Saving the data","lastModifiedDate":"2024-04-10"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"shawnnlimm"},"content":"nerdTrackerPlus data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-04-13"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"shawnnlimm"},"content":"## Editing the data file","lastModifiedDate":"2024-04-10"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":870,"author":{"gitId":"shawnnlimm"},"content":"nerdTrackerPlus data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-10"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":872,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":873,"author":{"gitId":"shawnnlimm"},"content":"If your changes to the data file makes its format invalid, nerdTrackerPlus will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":874,"author":{"gitId":"shawnnlimm"},"content":"Furthermore, certain edits can cause the nerdTrackerPlus to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-04"},{"lineNumber":875,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":877,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"shawnnlimm"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous nerdTrackerPlus home folder.","lastModifiedDate":"2024-03-28"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"shawnnlimm"},"content":"## Glossary","lastModifiedDate":"2024-04-08"},{"lineNumber":887,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":888,"author":{"gitId":"shawnnlimm"},"content":"### Participation","lastModifiedDate":"2024-04-10"},{"lineNumber":889,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":890,"author":{"gitId":"shawnnlimm"},"content":"A grading criteria to evaluate CS2109S students based on their active involvement during tutorials. It quantifies how frequently a student voluntarily contributes answers or engages in discussions.","lastModifiedDate":"2024-04-10"},{"lineNumber":891,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":892,"author":{"gitId":"shawnnlimm"},"content":"### Attendance","lastModifiedDate":"2024-04-10"},{"lineNumber":893,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":894,"author":{"gitId":"shawnnlimm"},"content":"A grading criteria to evaluate CS2109s students based on their presence during tutorials. It quantifies students\u0027 punctuality and regularity in attending tutorials.","lastModifiedDate":"2024-04-10"},{"lineNumber":895,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":896,"author":{"gitId":"shawnnlimm"},"content":"### Integers","lastModifiedDate":"2024-04-10"},{"lineNumber":897,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":898,"author":{"gitId":"shawnnlimm"},"content":"A whole number in the range -2147483647 to 2147483647 that does not contain any fractions or decimals.","lastModifiedDate":"2024-04-10"},{"lineNumber":899,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":900,"author":{"gitId":"shawnnlimm"},"content":"### MAX_INT / MIN_INT","lastModifiedDate":"2024-04-10"},{"lineNumber":901,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":902,"author":{"gitId":"shawnnlimm"},"content":"The maximum / minimum value that can be represented with an integer. \u003cbr\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":903,"author":{"gitId":"shawnnlimm"},"content":"For signed integers, MAX_INT \u003d 2147483647 while MIN_INT \u003d -2147483647.","lastModifiedDate":"2024-04-10"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":905,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":907,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":909,"author":{"gitId":"shawnnlimm"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":911,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"shawnnlimm"},"content":"### Managing students","lastModifiedDate":"2024-04-04"},{"lineNumber":914,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":915,"author":{"gitId":"shawnnlimm"},"content":"| Action                                                                       | Format                                                                           | Example                                                     |","lastModifiedDate":"2024-04-04"},{"lineNumber":916,"author":{"gitId":"shawnnlimm"},"content":"|:-----------------------------------------------------------------------------|:---------------------------------------------------------------------------------|:------------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":917,"author":{"gitId":"shawnnlimm"},"content":"| [Add student](#adding-a-student--add)                                        | `add n/NAME m/MATRIC_NUMBER e/EMAIL tl/TELEGRAM_HANDLE [t/TAG]â€¦â€‹`                | `add n/John Doe m/A1234567Z e/johnd@u.nus.edu tl/johndoe01` |","lastModifiedDate":"2024-04-10"},{"lineNumber":918,"author":{"gitId":"shawnnlimm"},"content":"| [List students](#listing-all-students--list)                                 | `list`                                                                           | `list`                                                      |","lastModifiedDate":"2024-04-10"},{"lineNumber":919,"author":{"gitId":"shawnnlimm"},"content":"| [Edit student](#editing-a-student--edit)                                     | `edit INDEX [n/NAME] [m/MATRIC_NUMBER] [e/EMAIL] [tl/TELEGRAM_HANDLE] [t/TAG]â€¦â€‹` | `edit 1 m/A1111111Z e/johndoe@gmail.com`                    |","lastModifiedDate":"2024-04-10"},{"lineNumber":920,"author":{"gitId":"shawnnlimm"},"content":"| [Find student](#locating-students-by-name--find)                             | `find KEYWORD [MORE_KEYWORDS]`                                                   | `find alex david`                                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":921,"author":{"gitId":"shawnnlimm"},"content":"| [Delete student](#deleting-a-student--delete)                                | `delete INDEX`                                                                   | `delete 2`                                                  |","lastModifiedDate":"2024-04-10"},{"lineNumber":922,"author":{"gitId":"shawnnlimm"},"content":"| [Remove tag from student](#remove-tag-from-a-student--removetag)             | `removetag INDEX t/TAGâ€¦`                                                         | `removetag 2 t/friend`                                      |","lastModifiedDate":"2024-04-14"},{"lineNumber":923,"author":{"gitId":"shawnnlimm"},"content":"| [Remove tag from all students](#remove-tags-from-all-students--removetagall) | `removetagall t/TAGâ€¦â€‹`                                                           | `removetagall t/G19Group1 t/family`                         |","lastModifiedDate":"2024-04-14"},{"lineNumber":924,"author":{"gitId":"shawnnlimm"},"content":"| [Filter student](#filtering-by-tags--filter)                                 | `filter TAGâ€¦â€‹`                                                                   | `filter G19Group1 G19Group2`                                |","lastModifiedDate":"2024-04-10"},{"lineNumber":925,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":926,"author":{"gitId":"shawnnlimm"},"content":"### Managing participation, attendance and assignments","lastModifiedDate":"2024-04-04"},{"lineNumber":927,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":928,"author":{"gitId":"shawnnlimm"},"content":"| Action                                                                                  | Format                           | Example                               |","lastModifiedDate":"2024-04-04"},{"lineNumber":929,"author":{"gitId":"shawnnlimm"},"content":"|:----------------------------------------------------------------------------------------|:---------------------------------|:--------------------------------------|","lastModifiedDate":"2024-04-11"},{"lineNumber":930,"author":{"gitId":"shawnnlimm"},"content":"| [Mark individual participation](#marking-individual-participation-scores--markp)        | `markp INDEX WEEK_NUMBER`        | `markp 1 3`                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":931,"author":{"gitId":"shawnnlimm"},"content":"| [Unmark individual participation](#un-marking-individual-participation-scores--unmarkp) | `unmarkp INDEX WEEK_NUMBER`      | `unmarkp 1 3`                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":932,"author":{"gitId":"shawnnlimm"},"content":"| [Mark individual attendance](#marking-individual-attendance-scores--marka)              | `marka INDEX WEEK_NUMBER`        | `marka 1 3`                           |","lastModifiedDate":"2024-04-10"},{"lineNumber":933,"author":{"gitId":"shawnnlimm"},"content":"| [Unmark individual attendance](#un-marking-individual-attendance-scores--unmarka)       | `unmarka INDEX WEEK_NUMBER`      | `unmarka 1 3`                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":934,"author":{"gitId":"shawnnlimm"},"content":"| [Mark all participation](#marking-all-participation-scores--markallp)                   | `markallp WEEK_NUMBER`           | `markallp 3`                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":935,"author":{"gitId":"shawnnlimm"},"content":"| [Unmark all participation](#un-marking-all-participation-scores--unmarkallp)            | `unmarkallp WEEK_NUMBER`         | `unmarkallp 3`                        |","lastModifiedDate":"2024-04-11"},{"lineNumber":936,"author":{"gitId":"shawnnlimm"},"content":"| [Mark all attendance](#marking-all-attendance-scores--markalla)                         | `markalla WEEK_NUMBER`           | `markalla 3`                          |","lastModifiedDate":"2024-04-10"},{"lineNumber":937,"author":{"gitId":"shawnnlimm"},"content":"| [Unmark all attendance](#un-marking-all-attendance-scores--unmarkalla)                  | `unmarkalla WEEK_NUMBER`         | `unmarkalla 3`                        |","lastModifiedDate":"2024-04-10"},{"lineNumber":938,"author":{"gitId":"shawnnlimm"},"content":"| [Add assignment](#adding-a-custom-assignment--adda)                                     | `adda a/ASSIGNMENTâ€¦â€‹`            | `adda a/assignment1 a/assignment2`    |","lastModifiedDate":"2024-04-10"},{"lineNumber":939,"author":{"gitId":"shawnnlimm"},"content":"| [Remove assignment](#removing-a-custom-assignment--removea)                             | `removea a/ASSIGNMENTâ€¦â€‹`         | `removea a/assignment1 a/assignment2` |","lastModifiedDate":"2024-04-10"},{"lineNumber":940,"author":{"gitId":"shawnnlimm"},"content":"| [Grade assignment](#grading-a-custom-assignment--grade)                                 | `grade INDEX SCORE a/ASSIGNMENT` | `grade 1 100 a/assignment1`           |","lastModifiedDate":"2024-04-10"},{"lineNumber":941,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":942,"author":{"gitId":"shawnnlimm"},"content":"### General","lastModifiedDate":"2024-04-04"},{"lineNumber":943,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":944,"author":{"gitId":"shawnnlimm"},"content":"| Action                                             | Format   | Example |","lastModifiedDate":"2024-04-04"},{"lineNumber":945,"author":{"gitId":"shawnnlimm"},"content":"|:---------------------------------------------------|:---------|:--------|","lastModifiedDate":"2024-04-10"},{"lineNumber":946,"author":{"gitId":"shawnnlimm"},"content":"| [View Help](#viewing-help--help)                   | `help`   | `help`  |","lastModifiedDate":"2024-04-10"},{"lineNumber":947,"author":{"gitId":"shawnnlimm"},"content":"| [Undo](#undoing-a-previous-command--undo)          | `undo`   | `undo`  |","lastModifiedDate":"2024-04-10"},{"lineNumber":948,"author":{"gitId":"shawnnlimm"},"content":"| [Redo](#redoing-a-previously-undone-command--redo) | `redo`   | `redo`  |","lastModifiedDate":"2024-04-10"},{"lineNumber":949,"author":{"gitId":"shawnnlimm"},"content":"| [Clear](#clearing-all-entries--clear)              | `clear`  | `clear` |","lastModifiedDate":"2024-04-10"},{"lineNumber":950,"author":{"gitId":"shawnnlimm"},"content":"| [Exit](#exiting-the-program--exit)                 | `exit`   | `exit`  |","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"shawnnlimm":741,"-":141,"shamesjen":5,"thewongdylan":11,"Ryo-Seah":52}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"thewongdylan"},"content":"    content: \"nerdTrackerPlus\";","lastModifiedDate":"2024-04-14"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"thewongdylan":1}},{"path":"docs/diagrams/AddAssignmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"participant \":AddAssignmentCommandParser\" as AddAssignmentCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"participant \"homework1:Assignment\" as Assignment LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"participant \"hs:Hashset\" as Hashset LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"participant \"ac:AddAssignmentCommand\" as AddAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"[-\u003e LogicManager : execute(\"adda a/Homework1\")","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"activate LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"adda a/Homework1\")","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"create AddAssignmentCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"AddressBookParser -\u003e AddAssignmentCommandParser : AddAssignmentCommandParser()","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"activate AddAssignmentCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"deactivate AddAssignmentCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"AddressBookParser -\u003e AddAssignmentCommandParser : parse(\"adda a/Homework1\")","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"activate AddAssignmentCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"create Hashset","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommandParser -\u003e Hashset : Hashset()","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"activate Hashset","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"create Assignment","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"Hashset -\u003e Assignment : Assignment(\"Homework1\")","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"activate Assignment","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"Assignment --\u003e Hashset : homework1","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"deactivate Assignment","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"Hashset -\u003e Hashset : add(homework1)","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"activate Hashset","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"Hashset --\u003e Hashset","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"deactivate Hashset","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"Hashset --\u003e AddAssignmentCommandParser : hs","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"deactivate Hashset","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"create AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommandParser -\u003e AddAssignmentCommand : AddAssignmentCommand(hs)","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommand --\u003e AddAssignmentCommandParser : ac","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"deactivate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommandParser --\u003e AddressBookParser : ac","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"deactivate AddAssignmentCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"destroy AddAssignmentCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"AddressBookParser --\u003e LogicManager : ac","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"LogicManager -\u003e AddAssignmentCommand : execute(ac)","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"ref over AddAssignmentCommand : Add specified assignment to all students","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"ref over AddAssignmentCommand : Create successful CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"ref over AddAssignmentCommand : Commit addressbook","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"Ryo-Seah"},"content":"deactivate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"Ryo-Seah"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"Ryo-Seah"},"content":"destroy AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"Ryo-Seah"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"Ryo-Seah"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"Ryo-Seah"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Ryo-Seah":83}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"Person *--\u003e MatricNumber","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"Person *--\u003e TelegramHandle","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"thewongdylan":2}},{"path":"docs/diagrams/FilterCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"participant \"PersonContainsTagPredicate\" as PersonContainsTagPredicate LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"participant \"fc:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"[-\u003e LogicManager : execute(\"filter G19Group1 family\")","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"activate LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter G19Group1 family\")","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"create FilterCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"AddressBookParser -\u003e FilterCommandParser : FilterCommandParser()","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"FilterCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"AddressBookParser -\u003e FilterCommandParser : parse(\"filter G19Group1 family\")","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"create PersonContainsTagPredicate","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"FilterCommandParser -\u003e PersonContainsTagPredicate : PersonContainsTagPredicate(G19Group1, family)","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"activate PersonContainsTagPredicate","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"PersonContainsTagPredicate --\u003e FilterCommandParser : predicate","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"deactivate PersonContainsTagPredicate","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"create FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"FilterCommandParser -\u003e FilterCommand : FilterCommand(predicate)","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"activate FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"FilterCommand --\u003e FilterCommandParser : fc","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"FilterCommandParser --\u003e AddressBookParser : fc","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"FilterCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"destroy FilterCommandParser","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"AddressBookParser --\u003e LogicManager : fc","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"LogicManager -\u003e FilterCommand : execute(fc)","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"activate FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"ref over FilterCommand : Filter the students shown","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"ref over FilterCommand : Create successful CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"FilterCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"FilterCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"destroy FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"shamesjen":68}},{"path":"docs/diagrams/GradeAssignmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"@startuml","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"!include style.puml","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"participant \":GradeAssignmentCommandParser\" as GradeAssignmentCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"participant \"gc:GradeAssignmentCommand\" as GradeAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"end box","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"[-\u003e LogicManager : execute(\"grade 1 10 a/Assignment1\")","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"activate LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"grade 1 10 a/Assignment1\")","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"create GradeAssignmentCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"AddressBookParser -\u003e GradeAssignmentCommandParser : GradeAssignmentCommandParser()","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"activate GradeAssignmentCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"deactivate GradeAssignmentCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"AddressBookParser -\u003e GradeAssignmentCommandParser : parse(\"grade 1 10 a/Assignment1\")","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"activate GradeAssignmentCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"create GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommandParser -\u003e GradeAssignmentCommand : GradeAssignmentCommand(1, \"Assignment1\", 10)","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"activate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand --\u003e GradeAssignmentCommandParser : gc","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"deactivate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommandParser --\u003e AddressBookParser : gc","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"deactivate GradeAssignmentCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"destroy GradeAssignmentCommandParser","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"AddressBookParser --\u003e LogicManager : gc","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"LogicManager -\u003e GradeAssignmentCommand : execute(gc)","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"activate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"ref over GradeAssignmentCommand : Grade assignment for specified student","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"ref over GradeAssignmentCommand : Create successful CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"ref over GradeAssignmentCommand : Commit addressbook","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"deactivate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"destroy GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"@enduml","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"thewongdylan":61}},{"path":"docs/diagrams/MarkParticipationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"@startuml","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"!include style.puml","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"participant \":MarkParticipationCommandParser\" as MarkParticipationCommandParser LOGIC_COLOR","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"participant \"mc:MarkParticipationCommand\" as MarkParticipationCommand LOGIC_COLOR","lastModifiedDate":"2024-04-11"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"end box","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"[-\u003e LogicManager : execute(\"markp 1 3\")","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"activate LogicManager","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"markp 1 3\")","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"activate AddressBookParser","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"create MarkParticipationCommandParser","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"AddressBookParser -\u003e MarkParticipationCommandParser : MarkParticipationCommandParser()","lastModifiedDate":"2024-04-11"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"activate MarkParticipationCommandParser","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"deactivate MarkParticipationCommandParser","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"AddressBookParser -\u003e MarkParticipationCommandParser : parse(\"markp 1 3\")","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"activate MarkParticipationCommandParser","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"create MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommandParser -\u003e MarkParticipationCommand : MarkParticipationCommand(1, 3)","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"activate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand --\u003e MarkParticipationCommandParser : mc","lastModifiedDate":"2024-04-11"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"deactivate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommandParser --\u003e AddressBookParser : mc","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"deactivate MarkParticipationCommandParser","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"destroy MarkParticipationCommandParser","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"AddressBookParser --\u003e LogicManager : mc","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-04-11"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"LogicManager -\u003e MarkParticipationCommand : execute(mc)","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"activate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"ref over MarkParticipationCommand : Mark person at specified weeks","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"ref over MarkParticipationCommand : Create successful CommandResult","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"ref over MarkParticipationCommand : Commit addressbook","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand --\u003e LogicManager : r","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"deactivate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"destroy MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"deactivate LogicManager","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"@enduml","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"shawnnlimm":60,"shamesjen":1}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"Class TelegramHandle","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"Class MatricNumber","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"Person *--\u003e MatricNumber","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"Person *--\u003e TelegramHandle","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"Name -[hidden]right-\u003e MatricNumber","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"MatricNumber -[hidden]right-\u003e TelegramHandle","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"TelegramHandle -[hidden]right-\u003e Email","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":47,"thewongdylan":7}},{"path":"docs/diagrams/SDAddAssignment.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"mainframe: **sd** Add specified assignment to all students","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"participant \"ac:AddAssignmentCommand\" as AddAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"activate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"Model --\u003e AddAssignmentCommand : lastShownList","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"deactivate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"loop person : lastShownList","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"    AddAssignmentCommand -\u003e AddAssignmentCommand : generateAssignmentList(person, assignments)","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"    activate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"    AddAssignmentCommand --\u003e AddAssignmentCommand : assignmentList","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"    deactivate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"    AddAssignmentCommand -\u003e AddAssignmentCommand : newPerson(..., assignmentList)","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"    activate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"    AddAssignmentCommand --\u003e AddAssignmentCommand : updatedPerson","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"    deactivate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"    AddAssignmentCommand -\u003e Model : setPerson(person, updatedPerson)","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"    activate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    Model --\u003e AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"    deactivate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"end loop","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommand -\u003e Model : updatedFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"activate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"Model --\u003e AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"deactivate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Ryo-Seah":42}},{"path":"docs/diagrams/SDAddAssignmentCommandResult.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"mainframe: **sd** Create successful CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"participant \"ac:AddAssignmentCommand\" as AddAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"create CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommand -\u003e CommandResult : CommandResult(MESSAGE_SUCCESS)","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"activate CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"CommandResult --\u003e AddAssignmentCommand : r","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Ryo-Seah":20}},{"path":"docs/diagrams/SDAddAssignmentCommitAddressbook.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"!include ./style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"mainframe: **sd** Commit addressbook","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"participant \"ac:AddAssignmentCommand\" as AddAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"AddAssignmentCommand -\u003e Model : commitAddressBook(addAssignmentCommandResult)","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"activate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"Model --\u003e AddAssignmentCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"deactivate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"Ryo-Seah":21}},{"path":"docs/diagrams/SDFilterCommandResult.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"mainframe: **sd** Create successful CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"participant \"fc:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"activate FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"create CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"FilterCommand -\u003e CommandResult : CommandResult(MESSAGE_PERSONS_LISTED_OVERVIEW)","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"activate CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"CommandResult -\u003e FilterCommand : r","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"shamesjen":20}},{"path":"docs/diagrams/SDFilterStudents.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"mainframe: **sd** Filter the students shown","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"participant \"fc:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"end box","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"activate FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"FilterCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"activate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"Model -\u003e FilterCommand","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"deactivate Model","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"shamesjen":22}},{"path":"docs/diagrams/SDGradeAssignment.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"@startuml","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"!include style.puml","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"mainframe: **sd** Grade assignment for specified student","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"participant \"gc:GradeAssignmentCommand\" as GradeAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"end box","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"activate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"activate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"Model -\u003e GradeAssignmentCommand : lastShownList","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"deactivate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand -\u003e GradeAssignmentCommand : createGradedPerson(personToMark)","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"activate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand -\u003e GradeAssignmentCommand : gradedPerson","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"deactivate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand -\u003e Model : setPerson(personToMark, updatedPerson)","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"activate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"Model -\u003e GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"deactivate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand -\u003e Model : updatedFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"activate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"Model -\u003e GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"deactivate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"@enduml","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"thewongdylan":40}},{"path":"docs/diagrams/SDGradeAssignmentCommandResult.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"@startuml","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"!include style.puml","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"mainframe: **sd** Create successful CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"participant \"gc:GradeAssignmentCommand\" as GradeAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"activate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"create CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand -\u003e CommandResult : CommandResult(MESSAGE_SUCCESS_GRADE)","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"activate CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"CommandResult -\u003e GradeAssignmentCommand : r","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"deactivate CommandResult","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"@enduml","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"thewongdylan":20}},{"path":"docs/diagrams/SDGradeAssignmentCommitAddressbook.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"@startuml","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"!include ./style.puml","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"mainframe: **sd** Commit addressbook","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"participant \"gc:GradeAssignmentCommand\" as GradeAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"end box","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"activate GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"GradeAssignmentCommand -\u003e Model : commitAddressBook(gradeAssignmentCommandResult)","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"activate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"Model -\u003e GradeAssignmentCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"deactivate Model","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"@enduml","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"thewongdylan":21}},{"path":"docs/diagrams/SDMarkParticipation.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"mainframe: **sd** Mark person at specified week","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"participant \"mc:MarkParticipationCommand\" as MarkParticipationCommand LOGIC_COLOR","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"activate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"Model -\u003e MarkParticipationCommand : lastShownList","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand -\u003e MarkParticipationCommand : createMarkedPerson(personToMark, newParticipationScores)","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"activate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand -\u003e MarkParticipationCommand : updatedPerson","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"deactivate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand -\u003e Model : setPerson(personToMark, updatedPerson)","lastModifiedDate":"2024-04-11"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"Model -\u003e MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"shawnnlimm":33}},{"path":"docs/diagrams/SDMarkParticipationCommandResult.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"mainframe: **sd** Create successful CommandResult","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"participant \"mc:MarkParticipationCommand\" as MarkParticipationCommand LOGIC_COLOR","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"activate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"create CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand -\u003e CommandResult : CommandResult(MESSAGE_MARK_PERSON_SUCCESS)","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"activate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"CommandResult -\u003e MarkParticipationCommand : r","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"shawnnlimm":20}},{"path":"docs/diagrams/SDMarkParticipationCommitAddressbook.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"!include style.puml","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"mainframe: **sd** Commit addressbook","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"participant \"mc:MarkParticipationCommand\" as MarkParticipationCommand LOGIC_COLOR","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"activate MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"MarkParticipationCommand -\u003e Model : commitAddressBook(markParticipationCommandResult)","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"Model -\u003e MarkParticipationCommand","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"shawnnlimm":21}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"Class JsonAdaptedAssignment","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedAssignment","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"thewongdylan":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"title: nerdTrackerPlus","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"Are you a Computer Science TA having troubles with keeping track of student details and their progress?","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"Introducing nerdTrackerPlus, your ultimate companion in managing student details and tracking their progress effortlessly!","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"Designed with Computer Science Teaching Assistants in mind, nerdTrackerPlus streamlines the process of organizing student information, grading assignments, and monitoring their academic journey. Say goodbye to the hassle of scattered spreadsheets and endless paperwork â€“ with nerdTrackerPlus, you\u0027ll have everything you need at your fingertips to excel in your role as a TA. Let\u0027s simplify your workload and elevate your teaching experience together!\"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"**nerdTrackerPlus is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"* If you are interested in using nerdTrackerPlus, head over to the [_Quick Start_ section of the **User Guide**](https://ay2324s2-cs2103t-f11-1.github.io/tp/UserGuide.html).","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"* If you are interested about developing nerdTrackerPlus, the [**Developer Guide**](https://ay2324s2-cs2103t-f11-1.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"shawnnlimm":9,"-":16}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `telegramHandle` field from `Person` class.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `telegramHandle` field can be done similarly.","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"## Safely deleting `TelegramHandle`","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"The `telegramHandle` field in `Person` is actually an instance of the `seedu.address.model.person.TelegramHandle` class. Since removing the `TelegramHandle` class will break the application, we start by identifying `TelegramHandle`\u0027s usages. This allows us to see code that depends on `TelegramHandle` to function properly and edit them on a case-by-case basis. Right-click the `TelegramHandle` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `TelegramHandle` class is used.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"Remove usages of `TelegramHandle` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `TelegramHandle`. Functions like `ParserUtil#parseTelegramHandle()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"Letâ€™s try removing references to `TelegramHandle` in `EditPersonDescriptor`.","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"1. Safe delete the field `telegramHandle` in `EditPersonDescriptor`.","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"1. Remove the usages of `TelegramHandle` and select `Do refactor` when you are done.","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `telegramHandle` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"1. Repeat the steps for the remaining usages of `TelegramHandle`","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"Unfortunately, there are usages of `TelegramHandle` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `telegramHandle` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$telegramHandle` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"![$telegramHandle](../images/remove/$telegramHandle.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"private Label telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"\u003cLabel fx:id\u003d\"matricNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$matricNumber\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"\u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `TelegramHandle` in test data and documentation.","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `telegramHandle` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"    \"matricNumber\": \"A1234567Z\",","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"    \"telegramHandle\": \"4th street\"","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"thewongdylan"},"content":"You can go through each individual `json` file and manually remove the `telegramHandle` field.","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"-":90,"thewongdylan":22}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"![ArchitectureDiagram](../images/dg/ArchitectureDiagram.png)","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"../images/dg/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"../images/dg/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"\u003cimg src\u003d\"../images/dg/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"shawnnlimm":4,"-":297}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns true if {@code s} represents a non-negative unsigned integer","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"     * e.g. empty string, \"-1\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"Ryo-Seah"},"content":"    public static boolean isUnsignedInteger(String s) {","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(s);","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"Ryo-Seah"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"Ryo-Seah"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"Ryo-Seah"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"Ryo-Seah"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"Ryo-Seah"},"content":"            return false;","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"Ryo-Seah":18}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"    public static final String MESSAGE_INVALID_WEEK \u003d \"The week provided is invalid\";","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"                .append(\"; Matric Number: \")","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"                .append(person.getMatricNumber())","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"                .append(\"; Telegram Handle: \")","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"                .append(person.getTelegramHandle())","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shawnnlimm":1,"-":47,"thewongdylan":4}},{"path":"src/main/java/seedu/address/logic/commands/AddAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":" * Adds an assignment to all students in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"public class AddAssignmentCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String COMMAND_WORD \u003d \"adda\";","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"        + \": Creates assignment(s) on all students.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"        + \"Parameters: ASSIGNMENT (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"        + \"[\" + PREFIX_ASSIGNMENT + \"ASSIGNMENT]...\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"        + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ASSIGNMENT + \"Homework1\";","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New assignment added: %1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_ASSIGNMENT_EXISTS_FAILURE_STRING \u003d \"No new assignments added. \"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"        + \"All students already have the assignment(s) specified.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_DUPLICATE_ASSIGNMENT \u003d \"Duplicate assignments detected.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"    private final Set\u003cAssignment\u003e assignments;","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"    private boolean hasAssignment \u003d true;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"    public AddAssignmentCommand(Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"            Set\u003cAssignment\u003e newAssignments \u003d generateAssignmentList(person, assignments);","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"            if (newAssignments.size() \u003e person.getAssignments().size()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"                hasAssignment \u003d false;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"            Person newPerson \u003d new Person(person.getName(), person.getMatricNumber(),","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"                person.getEmail(), person.getTelegramHandle(), person.getTags(),","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"                    newAssignments, person.getParticipationScores(), person.getAttendanceScores());","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"            model.setPerson(person, newPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"        if (hasAssignment) {","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"            throw new CommandException(","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"                MESSAGE_ASSIGNMENT_EXISTS_FAILURE_STRING);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"        CommandResult addAssignmentCommandResult \u003d new CommandResult(","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"            String.format(MESSAGE_SUCCESS, assignments.toString()));","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(addAssignmentCommandResult);","lastModifiedDate":"2024-04-08"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        return addAssignmentCommandResult;","lastModifiedDate":"2024-04-08"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"     * Generates a new list of assignments for a person.","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"Ryo-Seah"},"content":"     * @param person Person to add assignments to.","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"Ryo-Seah"},"content":"     * @param assignments Assignments to add.","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Ryo-Seah"},"content":"     * @return List of assignments for the person.","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"Ryo-Seah"},"content":"    public static Set\u003cAssignment\u003e generateAssignmentList(Person person, Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e oldAssignments \u003d person.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e newAssignments \u003d new HashSet\u003c\u003e(oldAssignments);","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"Ryo-Seah"},"content":"        for (Assignment assignment : assignments) {","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"Ryo-Seah"},"content":"            if (!person.hasAssignment(assignment)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"Ryo-Seah"},"content":"                newAssignments.add(assignment);","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"Ryo-Seah"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"Ryo-Seah"},"content":"                continue;","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"        return newAssignments;","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Ryo-Seah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Ryo-Seah"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"            || (other instanceof AddAssignmentCommand // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Ryo-Seah"},"content":"            \u0026\u0026 assignments.equals(((AddAssignmentCommand) other).assignments));","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Ryo-Seah"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Ryo-Seah"},"content":"        StringBuilder assignmentsString \u003d new StringBuilder();","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"Ryo-Seah"},"content":"        for (Assignment assignment : this.assignments) {","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"Ryo-Seah"},"content":"            assignmentsString.append(assignment.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"Ryo-Seah"},"content":"            assignmentsString.append(\", \");","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"Ryo-Seah"},"content":"        return assignmentsString.toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Ryo-Seah":105,"thewongdylan":3}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_MATRIC_NUMBER + \"MATRIC NUMBER \"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM HANDLE \"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_MATRIC_NUMBER + \"A1234567Z \"","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_EMAIL + \"johnd@u.nus.edu \"","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"johndoe01 \"","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_TAG + \"cs2109s \"","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_TAG + \"G19Group1\";","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"        CommandResult addCommandResult \u003d new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(addCommandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"        return addCommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":74,"thewongdylan":15}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"        CommandResult clearCommandResult \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(clearCommandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"        return clearCommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":22,"thewongdylan":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"        CommandResult deleteCommandResult \u003d new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"                Messages.format(personToDelete)));","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(deleteCommandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"        return deleteCommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":68,"thewongdylan":7}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"            + \"[\" + PREFIX_MATRIC_NUMBER + \"MATRIC NUMBER] \"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM HANDLE] \"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_MATRIC_NUMBER + \"A1234567Z \"","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_EMAIL + \"johnd@u.nus.edu\";","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"        CommandResult editCommandResult \u003d new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"                Messages.format(editedPerson)));","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(editCommandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"        return editCommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber updatedMatricNumber \u003d editPersonDescriptor.getMatricNumber()","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"                .orElse(personToEdit.getMatricNumber());","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle updatedTelegramHandleHandle \u003d editPersonDescriptor.getTelegramHandle().orElse(","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"thewongdylan"},"content":"                personToEdit.getTelegramHandle());","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e updatedAssignments \u003d personToEdit.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"Ryo-Seah"},"content":"        return new Person(updatedName, updatedMatricNumber, updatedEmail,","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"Ryo-Seah"},"content":"         updatedTelegramHandleHandle, updatedAssignments, updatedTags);","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"thewongdylan"},"content":"        private MatricNumber matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"thewongdylan"},"content":"        private TelegramHandle telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"Ryo-Seah"},"content":"        private Set\u003cAssignment\u003e assignments;","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"thewongdylan"},"content":"            setMatricNumber(toCopy.matricNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"thewongdylan"},"content":"            setTelegramHandle(toCopy.telegramHandle);","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"Ryo-Seah"},"content":"            setAssignments(toCopy.assignments);","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"thewongdylan"},"content":"            return CollectionUtil.isAnyNonNull(name, matricNumber, email, telegramHandle, tags);","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"thewongdylan"},"content":"        public void setMatricNumber(MatricNumber matricNumber) {","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"thewongdylan"},"content":"            this.matricNumber \u003d matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"thewongdylan"},"content":"        public Optional\u003cMatricNumber\u003e getMatricNumber() {","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"thewongdylan"},"content":"            return Optional.ofNullable(matricNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"thewongdylan"},"content":"        public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"thewongdylan"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"thewongdylan"},"content":"        public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"thewongdylan"},"content":"            return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"Ryo-Seah"},"content":"        /**","lastModifiedDate":"2024-03-30"},{"lineNumber":209,"author":{"gitId":"Ryo-Seah"},"content":"         * Returns an unmodifiable assignment list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"Ryo-Seah"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-30"},{"lineNumber":211,"author":{"gitId":"Ryo-Seah"},"content":"         * Returns {@code Optional#empty()} if {@code assignments} is null.","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"Ryo-Seah"},"content":"         */","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"Ryo-Seah"},"content":"        public Optional\u003cSet\u003cAssignment\u003e\u003e getAssignments() {","lastModifiedDate":"2024-04-10"},{"lineNumber":214,"author":{"gitId":"Ryo-Seah"},"content":"            return (assignments !\u003d null) ? Optional.of(new HashSet\u003c\u003e(assignments)) : Optional.empty();","lastModifiedDate":"2024-04-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":217,"author":{"gitId":"Ryo-Seah"},"content":"        /**","lastModifiedDate":"2024-03-30"},{"lineNumber":218,"author":{"gitId":"Ryo-Seah"},"content":"         * Sets {@code assignments} to this object\u0027s {@code assignments}.","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"Ryo-Seah"},"content":"         * A defensive copy of {@code assignments} is used internally.","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"Ryo-Seah"},"content":"         */","lastModifiedDate":"2024-03-30"},{"lineNumber":221,"author":{"gitId":"Ryo-Seah"},"content":"        public void setAssignments(Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2024-04-10"},{"lineNumber":222,"author":{"gitId":"Ryo-Seah"},"content":"            // how to make it be possibly null","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"Ryo-Seah"},"content":"            this.assignments \u003d (assignments !\u003d null) ? new HashSet\u003c\u003e(assignments) : null;","lastModifiedDate":"2024-04-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":256,"author":{"gitId":"thewongdylan"},"content":"                    \u0026\u0026 Objects.equals(matricNumber, otherEditPersonDescriptor.matricNumber)","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":258,"author":{"gitId":"thewongdylan"},"content":"                    \u0026\u0026 Objects.equals(telegramHandle, otherEditPersonDescriptor.telegramHandle)","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"thewongdylan"},"content":"                    .add(\"matricNumber\", matricNumber)","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"thewongdylan"},"content":"                    .add(\"telegramHandle\", telegramHandle)","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"Ryo-Seah"},"content":"                    .add(\"assignments\", assignments)","lastModifiedDate":"2024-03-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":217,"thewongdylan":36,"Ryo-Seah":21}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":" * Filters and lists all persons in address book whose tags contain any of the argument keywords.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all persons whose tags contain any of \"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"            + \"Example: \" + COMMAND_WORD + \" G19Group1 G19Group2\";","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    private final PersonContainsTagPredicate predicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    public FilterCommand(PersonContainsTagPredicate predicate) {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        return predicate.equals(otherFilterCommand.predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shawnnlimm":1,"shamesjen":57}},{"path":"src/main/java/seedu/address/logic/commands/GradeAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":" * Marks an assignment as done for one student.","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"public class GradeAssignmentCommand extends Command {","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String COMMAND_WORD \u003d \"grade\";","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"            + \": Grades an assignment as done for one student.\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"            + \"SCORE (must be positive integer)\\n\"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" \" + \"10 \" + PREFIX_ASSIGNMENT + \"Assignment1\";","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_SUCCESS_GRADE \u003d","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"            \"Assignment %1$s marked as done with score: %2$d from this person : %3$s.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_SUCCESS_UNGRADE \u003d","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"            \"Assignment %1$s unmarked as with score %2$d for this person : %3$s.\";","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_ASSIGNMENT_NOT_FOUND \u003d \"Assignment not found.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"    private final String assignmentName;","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"    private final int assignmentScore;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"     * @param targetIndex of the person in the filtered person list to mark assignment","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"     * @param assignmentName of the assignment to be marked","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"     * @param assignmentScore of the assignment to be marked","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"    public GradeAssignmentCommand(Index targetIndex, String assignmentName, int assignmentScore) {","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignmentScore \u003d assignmentScore;","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"        Person personToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"        Person gradedPerson \u003d createGradedPerson(personToMark);","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"        model.setPerson(personToMark, gradedPerson);","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"        CommandResult gradeCommandResult;","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"        if (assignmentScore \u003e 0) {","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"            gradeCommandResult \u003d new CommandResult(String.format(MESSAGE_SUCCESS_GRADE, assignmentName,","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"                    assignmentScore, personToMark.getName()));","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"        } else {","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"            gradeCommandResult \u003d new CommandResult(String.format(MESSAGE_SUCCESS_UNGRADE, assignmentName,","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"shawnnlimm"},"content":"                    assignmentScore, personToMark.getName()));","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"        model.commitAddressBook(gradeCommandResult);","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"        return gradeCommandResult;","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"shawnnlimm"},"content":"    private Person createGradedPerson(Person personToMark) throws CommandException {","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToMark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e newAssignments \u003d new HashSet\u003c\u003e(assignments);","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"Ryo-Seah"},"content":"        boolean assignmentFound \u003d false;","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"Ryo-Seah"},"content":"        for (Assignment assignment : assignments) {","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"Ryo-Seah"},"content":"            if (assignment.getName().equals(assignmentName)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"Ryo-Seah"},"content":"                assignmentFound \u003d true;","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"                Assignment newAssignment \u003d new Assignment(assignment.getName(), assignmentScore);","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"                newAssignments.remove(assignment);","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"Ryo-Seah"},"content":"                newAssignments.add(newAssignment);","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"Ryo-Seah"},"content":"        if (!assignmentFound) {","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"Ryo-Seah"},"content":"            throw new CommandException(MESSAGE_ASSIGNMENT_NOT_FOUND);","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"shawnnlimm"},"content":"        return new Person(personToMark.getName(), personToMark.getMatricNumber(),","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"Ryo-Seah"},"content":"                personToMark.getEmail(), personToMark.getTelegramHandle(), personToMark.getTags(),","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"Ryo-Seah"},"content":"                newAssignments, personToMark.getParticipationScores(), personToMark.getAttendanceScores());","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"Ryo-Seah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"Ryo-Seah"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"Ryo-Seah"},"content":"                || (other instanceof GradeAssignmentCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":108,"author":{"gitId":"Ryo-Seah"},"content":"                \u0026\u0026 targetIndex.equals(((GradeAssignmentCommand) other).targetIndex)","lastModifiedDate":"2024-04-05"},{"lineNumber":109,"author":{"gitId":"Ryo-Seah"},"content":"                \u0026\u0026 assignmentName.equals(((GradeAssignmentCommand) other).assignmentName)","lastModifiedDate":"2024-04-05"},{"lineNumber":110,"author":{"gitId":"Ryo-Seah"},"content":"                \u0026\u0026 assignmentScore \u003d\u003d ((GradeAssignmentCommand) other).assignmentScore);","lastModifiedDate":"2024-04-05"},{"lineNumber":111,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"Ryo-Seah"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"Ryo-Seah"},"content":"        return \"MarkAssignmentCommand{\" + \"targetIndex\u003d\" + targetIndex + \", assignmentName\u003d\u0027\" + assignmentName + \u0027\\\u0027\u0027","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"Ryo-Seah"},"content":"                + \", assignmentScore\u003d\" + assignmentScore + \u0027}\u0027;","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"shawnnlimm":22,"Ryo-Seah":97}},{"path":"src/main/java/seedu/address/logic/commands/MarkAllAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":" * Marks the tutorial attendance of all filtered students","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"public class MarkAllAttendanceCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    public static final String COMMAND_WORD \u003d \"markalla\";","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"            + \": Marks the attendance of all filtered students \\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"            + \"Parameters: WEEK (must be a positive integer between 3 and 13)\\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3 \";","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Week Number: %2$d\";","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_MARK_ALL_ATTENDANCE_SUCCESS \u003d \"Marked all attendance for week %1$d\";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"    private static final int FIRST_WEEK \u003d 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"    private static final int LAST_WEEK \u003d 13;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    private final Index weekNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"     * @param weekNumber week number to mark the person with","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"    public MarkAllAttendanceCommand(Index weekNumber) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        requireAllNonNull(weekNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"        if (weekNumber.getZeroBased() \u003c FIRST_WEEK | weekNumber.getZeroBased() \u003e LAST_WEEK) {","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"        for (Person personToMark : lastShownList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"            List\u003cInteger\u003e newAttendanceScores \u003d getNewAttendanceScores(personToMark);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"            Person updatedPerson \u003d createMarkedPerson(personToMark, newAttendanceScores);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"            model.setPerson(personToMark, updatedPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markAllAttendanceCommandResult \u003d","lastModifiedDate":"2024-04-08"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"                new CommandResult(String.format(MESSAGE_MARK_ALL_ATTENDANCE_SUCCESS, weekNumber.getZeroBased()));","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(markAllAttendanceCommandResult);","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"        return markAllAttendanceCommandResult;","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"     * Returns a list of updated attendance scores for {@code personToMark}.","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"     * @param personToMark the person to mark attendance for","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"     * @return a list of updated attendance scores","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"    private List\u003cInteger\u003e getNewAttendanceScores(Person personToMark) {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e oldAttendanceScores \u003d personToMark.getAttendanceScores();","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newAttendanceScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"        int weekIndex \u003d weekNumber.getZeroBased() - 3;","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"        for (int i \u003d 0; i \u003c oldAttendanceScores.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"            if (i \u003d\u003d weekIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"                newAttendanceScores.add(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"                newAttendanceScores.add(oldAttendanceScores.get(i));","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"        return newAttendanceScores;","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"shamesjen"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToMark}","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"shamesjen"},"content":"     * with the updated participation scores. Utilizes the overload Person constructor.","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"shamesjen"},"content":"    private static Person createMarkedPerson(Person personToMark, List\u003cInteger\u003e updatedAttendanceScores) {","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"shamesjen"},"content":"        assert personToMark !\u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"        Name name \u003d personToMark.getName();","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"        MatricNumber matricNumber \u003d personToMark.getMatricNumber();","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"        Email email \u003d personToMark.getEmail();","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"        TelegramHandle telegramHandle \u003d personToMark.getTelegramHandle();","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"        Set\u003cTag\u003e tags \u003d personToMark.getTags();","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToMark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"shamesjen"},"content":"        List\u003cInteger\u003e participationScores \u003d personToMark.getParticipationScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"shawnnlimm"},"content":"        return new Person(name, matricNumber, email, telegramHandle,","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"Ryo-Seah"},"content":"                 tags, assignments, participationScores, updatedAttendanceScores);","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"shamesjen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"shamesjen"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"shamesjen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"shamesjen"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"shamesjen"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"shamesjen"},"content":"        if (!(other instanceof MarkAllAttendanceCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"shamesjen"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"shamesjen"},"content":"        // state check","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"shamesjen"},"content":"        MarkAllAttendanceCommand e \u003d (MarkAllAttendanceCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"shamesjen"},"content":"        return weekNumber.equals(e.weekNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shawnnlimm":1,"shamesjen":94,"Ryo-Seah":3,"thewongdylan":30}},{"path":"src/main/java/seedu/address/logic/commands/MarkAllParticipationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":" * Marks the tutorial participation of all filtered students","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"public class MarkAllParticipationCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    public static final String COMMAND_WORD \u003d \"markallp\";","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"            + \": Marks the participation of all filtered students \\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"            + \"Parameters: WEEK (must be a positive integer between 3 and 13)\\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Week Number: %2$d\";","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_MARK_ALL_PARTICIPATION_SUCCESS \u003d \"Marked all participation for week %1$d\";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"    private static final int FIRST_WEEK \u003d 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"    private static final int LAST_WEEK \u003d 13;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    private final Index weekNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"     * @param weekNumber week number to mark the person with","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"    public MarkAllParticipationCommand(Index weekNumber) {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        requireAllNonNull(weekNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"        if (weekNumber.getZeroBased() \u003c FIRST_WEEK | weekNumber.getZeroBased() \u003e LAST_WEEK) {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"        for (Person personToMark : lastShownList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"            List\u003cInteger\u003e newParticipationScores \u003d getNewParticipationScores(personToMark);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"            Person updatedPerson \u003d createMarkedPerson(personToMark, newParticipationScores);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"            model.setPerson(personToMark, updatedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markAllParticipationCommandResult \u003d","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"                new CommandResult(String.format(MESSAGE_MARK_ALL_PARTICIPATION_SUCCESS, weekNumber.getZeroBased()));","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(markAllParticipationCommandResult);","lastModifiedDate":"2024-04-08"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"        return markAllParticipationCommandResult;","lastModifiedDate":"2024-04-08"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"     * Returns a list of updated participation scores for {@code personToMark}.","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"     * @param personToMark the person to mark participation for","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"     * @return a list of updated participation scores","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"    private List\u003cInteger\u003e getNewParticipationScores(Person personToMark) {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"shamesjen"},"content":"        List\u003cInteger\u003e oldParticipationScores \u003d personToMark.getParticipationScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"shamesjen"},"content":"        List\u003cInteger\u003e newParticipationScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"shamesjen"},"content":"        int weekIndex \u003d weekNumber.getZeroBased() - 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"shamesjen"},"content":"        for (int j \u003d 0; j \u003c oldParticipationScores.size(); j++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"shamesjen"},"content":"            if (j \u003d\u003d weekIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"shamesjen"},"content":"                newParticipationScores.add(oldParticipationScores.get(j) + 1);","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"shamesjen"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"shamesjen"},"content":"                newParticipationScores.add(oldParticipationScores.get(j));","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"        return newParticipationScores;","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"shamesjen"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToMark}","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"shamesjen"},"content":"     * with the updated participation scores. Utilizes the overload Person constructor.","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"shamesjen"},"content":"    private static Person createMarkedPerson(Person personToMark, List\u003cInteger\u003e updatedParticipationScores) {","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"shamesjen"},"content":"        assert personToMark !\u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"        Name name \u003d personToMark.getName();","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"        MatricNumber matricNumber \u003d personToMark.getMatricNumber();","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"        Email email \u003d personToMark.getEmail();","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"        TelegramHandle telegramHandle \u003d personToMark.getTelegramHandle();","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"shamesjen"},"content":"        Set\u003cTag\u003e tags \u003d personToMark.getTags();","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToMark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"shamesjen"},"content":"        List\u003cInteger\u003e attendanceScores \u003d personToMark.getAttendanceScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"shamesjen"},"content":"        return new Person(name, matricNumber, email, telegramHandle,","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"Ryo-Seah"},"content":"                tags, assignments, updatedParticipationScores, attendanceScores);","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"shamesjen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"shamesjen"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"shamesjen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"shamesjen"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"shamesjen"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"shamesjen"},"content":"        if (!(other instanceof MarkAllParticipationCommand)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"shamesjen"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"shamesjen"},"content":"        // state check","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"shamesjen"},"content":"        MarkAllParticipationCommand e \u003d (MarkAllParticipationCommand) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"shamesjen"},"content":"        return weekNumber.equals(e.weekNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shamesjen":100,"Ryo-Seah":3,"thewongdylan":25}},{"path":"src/main/java/seedu/address/logic/commands/MarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":" * Marks the tutorial attendance of a student","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"public class MarkAttendanceCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"    public static final String COMMAND_WORD \u003d \"marka\";","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"            + \": Marks the attendance of the person identified \"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"            + \"Parameters: INDEX (must be a positive integer), WEEK (must be a positive integer between 3 and 13)\\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"5\";","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_MARK_ATTENDANCE_SUCCESS \u003d \"Marked Attendance for: %1$s in Week %2$d\";","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"    private static final int FIRST_WEEK \u003d 3;","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"    private static final int LAST_WEEK \u003d 13;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"    private final Index weekNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"     * @param weekNumber week number to mark the person with","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"    public MarkAttendanceCommand(Index index, Index weekNumber) {","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"        requireAllNonNull(index, weekNumber);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"        if (weekNumber.getZeroBased() \u003c FIRST_WEEK | weekNumber.getZeroBased() \u003e LAST_WEEK) {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"        Person personToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newAttendanceScores \u003d getNewAttendanceScores(personToMark);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"        Person updatedPerson \u003d createMarkedPerson(personToMark, newAttendanceScores);","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"        model.setPerson(personToMark, updatedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"        CommandResult markAttendanceCommandResult \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"                new CommandResult(String.format(MESSAGE_MARK_ATTENDANCE_SUCCESS, updatedPerson.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"                        weekNumber.getZeroBased()));","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"        model.commitAddressBook(markAttendanceCommandResult);","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"        return markAttendanceCommandResult;","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"     * Returns a list of updated attendance scores for {@code personToMark}.","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"     * @param personToMark the person to mark attendance for","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"     * @return a list of updated attendance scores","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"    private List\u003cInteger\u003e getNewAttendanceScores(Person personToMark) {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e oldAttendanceScores \u003d personToMark.getAttendanceScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newAttendanceScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"        int weekIndex \u003d weekNumber.getZeroBased() - 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"        for (int i \u003d 0; i \u003c oldAttendanceScores.size(); i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"            if (i \u003d\u003d weekIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"                newAttendanceScores.add(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"                newAttendanceScores.add(oldAttendanceScores.get(i));","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"        return newAttendanceScores;","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"shawnnlimm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToMark}","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"shawnnlimm"},"content":"     * with the updated Attendance scores. Utilizes the overload Person constructor.","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"shawnnlimm"},"content":"    private static Person createMarkedPerson(Person personToMark, List\u003cInteger\u003e updatedAttendanceScores) {","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"shawnnlimm"},"content":"        assert personToMark !\u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"shawnnlimm"},"content":"        Name name \u003d personToMark.getName();","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"shawnnlimm"},"content":"        MatricNumber matricNumber \u003d personToMark.getMatricNumber();","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"shawnnlimm"},"content":"        Email email \u003d personToMark.getEmail();","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"shawnnlimm"},"content":"        TelegramHandle telegramHandle \u003d personToMark.getTelegramHandle();","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"shawnnlimm"},"content":"        Set\u003cTag\u003e tags \u003d personToMark.getTags();","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"shawnnlimm"},"content":"        List\u003cInteger\u003e participationScores \u003d personToMark.getParticipationScores();","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToMark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"shawnnlimm"},"content":"        return new Person(name, matricNumber, email, telegramHandle,","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"Ryo-Seah"},"content":"                 tags, assignments, participationScores, updatedAttendanceScores);","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"shawnnlimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"shawnnlimm"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"shawnnlimm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"shawnnlimm"},"content":"            return true;","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"shawnnlimm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"shawnnlimm"},"content":"        if (!(other instanceof MarkAttendanceCommand)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"shawnnlimm"},"content":"            return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"shawnnlimm"},"content":"        // state check","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"shawnnlimm"},"content":"        MarkAttendanceCommand e \u003d (MarkAttendanceCommand) other;","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"shawnnlimm"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"shawnnlimm"},"content":"                \u0026\u0026 weekNumber.equals(e.weekNumber);","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"shawnnlimm":110,"shamesjen":1,"Ryo-Seah":3,"thewongdylan":25}},{"path":"src/main/java/seedu/address/logic/commands/MarkParticipationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":" * Marks the tutorial participation of a student","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"public class MarkParticipationCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"    public static final String COMMAND_WORD \u003d \"markp\";","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"            + \": Marks the participation of the person identified \"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"            + \"Parameters: INDEX (must be a positive integer), WEEK (must be a positive integer between 3 and 13)\\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"5\";","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_MARK_PARTICIPATION_SUCCESS \u003d \"Marked Participation for: %1$s in Week %2$d \"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"            + \"\\nCurrent Participation Score: %3$s\";","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"    private static final int FIRST_WEEK \u003d 3;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"    private static final int LAST_WEEK \u003d 13;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"    private final Index weekNumber;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"     * @param weekNumber week number to mark the person with","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"    public MarkParticipationCommand(Index index, Index weekNumber) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        requireAllNonNull(index, weekNumber);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"        if (weekNumber.getZeroBased() \u003c FIRST_WEEK | weekNumber.getZeroBased() \u003e LAST_WEEK) {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"        Person personToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newParticipationScores \u003d getNewParticipationScores(personToMark);","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"        Person updatedPerson \u003d createMarkedPerson(personToMark, newParticipationScores);","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"        model.setPerson(personToMark, updatedPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markParticipationCommandResult \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"                new CommandResult(String.format(MESSAGE_MARK_PARTICIPATION_SUCCESS, updatedPerson.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"                        weekNumber.getZeroBased(),","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"                        updatedPerson.getParticipationScores().get(weekNumber.getZeroBased() - 3)));","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(markParticipationCommandResult);","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"        return markParticipationCommandResult;","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"     * Returns a list of updated participation scores for {@code personToMark}.","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"     * @param personToMark the person to mark participation for","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"     * @return a list of updated participation scores","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"    private List\u003cInteger\u003e getNewParticipationScores(Person personToMark) {","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"shawnnlimm"},"content":"        List\u003cInteger\u003e oldParticipationScores \u003d personToMark.getParticipationScores();","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"shawnnlimm"},"content":"        List\u003cInteger\u003e newParticipationScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"shawnnlimm"},"content":"        int weekIndex \u003d weekNumber.getZeroBased() - 3;","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"shawnnlimm"},"content":"        for (int i \u003d 0; i \u003c oldParticipationScores.size(); i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"shawnnlimm"},"content":"            if (i \u003d\u003d weekIndex) {","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"shawnnlimm"},"content":"                newParticipationScores.add(oldParticipationScores.get(i) + 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"shawnnlimm"},"content":"            } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"shawnnlimm"},"content":"                newParticipationScores.add(oldParticipationScores.get(i));","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"shawnnlimm"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"        return newParticipationScores;","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"shawnnlimm"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToMark}","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"shawnnlimm"},"content":"     * with the updated participation scores. Utilizes the overload Person constructor.","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"shawnnlimm"},"content":"    private static Person createMarkedPerson(Person personToMark, List\u003cInteger\u003e updatedParticipationScores) {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"shawnnlimm"},"content":"        assert personToMark !\u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"shawnnlimm"},"content":"        Name name \u003d personToMark.getName();","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber matricNumber \u003d personToMark.getMatricNumber();","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"shawnnlimm"},"content":"        Email email \u003d personToMark.getEmail();","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle telegramHandle \u003d personToMark.getTelegramHandle();","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"shawnnlimm"},"content":"        Set\u003cTag\u003e tags \u003d personToMark.getTags();","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"shawnnlimm"},"content":"        List\u003cInteger\u003e attendanceScores \u003d personToMark.getAttendanceScores();","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToMark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"shawnnlimm"},"content":"        return new Person(name, matricNumber, email, telegramHandle,","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"Ryo-Seah"},"content":"         tags, assignments, updatedParticipationScores, attendanceScores);","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"shawnnlimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"shawnnlimm"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"shawnnlimm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"shawnnlimm"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"shawnnlimm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"shawnnlimm"},"content":"        if (!(other instanceof MarkParticipationCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"shawnnlimm"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"shawnnlimm"},"content":"        // state check","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"shawnnlimm"},"content":"        MarkParticipationCommand e \u003d (MarkParticipationCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"shawnnlimm"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"shawnnlimm"},"content":"                \u0026\u0026 weekNumber.equals(e.weekNumber);","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"shawnnlimm":105,"shamesjen":1,"Ryo-Seah":3,"thewongdylan":32}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":" * Redoes a previously undone command.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"            + \": Redoes a previously undone command.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redid previously undone command:\\n\\t\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_CANNOT_REDO \u003d \"Unable to redo since there were no previously undone commands.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        if (model.canRedoAddressBook()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"            model.redoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"            String redoneCommandMessage \u003d model.getAddressBookRedoneCommand().getFeedbackToUser();","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"            return new CommandResult(MESSAGE_SUCCESS + redoneCommandMessage);","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"        } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(MESSAGE_CANNOT_REDO);","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"thewongdylan":31}},{"path":"src/main/java/seedu/address/logic/commands/RemoveAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":" * Removes an assignment from all students.","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveAssignmentCommand extends Command {","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String COMMAND_WORD \u003d \"removea\";","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"            + \": Removes assignment(s) on all students.\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"            + \"Parameters: ASSIGNMENT (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"            + \"[\" + PREFIX_ASSIGNMENT + \"ASSIGNMENT]...\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ASSIGNMENT + \"Homework1\";","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Assignments removed: %1$s\";","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_ASSIGNMENT_DOES_NOT_EXIST_FAILURE_STRING \u003d \"No assignments removed. \"","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"        + \"No students have the assignment(s) specified.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"    private final Set\u003cAssignment\u003e assignments;","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"    private boolean hasAssignment \u003d false;","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"    public RemoveAssignmentCommand(Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"            Set\u003cAssignment\u003e removedAssignments \u003d generateAssignmentSet(person, assignments);","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"            System.out.println(removedAssignments);","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"            if (removedAssignments.size() \u003c person.getAssignments().size()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"                hasAssignment \u003d true;","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"            Person newPerson \u003d new Person(person.getName(), person.getMatricNumber(),","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"                person.getEmail(), person.getTelegramHandle(), person.getTags(),","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"                    removedAssignments, person.getParticipationScores(), person.getAttendanceScores());","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"            model.setPerson(person, newPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"        if (!hasAssignment) {","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"            throw new CommandException(MESSAGE_ASSIGNMENT_DOES_NOT_EXIST_FAILURE_STRING);","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-04-08"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"        CommandResult removeAssignmentCommandResult \u003d new CommandResult(String.format(MESSAGE_SUCCESS, assignments));","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(removeAssignmentCommandResult);","lastModifiedDate":"2024-04-08"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        return removeAssignmentCommandResult;","lastModifiedDate":"2024-04-08"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"     * Generates a new list of assignments for the person.","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"     * @param person Person to generate the new list of assignments for.","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"     * @param assignments List of assignments to remove.","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"     * @return List of assignments for the person.","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"    private Set\u003cAssignment\u003e generateAssignmentSet(Person person, Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e oldAssignments \u003d person.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e newAssignments \u003d new HashSet\u003c\u003e(oldAssignments);","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"Ryo-Seah"},"content":"        for (Assignment assignment : assignments) {","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"Ryo-Seah"},"content":"            if (person.hasAssignment(assignment)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"Ryo-Seah"},"content":"                newAssignments.remove(assignment);","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"Ryo-Seah"},"content":"            } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"Ryo-Seah"},"content":"                continue;","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"Ryo-Seah"},"content":"        return newAssignments;","lastModifiedDate":"2024-04-05"},{"lineNumber":84,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"Ryo-Seah":81,"thewongdylan":6}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":" * Removes a tag associated to a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveTagCommand extends Command {","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String COMMAND_WORD \u003d \"removetag\";","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"        + \": Removes the tag on the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TAG + \"friends\";","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_REMOVE_TAG_SUCCESS \u003d \"Tags %1$s removed from this person : %2$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_TAG_DOES_NOT_EXIST \u003d \"This person does not have that tag\";","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"     * @param targetIndex of the person in the filtered person list to remove the tag","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"     * @param tags to be removed from the person","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"    public RemoveTagCommand(Index targetIndex, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"        Person personToRemove \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e oldTags \u003d personToRemove.getTags();","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e newSet \u003d new HashSet\u003c\u003e(oldTags);","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"            if (!oldTags.contains(tag)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"                throw new CommandException(MESSAGE_TAG_DOES_NOT_EXIST + \" \" + tag.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"            newSet.remove(tag);","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"        Person removedTagPerson \u003d new Person(personToRemove.getName(), personToRemove.getMatricNumber(),","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"                personToRemove.getEmail(), personToRemove.getTelegramHandle(), newSet,","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"                    personToRemove.getAssignments(), personToRemove.getParticipationScores(),","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"                        personToRemove.getAttendanceScores());","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"        model.setPerson(personToRemove, removedTagPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"        CommandResult removeTagCommandResult \u003d new CommandResult(String.format(MESSAGE_REMOVE_TAG_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Ryo-Seah"},"content":"                tags.toString(), removedTagPerson.getName()));","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(removeTagCommandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"        return removeTagCommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"Ryo-Seah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"Ryo-Seah"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"Ryo-Seah"},"content":"            return true;","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"        if (!(other instanceof RemoveTagCommand)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"Ryo-Seah"},"content":"            return false;","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagCommand otherRemoveTagCommand \u003d (RemoveTagCommand) other;","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"        return targetIndex.equals(otherRemoveTagCommand.targetIndex) \u0026\u0026 tags.equals(otherRemoveTagCommand.tags);","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-03"},{"lineNumber":99,"author":{"gitId":"Ryo-Seah"},"content":"    public String toString() {","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"Ryo-Seah"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"Ryo-Seah"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"Ryo-Seah"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"Ryo-Seah"},"content":"                .toString();","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"Ryo-Seah":99,"thewongdylan":6}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTagFromAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":" * Removes all instance of specific tags associated to any person in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveTagFromAllCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String COMMAND_WORD \u003d \"removetagall\";","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"        + \": Removes the tag from all persons in the displayed person list.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"        + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"        + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"friends\";","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_REMOVE_TAG_SUCCESS \u003d \"Tag(s) removed from the following persons:\\n%s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_TAG_DOES_NOT_EXIST \u003d \"No persons have any of the tag(s)\";","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"    private ArrayList\u003cPair\u003cPerson, List\u003cTag\u003e\u003e\u003e removedTagList \u003d new ArrayList\u003cPair\u003cPerson, List\u003cTag\u003e\u003e\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"     * @param tags to be removed from All persons","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"    public RemoveTagFromAllCommand(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"        boolean hasTag \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"            List\u003cTag\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"            Set\u003cTag\u003e oldTags \u003d person.getTags();","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"            Set\u003cTag\u003e newSet \u003d new HashSet\u003c\u003e(oldTags);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"            for (Tag tag : tags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"                if (oldTags.contains(tag)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"                    hasTag \u003d true;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"                    newSet.remove(tag);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"                    tagList.add(tag);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"                }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"            Person removedTagPerson \u003d new Person(person.getName(), person.getMatricNumber(),","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"                person.getEmail(), person.getTelegramHandle(), newSet,","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"                    person.getAssignments(), person.getParticipationScores(), person.getAttendanceScores());","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"            model.setPerson(person, removedTagPerson);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"            if (tagList.size() \u003e 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"                removedTagList.add(new Pair\u003c\u003e(person, tagList));","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"        if (!hasTag) {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"            throw new CommandException(MESSAGE_TAG_DOES_NOT_EXIST);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"        CommandResult removeTagFromAllCommandResult \u003d new CommandResult(String.format(MESSAGE_REMOVE_TAG_SUCCESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Ryo-Seah"},"content":"                formatRemovedTags(removedTagList)));","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(removeTagFromAllCommandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"        return removeTagFromAllCommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Ryo-Seah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Ryo-Seah"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"Ryo-Seah"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"Ryo-Seah"},"content":"        if (!(other instanceof RemoveTagFromAllCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"Ryo-Seah"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagFromAllCommand otherRemoveTagCommand \u003d (RemoveTagFromAllCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"Ryo-Seah"},"content":"        return this.tags.equals(otherRemoveTagCommand.tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"Ryo-Seah"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"Ryo-Seah"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"Ryo-Seah"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"Ryo-Seah"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"Ryo-Seah"},"content":"     * Formats the removed tags into a string.","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"Ryo-Seah"},"content":"    public static String formatRemovedTags(List\u003cPair\u003cPerson, List\u003cTag\u003e\u003e\u003e removedTagList) {","lastModifiedDate":"2024-04-05"},{"lineNumber":112,"author":{"gitId":"Ryo-Seah"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"Ryo-Seah"},"content":"        for (Pair\u003cPerson, List\u003cTag\u003e\u003e pair : removedTagList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"Ryo-Seah"},"content":"            Person person \u003d pair.getKey();","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"Ryo-Seah"},"content":"            List\u003cTag\u003e removedTags \u003d pair.getValue();","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"Ryo-Seah"},"content":"            sb.append(person.getName()).append(\": \");","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"Ryo-Seah"},"content":"            for (int i \u003d 0; i \u003c removedTags.size(); i++) {","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"Ryo-Seah"},"content":"                sb.append(removedTags.get(i).toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"Ryo-Seah"},"content":"                if (i \u003c removedTags.size() - 1) {","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"Ryo-Seah"},"content":"                    sb.append(\", \");","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"Ryo-Seah"},"content":"                }","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"Ryo-Seah"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"Ryo-Seah"},"content":"        return sb.toString().trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Ryo-Seah":119,"thewongdylan":8}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":" * Undoes the previous command.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"            + \": Undoes the previously issued command that changed data.\"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undid previous command:\\n\\t\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_CANNOT_UNDO \u003d \"Unable to undo since there were no previously issued commands.\";","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"        if (model.canUndoAddressBook()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"            model.undoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"            String undoneCommandMessage \u003d model.getAddressBookUndoneCommand().getFeedbackToUser();","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"            return new CommandResult(MESSAGE_SUCCESS + undoneCommandMessage);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"thewongdylan":32}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkAllAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":" * Unmarks the tutorial attendance of all filtered students","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAllAttendanceCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"    public static final String COMMAND_WORD \u003d \"unmarkalla\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"            + \": Unmarks the attendance of all filtered students \\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"            + \"Parameters: WEEK (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3 \";","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Week Number: %2$d\";","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_UNMARK_ALL_ATTENDANCE_SUCCESS \u003d \"Unmarked all attendance for week %1$d\";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_ATTENDANCE_ALREADY_ZERO \u003d \"Attendance for %1$s in Week %2$d is already 0\";","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    private static final int FIRST_WEEK \u003d 3;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"    private static final int LAST_WEEK \u003d 13;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"    private final Index weekNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"     * @param weekNumber week number to mark the person with","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"    public UnmarkAllAttendanceCommand(Index weekNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"        requireAllNonNull(weekNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        if (weekNumber.getZeroBased() \u003c FIRST_WEEK | weekNumber.getZeroBased() \u003e LAST_WEEK) {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"        for (Person personToUnmark : lastShownList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"            if (personToUnmark.getAttendanceScores().get(weekNumber.getZeroBased() - 3) \u003d\u003d 0) {","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"                throw new CommandException(String.format(MESSAGE_ATTENDANCE_ALREADY_ZERO,","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"                        personToUnmark.getName(), weekNumber.getZeroBased()));","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"        for (Person personToUnmark : lastShownList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"            List\u003cInteger\u003e newAttendanceScores \u003d getNewAttendanceScores(personToUnmark);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"            Person updatedPerson \u003d createUnmarkedPerson(personToUnmark, newAttendanceScores);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"            model.setPerson(personToUnmark, updatedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"        CommandResult unmarkAllAttendanceCommandResult \u003d","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"                new CommandResult(String.format(MESSAGE_UNMARK_ALL_ATTENDANCE_SUCCESS, weekNumber.getZeroBased()));","lastModifiedDate":"2024-04-08"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(unmarkAllAttendanceCommandResult);","lastModifiedDate":"2024-04-08"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        return unmarkAllAttendanceCommandResult;","lastModifiedDate":"2024-04-08"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"     * Returns a list of updated attendance scores for {@code personToUnmark}.","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"     * @param personToUnmark the person to unmark attendance for","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"     * @return a list of updated attendance scores","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"    private List\u003cInteger\u003e getNewAttendanceScores(Person personToUnmark) {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e oldAttendanceScores \u003d personToUnmark.getAttendanceScores();","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newAttendanceScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"        int weekIndex \u003d weekNumber.getZeroBased() - 3;","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"        for (int i \u003d 0; i \u003c oldAttendanceScores.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"            if (i \u003d\u003d weekIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"                newAttendanceScores.add(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"                newAttendanceScores.add(oldAttendanceScores.get(i));","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"        return newAttendanceScores;","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToMark}","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"thewongdylan"},"content":"     * with the updated participation scores. Utilizes the overload Person constructor.","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"    private static Person createUnmarkedPerson(Person personToUnmark, List\u003cInteger\u003e updatedAttendanceScores) {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"        assert personToUnmark !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"        Name name \u003d personToUnmark.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber matricNumber \u003d personToUnmark.getMatricNumber();","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"        Email email \u003d personToUnmark.getEmail();","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle telegramHandle \u003d personToUnmark.getTelegramHandle();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"thewongdylan"},"content":"        Set\u003cTag\u003e tags \u003d personToUnmark.getTags();","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToUnmark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e participationScores \u003d personToUnmark.getParticipationScores();","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"thewongdylan"},"content":"        return new Person(name, matricNumber, email, telegramHandle,","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"thewongdylan"},"content":"                tags, assignments, participationScores, updatedAttendanceScores);","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"thewongdylan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"thewongdylan"},"content":"        // short circuit if same object","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"thewongdylan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"thewongdylan"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"thewongdylan"},"content":"        if (!(other instanceof UnmarkAllAttendanceCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"thewongdylan"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"thewongdylan"},"content":"        // state check","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAllAttendanceCommand e \u003d (UnmarkAllAttendanceCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"thewongdylan"},"content":"        return weekNumber.equals(e.weekNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"thewongdylan":135,"Ryo-Seah":1}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkAllParticipationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":" * Unmarks the tutorial participation of all filtered students","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAllParticipationCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"    public static final String COMMAND_WORD \u003d \"unmarkallp\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"            + \": Unmarks the participation of all filtered students \\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"            + \"Parameters: WEEK (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Week Number: %2$d\";","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_UNMARK_ALL_PARTICIPATION_SUCCESS \u003d \"Unmarked all participation for week %1$d\";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_PARTICIPATION_ALREADY_ZERO \u003d \"Participation for %1$s in Week %2$d is already 0\";","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"    private static final int FIRST_WEEK \u003d 3;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    private static final int LAST_WEEK \u003d 13;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"    private final Index weekNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"     * @param weekNumber week number to mark the person with","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"    public UnmarkAllParticipationCommand(Index weekNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"        requireAllNonNull(weekNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        if (weekNumber.getZeroBased() \u003c FIRST_WEEK | weekNumber.getZeroBased() \u003e LAST_WEEK) {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"        for (Person personToUnmark : lastShownList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"            if (personToUnmark.getParticipationScores().get(weekNumber.getZeroBased() - 3) \u003d\u003d 0) {","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"                throw new CommandException(String.format(MESSAGE_PARTICIPATION_ALREADY_ZERO,","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"                        personToUnmark.getName(), weekNumber.getZeroBased()));","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"        for (Person personToUnmark : lastShownList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"            List\u003cInteger\u003e newParticipationScores \u003d getNewParticipationScores(personToUnmark);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"            Person updatedPerson \u003d createMarkedPerson(personToUnmark, newParticipationScores);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"            model.setPerson(personToUnmark, updatedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"        CommandResult unmarkAllParticipationCommandResult \u003d","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"                new CommandResult(String.format(MESSAGE_UNMARK_ALL_PARTICIPATION_SUCCESS, weekNumber.getZeroBased()));","lastModifiedDate":"2024-04-08"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(unmarkAllParticipationCommandResult);","lastModifiedDate":"2024-04-08"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        return unmarkAllParticipationCommandResult;","lastModifiedDate":"2024-04-08"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"     * Returns a list of updated participation scores for {@code personToUnmark}.","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"     * @param personToUnmark the person to unmark participation for","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"     * @return a list of updated participation scores","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"    private List\u003cInteger\u003e getNewParticipationScores(Person personToUnmark) {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e oldParticipationScores \u003d personToUnmark.getParticipationScores();","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newParticipationScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"        int weekIndex \u003d weekNumber.getZeroBased() - 3;","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"        for (int j \u003d 0; j \u003c oldParticipationScores.size(); j++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"            if (j \u003d\u003d weekIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"                newParticipationScores.add(oldParticipationScores.get(j) - 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"                newParticipationScores.add(oldParticipationScores.get(j));","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"        return newParticipationScores;","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToUnmark}","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"thewongdylan"},"content":"     * with the updated participation scores. Utilizes the overload Person constructor.","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"    private static Person createMarkedPerson(Person personToUnmark, List\u003cInteger\u003e updatedParticipationScores) {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"        assert personToUnmark !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"        Name name \u003d personToUnmark.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber matricNumber \u003d personToUnmark.getMatricNumber();","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"        Email email \u003d personToUnmark.getEmail();","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle telegramHandle \u003d personToUnmark.getTelegramHandle();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"thewongdylan"},"content":"        Set\u003cTag\u003e tags \u003d personToUnmark.getTags();","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToUnmark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e attendanceScores \u003d personToUnmark.getAttendanceScores();","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"thewongdylan"},"content":"        return new Person(name, matricNumber, email, telegramHandle,","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"thewongdylan"},"content":"                tags, assignments, updatedParticipationScores, attendanceScores);","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"thewongdylan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"thewongdylan"},"content":"        // short circuit if same object","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"thewongdylan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"thewongdylan"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"thewongdylan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"        if (!(other instanceof UnmarkAllParticipationCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"thewongdylan"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"thewongdylan"},"content":"        // state check","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAllParticipationCommand e \u003d (UnmarkAllParticipationCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"thewongdylan"},"content":"        return weekNumber.equals(e.weekNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"thewongdylan":134,"Ryo-Seah":1}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":" * Unmarks the tutorial attendance of a student","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAttendanceCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"    public static final String COMMAND_WORD \u003d \"unmarka\";","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"            + \": Unmarks the attendance of the person identified \"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"            + \"Parameters: INDEX (must be a positive integer), WEEK (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"5\";","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_UNMARK_ATTENDANCE_SUCCESS \u003d \"Unmarked Attendance for: %1$s in Week %2$d\";","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_ATTENDANCE_ALREADY_ZERO \u003d \"Attendance for %1$s in Week %2$d is already 0\";","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"    private static final int FIRST_WEEK \u003d 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    private static final int LAST_WEEK \u003d 13;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"    private final Index weekNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"     * @param weekNumber week number to unmark the person with","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"    public UnmarkAttendanceCommand(Index index, Index weekNumber) {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"        requireAllNonNull(index, weekNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"        if (weekNumber.getZeroBased() \u003c FIRST_WEEK | weekNumber.getZeroBased() \u003e LAST_WEEK) {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"        if (personToUnmark.getAttendanceScores().get(weekNumber.getZeroBased() - 3) \u003d\u003d 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(String.format(MESSAGE_ATTENDANCE_ALREADY_ZERO,","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"                    personToUnmark.getName(), weekNumber.getZeroBased()));","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newAttendanceScores \u003d getnewAttendanceScores(personToUnmark);","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"        Person updatedPerson \u003d createUnmarkedPerson(personToUnmark, newAttendanceScores);","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"        model.setPerson(personToUnmark, updatedPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        CommandResult unmarkAttendanceCommandResult \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"                new CommandResult(String.format(MESSAGE_UNMARK_ATTENDANCE_SUCCESS, updatedPerson.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"                        weekNumber.getZeroBased()));","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(unmarkAttendanceCommandResult);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"        return unmarkAttendanceCommandResult;","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"     * Returns a list of updated attendance scores for {@code personToUnmark}.","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"     * @param personToUnmark the person to unmark attendance for","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"     * @return a list of updated attendance scores","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"    private List\u003cInteger\u003e getnewAttendanceScores(Person personToUnmark) {","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e oldAttendanceScores \u003d personToUnmark.getAttendanceScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newAttendanceScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"        int weekIndex \u003d weekNumber.getZeroBased() - 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"        for (int i \u003d 0; i \u003c oldAttendanceScores.size(); i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"            if (i \u003d\u003d weekIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"                newAttendanceScores.add(0);","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"                newAttendanceScores.add(oldAttendanceScores.get(i));","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"thewongdylan"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"        return newAttendanceScores;","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToUnmark}","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"     * with the updated Attendance scores. Utilizes the overload Person constructor.","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"thewongdylan"},"content":"    private static Person createUnmarkedPerson(Person personToUnmark, List\u003cInteger\u003e updatedAttendanceScores) {","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"thewongdylan"},"content":"        assert personToUnmark !\u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"thewongdylan"},"content":"        Name name \u003d personToUnmark.getName();","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber matricNumber \u003d personToUnmark.getMatricNumber();","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"thewongdylan"},"content":"        Email email \u003d personToUnmark.getEmail();","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle telegramHandle \u003d personToUnmark.getTelegramHandle();","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"thewongdylan"},"content":"        Set\u003cTag\u003e tags \u003d personToUnmark.getTags();","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e participationScores \u003d personToUnmark.getParticipationScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToUnmark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"thewongdylan"},"content":"        return new Person(name, matricNumber, email, telegramHandle,","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"thewongdylan"},"content":"                tags, assignments, participationScores, updatedAttendanceScores);","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"thewongdylan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"thewongdylan"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"thewongdylan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"thewongdylan"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"thewongdylan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"thewongdylan"},"content":"        if (!(other instanceof UnmarkAttendanceCommand)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"thewongdylan"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"thewongdylan"},"content":"        // state check","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAttendanceCommand e \u003d (UnmarkAttendanceCommand) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"thewongdylan"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"thewongdylan"},"content":"                \u0026\u0026 weekNumber.equals(e.weekNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"thewongdylan":143,"Ryo-Seah":1}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkParticipationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":" * Unmarks the tutorial participation of a student","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkParticipationCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"    public static final String COMMAND_WORD \u003d \"unmarkp\";","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"            + \": Unmarks the participation of the person identified \"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"            + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"            + \"Parameters: INDEX (must be a positive integer), WEEK (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"5\";","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_UNMARK_PARTICIPATION_SUCCESS \u003d \"Unmarked Participation for: %1$s in Week %2$d \"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"            + \"\\nCurrent Participation Score: %3$s\";","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_PARTICIPATION_ALREADY_ZERO \u003d \"Participation for %1$s in Week %2$d is already 0\";","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"    private static final int FIRST_WEEK \u003d 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"    private static final int LAST_WEEK \u003d 13;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"    private final Index weekNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"     * @param weekNumber week number to unmark the person with","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"    public UnmarkParticipationCommand(Index index, Index weekNumber) {","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"        requireAllNonNull(index, weekNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"        if (weekNumber.getZeroBased() \u003c FIRST_WEEK | weekNumber.getZeroBased() \u003e LAST_WEEK) {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        if (personToUnmark.getParticipationScores().get(weekNumber.getZeroBased() - 3) \u003d\u003d 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"            throw new CommandException(String.format(MESSAGE_PARTICIPATION_ALREADY_ZERO,","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"                    personToUnmark.getName(), weekNumber.getZeroBased()));","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newParticipationScores \u003d getNewParticipationScores(personToUnmark);","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        Person updatedPerson \u003d createMarkedPerson(personToUnmark, newParticipationScores);","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"        model.setPerson(personToUnmark, updatedPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        if (model.shouldPurgeAddressBook()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"            model.purgeAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"        CommandResult unmarkParticipationCommandResult \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"                new CommandResult(String.format(MESSAGE_UNMARK_PARTICIPATION_SUCCESS, updatedPerson.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"                        weekNumber.getZeroBased(),","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"                        updatedPerson.getParticipationScores().get(weekNumber.getZeroBased() - 3)));","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"        model.commitAddressBook(unmarkParticipationCommandResult);","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"        return unmarkParticipationCommandResult;","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"     * Returns a list of updated participation scores for {@code personToUnmark}.","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"     * @param personToUnmark the person to unmark participation for","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"     * @return a list of updated participation scores","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"    private List\u003cInteger\u003e getNewParticipationScores(Person personToUnmark) {","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e oldParticipationScores \u003d personToUnmark.getParticipationScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e newParticipationScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"        int weekIndex \u003d weekNumber.getZeroBased() - 3;","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"        for (int i \u003d 0; i \u003c oldParticipationScores.size(); i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"thewongdylan"},"content":"            if (i \u003d\u003d weekIndex) {","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"                newParticipationScores.add(oldParticipationScores.get(i) - 1);","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"            } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"                newParticipationScores.add(oldParticipationScores.get(i));","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"        return newParticipationScores;","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"thewongdylan"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToUnmark}","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"thewongdylan"},"content":"     * with the updated participation scores. Utilizes the overload Person constructor.","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"thewongdylan"},"content":"    private static Person createMarkedPerson(Person personToUnmark, List\u003cInteger\u003e updatedParticipationScores) {","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"thewongdylan"},"content":"        assert personToUnmark !\u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"thewongdylan"},"content":"        Name name \u003d personToUnmark.getName();","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber matricNumber \u003d personToUnmark.getMatricNumber();","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"thewongdylan"},"content":"        Email email \u003d personToUnmark.getEmail();","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle telegramHandle \u003d personToUnmark.getTelegramHandle();","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"thewongdylan"},"content":"        Set\u003cTag\u003e tags \u003d personToUnmark.getTags();","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"thewongdylan"},"content":"        List\u003cInteger\u003e attendanceScores \u003d personToUnmark.getAttendanceScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d personToUnmark.getAssignments();","lastModifiedDate":"2024-04-10"},{"lineNumber":125,"author":{"gitId":"thewongdylan"},"content":"        return new Person(name, matricNumber, email, telegramHandle,","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"                tags, assignments, updatedParticipationScores, attendanceScores);","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"thewongdylan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"thewongdylan"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"thewongdylan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"thewongdylan"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"thewongdylan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"thewongdylan"},"content":"        if (!(other instanceof UnmarkParticipationCommand)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"thewongdylan"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"thewongdylan"},"content":"        // state check","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"thewongdylan"},"content":"        UnmarkParticipationCommand e \u003d (UnmarkParticipationCommand) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"thewongdylan"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"thewongdylan"},"content":"                \u0026\u0026 weekNumber.equals(e.weekNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"thewongdylan":146,"Ryo-Seah":1}},{"path":"src/main/java/seedu/address/logic/parser/AddAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":" * Parses input arguments and creates a new AddAssignmentCommand object","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"public class AddAssignmentCommandParser implements Parser\u003cAddAssignmentCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAssignmentCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"     * and returns an AddAssignmentCommand object for execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"    public AddAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ASSIGNMENT);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cString\u003e assignments \u003d argMultimap.getAllValues(PREFIX_ASSIGNMENT);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignmentSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"        for (String assignment : assignments) {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"            if (!Assignment.isValidAssignmentName(assignment)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"                throw new ParseException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"            assignmentSet.add(new Assignment(assignment));","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        return new AddAssignmentCommand(assignmentSet);","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"    */","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Ryo-Seah":52}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MATRIC_NUMBER, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"                        PREFIX_TELEGRAM_HANDLE, PREFIX_TAG);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TELEGRAM_HANDLE, PREFIX_MATRIC_NUMBER, PREFIX_EMAIL)","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_MATRIC_NUMBER, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"                PREFIX_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber matricNumber \u003d ParserUtil.parseMatricNumber(argMultimap.getValue(PREFIX_MATRIC_NUMBER).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle telegramHandle \u003d ParserUtil.parseTelegramHandle(","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"                argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignmentList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"        Person person \u003d new Person(name, matricNumber, email, telegramHandle, assignmentList, tagList);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":51,"thewongdylan":12,"Ryo-Seah":4}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.GradeAssignmentCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.MarkAllAttendanceCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.MarkAllParticipationCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.MarkParticipationCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveAssignmentCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveTagFromAllCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAllAttendanceCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAllParticipationCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkParticipationCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"        case MarkAllAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"            return new MarkAllAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"        case MarkAllParticipationCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"            return new MarkAllParticipationCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"shawnnlimm"},"content":"        case MarkParticipationCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"shawnnlimm"},"content":"            return new MarkParticipationCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"shawnnlimm"},"content":"        case MarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"shawnnlimm"},"content":"            return new MarkAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"shamesjen"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"shamesjen"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"Ryo-Seah"},"content":"        case RemoveTagCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"Ryo-Seah"},"content":"            return new RemoveTagCommandParser().parse(arguments);","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"thewongdylan"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"thewongdylan"},"content":"            return new RedoCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"Ryo-Seah"},"content":"        case RemoveTagFromAllCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"Ryo-Seah"},"content":"            return new RemoveTagFromAllCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"thewongdylan"},"content":"        case UnmarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"thewongdylan"},"content":"            return new UnmarkAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"        case UnmarkParticipationCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"thewongdylan"},"content":"            return new UnmarkParticipationCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"Ryo-Seah"},"content":"        case AddAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"Ryo-Seah"},"content":"            return new AddAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"Ryo-Seah"},"content":"        case RemoveAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-05"},{"lineNumber":133,"author":{"gitId":"Ryo-Seah"},"content":"            return new RemoveAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2024-04-05"},{"lineNumber":134,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":135,"author":{"gitId":"Ryo-Seah"},"content":"        case GradeAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"Ryo-Seah"},"content":"            return new GradeAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2024-04-05"},{"lineNumber":137,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":138,"author":{"gitId":"thewongdylan"},"content":"        case UnmarkAllAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"thewongdylan"},"content":"            return new UnmarkAllAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"thewongdylan"},"content":"        case UnmarkAllParticipationCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"thewongdylan"},"content":"            return new UnmarkAllParticipationCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shawnnlimm":8,"-":86,"shamesjen":12,"Ryo-Seah":21,"thewongdylan":23}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"    public static final Prefix PREFIX_MATRIC_NUMBER \u003d new Prefix(\"m/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"    public static final Prefix PREFIX_TELEGRAM_HANDLE \u003d new Prefix(\"tl/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"    public static final Prefix PREFIX_ASSIGNMENT \u003d new Prefix(\"a/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":12,"thewongdylan":2,"Ryo-Seah":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MATRIC_NUMBER, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"                        PREFIX_TELEGRAM_HANDLE, PREFIX_TAG);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_MATRIC_NUMBER, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"                PREFIX_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"        if (argMultimap.getValue(PREFIX_MATRIC_NUMBER).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"            editPersonDescriptor.setMatricNumber(ParserUtil.parseMatricNumber(","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"                    argMultimap.getValue(PREFIX_MATRIC_NUMBER).get()));","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"            editPersonDescriptor.setTelegramHandle(ParserUtil.parseTelegramHandle(","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"                    argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get()));","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":77,"thewongdylan":12}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"        return new FilterCommand(new PersonContainsTagPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shamesjen":33}},{"path":"src/main/java/seedu/address/logic/parser/GradeAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.parser.ParserUtil.parseGrade;","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.parser.ParserUtil.parseIndex;","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.GradeAssignmentCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":" * Parses input arguments and creates a new MarkAssignmentCommand object","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"public class GradeAssignmentCommandParser implements Parser\u003cGradeAssignmentCommand\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_INVALID_PERSON_INDEX \u003d \"Invalid person index provided.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_INVALID_GRADE \u003d \"Grade must be a positive integer.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_MISSING_INDEX_OR_GRADE \u003d \"Missing Person index or grade.\";","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkAssignmentCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"     * and returns a MarkAssignmentCommand object for execution.","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"    public GradeAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ASSIGNMENT);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"                    GradeAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"        String[] indexes \u003d argMultimap.getPreamble().trim().split(\"\\\\s+\");","lastModifiedDate":"2024-04-09"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"        if (indexes.length !\u003d 2) {","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"            throw new ParseException(MESSAGE_MISSING_INDEX_OR_GRADE);","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        Index index \u003d parseIndex(indexes[0]);","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        int grade \u003d parseGrade(indexes[1]);","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"        Assignment assignment \u003d ParserUtil.parseAssignment(argMultimap.getValue(PREFIX_ASSIGNMENT).get());","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        return new GradeAssignmentCommand(index, assignment.assignmentName, grade);","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"shamesjen":6,"Ryo-Seah":53}},{"path":"src/main/java/seedu/address/logic/parser/MarkAllAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.MarkAllAttendanceCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"public class MarkAllAttendanceCommandParser implements Parser\u003cMarkAllAttendanceCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"     * Parses the given {@code String} of arguments in the context of MarkAllAttendanceCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"     * and returns a MarkAllAttendanceCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    public MarkAllAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"            Index index \u003d ParserUtil.parseZeroIndex(args);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"            return new MarkAllAttendanceCommand(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAllAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shamesjen":29}},{"path":"src/main/java/seedu/address/logic/parser/MarkAllParticipationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.MarkAllParticipationCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"public class MarkAllParticipationCommandParser implements Parser\u003cMarkAllParticipationCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"     * Parses the given {@code String} of arguments in the context of MarkAllParticipationCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"     * and returns a MarkAllParticipationCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    public MarkAllParticipationCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"            Index index \u003d ParserUtil.parseZeroIndex(args);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"            return new MarkAllParticipationCommand(index);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAllParticipationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shamesjen":29}},{"path":"src/main/java/seedu/address/logic/parser/MarkAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":" * Parses input arguments and creates a new MarkAttendanceCommand object","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"public class MarkAttendanceCommandParser implements Parser\u003cMarkAttendanceCommand\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"     * Parses the given {@code String} of arguments in the context of MarkAttendanceCommand","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"     * and returns a MarkAttendanceCommand object for execution.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"    public MarkAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"            Index[] indexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"            return new MarkAttendanceCommand(indexes[0], indexes[1]);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"shawnnlimm":29}},{"path":"src/main/java/seedu/address/logic/parser/MarkParticipationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.MarkParticipationCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":" * Parses input arguments and creates a new MarkParticipationCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"public class MarkParticipationCommandParser implements Parser\u003cMarkParticipationCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"     * Parses the given {@code String} of arguments in the context of MarkParticipationCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"     * and returns a MarkParticipationCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"    public MarkParticipationCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"            Index[] indexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"            return new MarkParticipationCommand(indexes[0], indexes[1]);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkParticipationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"shawnnlimm":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.MarkParticipationCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_INVALID_ARGUMENTS_MARKASSIGNMENT \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"        \"Invalid arguments provided for MarkAssignmentCommand.\";","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    public static final String MESSAGE_INVALID_ARGUMENTS_GRADEASSIGNMENT \u003d","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"        \"Invalid arguments provided for Grade Command.\";","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-04-09"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"     * Parses {@code grade} into an {@code Integer} and returns it. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"     * @throws ParseException if the specified grade is invalid (not non-zero unsigned integer).","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"    public static Integer parseGrade(String grade) throws ParseException {","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        String trimmedGrade \u003d grade.trim();","lastModifiedDate":"2024-04-09"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedGrade)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"            throw new ParseException(MESSAGE_INVALID_ARGUMENTS_GRADEASSIGNMENT);","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"        return Integer.parseInt(trimmedGrade);","lastModifiedDate":"2024-04-09"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it as a zerobased index.","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"     * Leading and trailing whitespaces will be trimmed. Used mainly for the markall command.","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"    public static Index parseZeroIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"        return Index.fromZeroBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"     * Parses {@code oneBasedIndexes} into an {@code Index[]} and returns it. Leading and trailing whitespaces will","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"     * be trimmed. Used mainly for the mark command.","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"     * @throws ParseException if any of the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"shawnnlimm"},"content":"    public static Index[] parseIndexes(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"shawnnlimm"},"content":"        String[] indexArray \u003d oneBasedIndexes.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"        Index[] indexes \u003d new Index[2];","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"        if (indexArray.length !\u003d 2) {","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"shawnnlimm"},"content":"                    MarkParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"shawnnlimm"},"content":"        String personIndex \u003d indexArray[0];","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"shawnnlimm"},"content":"        String weekNumber \u003d indexArray[1];","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"shawnnlimm"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(personIndex) | !StringUtil.isNonZeroUnsignedInteger(weekNumber)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"shawnnlimm"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"shawnnlimm"},"content":"        indexes[0] \u003d Index.fromOneBased(Integer.parseInt(personIndex));","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"shawnnlimm"},"content":"        indexes[1] \u003d Index.fromZeroBased(Integer.parseInt(weekNumber));","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"shawnnlimm"},"content":"        return indexes;","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"thewongdylan"},"content":"     * Parses a {@code String matricNumber} into a {@code MatricNumber}.","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"thewongdylan"},"content":"     * @throws ParseException if the given {@code matricNumber} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"thewongdylan"},"content":"    public static MatricNumber parseMatricNumber(String matricNumber) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(matricNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"thewongdylan"},"content":"        String trimmedMatricNumber \u003d matricNumber.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"thewongdylan"},"content":"        if (!MatricNumber.isValidMatricNumber(trimmedMatricNumber)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"thewongdylan"},"content":"            throw new ParseException(MatricNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"thewongdylan"},"content":"        return new MatricNumber(trimmedMatricNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"     * Parses a {@code String telegramHandle} into an {@code TelegramHandle}.","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"thewongdylan"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"thewongdylan"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"thewongdylan"},"content":"        String trimmedTelegramHandle \u003d telegramHandle.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"thewongdylan"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedTelegramHandle)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"thewongdylan"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"thewongdylan"},"content":"        return new TelegramHandle(trimmedTelegramHandle);","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"Ryo-Seah"},"content":"     * Parses a {@code String assignment} into an {@code Assignment}.","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"Ryo-Seah"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"Ryo-Seah"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"Ryo-Seah"},"content":"     * @throws ParseException if the given {@code assignment} is invalid.","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"Ryo-Seah"},"content":"    public static Assignment parseAssignment(String assignment) throws ParseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"Ryo-Seah"},"content":"        String trimmedAssignment \u003d assignment.trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":191,"author":{"gitId":"Ryo-Seah"},"content":"        if (!Assignment.isValidAssignmentName(trimmedAssignment)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":192,"author":{"gitId":"Ryo-Seah"},"content":"            throw new ParseException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"Ryo-Seah"},"content":"        return new Assignment(trimmedAssignment);","lastModifiedDate":"2024-04-01"},{"lineNumber":195,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"shawnnlimm":27,"-":106,"shamesjen":25,"Ryo-Seah":20,"thewongdylan":18}},{"path":"src/main/java/seedu/address/logic/parser/RemoveAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveAssignmentCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":" * Parses input arguments and creates a new RemoveAssignmentCommand object","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveAssignmentCommandParser implements Parser\u003cRemoveAssignmentCommand\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveAssignmentCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"     * and returns a RemoveAssignmentCommand object for execution.","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"    public RemoveAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ASSIGNMENT);","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"                RemoveAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cString\u003e assignments \u003d argMultimap.getAllValues(PREFIX_ASSIGNMENT);","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignmentSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"        for (String assignment : assignments) {","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"            assignmentSet.add(new Assignment(assignment));","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"        return new RemoveAssignmentCommand(assignmentSet);","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"    */","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"Ryo-Seah":50}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveTagCommandParser implements Parser\u003cRemoveTagCommand\u003e {","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveTagCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"     * and returns an RemoveTagCommand object for execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"    public RemoveTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"        return new RemoveTagCommand(index, tagSet);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"Ryo-Seah":49}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTagFromAllCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveTagFromAllCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveTagFromAllCommandParser implements Parser\u003cRemoveTagFromAllCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveTagFromAllCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"     * and returns an RemoveTagFromAllCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"    public RemoveTagFromAllCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"                RemoveTagFromAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"        return new RemoveTagFromAllCommand(tagSet);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Ryo-Seah":47}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkAllAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAllAttendanceCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":" * Parses input arguments and creates a new UnmarkAllAttendanceCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAllAttendanceCommandParser implements Parser\u003cUnmarkAllAttendanceCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"     * Parses the given {@code String} of arguments in the context of UnmarkAllAttendanceCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"     * and returns a UnmarkAllAttendanceCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    public UnmarkAllAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"            Index index \u003d ParserUtil.parseZeroIndex(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"            return new UnmarkAllAttendanceCommand(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkAllAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"thewongdylan":29}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkAllParticipationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAllParticipationCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":" * Parses input arguments and creates a new UnmarkCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAllParticipationCommandParser implements Parser\u003cUnmarkAllParticipationCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"     * Parses the given {@code String} of arguments in the context of UnmarkAllParticipationCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"     * and returns an UnmarkAllParticipationCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    public UnmarkAllParticipationCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"            Index index \u003d ParserUtil.parseZeroIndex(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"            return new UnmarkAllParticipationCommand(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkAllParticipationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"thewongdylan":29}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":" * Parses input arguments and creates a new MarkAttendanceCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAttendanceCommandParser implements Parser\u003cUnmarkAttendanceCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"     * Parses the given {@code String} of arguments in the context of MarkAttendanceCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"     * and returns a MarkAttendanceCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    public UnmarkAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"            Index[] indexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"            return new UnmarkAttendanceCommand(indexes[0], indexes[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"thewongdylan":29}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkParticipationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkParticipationCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":" * Parses input arguments and creates a new MarkParticipationCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkParticipationCommandParser implements Parser\u003cUnmarkParticipationCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"     * Parses the given {@code String} of arguments in the context of MarkParticipationCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"     * and returns a MarkParticipationCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    public UnmarkParticipationCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"            Index[] indexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"            return new UnmarkParticipationCommand(indexes[0], indexes[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkParticipationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"thewongdylan":29}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"    ReadOnlyAddressBook getVersionedAddressBook();","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"    void commitAddressBook(CommandResult commandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"    void undoAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"    void redoAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"    boolean shouldPurgeAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"    void purgeAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"    CommandResult getAddressBookUndoneCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"    CommandResult getAddressBookRedoneCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"thewongdylan":21}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"    private final VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"        this.versionedAddressBook \u003d new VersionedAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"        commitInitialAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"        this.addressBook.resetData(newData);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"thewongdylan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d VersionedAddressBook Methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"thewongdylan"},"content":"    public ReadOnlyAddressBook getVersionedAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"thewongdylan"},"content":"        return versionedAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"thewongdylan"},"content":"    public void commitInitialAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"thewongdylan"},"content":"        versionedAddressBook.commitInitial(addressBook);","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"thewongdylan"},"content":"    public void commitAddressBook(CommandResult commandResult) {","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"thewongdylan"},"content":"        versionedAddressBook.commit(addressBook, commandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"thewongdylan"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"thewongdylan"},"content":"        return versionedAddressBook.canUndo();","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"thewongdylan"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"thewongdylan"},"content":"        AddressBook undoneState \u003d versionedAddressBook.undo();","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"thewongdylan"},"content":"        setAddressBook(undoneState);","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"thewongdylan"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"thewongdylan"},"content":"        return versionedAddressBook.canRedo();","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"thewongdylan"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"thewongdylan"},"content":"        AddressBook redoneState \u003d versionedAddressBook.redo();","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"thewongdylan"},"content":"        setAddressBook(redoneState);","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"thewongdylan"},"content":"    public boolean shouldPurgeAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"thewongdylan"},"content":"        return versionedAddressBook.shouldPurge();","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"thewongdylan"},"content":"    public void purgeAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"thewongdylan"},"content":"        versionedAddressBook.purge();","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult getAddressBookUndoneCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"thewongdylan"},"content":"        return versionedAddressBook.getUndoneCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"thewongdylan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult getAddressBookRedoneCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"thewongdylan"},"content":"        return versionedAddressBook.getRedoneCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":146,"thewongdylan":64}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":" * A VersionedAddressBook to store Address Book states","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"    private ArrayList\u003cAddressBook\u003e addressBookStateList;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"    private int currentStatePointer;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    private HashMap\u003cInteger, CommandResult\u003e commandResultList;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"     * Creates a VersionedAddressBook","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    public VersionedAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"        addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"        commandResultList \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"     * Commits the provided initial Address Book state to the addressBookStateList","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"     * @param initialState the initial state of the Address Book","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public void commitInitial(AddressBook initialState) {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"        addressBookStateList.add(currentStatePointer, new AddressBook(initialState));","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"     * Commits the provided current Address Book state to the addressBookStateList","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"     * @param currState the current state of the Address Book","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    public void commit(AddressBook currState, CommandResult commandResult) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"        addressBookStateList.add(currentStatePointer, new AddressBook(currState));","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"        commandResultList.put(currentStatePointer, commandResult);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"     * Determines if there are previous states to restore","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"     * @return whether there are previous states to restore","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"    public boolean canUndo() {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"        return currentStatePointer !\u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"     * Undoes the previous command that changed data","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"     * @return the previous state of the Address Book","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"    public AddressBook undo() {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"        currentStatePointer--;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"        return new AddressBook(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"     * Determines if there are future states to restore","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"     * @return whether there are future states to restore","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"    public boolean canRedo() {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        return currentStatePointer !\u003d (addressBookStateList.size() - 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"     * Redoes the previously undone command","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"     * @return the state of the Address Book before the previously undone command","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"    public AddressBook redo() {","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"        return new AddressBook(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"     * Determines if there are redundant future states present that should be purged","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"     * @return whether there are redundant future states","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"    public boolean shouldPurge() {","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"        return currentStatePointer !\u003d (addressBookStateList.size() - 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"     * Purges redundant future states","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"    public void purge() {","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"        while (addressBookStateList.size() \u003e (currentStatePointer + 1)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"            addressBookStateList.remove(addressBookStateList.size() - 1);","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"            commandResultList.remove(commandResultList.size() - 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult getUndoneCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"        return commandResultList.get(currentStatePointer + 1);","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"    public CommandResult getRedoneCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"        return commandResultList.get(currentStatePointer);","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"thewongdylan":109}},{"path":"src/main/java/seedu/address/model/person/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":" * Represents an Assignment in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAssignmentName(String)}","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"public class Assignment {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Assignment names should be alphanumeric\";","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"    public final String assignmentName;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"    private final int assignmentScore;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"     * Constructs a {@code Assignment}.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"     * @param assignmentName A valid assignment name.","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"    public Assignment(String assignmentName) {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"        checkArgument(isValidAssignmentName(assignmentName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignmentScore \u003d 0;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"     * Constructs a {@code Assignment}.","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"     * @param assignmentName A valid assignment name.","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"     * @param assignmentScore A valid assignment score.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"    public Assignment(String assignmentName, int assignmentScore) {","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(assignmentName);","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"        checkArgument(isValidAssignmentName(assignmentName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignmentScore \u003d assignmentScore;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns true if a given string is a valid assignment name.","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"    public static boolean isValidAssignmentName(String test) {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"    public int getScore() {","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"        return this.assignmentScore;","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"    public String getName() {","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"        return this.assignmentName;","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"        return assignmentName + \" (\" + assignmentScore + \")\";","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"            return true;","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"            return false;","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"        Assignment that \u003d (Assignment) other;","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"        return assignmentName.equals(that.assignmentName);","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"Ryo-Seah"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"Ryo-Seah"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"Ryo-Seah"},"content":"        return assignmentName.hashCode();","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Ryo-Seah":81}},{"path":"src/main/java/seedu/address/model/person/MatricNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":" * Represents a Person\u0027s matriculation (matric) number in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMatricNumber(String)}","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"public class MatricNumber {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"            \"Matric Numbers should begin and end with capital letters, and comprise 7 digits in between.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z]\\\\d{7}[A-Z]\";","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"     * Constructs a {@code MatricNumber}.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"     * @param matricNumber A valid matric number.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    public MatricNumber(String matricNumber) {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(matricNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"        checkArgument(isValidMatricNumber(matricNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"        value \u003d matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    public static boolean isValidMatricNumber(String test) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"        if (!(other instanceof MatricNumber)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber otherMatricNumber \u003d (MatricNumber) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"        return value.equals(otherMatricNumber.value);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":45,"thewongdylan":15}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"    private static final int NUMBER_OF_WEEKS \u003d 11;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"    private final MatricNumber matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"    private final Set\u003cAssignment\u003e assignments;","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"    private final List\u003cInteger\u003e participationScores;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    private final List\u003cInteger\u003e attendanceScores;","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"    public Person(Name name, MatricNumber matricNumber, Email email, TelegramHandle telegramHandle,","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"            Set\u003cAssignment\u003e assignments, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"        requireAllNonNull(name, matricNumber, email, telegramHandle, tags);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"        this.participationScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        this.attendanceScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_WEEKS; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"            participationScores.add(0);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"            attendanceScores.add(0);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"     * The overloaded Person constructor. Every field must be present and not null.","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"    public Person(Name name, MatricNumber matricNumber, Email email, TelegramHandle telegramHandle,","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"            Set\u003cTag\u003e tags, Set\u003cAssignment\u003e assignments, List\u003cInteger\u003e participationScores,","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"             List\u003cInteger\u003e attendanceScores) {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"        requireAllNonNull(name, matricNumber, email, telegramHandle, tags, participationScores, attendanceScores);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"        this.participationScores \u003d participationScores;","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"        this.attendanceScores \u003d attendanceScores;","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"    public MatricNumber getMatricNumber() {","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"        return matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"        return telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"    public Set\u003cAssignment\u003e getAssignments() {","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"        return assignments;","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Ryo-Seah"},"content":"    public void addAssignment(Assignment assignment) {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Ryo-Seah"},"content":"        assignments.add(assignment);","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Ryo-Seah"},"content":"    public boolean hasAssignment(Assignment assignment) {","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Ryo-Seah"},"content":"        return assignments.contains(assignment);","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns an immutable participation score list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Ryo-Seah"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Ryo-Seah"},"content":"    public List\u003cInteger\u003e getParticipationScores() {","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Ryo-Seah"},"content":"        return Collections.unmodifiableList(participationScores);","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns an immutable attendance score list, which throws (@code UnsupportedOperationException)","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"shawnnlimm"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"shawnnlimm"},"content":"    public List\u003cInteger\u003e getAttendanceScores() {","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"shawnnlimm"},"content":"        return Collections.unmodifiableList(attendanceScores);","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"thewongdylan"},"content":"                \u0026\u0026 matricNumber.equals(otherPerson.matricNumber)","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"thewongdylan"},"content":"                \u0026\u0026 telegramHandle.equals(otherPerson.telegramHandle)","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"thewongdylan"},"content":"        return Objects.hash(name, matricNumber, email, telegramHandle, tags);","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"thewongdylan"},"content":"                .add(\"matricNumber\", matricNumber)","lastModifiedDate":"2024-04-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"thewongdylan"},"content":"                .add(\"telegramHandle\", telegramHandle)","lastModifiedDate":"2024-04-11"},{"lineNumber":174,"author":{"gitId":"Ryo-Seah"},"content":"                .add(\"participationScores\", participationScores)","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"Ryo-Seah"},"content":"                .add(\"assignments\", assignments)","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shawnnlimm":31,"-":104,"thewongdylan":17,"Ryo-Seah":28}},{"path":"src/main/java/seedu/address/model/person/PersonContainsTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"public class PersonContainsTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    public PersonContainsTagPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"        Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        return keywords.stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"                    tags.stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword))","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"                );","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        if (!(other instanceof PersonContainsTagPredicate)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"        PersonContainsTagPredicate otherTagContainsKeywordsPredicate \u003d (PersonContainsTagPredicate) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        return new seedu.address.commons.util.ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"                .add(\"keywords\", keywords)","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shamesjen":50}},{"path":"src/main/java/seedu/address/model/person/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"public class TelegramHandle {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram Handle should be alphanumeric without whitespaces\";","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"     * The first character of the telegram handle must not be a whitespace,","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"     * Constructs an {@code TelegramHandle}.","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"     * @param telegramHandle A valid TelegramHandle.","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    public TelegramHandle(String telegramHandle) {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"        checkArgument(isValidTelegramHandle(telegramHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"        value \u003d telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"        if (!(other instanceof TelegramHandle)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle otherTelegramHandleHandle \u003d (TelegramHandle) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"        return value.equals(otherTelegramHandleHandle.value);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":50,"thewongdylan":15}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"     * Adds an assignment to all persons in the list.","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"     * The assignment must not already exist in the list.","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"    public void addAssignmentToAllPersons(Assignment assignment) {","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"            if (person.hasAssignment(assignment)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"                continue;","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"            person.addAssignment(assignment);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":149,"Ryo-Seah":15}},{"path":"src/main/java/seedu/address/model/person/exceptions/TagDoesNotExistException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":" * Signals that the operation is unable to find the tag on the specified person.","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"public class TagDoesNotExistException extends RuntimeException {","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"    public TagDoesNotExistException(Tag tag) {","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"        super(\"The tag : \" + tag.toString() + \" does not exist in the person\");","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"Ryo-Seah":13}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"            new Person(new Name(\"Alex Yeoh\"), new MatricNumber(\"A1234567Z\"), new Email(\"alexyeoh@u.nus.edu\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"                new TelegramHandle(\"yeohyeoh01\"), getAssignmentSet(\"Assignment1\"),","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"                getTagSet(\"G19Group1\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"            new Person(new Name(\"Bernice Yu\"), new MatricNumber(\"A2020202Y\"), new Email(\"berniceyu@u.nus.edu\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"                new TelegramHandle(\"yub3rn\"), getAssignmentSet(\"Assignment1\"),","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"                getTagSet(\"G19Group1\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new MatricNumber(\"A3344556X\"), new Email(\"charlotte@u.nus.edu\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"                new TelegramHandle(\"charlottsweb99\"), getAssignmentSet(\"Assignment1\"),","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"                getTagSet(\"G19Group1\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"            new Person(new Name(\"David Li\"), new MatricNumber(\"A2342345Y\"), new Email(\"lidavid@u.nus.edu\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"                new TelegramHandle(\"G19Group2\"), getAssignmentSet(\"Assignment1\"),","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new MatricNumber(\"A0000111Z\"), new Email(\"irfan@u.nus.edu\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"                new TelegramHandle(\"iiirfan\"), getAssignmentSet(\"Assignment1\"),","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"                getTagSet(\"G19Group2\")),","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new MatricNumber(\"A7654321Y\"), new Email(\"royb@u.nus.edu\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"                new TelegramHandle(\"ohboyroy\"), getAssignmentSet(\"Assignment1\"),","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"                getTagSet(\"G19Group2\"))","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns a list of assignments containing the list of strings given.","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"    public static Set\u003cAssignment\u003e getAssignmentSet(String... strings) {","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"                .map(Assignment::new)","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":41,"Ryo-Seah":16,"thewongdylan":13}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"class JsonAdaptedAssignment {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"    private final String assignmentName;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"    private final int score;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given {@code assignmentName}.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"    public JsonAdaptedAssignment(@JsonProperty(\"assignmentName\") String assignmentName,","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"        @JsonProperty(\"Score\") int score) {","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"        this.score \u003d score;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"    @JsonProperty(\"assignmentName\")","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"    public String getName() {","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"        return assignmentName;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    @JsonProperty(\"Score\")","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"    public int getScore() {","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"        return score;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"     * Converts this Jackson-friendly adapted assignment object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assignment.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"    public Assignment toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"        if (!Assignment.isValidAssignmentName(assignmentName)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"            throw new IllegalValueException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"        return new Assignment(assignmentName, score);","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Ryo-Seah":48,"thewongdylan":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"    private final String matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    private final String telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    private final List\u003cJsonAdaptedAssignment\u003e assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"    private final List\u003cInteger\u003e participationScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"    private final List\u003cInteger\u003e attendanceScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"matricNumber\") String matricNumber,","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"                             @JsonProperty(\"assignments\") List\u003cJsonAdaptedAssignment\u003e assignments,","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"                             @JsonProperty(\"participationScores\") List\u003cInteger\u003e participationScores,","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"                             @JsonProperty(\"attendanceScores\") List\u003cInteger\u003e attendanceScores) {","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"        if (participationScores !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"            this.participationScores.addAll(participationScores);","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"        if (assignments !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"            this.assignments.addAll(assignments);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"        if (attendanceScores !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"            this.attendanceScores.addAll(attendanceScores);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        matricNumber \u003d source.getMatricNumber().value;","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"        telegramHandle \u003d source.getTelegramHandle().value;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Ryo-Seah"},"content":"        assignments.addAll(source.getAssignments().stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"Ryo-Seah"},"content":"                .map(assignment -\u003e new JsonAdaptedAssignment(assignment.getName(),","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"Ryo-Seah"},"content":"                    assignment.getScore()))","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"Ryo-Seah"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"shawnnlimm"},"content":"        participationScores.addAll(source.getParticipationScores());","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"shawnnlimm"},"content":"        attendanceScores.addAll(source.getAttendanceScores());","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"        final List\u003cAssignment\u003e personAssignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Ryo-Seah"},"content":"        for (JsonAdaptedAssignment assignment : assignments) {","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Ryo-Seah"},"content":"            personAssignments.add(assignment.toModelType());","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"        if (matricNumber \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"thewongdylan"},"content":"                    MatricNumber.class.getSimpleName()));","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"thewongdylan"},"content":"        if (!MatricNumber.isValidMatricNumber(matricNumber)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"thewongdylan"},"content":"            throw new IllegalValueException(MatricNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"thewongdylan"},"content":"        final MatricNumber modelMatricNumber \u003d new MatricNumber(matricNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"thewongdylan"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"thewongdylan"},"content":"                    TelegramHandle.class.getSimpleName()));","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"thewongdylan"},"content":"        if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"thewongdylan"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"thewongdylan"},"content":"        final TelegramHandle modelTelegramHandleHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"shawnnlimm"},"content":"        final List\u003cInteger\u003e modelParticipationScores \u003d new ArrayList\u003c\u003e(participationScores);","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"shawnnlimm"},"content":"        final List\u003cInteger\u003e modelAttendanceScores \u003d new ArrayList\u003c\u003e(attendanceScores);","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"Ryo-Seah"},"content":"        final Set\u003cAssignment\u003e modelAssignments \u003d new HashSet\u003c\u003e(personAssignments);","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"Ryo-Seah"},"content":"        return new Person(modelName, modelMatricNumber, modelEmail, modelTelegramHandleHandle,","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"Ryo-Seah"},"content":"         modelTags, modelAssignments, modelParticipationScores, modelAttendanceScores);","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shawnnlimm":16,"-":87,"Ryo-Seah":20,"thewongdylan":22}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-f11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"shawnnlimm":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"    private Label matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    private Label telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"    private FlowPane assignments;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"    private FlowPane attendance;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"    private FlowPane participation;","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"        matricNumber.setText(person.getMatricNumber().value);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"        telegramHandle.setText(\"@\" + person.getTelegramHandle().value);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"        List\u003cInteger\u003e participationScores \u003d person.getParticipationScores();","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"        List\u003cInteger\u003e attendanceScores \u003d person.getAttendanceScores();","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"        for (int i \u003d 0; i \u003c participationScores.size(); i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"            Label participationLabel \u003d new Label(\"Week \" + (i + 3) + \": \" + participationScores.get(i) + \" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"            Label attendanceLabel \u003d new Label(\"Week \" + (i + 3));","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"            if (participationScores.get(i) \u003d\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"                participationLabel.setStyle(\"-fx-background-color: red\");","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"            } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"                participationLabel.setStyle(\"-fx-background-color: green\");","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"shawnnlimm"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"            if (attendanceScores.get(i) \u003d\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"                attendanceLabel.setStyle(\"-fx-background-color: red\");","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"            } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"shawnnlimm"},"content":"                attendanceLabel.setStyle(\"-fx-background-color: green\");","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"shawnnlimm"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"shawnnlimm"},"content":"            participation.getChildren().add(participationLabel);","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"shawnnlimm"},"content":"            attendance.getChildren().add(attendanceLabel);","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Ryo-Seah"},"content":"        // diplay red if score is zero, green otherwise","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Ryo-Seah"},"content":"        if (person.getAssignments().isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Ryo-Seah"},"content":"            Label label \u003d new Label(\"No assignments\");","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"            label.setStyle(\"-fx-background-color: red\");","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"            assignments.getChildren().add(label);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Ryo-Seah"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Ryo-Seah"},"content":"            // space out assignments","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"Ryo-Seah"},"content":"            person.getAssignments().stream()","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Ryo-Seah"},"content":"                .sorted(Comparator.comparing(assignment -\u003e assignment.assignmentName))","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"                .forEach(assignment -\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Ryo-Seah"},"content":"                    Label label \u003d new Label(assignment.assignmentName + \": \" + assignment.getScore() + \", \");","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"Ryo-Seah"},"content":"                    if (assignment.getScore() \u003d\u003d 0) {","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"Ryo-Seah"},"content":"                        label.setStyle(\"-fx-background-color: orange\");","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Ryo-Seah"},"content":"                    } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Ryo-Seah"},"content":"                        label.setStyle(\"-fx-background-color: green\");","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Ryo-Seah"},"content":"                    }","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"Ryo-Seah"},"content":"                    assignments.getChildren().add(label);","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"Ryo-Seah"},"content":"                });","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"shawnnlimm":26,"-":54,"thewongdylan":4,"Ryo-Seah":23}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":354,"author":{"gitId":"shawnnlimm"},"content":"#participation {","lastModifiedDate":"2024-03-30"},{"lineNumber":355,"author":{"gitId":"shawnnlimm"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-17"},{"lineNumber":356,"author":{"gitId":"shawnnlimm"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-17"},{"lineNumber":357,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":358,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":359,"author":{"gitId":"shawnnlimm"},"content":"#participation .label {","lastModifiedDate":"2024-03-30"},{"lineNumber":360,"author":{"gitId":"shawnnlimm"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-30"},{"lineNumber":361,"author":{"gitId":"shawnnlimm"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-30"},{"lineNumber":362,"author":{"gitId":"shawnnlimm"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-30"},{"lineNumber":363,"author":{"gitId":"shawnnlimm"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-30"},{"lineNumber":364,"author":{"gitId":"shawnnlimm"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-30"},{"lineNumber":365,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":366,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":367,"author":{"gitId":"shawnnlimm"},"content":"#attendance {","lastModifiedDate":"2024-03-30"},{"lineNumber":368,"author":{"gitId":"shawnnlimm"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-30"},{"lineNumber":369,"author":{"gitId":"shawnnlimm"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-30"},{"lineNumber":370,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-30"},{"lineNumber":371,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":372,"author":{"gitId":"shawnnlimm"},"content":"#attendance .label {","lastModifiedDate":"2024-03-30"},{"lineNumber":373,"author":{"gitId":"shawnnlimm"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-17"},{"lineNumber":374,"author":{"gitId":"shawnnlimm"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-17"},{"lineNumber":375,"author":{"gitId":"shawnnlimm"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":376,"author":{"gitId":"shawnnlimm"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":377,"author":{"gitId":"shawnnlimm"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-17"},{"lineNumber":378,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"shawnnlimm":26,"-":352}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"      \u003cLabel fx:id\u003d\"matricNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$matricNumber\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"      \u003cLabel text\u003d\"Attendance Scores\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"      \u003cFlowPane fx:id\u003d\"attendance\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"      \u003cLabel text\u003d\"Participation Scores\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"      \u003cFlowPane fx:id\u003d\"participation\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"      \u003cLabel text\u003d\"Assignments\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"      \u003cFlowPane fx:id\u003d\"assignments\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shawnnlimm":4,"-":34,"thewongdylan":2,"Ryo-Seah":2}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"thewongdylan"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + MATRIC_NUMBER_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"thewongdylan"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":171,"thewongdylan":4}},{"path":"src/test/java/seedu/address/logic/commands/AddAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"public class AddAssignmentCommandTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"    private static final Assignment ASSIGNMENT_STUB1 \u003d new Assignment(\"SomeAssignment\");","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"    private static final Assignment ASSIGNMENT_STUB3 \u003d new Assignment(\"AnotherAssignment444\");","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"    private Model model;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"    public void execute_addAssignment_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"        assignments.add(ASSIGNMENT_STUB1);","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"        Person originalPerson \u003d new PersonBuilder(firstPerson).withAssignments(new HashSet\u003c\u003e(assignments)).build();","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"        model.setPerson(firstPerson, originalPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cAssignment\u003e newAssignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"        newAssignments.add(ASSIGNMENT_STUB1);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"        newAssignments.add(ASSIGNMENT_STUB3);","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withAssignments(new HashSet\u003c\u003e(newAssignments)).build();","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"        AddAssignmentCommand addAssignmentCommand \u003d new AddAssignmentCommand(assignments);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(AddAssignmentCommand.MESSAGE_SUCCESS, assignments);","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"        assertCommandSuccess(addAssignmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"    public void execute_assignmentExists_throwsCommandException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"        assignments.add(ASSIGNMENT_STUB1);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"            Set\u003cAssignment\u003e newAssignments \u003d AddAssignmentCommand.generateAssignmentList(person, assignments);","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"            if (newAssignments.size() \u003e person.getAssignments().size()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"            Person newPerson \u003d new Person(person.getName(), person.getMatricNumber(),","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"                person.getEmail(), person.getTelegramHandle(),","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"                    newAssignments, person.getTags());","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"            model.setPerson(person, newPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"        AddAssignmentCommand addAssignmentCommand \u003d new AddAssignmentCommand(assignments);","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"        assertCommandFailure(addAssignmentCommand, model,","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"            AddAssignmentCommand.MESSAGE_ASSIGNMENT_EXISTS_FAILURE_STRING);","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Ryo-Seah":71}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"thewongdylan"},"content":"        public ReadOnlyAddressBook getVersionedAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"thewongdylan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"thewongdylan"},"content":"        public void commitAddressBook(CommandResult commandResult) {}","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"thewongdylan"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"thewongdylan"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"thewongdylan"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"thewongdylan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"thewongdylan"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"thewongdylan"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"thewongdylan"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"thewongdylan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"thewongdylan"},"content":"        public boolean shouldPurgeAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"thewongdylan"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"thewongdylan"},"content":"        public void purgeAddressBook() {","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"thewongdylan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"thewongdylan"},"content":"        public CommandResult getAddressBookUndoneCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"thewongdylan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"thewongdylan"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"thewongdylan"},"content":"        public CommandResult getAddressBookRedoneCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"thewongdylan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"thewongdylan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":204,"thewongdylan":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    public static final String VALID_MATRIC_NUMBER_AMY \u003d \"A1111111Z\";","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"    public static final String VALID_MATRIC_NUMBER_BOB \u003d \"B2222222Y\";","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"    public static final String VALID_TELEGRAM_HANDLE_AMY \u003d \"amyamy01\";","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    public static final String VALID_TELEGRAM_HANDLE_BOB \u003d \"BigBoyBob\";","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    public static final String VALID_TAG_COLLEAGUE \u003d \"colleague\";","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"    public static final String MATRIC_NUMBER_DESC_AMY \u003d \" \" + PREFIX_MATRIC_NUMBER + VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"    public static final String MATRIC_NUMBER_DESC_BOB \u003d \" \" + PREFIX_MATRIC_NUMBER + VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"    public static final String TELEGRAM_HANDLE_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"    public static final String TELEGRAM_HANDLE_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"    public static final String INVALID_MATRIC_NUMBER_DESC \u003d \" \" + PREFIX_MATRIC_NUMBER","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"            + \"12345678Z\"; // matric number not starting with letter","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"    public static final String INVALID_TELEGRAM_HANDLE_DESC \u003d \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"            + PREFIX_TELEGRAM_HANDLE; // empty string not allowed for telegram handles","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"                .withPhone(VALID_MATRIC_NUMBER_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY)","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"                .withTags(VALID_TAG_FRIEND).withAssignments(\"Test1\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"                .withPhone(VALID_MATRIC_NUMBER_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withAssignments(\"Test1\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"shawnnlimm":4,"-":112,"shamesjen":1,"thewongdylan":14,"Ryo-Seah":2}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withMatricNumber(VALID_MATRIC_NUMBER_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"                .withPhone(VALID_MATRIC_NUMBER_BOB).withTags(VALID_TAG_HUSBAND).withAssignments(\"test1\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"Ryo-Seah"},"content":"        EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"Ryo-Seah"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withAssignments(\"test1\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":180,"thewongdylan":2,"Ryo-Seah":3}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_MATRIC_NUMBER_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", matricNumber\u003d\"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"                + editPersonDescriptor.getMatricNumber().orElse(null) + \", email\u003d\"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", telegramHandle\u003d\"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"                + editPersonDescriptor.getTelegramHandle().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", assignments\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"                + editPersonDescriptor.getAssignments().orElse(null) + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"shawnnlimm":1,"-":62,"thewongdylan":7,"Ryo-Seah":2}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"public class FilterCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"        PersonContainsTagPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"                new PersonContainsTagPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"        PersonContainsTagPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"                new PersonContainsTagPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        FilterCommand filterFirstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"        FilterCommand filterSecondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"        PersonContainsTagPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"        // Adjust according to the actual toString method of FilterCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"        PersonContainsTagPredicate predicate \u003d new PersonContainsTagPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(predicate);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"        String expected \u003d FilterCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"        System.out.println(expected);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"        assertEquals(expected, filterCommand.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"shamesjen"},"content":"     * Parses {@code userInput} into a {@code PersonContainsTagPredicate}.","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"shamesjen"},"content":"    private PersonContainsTagPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"shamesjen"},"content":"        return new PersonContainsTagPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shamesjen":80}},{"path":"src/test/java/seedu/address/logic/commands/GradeAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"public class GradeAssignmentCommandTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"    private static final Assignment ASSIGNMENT_STUB1 \u003d new Assignment(\"SomeAssignment\");","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"    private static final int GRADE_STUB \u003d 100;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"    private Model model;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"    public void execute_gradeAssignment_success() {","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"        assignments.add(ASSIGNMENT_STUB1);","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"        Person originalPerson \u003d new PersonBuilder(firstPerson).withAssignments(new HashSet\u003c\u003e(assignments)).build();","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"        model.setPerson(firstPerson, originalPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withAssignments(new HashSet\u003c\u003e()).build();","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"        GradeAssignmentCommand gradeAssignmentCommand \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"            new GradeAssignmentCommand(INDEX_FIRST_PERSON, ASSIGNMENT_STUB1.assignmentName, GRADE_STUB);","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(GradeAssignmentCommand.MESSAGE_SUCCESS_GRADE,","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"            ASSIGNMENT_STUB1.assignmentName,","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"            GRADE_STUB, editedPerson.getName());","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"        assertCommandSuccess(gradeAssignmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"Ryo-Seah":54}},{"path":"src/test/java/seedu/address/logic/commands/MarkAllAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"public class MarkAllAttendanceCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    private Model model;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"    public void execute_allFilteredPersons_markedSuccessfully() {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        Index weekNumber \u003d Index.fromOneBased(4); // Week 4","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        MarkAllAttendanceCommand markAllAttendanceCommand \u003d new MarkAllAttendanceCommand(weekNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        List\u003cPerson\u003e updatedPersons \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"                .map(person -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"                    List\u003cInteger\u003e newAttendanceScores \u003d IntStream.rangeClosed(1, 13) // Assuming weeks 1-13","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"                            .mapToObj(week -\u003e week \u003d\u003d weekNumber.getOneBased() ? 1 : 0)","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"                    return new PersonBuilder(person)","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"                            .withAttendanceScores(newAttendanceScores)","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"                            .build();","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"                })","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        updatedPersons.forEach(person -\u003e expectedModel.setPerson(person, person));","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MarkAllAttendanceCommand.MESSAGE_MARK_ALL_ATTENDANCE_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"                weekNumber.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"        assertCommandSuccess(markAllAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"    public void execute_invalidWeekNumber_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"        Index invalidWeekNumber \u003d Index.fromZeroBased(14);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"        MarkAllAttendanceCommand markAllAttendanceCommand \u003d new MarkAllAttendanceCommand(invalidWeekNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"        assertCommandFailure(markAllAttendanceCommand, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shamesjen":61,"thewongdylan":2}},{"path":"src/test/java/seedu/address/logic/commands/MarkAllParticipationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"public class MarkAllParticipationCommandTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    private Model model;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"    public void execute_allFilteredPersons_markedSuccessfully() {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        Index weekNumber \u003d Index.fromOneBased(4);","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        MarkAllParticipationCommand markAllParticipationCommand \u003d new MarkAllParticipationCommand(weekNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        List\u003cPerson\u003e updatedPersons \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"                .map(person -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"                    List\u003cInteger\u003e oldParticipationScores \u003d person.getParticipationScores();","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"                    List\u003cInteger\u003e newParticipationScores \u003d IntStream.range(0, oldParticipationScores.size())","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"                            .mapToObj(index -\u003e index \u003d\u003d weekNumber.getZeroBased() - 3","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"                                ? oldParticipationScores.get(index) + 1 : oldParticipationScores.get(index))","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"                    return new PersonBuilder(person)","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"                            .withParticipationScores(newParticipationScores)","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"                            .build();","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"                })","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        updatedPersons.forEach(person -\u003e expectedModel.setPerson(person, person));","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MarkAllParticipationCommand.MESSAGE_MARK_ALL_PARTICIPATION_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"                weekNumber.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"        assertCommandSuccess(markAllParticipationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"    public void execute_invalidWeekNumber_throwsCommandException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"        Index invalidWeekNumber \u003d Index.fromZeroBased(15);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"        MarkAllParticipationCommand markAllParticipationCommand \u003d new MarkAllParticipationCommand(invalidWeekNumber);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"        assertCommandFailure(markAllParticipationCommand, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shamesjen":63,"thewongdylan":2}},{"path":"src/test/java/seedu/address/logic/commands/MarkAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"public class MarkAttendanceCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"    private static final List\u003cInteger\u003e attendanceScoresStub \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    public void execute_validIndexAndWeekNumber_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"        Person personToMark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"        Person markedPerson \u003d new PersonBuilder(personToMark)","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"                .withAttendanceScores(attendanceScoresStub).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MarkAttendanceCommand.MESSAGE_MARK_ATTENDANCE_SUCCESS,","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"                markedPerson.getName(), INDEX_FIRST_WEEK.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), markedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"        assertCommandSuccess(markAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"    public void execute_invalidIndexAndValidWeek_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"        Index outOfBoundIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(outOfBoundIndex, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"        assertCommandFailure(markAttendanceCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"    public void execute_validIndexAndInvalidWeek_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"        Index weekLessThanThree \u003d Index.fromZeroBased(2);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"        MarkAttendanceCommand markAttendanceCommandFirst \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"                new MarkAttendanceCommand(INDEX_FIRST_PERSON, weekLessThanThree);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"        assertCommandFailure(markAttendanceCommandFirst, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"        Index weekGreaterThanThirteen \u003d Index.fromZeroBased(14);","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"        MarkAttendanceCommand markAttendanceCommandSecond \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"                new MarkAttendanceCommand(INDEX_FIRST_PERSON, weekGreaterThanThirteen);","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"        assertCommandFailure(markAttendanceCommandSecond, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"shawnnlimm":66,"thewongdylan":2}},{"path":"src/test/java/seedu/address/logic/commands/MarkParticipationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.MarkParticipationCommand.MESSAGE_MARK_PARTICIPATION_SUCCESS;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"public class MarkParticipationCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    private static final List\u003cInteger\u003e PARTICIPATION_SCORES_STUB_ONE \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"    private static final List\u003cInteger\u003e PARTICIPATION_SCORES_STUB_TWO \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"    public void execute_validIndexAndWeekNumber_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"        Person personToMark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"        Person markedPerson \u003d new PersonBuilder(personToMark)","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"                .withParticipationScores(PARTICIPATION_SCORES_STUB_ONE).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"        MarkParticipationCommand markParticipationCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MARK_PARTICIPATION_SUCCESS, markedPerson.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"                INDEX_FIRST_WEEK.getZeroBased(),","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"                PARTICIPATION_SCORES_STUB_ONE.get(INDEX_FIRST_WEEK.getZeroBased() - 3));","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), markedPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        assertCommandSuccess(markParticipationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"    public void execute_scoreGreaterThanOne_success() throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"        Person personToMark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"        Person markedPersonTwo \u003d new PersonBuilder(personToMark)","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"                .withParticipationScores(PARTICIPATION_SCORES_STUB_TWO).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markParticipationCommandResult \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK).execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"        MarkParticipationCommand markParticipationTwoCommand \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MARK_PARTICIPATION_SUCCESS, markedPersonTwo.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"                INDEX_FIRST_WEEK.getZeroBased(),","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"                PARTICIPATION_SCORES_STUB_TWO.get(INDEX_FIRST_WEEK.getZeroBased() - 3));","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"        ModelManager expectedModelTwo \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"        expectedModelTwo.setPerson(model.getFilteredPersonList().get(0), markedPersonTwo);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"        assertCommandSuccess(markParticipationTwoCommand, model, expectedMessage, expectedModelTwo);","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"    public void execute_invalidIndexAndValidWeek_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"        MarkParticipationCommand markParticipationCommand \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"shawnnlimm"},"content":"                new MarkParticipationCommand(outOfBoundIndex, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"        assertCommandFailure(markParticipationCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"shawnnlimm"},"content":"    public void execute_validIndexAndInvalidWeek_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"shawnnlimm"},"content":"        Index weekLessThanThree \u003d Index.fromZeroBased(2);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"shawnnlimm"},"content":"        MarkParticipationCommand markParticipationCommandFirst \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"shawnnlimm"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, weekLessThanThree);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"shawnnlimm"},"content":"        assertCommandFailure(markParticipationCommandFirst, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"shawnnlimm"},"content":"        Index weekGreaterThanThirteen \u003d Index.fromZeroBased(14);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"shawnnlimm"},"content":"        MarkParticipationCommand markParticipationCommandSecond \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"shawnnlimm"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, weekGreaterThanThirteen);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"shawnnlimm"},"content":"        assertCommandFailure(markParticipationCommandSecond, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"shawnnlimm":82,"thewongdylan":13}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"class RedoCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"    private Model model;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"    void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"    void execute_newAddressBook_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_CANNOT_REDO);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    void execute_noRedoableStates_failure() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_CANNOT_REDO);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    void execute_redoableStatesPresent_success() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"        CommandResult addCommandResult \u003d new AddCommand(validPerson).execute(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"        CommandResult undoCommandResult \u003d new UndoCommand().execute(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d RedoCommand.MESSAGE_SUCCESS + addCommandResult.getFeedbackToUser();","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"thewongdylan":48}},{"path":"src/test/java/seedu/address/logic/commands/RemoveAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveAssignmentCommandTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"    private static final Assignment ASSIGNMENT_STUB1 \u003d new Assignment(\"SomeAssignment\");","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"    private static final Assignment ASSIGNMENT_STUB3 \u003d new Assignment(\"AnotherAssignment444\");","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"    private Model model;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"    public void execute_removeAssignment_success() {","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"        assignments.add(ASSIGNMENT_STUB1);","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"        Person originalPerson \u003d new PersonBuilder(firstPerson).withAssignments(new HashSet\u003c\u003e(assignments)).build();","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"        model.setPerson(firstPerson, originalPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e newAssignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"        newAssignments.add(ASSIGNMENT_STUB1);","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"        newAssignments.add(ASSIGNMENT_STUB3);","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withAssignments(new HashSet\u003c\u003e(newAssignments)).build();","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveAssignmentCommand removeAssignmentCommand \u003d new RemoveAssignmentCommand(assignments);","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(RemoveAssignmentCommand.MESSAGE_SUCCESS, assignments);","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"        assertCommandSuccess(removeAssignmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"Ryo-Seah":49}},{"path":"src/test/java/seedu/address/logic/commands/RemoveTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveTagCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"    private static final String TAG_STUB_1 \u003d \"Sometag1\";","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"    private static final String TAG_STUB_2 \u003d \"Sometag2\";","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"    private static final String TAG_STUB_3 \u003d \"Sometag3\";","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"    public void execute_removeTagFilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"        Person originalPerson \u003d new PersonBuilder(firstPerson).withTags(TAG_STUB_1, TAG_STUB_2, TAG_STUB_3).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"        model.setPerson(firstPerson, originalPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withTags(TAG_STUB_1).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        tags.add(new Tag(TAG_STUB_2));","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"        tags.add(new Tag(TAG_STUB_3));","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagCommand removeTagCommand \u003d new RemoveTagCommand(INDEX_FIRST_PERSON, tags);","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(RemoveTagCommand.MESSAGE_REMOVE_TAG_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"            tags.toString(), originalPerson.getName());","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"        expectedModel.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"        assertCommandSuccess(removeTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"    public void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"        int outOfBoundIndex \u003d model.getFilteredPersonList().size() + 1;","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagCommand removeTagCommand \u003d new RemoveTagCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"            Index.fromOneBased(outOfBoundIndex), new HashSet\u003cTag\u003e());","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"        assertCommandFailure(removeTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"    public void execute_tagDoesNotExist_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"        Person originalPerson \u003d new PersonBuilder(firstPerson).withTags(TAG_STUB_1).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"        model.setPerson(firstPerson, originalPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"        Tag tag2 \u003d new Tag(TAG_STUB_2);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"        tags.add(tag2);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagCommand removeTagCommand \u003d new RemoveTagCommand(INDEX_FIRST_PERSON, tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"        assertCommandFailure(removeTagCommand, model,","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"            RemoveTagCommand.MESSAGE_TAG_DOES_NOT_EXIST + \" \" + tag2.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Ryo-Seah"},"content":"    public void toString_validCommand_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Ryo-Seah"},"content":"        tags.add(new Tag(TAG_STUB_1));","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagCommand removeTagCommand \u003d new RemoveTagCommand(INDEX_FIRST_PERSON, tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Ryo-Seah"},"content":"        System.out.println(removeTagCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Ryo-Seah"},"content":"        assert(removeTagCommand.toString().equals(","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Ryo-Seah"},"content":"        \"seedu.address.logic.commands.RemoveTagCommand{targetIndex\u003dseedu.address.commons.core.index.\"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Ryo-Seah"},"content":"        + \"Index{zeroBasedIndex\u003d0}, tags\u003d[[Sometag1]]}\"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Ryo-Seah"},"content":"        ));","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Ryo-Seah"},"content":"    public void equals_validCommand_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"        tags.add(new Tag(TAG_STUB_1));","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagCommand removeTagCommand \u003d new RemoveTagCommand(INDEX_FIRST_PERSON, tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagCommand removeTagCommand2 \u003d new RemoveTagCommand(INDEX_FIRST_PERSON, tags);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Ryo-Seah"},"content":"        assertTrue(removeTagCommand.equals(removeTagCommand2));","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Ryo-Seah":97}},{"path":"src/test/java/seedu/address/logic/commands/RemoveTagFromAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.List;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveTagFromAllCommandTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"    private static final String TAG_STUB_1 \u003d \"Sometag1\";","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"    private static final String TAG_STUB_2 \u003d \"Sometag2\";","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    private static final String TAG_STUB_3 \u003d \"Sometag3\";","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"    private ArrayList\u003cPair\u003cPerson, List\u003cTag\u003e\u003e\u003e removedTagList \u003d new ArrayList\u003cPair\u003cPerson, List\u003cTag\u003e\u003e\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"    public void execute_removeTagFilteredList_success() {","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"Ryo-Seah"},"content":"        //remove from all persons in the list","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        for (Person person : model.getFilteredPersonList()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"Ryo-Seah"},"content":"            Person originalPerson \u003d new PersonBuilder(person).withTags(TAG_STUB_1, TAG_STUB_2, TAG_STUB_3).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"Ryo-Seah"},"content":"            model.setPerson(person, originalPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"Ryo-Seah"},"content":"            removedTagList.add(new Pair\u003cPerson, List\u003cTag\u003e\u003e(originalPerson,","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"                new ArrayList\u003cTag\u003e(Arrays.asList(new Tag(TAG_STUB_2), new Tag(TAG_STUB_3)))));","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"Ryo-Seah"},"content":"        tags.add(new Tag(TAG_STUB_2));","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"Ryo-Seah"},"content":"        tags.add(new Tag(TAG_STUB_3));","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagFromAllCommand removeTagCommand \u003d new RemoveTagFromAllCommand(tags);","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(RemoveTagFromAllCommand.MESSAGE_REMOVE_TAG_SUCCESS,","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"                RemoveTagFromAllCommand.formatRemovedTags(removedTagList));","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"Ryo-Seah"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"Ryo-Seah"},"content":"        for (Person person : model.getFilteredPersonList()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"Ryo-Seah"},"content":"            Person editedPerson \u003d new PersonBuilder(person).withTags(TAG_STUB_1).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"Ryo-Seah"},"content":"            expectedModel.setPerson(person, editedPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"Ryo-Seah"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"Ryo-Seah"},"content":"        assertCommandSuccess(removeTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"Ryo-Seah":66}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"class UndoCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    void execute_noUndoableStates_failure() {","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"    void excecute_undoableStatesPresent_success() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_SUCCESS + commandResult.getFeedbackToUser();","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"        assertCommandSuccess(new UndoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"thewongdylan":33}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkAllAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAllAttendanceCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    private Model model;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"    public void execute_allFilteredPersons_unmarkedSuccessfully() throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"        Index weekNumber \u003d Index.fromOneBased(4); // Week 4","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markAllAttendanceCommandResult \u003d new MarkAllAttendanceCommand(weekNumber).execute(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAllAttendanceCommand unmarkAllAttendanceCommand \u003d new UnmarkAllAttendanceCommand(weekNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"        List\u003cPerson\u003e updatedPersons \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"                .map(person -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"                    List\u003cInteger\u003e newAttendanceScores \u003d IntStream.rangeClosed(1, 13) // Assuming weeks 1-13","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"                            .mapToObj(week -\u003e week \u003d\u003d weekNumber.getOneBased() ? 0 : 1)","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"                    return new PersonBuilder(person)","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"                            .withAttendanceScores(newAttendanceScores)","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"                            .build();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"                })","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"        updatedPersons.forEach(person -\u003e expectedModel.setPerson(person, person));","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(UnmarkAllAttendanceCommand.MESSAGE_UNMARK_ALL_ATTENDANCE_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"                weekNumber.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        assertCommandSuccess(unmarkAllAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"    public void execute_invalidWeekNumber_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"        Index invalidWeekNumber \u003d Index.fromZeroBased(14);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAllAttendanceCommand unmarkAllAttendanceCommand \u003d new UnmarkAllAttendanceCommand(invalidWeekNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkAllAttendanceCommand, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"    public void execute_attendanceAlreadyZero_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAllAttendanceCommand unmarkAllAttendanceCommand \u003d new UnmarkAllAttendanceCommand(INDEX_FIRST_WEEK);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkAllAttendanceCommand, model,","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"                String.format(UnmarkAttendanceCommand.MESSAGE_ATTENDANCE_ALREADY_ZERO, personToUnmark.getName(),","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"                        INDEX_FIRST_WEEK.getZeroBased()));","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"thewongdylan":77}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkAllParticipationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAllParticipationCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    private Model model;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"    public void execute_allFilteredPersons_unmarkedSuccessfully() throws CommandException {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"        Index weekNumber \u003d Index.fromOneBased(4);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markAllParticipationCommandResult \u003d new MarkAllParticipationCommand(weekNumber).execute(model);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAllParticipationCommand unmarkAllParticipationCommand \u003d new UnmarkAllParticipationCommand(weekNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"        List\u003cPerson\u003e updatedPersons \u003d model.getFilteredPersonList().stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"                .map(person -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"                    List\u003cInteger\u003e oldParticipationScores \u003d person.getParticipationScores();","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"                    List\u003cInteger\u003e newParticipationScores \u003d IntStream.range(0, oldParticipationScores.size())","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"                            .mapToObj(index -\u003e index \u003d\u003d weekNumber.getZeroBased() - 3","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"                                    ? oldParticipationScores.get(index) + 1 : oldParticipationScores.get(index))","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"                    return new PersonBuilder(person)","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"                            .withParticipationScores(newParticipationScores)","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"                            .build();","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"                })","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"        updatedPersons.forEach(person -\u003e expectedModel.setPerson(person, person));","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(UnmarkAllParticipationCommand.MESSAGE_UNMARK_ALL_PARTICIPATION_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"                weekNumber.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"        assertCommandSuccess(unmarkAllParticipationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"    public void execute_invalidWeekNumber_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"        Index invalidWeekNumber \u003d Index.fromZeroBased(15);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAllParticipationCommand unmarkAllParticipationCommand \u003d new UnmarkAllParticipationCommand(","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"                invalidWeekNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkAllParticipationCommand, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"    public void execute_participationAlreadyZero_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAllParticipationCommand unmarkAllParticipationCommand \u003d new UnmarkAllParticipationCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"                INDEX_FIRST_WEEK);","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkAllParticipationCommand, model,","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"                String.format(UnmarkAllParticipationCommand.MESSAGE_PARTICIPATION_ALREADY_ZERO,","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"                        personToUnmark.getName(), INDEX_FIRST_WEEK.getZeroBased()));","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"thewongdylan":80}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAttendanceCommandTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"    private static final List\u003cInteger\u003e attendanceScoresStub \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    public void execute_validIndexAndWeekNumber_success() throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"        Person unmarkedPerson \u003d new PersonBuilder(personToUnmark)","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"                .withAttendanceScores(attendanceScoresStub).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markAttendanceCommandResult \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"                new MarkAttendanceCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK).execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAttendanceCommand unmarkAttendanceCommand \u003d new UnmarkAttendanceCommand(","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"                INDEX_FIRST_PERSON, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(UnmarkAttendanceCommand.MESSAGE_UNMARK_ATTENDANCE_SUCCESS,","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"                unmarkedPerson.getName(), INDEX_FIRST_WEEK.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), unmarkedPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"        assertCommandSuccess(unmarkAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"    public void execute_invalidIndexAndValidWeek_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"        Index outOfBoundIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAttendanceCommand unmarkAttendanceCommand \u003d new UnmarkAttendanceCommand(","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"                outOfBoundIndex, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkAttendanceCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"    public void execute_validIndexAndInvalidWeek_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"        Index weekLessThanThree \u003d Index.fromZeroBased(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAttendanceCommand unmarkAttendanceCommandFirst \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkAttendanceCommand(INDEX_FIRST_PERSON, weekLessThanThree);","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkAttendanceCommandFirst, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"        Index weekGreaterThanThirteen \u003d Index.fromZeroBased(14);","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAttendanceCommand unmarkAttendanceCommandSecond \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkAttendanceCommand(INDEX_FIRST_PERSON, weekGreaterThanThirteen);","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkAttendanceCommandSecond, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"    public void execute_attendanceAlreadyZero_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        UnmarkAttendanceCommand unmarkAttendanceCommand \u003d new UnmarkAttendanceCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"                INDEX_FIRST_PERSON, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkAttendanceCommand, model,","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"                String.format(UnmarkAttendanceCommand.MESSAGE_ATTENDANCE_ALREADY_ZERO,","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"                        personToUnmark.getName(), INDEX_FIRST_WEEK.getZeroBased()));","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"thewongdylan":83}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkParticipationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.UnmarkParticipationCommand.MESSAGE_UNMARK_PARTICIPATION_SUCCESS;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkParticipationCommandTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"    private static final List\u003cInteger\u003e PARTICIPATION_SCORES_STUB_ZERO \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    private static final List\u003cInteger\u003e PARTICIPATION_SCORES_STUB_ONE \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"    private static final List\u003cInteger\u003e PARTICIPATION_SCORES_STUB_TWO \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"    public void execute_validIndexAndWeekNumber_success() throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"        Person unmarkedPerson \u003d new PersonBuilder(personToUnmark)","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"                .withParticipationScores(PARTICIPATION_SCORES_STUB_ZERO).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markParticipationCommandResult \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK).execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"        UnmarkParticipationCommand unmarkParticipationCommand \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UNMARK_PARTICIPATION_SUCCESS, unmarkedPerson.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"                INDEX_FIRST_WEEK.getZeroBased(),","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"                PARTICIPATION_SCORES_STUB_ZERO.get(INDEX_FIRST_WEEK.getZeroBased() - 3));","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), unmarkedPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"        assertCommandSuccess(unmarkParticipationCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"    public void execute_scoreGreaterThanOne_success() throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        Person unmarkedPerson \u003d new PersonBuilder(personToUnmark)","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"                .withParticipationScores(PARTICIPATION_SCORES_STUB_ONE).build();","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markParticipationCommandResult \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"thewongdylan"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK).execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"        CommandResult markParticipationCommandTwoResult \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"thewongdylan"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK).execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"thewongdylan"},"content":"        UnmarkParticipationCommand unmarkParticipationCommand \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UNMARK_PARTICIPATION_SUCCESS, unmarkedPerson.getName(),","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"thewongdylan"},"content":"                INDEX_FIRST_WEEK.getZeroBased(),","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"thewongdylan"},"content":"                PARTICIPATION_SCORES_STUB_ONE.get(INDEX_FIRST_WEEK.getZeroBased() - 3));","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"thewongdylan"},"content":"        ModelManager expectedModelTwo \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"        expectedModelTwo.setPerson(model.getFilteredPersonList().get(0), unmarkedPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"        assertCommandSuccess(unmarkParticipationCommand, model, expectedMessage, expectedModelTwo);","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"    public void execute_invalidIndexAndValidWeek_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"        UnmarkParticipationCommand unmarkParticipationCommand \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkParticipationCommand(outOfBoundIndex, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkParticipationCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"    public void execute_validIndexAndInvalidWeek_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"        Index weekLessThanThree \u003d Index.fromZeroBased(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"        UnmarkParticipationCommand unmarkParticipationCommandFirst \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkParticipationCommand(INDEX_FIRST_PERSON, weekLessThanThree);","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkParticipationCommandFirst, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"        Index weekGreaterThanThirteen \u003d Index.fromZeroBased(14);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"        UnmarkParticipationCommand unmarkParticipationCommandSecond \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkParticipationCommand(INDEX_FIRST_PERSON, weekGreaterThanThirteen);","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkParticipationCommandSecond, model, Messages.MESSAGE_INVALID_WEEK);","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"    public void execute_participationAlreadyZero_failure() {","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"        Person personToUnmark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"thewongdylan"},"content":"        UnmarkParticipationCommand unmarkParticipationCommand \u003d new UnmarkParticipationCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"                INDEX_FIRST_PERSON, INDEX_FIRST_WEEK);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"        assertCommandFailure(unmarkParticipationCommand, model,","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"                String.format(UnmarkParticipationCommand.MESSAGE_PARTICIPATION_ALREADY_ZERO,","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"                        personToUnmark.getName(), INDEX_FIRST_WEEK.getZeroBased()));","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"thewongdylan":109}},{"path":"src/test/java/seedu/address/logic/parser/AddAssignmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"public class AddAssignmentCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"    private AddAssignmentCommandParser parser \u003d new AddAssignmentCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"    public void parse_preambleEmpty_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"        // preamble is empty","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"        assertParseFailure(parser, \"AddAssignment  \", expectedMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Ryo-Seah":22}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MATRIC_NUMBER_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRIC_NUMBER_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"                + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"thewongdylan"},"content":"                NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"thewongdylan"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, MATRIC_NUMBER_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, TELEGRAM_HANDLE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"thewongdylan"},"content":"                validExpectedPersonString + MATRIC_NUMBER_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"                        + TELEGRAM_HANDLE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"                        PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, INVALID_MATRIC_NUMBER_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, INVALID_TELEGRAM_HANDLE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_MATRIC_NUMBER_DESC,","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_TELEGRAM_HANDLE_DESC,","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":138,"author":{"gitId":"thewongdylan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + MATRIC_NUMBER_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"thewongdylan"},"content":"                        + TELEGRAM_HANDLE_DESC_AMY,","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"thewongdylan"},"content":"                        + TELEGRAM_HANDLE_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_MATRIC_NUMBER_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"thewongdylan"},"content":"                        + TELEGRAM_HANDLE_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"thewongdylan"},"content":"                        + TELEGRAM_HANDLE_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"thewongdylan"},"content":"                        + VALID_TELEGRAM_HANDLE_BOB, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_MATRIC_NUMBER_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"thewongdylan"},"content":"                        + VALID_TELEGRAM_HANDLE_BOB, expectedMessage);","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"thewongdylan"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_MATRIC_NUMBER_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"thewongdylan"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, MatricNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"thewongdylan"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"thewongdylan"},"content":"                + INVALID_TELEGRAM_HANDLE_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"thewongdylan"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"thewongdylan"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"thewongdylan"},"content":"                        + INVALID_TELEGRAM_HANDLE_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + MATRIC_NUMBER_DESC_BOB","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"thewongdylan"},"content":"                        + EMAIL_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":139,"thewongdylan":61}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"shamesjen"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"        final String keyword1 \u003d \"friends\";","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"        final String keyword2 \u003d \"colleague\";","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(keyword1, keyword2);","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"                FilterCommand.COMMAND_WORD + \" \" + tagKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"shamesjen"},"content":"        assertEquals(new FilterCommand(new PersonContainsTagPredicate(tagKeywords)), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Ryo-Seah"},"content":"    public void parseCommand_removeTag() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Ryo-Seah"},"content":"        RemoveTagCommand command \u003d (RemoveTagCommand) parser.parseCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Ryo-Seah"},"content":"            PersonUtil.getRemoveTagCommand(INDEX_FIRST_PERSON, \"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Ryo-Seah"},"content":"        tags.add(new Tag(\"friends\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Ryo-Seah"},"content":"        assertEquals(new RemoveTagCommand(INDEX_FIRST_PERSON, tags), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":101,"shamesjen":12,"Ryo-Seah":13}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MATRIC_NUMBER_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRIC_NUMBER_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MATRIC_NUMBER_DESC, MatricNumber.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_HANDLE_DESC,","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"thewongdylan"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MATRIC_NUMBER_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"                MatricNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_TELEGRAM_HANDLE_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"                        + VALID_MATRIC_NUMBER_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"thewongdylan"},"content":"        String userInput \u003d targetIndex.getOneBased() + MATRIC_NUMBER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"thewongdylan"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"shawnnlimm"},"content":"                .withPhone(VALID_MATRIC_NUMBER_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"shawnnlimm"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY)","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"thewongdylan"},"content":"        String userInput \u003d targetIndex.getOneBased() + MATRIC_NUMBER_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"thewongdylan"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_MATRIC_NUMBER_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"thewongdylan"},"content":"        userInput \u003d targetIndex.getOneBased() + MATRIC_NUMBER_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"thewongdylan"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_MATRIC_NUMBER_AMY).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"thewongdylan"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"shawnnlimm"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"thewongdylan"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_MATRIC_NUMBER_DESC + MATRIC_NUMBER_DESC_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"thewongdylan"},"content":"        userInput \u003d targetIndex.getOneBased() + MATRIC_NUMBER_DESC_BOB + INVALID_MATRIC_NUMBER_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"thewongdylan"},"content":"        userInput \u003d targetIndex.getOneBased() + MATRIC_NUMBER_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"thewongdylan"},"content":"                + TAG_DESC_FRIEND + MATRIC_NUMBER_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"thewongdylan"},"content":"                + MATRIC_NUMBER_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"thewongdylan"},"content":"                        PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"thewongdylan"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_MATRIC_NUMBER_DESC + INVALID_TELEGRAM_HANDLE_DESC","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"thewongdylan"},"content":"                + INVALID_EMAIL_DESC + INVALID_MATRIC_NUMBER_DESC + INVALID_TELEGRAM_HANDLE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"thewongdylan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER, PREFIX_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"thewongdylan"},"content":"                        PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"shawnnlimm":3,"-":170,"thewongdylan":40}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_COLLEAGUE;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"import seedu.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"                new FilterCommand(new PersonContainsTagPredicate(Arrays.asList(VALID_TAG_FRIEND, VALID_TAG_COLLEAGUE)));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"        assertParseSuccess(parser, VALID_TAG_FRIEND + \" \" + VALID_TAG_COLLEAGUE, expectedFilterCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        assertParseSuccess(parser, \" \\n \" + VALID_TAG_FRIEND + \" \\n \\t \"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"                + VALID_TAG_COLLEAGUE + \" \\t\", expectedFilterCommand);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"shamesjen":37}},{"path":"src/test/java/seedu/address/logic/parser/GradeAssignmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.GradeAssignmentCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"public class GradeAssignmentCommandParserTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"    private GradeAssignmentCommandParser parser \u003d new GradeAssignmentCommandParser();","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"    public void parse_preambleEmpty_failure() {","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GradeAssignmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"        // preamble is empty","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"        assertParseFailure(parser, \"grade  \", expectedMessage);","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"Ryo-Seah":22}},{"path":"src/test/java/seedu/address/logic/parser/MarkAllAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.MarkAllAttendanceCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"public class MarkAllAttendanceCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"    private MarkAllAttendanceCommandParser parser \u003d new MarkAllAttendanceCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    public void parse_validArgs_returnsMarkAllCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"        assertParseSuccess(parser, \"3\", new MarkAllAttendanceCommand(Index.fromZeroBased(3)));","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"            MarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"            MarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"            MarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        // Test data: More than one argument, separated by space","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"1 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"            MarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        // Test data: Zero as input (assuming week numbers start from 1)","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"            MarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"                MarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shamesjen":41,"thewongdylan":5}},{"path":"src/test/java/seedu/address/logic/parser/MarkAllParticipationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import seedu.address.logic.commands.MarkAllParticipationCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"public class MarkAllParticipationCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"    private MarkAllParticipationCommandParser parser \u003d new MarkAllParticipationCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    public void parse_validArgs_returnsMarkAllParticipationCommand() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"        assertParseSuccess(parser, \"4\",","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"                new MarkAllParticipationCommand(Index.fromZeroBased(4)));","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"            MarkAllParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"            MarkAllParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"            MarkAllParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shamesjen":36}},{"path":"src/test/java/seedu/address/logic/parser/MarkAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"public class MarkAttendanceCommandParserTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    private MarkAttendanceCommandParser parser \u003d new MarkAttendanceCommandParser();","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    public void parse_allIndexes_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \"1 \" + \"3 \",","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"                new MarkAttendanceCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK));","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    public void parse_missingIndexes_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"1 \",","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    public void parse_tooManyIndexes_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"1 \" + \"3 \" + \"12 \",","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"shawnnlimm":35}},{"path":"src/test/java/seedu/address/logic/parser/MarkParticipationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"import seedu.address.logic.commands.MarkParticipationCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"public class MarkParticipationCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    private MarkParticipationCommandParser parser \u003d new MarkParticipationCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    public void parse_allIndexes_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \"1 \" + \"3 \",","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"                new MarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK));","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    public void parse_missingIndexes_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"1 \",","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    public void parse_tooManyIndexes_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"1 \" + \"3 \" + \"12 \",","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shawnnlimm":35}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"    private static final String INVALID_MATRIC_NUMBER \u003d \"+651234\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \" \";","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    private static final String VALID_MATRIC_NUMBER \u003d \"A1234567Z\";","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d \"rachrach23\";","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"    public void parseMatricNumber_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMatricNumber((String) null));","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"    public void parseMatricNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMatricNumber(INVALID_MATRIC_NUMBER));","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"    public void parseMatricNumber_validValueWithoutWhitespace_returnsMatricNumber() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber expectedMatricNumber \u003d new MatricNumber(VALID_MATRIC_NUMBER);","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"thewongdylan"},"content":"        assertEquals(expectedMatricNumber, ParserUtil.parseMatricNumber(VALID_MATRIC_NUMBER));","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"    public void parseTelegramHandle_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegramHandle((String) null));","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"    public void parseTelegramHandle_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegramHandle(INVALID_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"    public void parseTelegramHandle_validValueWithoutWhitespace_returnsTelegramHandle() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle expectedTelegramHandleHandle \u003d new TelegramHandle(VALID_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"thewongdylan"},"content":"        assertEquals(expectedTelegramHandleHandle, ParserUtil.parseTelegramHandle(VALID_TELEGRAM_HANDLE));","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":162,"thewongdylan":20}},{"path":"src/test/java/seedu/address/logic/parser/RemoveAssignmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveAssignmentCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveAssignmentCommandParserTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"    private RemoveAssignmentCommandParser parser \u003d new RemoveAssignmentCommandParser();","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"    public void parse_preambleEmpty_failure() {","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveAssignmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"        // preamble is empty","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"        assertParseFailure(parser, \"AddAssignment  \", expectedMessage);","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"Ryo-Seah":21}},{"path":"src/test/java/seedu/address/logic/parser/RemoveTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveTagCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"    private RemoveTagCommandParser parser \u003d new RemoveTagCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"    public void parse_preambleEmpty_failure() {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"        // preamble is empty","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"        assertParseFailure(parser, \"RemoveTag  \", expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Ryo-Seah":22}},{"path":"src/test/java/seedu/address/logic/parser/RemoveTagFromAllCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveTagFromAllCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"public class RemoveTagFromAllCommandParserTest {","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"    private RemoveTagFromAllCommandParser parser \u003d new RemoveTagFromAllCommandParser();","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"    public void parse_preambleEmpty_failure() {","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTagFromAllCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"        // preamble is empty","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"        assertParseFailure(parser, \"RemoveTag  \", expectedMessage);","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"Ryo-Seah":22}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkAllAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAllAttendanceCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAllAttendanceCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    private UnmarkAllAttendanceCommandParser parser \u003d new UnmarkAllAttendanceCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"    public void parse_validArgs_returnsMarkAllCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"        assertParseSuccess(parser, \"3\", new UnmarkAllAttendanceCommand(Index.fromZeroBased(3)));","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"        // Test data: More than one argument, separated by space","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"1 2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"        // Test data: Zero as input (assuming week numbers start from 1)","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"thewongdylan":46}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkAllParticipationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAllParticipationCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAllParticipationCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    private UnmarkAllParticipationCommandParser parser \u003d new UnmarkAllParticipationCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"    public void parse_validArgs_returnsUnmarkAllParticipationCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"        assertParseSuccess(parser, \"4\",","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkAllParticipationCommand(Index.fromZeroBased(4)));","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"                UnmarkAllParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"thewongdylan":36}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkAttendanceCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkAttendanceCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"    private UnmarkAttendanceCommandParser parser \u003d new UnmarkAttendanceCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"    public void parse_allIndexes_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \"1 \" + \"3 \",","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkAttendanceCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK));","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"    public void parse_missingIndexes_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"1 \",","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public void parse_tooManyIndexes_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"1 \" + \"3 \" + \"12 \",","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"thewongdylan":35}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkParticipationCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_WEEK;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UnmarkParticipationCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"public class UnmarkParticipationCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"    private UnmarkParticipationCommandParser parser \u003d new UnmarkParticipationCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"    public void parse_allIndexes_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \"1 \" + \"3 \",","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"                new UnmarkParticipationCommand(INDEX_FIRST_PERSON, INDEX_FIRST_WEEK));","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"    public void parse_missingIndexes_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"1 \",","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    public void parse_tooManyIndexes_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"1 \" + \"3 \" + \"12 \",","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkParticipationCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"thewongdylan":35}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"thewongdylan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":103,"thewongdylan":5}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"thewongdylan"},"content":"    public void purgeAddressBook_redundantStatesPresent_success() throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"thewongdylan"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"thewongdylan"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"thewongdylan"},"content":"        Person benson \u003d new PersonBuilder().withName(\"Benson\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"thewongdylan"},"content":"        Person charlie \u003d new PersonBuilder().withName(\"Charlie\").build();","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"        CommandResult addAliceResult \u003d new AddCommand(alice).execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"thewongdylan"},"content":"        CommandResult addBensonResult \u003d new AddCommand(benson).execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"thewongdylan"},"content":"        CommandResult undoResult \u003d new UndoCommand().execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"thewongdylan"},"content":"        CommandResult addCharlieResult \u003d new AddCommand(charlie).execute(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"thewongdylan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"thewongdylan"},"content":"        CommandResult addAliceResult2 \u003d new AddCommand(alice).execute(expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"thewongdylan"},"content":"        CommandResult addCharlieResult2 \u003d new AddCommand(charlie).execute(expectedModel);","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"thewongdylan"},"content":"        assertEquals(model.getVersionedAddressBook(), expectedModel.getVersionedAddressBook());","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":132,"thewongdylan":25}},{"path":"src/test/java/seedu/address/model/person/AssignmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ryo-Seah"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"Ryo-Seah"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"Ryo-Seah"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"Ryo-Seah"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"Ryo-Seah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"Ryo-Seah"},"content":"public class AssignmentTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"Ryo-Seah"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"Ryo-Seah"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Assignment(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"Ryo-Seah"},"content":"    public void constructor_invalidAssignment_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"        String invalidAssignment \u003d \"\";","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"Ryo-Seah"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Assignment(invalidAssignment));","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"Ryo-Seah"},"content":"    public void isValidAssignment() {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"Ryo-Seah"},"content":"        // null assignment","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"Ryo-Seah"},"content":"        assertThrows(NullPointerException.class, () -\u003e Assignment.isValidAssignmentName(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"Ryo-Seah"},"content":"        // invalid assignment","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"Ryo-Seah"},"content":"        assertFalse(Assignment.isValidAssignmentName(\"\")); // empty string","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"Ryo-Seah"},"content":"        assertFalse(Assignment.isValidAssignmentName(\" \")); // spaces only","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"Ryo-Seah"},"content":"        assertFalse(Assignment.isValidAssignmentName(\"-\")); // non-alphanumeric characters","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"        // valid assignment","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"Ryo-Seah"},"content":"        assertTrue(Assignment.isValidAssignmentName(\"Assignment1\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"        assertTrue(Assignment.isValidAssignmentName(\"Assignment1Assignment2\")); // long assignment","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"Ryo-Seah":37}},{"path":"src/test/java/seedu/address/model/person/MatricNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"public class MatricNumberTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MatricNumber(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"    public void constructor_invalidMatricNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"        String invalidMatricNumber \u003d \"\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MatricNumber(invalidMatricNumber));","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"    public void isValidMatricNumber() {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"        // null matric number","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(NullPointerException.class, () -\u003e MatricNumber.isValidMatricNumber(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"        // invalid matric numbers","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"\")); // empty string","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\" \")); // spaces only","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"9123456\")); // digits only","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"A123 4567Z\")); // spaces within matric number","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(MatricNumber.isValidMatricNumber(\"a1234567z\")); // non-capital letters","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"        // valid phone numbers","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"        assertTrue(MatricNumber.isValidMatricNumber(\"A1234567Z\")); // exactly 3 numbers","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"        MatricNumber matricNumber \u003d new MatricNumber(\"A1234567Z\");","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"        assertTrue(matricNumber.equals(new MatricNumber(\"A1234567Z\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"        assertTrue(matricNumber.equals(matricNumber));","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(matricNumber.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(matricNumber.equals(5.0f));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(matricNumber.equals(new MatricNumber(\"A1234568Z\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"thewongdylan":58}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withMatricNumber(\"A1234567Z\")","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"thewongdylan"},"content":"                .withEmail(\"alice@email.com\").withTelegramHandle(\"alice01\").build()));","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":83,"thewongdylan":2}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withMatricNumber(VALID_MATRIC_NUMBER_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"                .withEmail(VALID_EMAIL_BOB).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"thewongdylan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMatricNumber(VALID_MATRIC_NUMBER_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"thewongdylan"},"content":"        String expected \u003d Person.class.getCanonicalName()","lastModifiedDate":"2024-04-11"},{"lineNumber":97,"author":{"gitId":"thewongdylan"},"content":"                + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-04-11"},{"lineNumber":98,"author":{"gitId":"thewongdylan"},"content":"                + \", matricNumber\u003d\" + ALICE.getMatricNumber()","lastModifiedDate":"2024-04-11"},{"lineNumber":99,"author":{"gitId":"thewongdylan"},"content":"                + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-04-11"},{"lineNumber":100,"author":{"gitId":"thewongdylan"},"content":"                + \", telegramHandle\u003d\" + ALICE.getTelegramHandle()","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"thewongdylan"},"content":"                + \", participationScores\u003d\" + ALICE.getParticipationScores()","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"thewongdylan"},"content":"                + \", assignments\u003d\" + ALICE.getAssignments()","lastModifiedDate":"2024-04-11"},{"lineNumber":103,"author":{"gitId":"thewongdylan"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":91,"thewongdylan":15}},{"path":"src/test/java/seedu/address/model/person/TelegramHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thewongdylan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"thewongdylan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"thewongdylan"},"content":"public class TelegramHandleTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TelegramHandle(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"thewongdylan"},"content":"    public void constructor_invalidTelegramHandle_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"        String invalidTelegramHandle \u003d \"\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TelegramHandle(invalidTelegramHandle));","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"    public void isValidTelegramHandle() {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"thewongdylan"},"content":"        // null address","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"        assertThrows(NullPointerException.class, () -\u003e TelegramHandle.isValidTelegramHandle(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"thewongdylan"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"\")); // empty string","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\" \")); // spaces only","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"yeoh yeoh01\")); // spaces within telegram handle","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"        // valid addresses","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"a\")); // one character","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"thewongdylan"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"thewongdylan"},"content":"                \"thequickbrownfox123456789jumpsoverthelazydog\")); // long telegram handle","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"thewongdylan"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"    public void equals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"        TelegramHandle telegramHandle \u003d new TelegramHandle(\"validTelegramHandle\");","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"thewongdylan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"        assertTrue(telegramHandle.equals(new TelegramHandle(\"validTelegramHandle\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"        assertTrue(telegramHandle.equals(telegramHandle));","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"thewongdylan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(telegramHandle.equals(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"thewongdylan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(telegramHandle.equals(5.0f));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"thewongdylan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"        assertFalse(telegramHandle.equals(new TelegramHandle(\"otherValidTelegramHandle\")));","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"thewongdylan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"thewongdylan":57}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"thewongdylan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":170,"thewongdylan":5}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"thewongdylan"},"content":"    private static final String INVALID_MATRIC_NUMBER \u003d \"+651234\";","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \" \";","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Ryo-Seah"},"content":"    private static final String INVALID_ASSIGNMENT \u003d \" \";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"thewongdylan"},"content":"    private static final String VALID_PHONE \u003d BENSON.getMatricNumber().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"thewongdylan"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getTelegramHandle().toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"Ryo-Seah"},"content":"    private static final Integer VALID_SCORE \u003d 4;","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Ryo-Seah"},"content":"    private static final List\u003cJsonAdaptedAssignment\u003e VALID_ASSIGNMENTS \u003d BENSON.getAssignments().stream()","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Ryo-Seah"},"content":"            .map(assignment -\u003e new JsonAdaptedAssignment(assignment.getName(), assignment.getScore()))","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"Ryo-Seah"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"    private static final List\u003cInteger\u003e VALID_PARTICIPATION_SCORES \u003d BENSON.getParticipationScores();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"    private static final List\u003cInteger\u003e VALID_ATTENDNACE_SCORES \u003d BENSON.getAttendanceScores();","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Ryo-Seah"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENTS, VALID_PARTICIPATION_SCORES,","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Ryo-Seah"},"content":"                            VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Ryo-Seah"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENTS, VALID_PARTICIPATION_SCORES, VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"thewongdylan"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_MATRIC_NUMBER, VALID_EMAIL,","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENTS, VALID_PARTICIPATION_SCORES,","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"                            VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d MatricNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Ryo-Seah"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENTS, VALID_PARTICIPATION_SCORES, VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MatricNumber.class.getSimpleName());","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"shawnnlimm"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENTS, VALID_PARTICIPATION_SCORES,","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"                            VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"shawnnlimm"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Ryo-Seah"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNMENTS, VALID_PARTICIPATION_SCORES, VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"shawnnlimm"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Ryo-Seah"},"content":"                        INVALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_ASSIGNMENTS,","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"Ryo-Seah"},"content":"                            VALID_PARTICIPATION_SCORES, VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d TelegramHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"shawnnlimm"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Ryo-Seah"},"content":"                null, VALID_TAGS, VALID_ASSIGNMENTS, VALID_PARTICIPATION_SCORES, VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"thewongdylan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TelegramHandle.class.getSimpleName());","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"shawnnlimm"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Ryo-Seah"},"content":"                        VALID_ADDRESS, invalidTags, VALID_ASSIGNMENTS,","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"Ryo-Seah"},"content":"                            VALID_PARTICIPATION_SCORES, VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"Ryo-Seah"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"Ryo-Seah"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"Ryo-Seah"},"content":"    public void toModelType_invalidAssignments_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"Ryo-Seah"},"content":"        List\u003cJsonAdaptedAssignment\u003e invalidAssignments \u003d new ArrayList\u003c\u003e(VALID_ASSIGNMENTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"Ryo-Seah"},"content":"        invalidAssignments.add(new JsonAdaptedAssignment(INVALID_ASSIGNMENT, VALID_SCORE));","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"Ryo-Seah"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"Ryo-Seah"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"Ryo-Seah"},"content":"                        VALID_ADDRESS, VALID_TAGS, invalidAssignments,","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"Ryo-Seah"},"content":"                            VALID_PARTICIPATION_SCORES, VALID_ATTENDNACE_SCORES);","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shawnnlimm":10,"-":91,"thewongdylan":11,"Ryo-Seah":31}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"        descriptor.setMatricNumber(person.getMatricNumber());","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"        descriptor.setTelegramHandle(person.getTelegramHandle());","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"Ryo-Seah"},"content":"        descriptor.setAssignments(person.getAssignments());","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"        descriptor.setMatricNumber(new MatricNumber(phone));","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"    public EditPersonDescriptorBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"        descriptor.setTelegramHandle(new TelegramHandle(telegramHandle));","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Ryo-Seah"},"content":"     * Parses the {@code assignments} into a {@code List\u003cAssignment\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Ryo-Seah"},"content":"     * that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Ryo-Seah"},"content":"    public EditPersonDescriptorBuilder withAssignments(String... assignments) {","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Ryo-Seah"},"content":"        Set\u003cAssignment\u003e assignmentSet \u003d Stream.of(assignments).map(Assignment::new).collect(Collectors.toSet());","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"Ryo-Seah"},"content":"        descriptor.setAssignments(assignmentSet);","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Ryo-Seah"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"shawnnlimm":2,"-":80,"Ryo-Seah":12,"thewongdylan":5}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.model.person.Assignment;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.MatricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"thewongdylan"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"thewongdylan"},"content":"    public static final String DEFAULT_MATRIC_NUMBER \u003d \"A1234567Z\";","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"thewongdylan"},"content":"    public static final String DEFAULT_TELEGRAM_HANDLE \u003d \"yeohyeoh01\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"thewongdylan"},"content":"    private MatricNumber matricNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"thewongdylan"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"    private List\u003cInteger\u003e attendanceScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    private List\u003cInteger\u003e participationScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Ryo-Seah"},"content":"    private Set\u003cAssignment\u003e assignments;","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"thewongdylan"},"content":"        matricNumber \u003d new MatricNumber(DEFAULT_MATRIC_NUMBER);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"thewongdylan"},"content":"        telegramHandle \u003d new TelegramHandle(DEFAULT_TELEGRAM_HANDLE);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"Ryo-Seah"},"content":"        assignments \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"        for (int i \u003d 0; i \u003c 11; i++) {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"            participationScores.add(0);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"            attendanceScores.add(0);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"thewongdylan"},"content":"        matricNumber \u003d personToCopy.getMatricNumber();","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"        telegramHandle \u003d personToCopy.getTelegramHandle();","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"        participationScores \u003d personToCopy.getParticipationScores();","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"        attendanceScores \u003d personToCopy.getAttendanceScores();","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"     * Sets the {@code TelegramHandle} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"thewongdylan"},"content":"    public PersonBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"thewongdylan"},"content":"        this.telegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"thewongdylan"},"content":"     * Sets the {@code MatricNumber} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"thewongdylan"},"content":"    public PersonBuilder withMatricNumber(String matricNumber) {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"thewongdylan"},"content":"        this.matricNumber \u003d new MatricNumber(matricNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"shawnnlimm"},"content":"     * Sets the {@code participationScores} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"shawnnlimm"},"content":"    public PersonBuilder withParticipationScores(List\u003cInteger\u003e participationScores) {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"shawnnlimm"},"content":"        this.participationScores \u003d participationScores;","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"shawnnlimm"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"shawnnlimm"},"content":"     * Sets the {@code attendanceScores} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"shawnnlimm"},"content":"    public PersonBuilder withAttendanceScores(List\u003cInteger\u003e attendanceScores) {","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"shawnnlimm"},"content":"        this.attendanceScores \u003d attendanceScores;","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"shawnnlimm"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"Ryo-Seah"},"content":"     * Sets the {@code assignments} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"Ryo-Seah"},"content":"    public PersonBuilder withAssignments(Set\u003cAssignment\u003e assignments) {","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"Ryo-Seah"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"Ryo-Seah"},"content":"        return this;","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":131,"author":{"gitId":"Ryo-Seah"},"content":"        return new Person(name, matricNumber, email, telegramHandle, assignments, tags);","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"shawnnlimm":27,"-":79,"Ryo-Seah":12,"thewongdylan":16}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"Ryo-Seah"},"content":"import seedu.address.logic.commands.RemoveTagCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"thewongdylan"},"content":"        sb.append(PREFIX_MATRIC_NUMBER + person.getMatricNumber().value + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"        sb.append(PREFIX_TELEGRAM_HANDLE + person.getTelegramHandle().value + \" \");","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"thewongdylan"},"content":"        descriptor.getMatricNumber().ifPresent(phone -\u003e sb.append(PREFIX_MATRIC_NUMBER).append(phone.value)","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"thewongdylan"},"content":"                .append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"        descriptor.getTelegramHandle().ifPresent(address -\u003e sb.append(PREFIX_TELEGRAM_HANDLE).append(address.value)","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"thewongdylan"},"content":"                .append(\" \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"Ryo-Seah"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Ryo-Seah"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Ryo-Seah"},"content":"     * Returns the part of command string for the given {@code index}\u0027s and {@code tag}\u0027s details.","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Ryo-Seah"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Ryo-Seah"},"content":"    public static String getRemoveTagCommand(Index index, String tag) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Ryo-Seah"},"content":"        return RemoveTagCommand.COMMAND_WORD + \" \" + index.getOneBased()","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Ryo-Seah"},"content":"            + \" \" + (String.join(\" \", \"t/\" + tag));","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Ryo-Seah"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":56,"thewongdylan":8,"Ryo-Seah":11}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"    public static final Index INDEX_FIRST_WEEK \u003d Index.fromZeroBased(3);","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"shawnnlimm":1,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"thewongdylan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"    public static final List\u003cInteger\u003e PARTICIPATION_SCORES_DEFAULT \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"    public static final List\u003cInteger\u003e ATTENDANCE_SCORES_DEFAULT \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"thewongdylan"},"content":"            .withTelegramHandle(\"alicep01\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"thewongdylan"},"content":"            .withMatricNumber(\"A1234567Z\")","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"thewongdylan"},"content":"            .withTelegramHandle(\"bm01\")","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"thewongdylan"},"content":"            .withEmail(\"johnd@example.com\").withMatricNumber(\"A9999999Y\")","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"thewongdylan"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withMatricNumber(\"A2222222Y\")","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"            .withEmail(\"heinz@example.com\").withTelegramHandle(\"kurzzz\")","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"thewongdylan"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withMatricNumber(\"A7654321Z\")","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"            .withEmail(\"cornelia@example.com\").withTelegramHandle(\"meiermeier\").withTags(\"friends\")","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"thewongdylan"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withMatricNumber(\"A7778887X\")","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"            .withEmail(\"werner@example.com\").withTelegramHandle(\"ellebelle\")","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"thewongdylan"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withMatricNumber(\"A1231234Z\")","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"            .withEmail(\"lydia@example.com\").withTelegramHandle(\"ShreksWife\")","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"thewongdylan"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withMatricNumber(\"A4455667Y\")","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"            .withEmail(\"anna@example.com\").withTelegramHandle(\"theBestGeorge\")","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"thewongdylan"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withMatricNumber(\"A1357531G\")","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"            .withEmail(\"stefan@example.com\").withTelegramHandle(\"BeeHoon99\")","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"thewongdylan"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withMatricNumber(\"A7788776H\")","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"            .withEmail(\"hans@example.com\").withTelegramHandle(\"IdrisIda\")","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":82,"author":{"gitId":"thewongdylan"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"thewongdylan"},"content":"            .withMatricNumber(VALID_MATRIC_NUMBER_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"shawnnlimm"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"thewongdylan"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"thewongdylan"},"content":"            .withMatricNumber(VALID_MATRIC_NUMBER_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"shawnnlimm"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"shawnnlimm"},"content":"            .withParticipationScores(PARTICIPATION_SCORES_DEFAULT)","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"shawnnlimm"},"content":"            .withAttendanceScores(ATTENDANCE_SCORES_DEFAULT).build();;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"shawnnlimm":46,"-":47,"thewongdylan":19}}]
