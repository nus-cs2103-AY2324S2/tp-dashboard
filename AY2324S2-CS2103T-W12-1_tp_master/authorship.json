[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-W12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-W12-1/tp/actions)","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W12-1/tp/graph/badge.svg?token\u003dSFY0S3364D)](https://codecov.io/gh/AY2324S2-CS2103T-W12-1/tp)","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"## Project Overview","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"* This project aims to develop a desktop application called \u0027ClientCare\u0027 to assist insurance agents in managing their client relationships and follow-ups effectively.","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"* It is written in an object-oriented programming (OOP) fashion, providing a well-structured and scalable codebase.","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"* The project includes comprehensive user and developer documentation to ensure usability and maintainability.","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"* The project is named \u0027ClientCare\u0027 as it is designed to help insurance agents take care of and manage their clients effectively.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"## Additional Information","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"* For detailed documentation and updates, visit the **[ClientCare Product Website](https://ay2324s2-cs2103t-w12-1.github.io/tp/index.html)**.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"## Acknowledgements","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"solomonng2001":12,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"    archiveFileName \u003d \u0027clientcare.jar\u0027","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"run {","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"getsquared":1,"solomonng2001":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"### Chia York Lim","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"\u003cimg src\u003d\"images/yorklim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"[[github](http://github.com/yorklim)]","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"[[portfolio](team/yorklim.md)]","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"* Role: Team lead + Code quality","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"### Ge Shuqing","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"\u003cimg src\u003d\"images/getsquared.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"[[github](http://github.com/getsquared)]","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"[[portfolio](team/shuqing.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"* Role: Integration + Documentation","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"* Role: Project Advisor","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"### Regan Choy","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"\u003cimg src\u003d\"images/reganchoy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"[[github](http://github.com/ReganChoy)]","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"[[portfolio](team/reganchoy.md)]","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"* Role: Deliverables + Deadline + Scheduling","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"* Responsibilities: Model","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"### Solomon Ng","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"\u003cimg src\u003d\"images/solomonng2001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"[[github](http://github.com/solomonng2001)]","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"[[portfolio](team/solomonng.md)]","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"* Role: Testing","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"* Responsibilities: Storage","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"getsquared":13,"ReganChoy":7,"solomonng2001":4,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"# ClientCare","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"* This project was based on the [AddressBook-Level3 (AB3](https://se-education.org/addressbook-level3/) from [SE-EDU](https://se-education.org/).","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"* The `remark` command in this project was implemented with reference to the CS2103T AB3 [Tutorial: Adding a command](https://nus-cs2103-ay2324s2.github.io/tp/tutorials/AddRemark.html).","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"* The user guide approach in breakdown in sections and header styling was inspired by [ArtBuddy](https://ay2223s1-cs2103t-w11-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-W12-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-W12-1/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-W12-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ClientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-W12-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-W12-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-W12-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"yorklim"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-W12-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"yorklim"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"yorklim"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-W12-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"getsquared"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-04-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"ReganChoy"},"content":"### View Client feature","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"getsquared"},"content":"The `view` command allows users to view the details of a client on the GUI using their `INDEX`. Other commands will also affect the client display in the GUI. This includes information not included in the client list cards, such as their last met and policy list.","lastModifiedDate":"2024-04-12"},{"lineNumber":166,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"ReganChoy"},"content":"#### Implementation","lastModifiedDate":"2024-04-10"},{"lineNumber":168,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"getsquared"},"content":"The view client mechanism is facilitated by `DisplayClient` in the model. There are three possible outcomes when a command is executed:","lastModifiedDate":"2024-04-12"},{"lineNumber":170,"author":{"gitId":"getsquared"},"content":"1. When a command adding a client (e.g. `add`) or referring to a client using `INDEX` (e.g. `view`, `met`,`deletepolicy`) is executed, the `DisplayClient` is set to the client that was operated on. ","lastModifiedDate":"2024-04-12"},{"lineNumber":171,"author":{"gitId":"getsquared"},"content":"2. When a command that changes the client list is executed (e.g. `list`, `sort`, `find`), the `DisplayClient` is set to the first client in the new list.","lastModifiedDate":"2024-04-12"},{"lineNumber":172,"author":{"gitId":"getsquared"},"content":"3. When `delete` or `clear` is executed, the `DisplayClient` is set to `null`. ","lastModifiedDate":"2024-04-12"},{"lineNumber":173,"author":{"gitId":"ReganChoy"},"content":"This is done with the `setDisplayClient()` function in the `Model`, that is also implemented in `Logic`.","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"ReganChoy"},"content":"The sequence diagram below shows the execution of `view 1` to view the details of client at index 1.","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"ReganChoy"},"content":"\u003cpuml src\u003d\"diagrams/ViewClientSequenceDiagram.puml\" width\u003d\"900\" /\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"getsquared"},"content":"`MainWindow` handles most of the UI logic in regard to displaying the viewed client on the GUI, including refreshing the `ClientDetailsPanel` and `ClientPolicyTable`. It also sets `DisplayClient` on startup to the first client in the list when there is at least one client, otherwise it sets `DisplayClient` to `null`.","lastModifiedDate":"2024-04-12"},{"lineNumber":179,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":180,"author":{"gitId":"getsquared"},"content":"#### Design Considerations","lastModifiedDate":"2024-04-12"},{"lineNumber":181,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"getsquared"},"content":"**Aspect: Where `DisplayClient` should be stored or handled.**","lastModifiedDate":"2024-04-12"},{"lineNumber":183,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"getsquared"},"content":"* Current: `DisplayClient` is stored and handled in `Model`, with relevant functions in `Logic`.","lastModifiedDate":"2024-04-12"},{"lineNumber":185,"author":{"gitId":"getsquared"},"content":"  * The functions in `Model` and `Logic` are similar to those for `AddressBook` to get and set the `DisplayClient`. ","lastModifiedDate":"2024-04-12"},{"lineNumber":186,"author":{"gitId":"getsquared"},"content":"  * It follows the current design, where the viewable `ObservableList\u003cPerson\u003e` for the GUI is separate from the `AddressBook`.","lastModifiedDate":"2024-04-12"},{"lineNumber":187,"author":{"gitId":"getsquared"},"content":"  * This allows for `DisplayClient` to be used even when there is no command executed. For example, when the application starts up, it displays the first client in the list, despite no command execution.","lastModifiedDate":"2024-04-12"},{"lineNumber":188,"author":{"gitId":"getsquared"},"content":"* Alternative (not taken): `DisplayClient` is handled in `CommandResult`.","lastModifiedDate":"2024-04-12"},{"lineNumber":189,"author":{"gitId":"getsquared"},"content":"  * In this implementation, `DisplayClient` would simply be a `Person` set by `CommandResult`, similar to the current `feedbackToUser` implementation.","lastModifiedDate":"2024-04-12"},{"lineNumber":190,"author":{"gitId":"getsquared"},"content":"  * However, this means `DisplayClient` can only be set after a command, which does not allow us to set `DisplayClient` on application startup.","lastModifiedDate":"2024-04-12"},{"lineNumber":191,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"ReganChoy"},"content":"### Adding notes to client feature","lastModifiedDate":"2024-04-10"},{"lineNumber":193,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":194,"author":{"gitId":"getsquared"},"content":"The `remark` command allows users to add an optional note to a client.","lastModifiedDate":"2024-04-12"},{"lineNumber":195,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":196,"author":{"gitId":"getsquared"},"content":"#### Implementation","lastModifiedDate":"2024-04-12"},{"lineNumber":197,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":198,"author":{"gitId":"getsquared"},"content":"The `remark` command was implemented according to [Tutorial: Adding a command](https://nus-cs2103-ay2324s2.github.io/tp/tutorials/AddRemark.html) from CS2103T and AB3. The mechanism is similar to `edit`, and is facilitated by `RemarkCommand`. It creates and returns a `personToEdit`, where only the `Remark` is updated to the new remark entered by the user. Changes are made using `Model#setPerson(Person, Person)`.","lastModifiedDate":"2024-04-12"},{"lineNumber":199,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":200,"author":{"gitId":"getsquared"},"content":"#### Design Considerations","lastModifiedDate":"2024-04-12"},{"lineNumber":201,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":202,"author":{"gitId":"getsquared"},"content":"**Aspect: Behaviour of `r/` prefix if more than one is used.","lastModifiedDate":"2024-04-12"},{"lineNumber":203,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":204,"author":{"gitId":"getsquared"},"content":"* Current: Only the last one is used to update `Remark`.","lastModifiedDate":"2024-04-12"},{"lineNumber":205,"author":{"gitId":"getsquared"},"content":"  * For example, `remark 1 r/typo r/corrected` will only capture `corrected`.","lastModifiedDate":"2024-04-12"},{"lineNumber":206,"author":{"gitId":"getsquared"},"content":"  * This is to allow users to quickly correct typos by simply typing a new remark rather than move their cursor and backspace to fix the typo.","lastModifiedDate":"2024-04-12"},{"lineNumber":207,"author":{"gitId":"getsquared"},"content":"* Alternative (not taken): Disallow duplicate `r/` prefixes.","lastModifiedDate":"2024-04-12"},{"lineNumber":208,"author":{"gitId":"getsquared"},"content":"  * The example above will give the user a command error instead.","lastModifiedDate":"2024-04-12"},{"lineNumber":209,"author":{"gitId":"getsquared"},"content":"  * This might cause minor convenience to users since they will have to ensure they do not use `r/` in their remarks. It also means fixing typos will be slower, like mentioned above.","lastModifiedDate":"2024-04-12"},{"lineNumber":210,"author":{"gitId":"getsquared"},"content":"* Alternative (not taken): Remove `r/` prefix.","lastModifiedDate":"2024-04-12"},{"lineNumber":211,"author":{"gitId":"getsquared"},"content":"  * With this, the command format will be `remark INDEX REMARK` instead.","lastModifiedDate":"2024-04-12"},{"lineNumber":212,"author":{"gitId":"getsquared"},"content":"  * While this might make it easier to type, it will also make fixing typos slower, like mentioned in the current behaviour.","lastModifiedDate":"2024-04-12"},{"lineNumber":213,"author":{"gitId":"getsquared"},"content":"  * It also means that a separate way of parsing has to be used, instead of `ArgumentMultimap`, deviating from other commands.","lastModifiedDate":"2024-04-12"},{"lineNumber":214,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":215,"author":{"gitId":"ReganChoy"},"content":"### Sorting clients feature","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"ReganChoy"},"content":"### Updating last met feature","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"ReganChoy"},"content":"The last met feature allows users to keep track and update their last interaction with their clients.","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"ReganChoy"},"content":"#### Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"ReganChoy"},"content":"The updating of last met command is facilitated by the `LastMetCommandParser` class which is created by the `AddressBookParser`.","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"ReganChoy"},"content":"The `LastMetCommandParser#parse()` overrides `Parser#parse()` in the `Parser` interface.","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"ReganChoy"},"content":"- `LastMetCommandParser#parse()` - Parses the input arguments by storing the prefixes of it respective values in a `ArgumentMultimap` object.","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"ReganChoy"},"content":"- It will then convert the String input into a Date object before creating a new `LastMetCommand` object with the formatted date.","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"ReganChoy"},"content":"The `LastMetCommand` object is then executed by the `Logic` component.","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"ReganChoy"},"content":"The `LastMetCommand` object then communicates with the `Model` component to update the LastMet to the client. The `Model` component then updates the `Person` object with the new LastMet.","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"ReganChoy"},"content":"- `Model#setPerson(Person, Person)` - Sets the client in the existing client list to the new `Person` object which has been edited by the `LastMetCommand#execute()` which contains the new LastMet.","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"ReganChoy"},"content":"- `Model#setDisplayClient(Person)` - Updates the displayed client in the UI to the client that has been edited with the new LastMet.","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"ReganChoy"},"content":"The method `LastMetCommand#execute()` returns a CommandResult object which contains the success message to be displayed to the user.","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"ReganChoy"},"content":"The following object diagram illustrates the above:","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"ReganChoy"},"content":"\u003cpuml src\u003d\"diagrams/LastMetObjectDiagram.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":240,"author":{"gitId":"ReganChoy"},"content":"The following sequence diagram shows the lastmet operation:","lastModifiedDate":"2024-03-28"},{"lineNumber":241,"author":{"gitId":"ReganChoy"},"content":"\u003cpuml src\u003d\"diagrams/LastMetSequenceDiagram.puml\" width\u003d\"900\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":242,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"ReganChoy"},"content":"### Setting last met overdue duration feature","lastModifiedDate":"2024-04-10"},{"lineNumber":245,"author":{"gitId":"ReganChoy"},"content":"The setting last met overdue duration feature allows users to choose the number of days before clients show up in the Last Met Display.","lastModifiedDate":"2024-04-11"},{"lineNumber":246,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":247,"author":{"gitId":"ReganChoy"},"content":"#### Implementation","lastModifiedDate":"2024-04-11"},{"lineNumber":248,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":249,"author":{"gitId":"ReganChoy"},"content":"The updating of last met command is facilitated by the `SetCommandParser` class which is created by the `AddressBookParser`.","lastModifiedDate":"2024-04-11"},{"lineNumber":250,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":251,"author":{"gitId":"ReganChoy"},"content":"The `SetCommandParser#parse()` overrides `Parser#parse()` in the `Parser` interface.","lastModifiedDate":"2024-04-11"},{"lineNumber":252,"author":{"gitId":"ReganChoy"},"content":"- `SetCommandParser#parse()` - Parses the input arguments by storing the prefixes of it respective values in a `ArgumentMultimap` object.","lastModifiedDate":"2024-04-11"},{"lineNumber":253,"author":{"gitId":"ReganChoy"},"content":"- It will then convert the String input into an Integer object before creating a new `SetCommand` object with the formatted integer.","lastModifiedDate":"2024-04-11"},{"lineNumber":254,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":255,"author":{"gitId":"ReganChoy"},"content":"The `SetCommand` object is then executed by the `Logic` component.","lastModifiedDate":"2024-04-11"},{"lineNumber":256,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":257,"author":{"gitId":"ReganChoy"},"content":"The `SetCommand` object then communicates with the `Model` component to update the static lastMetDuration value in the Last Met class.","lastModifiedDate":"2024-04-11"},{"lineNumber":258,"author":{"gitId":"ReganChoy"},"content":"Upon updating the new lastMetDuration value, the `SetCommand` object then calls the `checkOverdue` function in all the `Person` objects in the addressbook","lastModifiedDate":"2024-04-11"},{"lineNumber":259,"author":{"gitId":"ReganChoy"},"content":"to update the `isOverdue` boolean in all the `Person` objects. The Last Met Display then shows all the updated `Person` objects with `isOverdue` equals to `true`.","lastModifiedDate":"2024-04-11"},{"lineNumber":260,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":261,"author":{"gitId":"ReganChoy"},"content":"The method `SetCommand#execute()` returns a CommandResult object which contains the success message to be displayed to the user.","lastModifiedDate":"2024-04-11"},{"lineNumber":262,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":263,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":264,"author":{"gitId":"ReganChoy"},"content":"### Adding schedule feature","lastModifiedDate":"2024-04-10"},{"lineNumber":265,"author":{"gitId":"ReganChoy"},"content":"The adding schedule feature allows users to make appointments to track all their upcoming appointments with clients.","lastModifiedDate":"2024-04-11"},{"lineNumber":266,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":267,"author":{"gitId":"ReganChoy"},"content":"#### Implementation","lastModifiedDate":"2024-04-11"},{"lineNumber":268,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":269,"author":{"gitId":"ReganChoy"},"content":"The updating of schedule command is facilitated by the `ScheduleCommandParser` class which is created by the `AddressBookParser`.","lastModifiedDate":"2024-04-11"},{"lineNumber":270,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":271,"author":{"gitId":"ReganChoy"},"content":"The `ScheduleCommandParser#parse()` overrides `Parser#parse()` in the `Parser` interface.","lastModifiedDate":"2024-04-11"},{"lineNumber":272,"author":{"gitId":"ReganChoy"},"content":"- `ScheduleCommandParser#parse()` - Parses the input arguments by storing the prefixes of it respective values in a `ArgumentMultimap` object.","lastModifiedDate":"2024-04-11"},{"lineNumber":273,"author":{"gitId":"ReganChoy"},"content":"- It will then convert the String input into a DateTime object before creating a new `ScheduleCommand` object with the formatted dateTime.","lastModifiedDate":"2024-04-11"},{"lineNumber":274,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":275,"author":{"gitId":"ReganChoy"},"content":"The `ScheduleCommand` object is then executed by the `Logic` component.","lastModifiedDate":"2024-04-11"},{"lineNumber":276,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":277,"author":{"gitId":"ReganChoy"},"content":"The `ScheduleCommand` object then communicates with the `Model` component to update the Schedule to the client. The `Model` component then updates the `Person` object with the new Schedule.","lastModifiedDate":"2024-04-11"},{"lineNumber":278,"author":{"gitId":"ReganChoy"},"content":"- `Model#setPerson(Person, Person)` - Sets the client in the existing client list to the new `Person` object which has been edited by the `ScheduleCommand#execute()` which contains the new Schedule.","lastModifiedDate":"2024-04-11"},{"lineNumber":279,"author":{"gitId":"ReganChoy"},"content":"- `Model#setDisplayClient(Person)` - Updates the displayed client in the UI to the client that has been edited with the new Schedule.","lastModifiedDate":"2024-04-11"},{"lineNumber":280,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":281,"author":{"gitId":"ReganChoy"},"content":"The method `ScheduleCommand#execute()` returns a CommandResult object which contains the success message to be displayed to the user.","lastModifiedDate":"2024-04-11"},{"lineNumber":282,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":283,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":284,"author":{"gitId":"ReganChoy"},"content":"### Marking schedule feature","lastModifiedDate":"2024-04-10"},{"lineNumber":285,"author":{"gitId":"ReganChoy"},"content":"The marking schedule feature allows users to close upcoming appointments to track all their upcoming appointments with clients.","lastModifiedDate":"2024-04-11"},{"lineNumber":286,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":287,"author":{"gitId":"ReganChoy"},"content":"#### Implementation","lastModifiedDate":"2024-04-11"},{"lineNumber":288,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":289,"author":{"gitId":"ReganChoy"},"content":"The marking of schedule command is facilitated by the `MarkCommandParser` class which is created by the `AddressBookParser`.","lastModifiedDate":"2024-04-11"},{"lineNumber":290,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":291,"author":{"gitId":"ReganChoy"},"content":"The `MarkCommandParser#parse()` overrides `Parser#parse()` in the `Parser` interface.","lastModifiedDate":"2024-04-11"},{"lineNumber":292,"author":{"gitId":"ReganChoy"},"content":"- `MarkCommandParser#parse()` - Parses the input arguments by storing the prefixes of it respective values in a `ArgumentMultimap` object.","lastModifiedDate":"2024-04-11"},{"lineNumber":293,"author":{"gitId":"ReganChoy"},"content":"- It will then convert the String input into a DateTime object before creating a new `MarkCommand` object with the formatted dateTime.","lastModifiedDate":"2024-04-11"},{"lineNumber":294,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":295,"author":{"gitId":"ReganChoy"},"content":"The `MarkCommand` object is then executed by the `Logic` component.","lastModifiedDate":"2024-04-11"},{"lineNumber":296,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":297,"author":{"gitId":"ReganChoy"},"content":"The `MarkCommand` object then communicates with the `Model` component to update the Schedule to the client. The `Model` component then updates the `Person` object with the new Schedule with `isDone` set to `true`.","lastModifiedDate":"2024-04-11"},{"lineNumber":298,"author":{"gitId":"ReganChoy"},"content":"- `Model#setPerson(Person, Person)` - Sets the client in the existing client list to the new `Person` object which has been edited by the `MarkCommand#execute()` which contains the new Schedule.","lastModifiedDate":"2024-04-11"},{"lineNumber":299,"author":{"gitId":"ReganChoy"},"content":"- `Model#setDisplayClient(Person)` - Updates the displayed client in the UI to the client that has been edited with the new Schedule.","lastModifiedDate":"2024-04-11"},{"lineNumber":300,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":301,"author":{"gitId":"ReganChoy"},"content":"The method `MarkCommand#execute()` returns a CommandResult object which contains the success message to be displayed to the user.","lastModifiedDate":"2024-04-11"},{"lineNumber":302,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":303,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":304,"author":{"gitId":"yorklim"},"content":"### Add policy feature","lastModifiedDate":"2024-03-27"},{"lineNumber":305,"author":{"gitId":"yorklim"},"content":"The add policy feature allows users to add a policy to a client. The policy is stored in the `Policy` class, which contains the policy details such as policy name, policy id. The `Policy` class is then added to the `PolicyList` object stored within the `Person` object in the `Model` component.","lastModifiedDate":"2024-03-27"},{"lineNumber":306,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":307,"author":{"gitId":"yorklim"},"content":"#### Implementation","lastModifiedDate":"2024-03-27"},{"lineNumber":308,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":309,"author":{"gitId":"yorklim"},"content":"The add policy command mechanism is facilitated by the `AddPolicyCommandParser` class which is created by the `AddressBookParser`.","lastModifiedDate":"2024-03-27"},{"lineNumber":310,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":311,"author":{"gitId":"yorklim"},"content":"The `AddPolicyCommandParser` class is responsible for parsing the user input and creating an `AddPolicyCommand` object.","lastModifiedDate":"2024-03-27"},{"lineNumber":312,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":313,"author":{"gitId":"yorklim"},"content":"The `AddPolicyCommandParser#parse()` overrides `Parser#parse()` in the `Parser` interface.","lastModifiedDate":"2024-03-27"},{"lineNumber":314,"author":{"gitId":"yorklim"},"content":"- `AddPolicyCommandParser#parse()` - Parses the input arguments by storing the prefixes of it respective values in a `ArgumentMultimap` object, and creates a new `AddPolicyCommand` object with the parsed policy name and policy ID.","lastModifiedDate":"2024-03-27"},{"lineNumber":315,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":316,"author":{"gitId":"yorklim"},"content":"The `AddPolicyCommand` object is then executed by the `Logic` component.","lastModifiedDate":"2024-03-27"},{"lineNumber":317,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":318,"author":{"gitId":"yorklim"},"content":"The `AddPolicyCommand` object then communicates with the `Model` component to add the policy to the client. The `Model` component then updates the `Person` object with the new policy.","lastModifiedDate":"2024-03-27"},{"lineNumber":319,"author":{"gitId":"yorklim"},"content":"- `Model#setPerson(Person, Person)` - Sets the client in the existing client list to the new `Person` object which has been edited by the `AddPolicyCommand#execute()` which contains the new policy.","lastModifiedDate":"2024-03-27"},{"lineNumber":320,"author":{"gitId":"yorklim"},"content":"- `Model#setDisplayClient(Person)` - Updates the displayed client in the UI to the client that has been edited with the new policy.","lastModifiedDate":"2024-03-27"},{"lineNumber":321,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":322,"author":{"gitId":"yorklim"},"content":"The method `AddPolicyCommand#execute()` returns a CommandResult object which contains the success message to be displayed to the user.","lastModifiedDate":"2024-03-27"},{"lineNumber":323,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":324,"author":{"gitId":"yorklim"},"content":"The following object diagram illustrates the above:","lastModifiedDate":"2024-03-27"},{"lineNumber":325,"author":{"gitId":"yorklim"},"content":"\u003cpuml src\u003d\"diagrams/AddPolicyObjectDiagram.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":326,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":327,"author":{"gitId":"yorklim"},"content":"The following sequence diagram shows the addpolicy operation:","lastModifiedDate":"2024-03-27"},{"lineNumber":328,"author":{"gitId":"yorklim"},"content":"\u003cpuml src\u003d\"diagrams/AddPolicySequenceDiagram.puml\" width\u003d\"900\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":329,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":330,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":331,"author":{"gitId":"ReganChoy"},"content":"### Deleting policy feature","lastModifiedDate":"2024-04-10"},{"lineNumber":332,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":333,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":364,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":386,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":390,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":392,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":396,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":430,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":431,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":432,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"solomonng2001"},"content":"* insurance agents","lastModifiedDate":"2024-03-06"},{"lineNumber":444,"author":{"gitId":"getsquared"},"content":"* has a need to manage a significant number of clients for insurance policies","lastModifiedDate":"2024-03-05"},{"lineNumber":445,"author":{"gitId":"getsquared"},"content":"* has a need to organise schedules with clients and their details in one place","lastModifiedDate":"2024-03-05"},{"lineNumber":446,"author":{"gitId":"getsquared"},"content":"* has a need for reminders to keep in touch with clients","lastModifiedDate":"2024-03-05"},{"lineNumber":447,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"solomonng2001"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-06"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"solomonng2001"},"content":"* conveniently manage client details and schedules faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-06"},{"lineNumber":455,"author":{"gitId":"solomonng2001"},"content":"* Convenient tracking of when agent last checked up on clients (eg. reminders)","lastModifiedDate":"2024-03-06"},{"lineNumber":456,"author":{"gitId":"solomonng2001"},"content":"* Organise client contacts details","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"solomonng2001"},"content":"* Optimization by client’s importance (VIP status etc)","lastModifiedDate":"2024-03-06"},{"lineNumber":458,"author":{"gitId":"solomonng2001"},"content":"* Monitor client’s insurance policies","lastModifiedDate":"2024-03-06"},{"lineNumber":459,"author":{"gitId":"solomonng2001"},"content":"* Scheduler to manage appointment to ensure timely follow-up","lastModifiedDate":"2024-03-06"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"| Priority | As a …​         | I want to …​                                          | So that I can…​                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"solomonng2001"},"content":"|----------|-----------------|-------------------------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2024-03-06"},{"lineNumber":467,"author":{"gitId":"getsquared"},"content":"| `* * *`  | insurance agent | see usage instructions                                | refer to instructions when I forget how to use the App                |","lastModifiedDate":"2024-03-05"},{"lineNumber":468,"author":{"gitId":"getsquared"},"content":"| `* * *`  | insurance agent | add a new client contact details                      | keep track of the clients I have                                      |","lastModifiedDate":"2024-03-05"},{"lineNumber":469,"author":{"gitId":"getsquared"},"content":"| `* * *`  | insurance agent | delete a client                                       | remove clients that are leaving                                       |","lastModifiedDate":"2024-03-05"},{"lineNumber":470,"author":{"gitId":"getsquared"},"content":"| `* * *`  | insurance agent | find a client by name                                 | locate details of client without having to go through the entire list |","lastModifiedDate":"2024-03-05"},{"lineNumber":471,"author":{"gitId":"solomonng2001"},"content":"| `* * *`  | insurance agent | list all clients                                      | see all clients at a glance                                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":472,"author":{"gitId":"solomonng2001"},"content":"| `* * *`  | insurance agent | view client information                               | know and check client details                                         |","lastModifiedDate":"2024-03-06"},{"lineNumber":473,"author":{"gitId":"ReganChoy"},"content":"| `* *`    | insurance agent | check schedules with clients on a date                | keep track of what I have to do in a day                              |","lastModifiedDate":"2024-03-05"},{"lineNumber":474,"author":{"gitId":"getsquared"},"content":"| `* *`    | insurance agent | add the birthday of my clients                        | wish them happy birthday to keep in contact with them                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":475,"author":{"gitId":"getsquared"},"content":"| `* *`    | insurance agent | delete policy details for a client                    | remove expired policies of the client                                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":476,"author":{"gitId":"getsquared"},"content":"| `* *`    | insurance agent | see when I last met a client                          | check in on a client that I have not met for a long time              |","lastModifiedDate":"2024-03-05"},{"lineNumber":477,"author":{"gitId":"getsquared"},"content":"| `* *`    | insurance agent | mark that a schedule is completed                     | know that i fulfilled the appointment scheduled                       |","lastModifiedDate":"2024-03-05"},{"lineNumber":478,"author":{"gitId":"ReganChoy"},"content":"| `* *`    | insurance agent | add policy details of a client                        | keep track of clients and their policies                              |","lastModifiedDate":"2024-03-05"},{"lineNumber":479,"author":{"gitId":"ReganChoy"},"content":"| `* *`    | insurance agent | schedule checkup date and time for clients            | know when to follow-up with them                                      |","lastModifiedDate":"2024-03-19"},{"lineNumber":480,"author":{"gitId":"ReganChoy"},"content":"| `*`      | insurance agent | set the overdue period for last met                   | be reminded of a follow-up at my own pace                             |","lastModifiedDate":"2024-03-19"},{"lineNumber":481,"author":{"gitId":"getsquared"},"content":"| `*`      | insurance agent | sort clients by priority                              | deal with client with higher priority status first                    |","lastModifiedDate":"2024-03-05"},{"lineNumber":482,"author":{"gitId":"ReganChoy"},"content":"| `*`      | insurance agent | track deals that I have closed                        | track my current progress                                             |","lastModifiedDate":"2024-03-05"},{"lineNumber":483,"author":{"gitId":"ReganChoy"},"content":"| `*`      | insurance agent | edit my client\u0027s details                              | update my client\u0027s details                                            |","lastModifiedDate":"2024-03-05"},{"lineNumber":484,"author":{"gitId":"ReganChoy"},"content":"| `*`      | insurance agent | reschedule my appointments                            | change the date and time of appointments with clients                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":485,"author":{"gitId":"ReganChoy"},"content":"| `*`      | insurance agent | filter clients by importance                          | decide on who to prioritise on                                        |","lastModifiedDate":"2024-03-05"},{"lineNumber":486,"author":{"gitId":"ReganChoy"},"content":"| `*`      | insurance agent | get help                                              | use the app when I am lost or confused                                |","lastModifiedDate":"2024-03-05"},{"lineNumber":487,"author":{"gitId":"solomonng2001"},"content":"| `*`      | insurance agent | can sort clients by the expected revenue of the deals | know which clients to prioritise                                      |","lastModifiedDate":"2024-03-06"},{"lineNumber":488,"author":{"gitId":"solomonng2001"},"content":"| `*`      | insurance agent | set the policy payment due dates                      | remind my clients.                                                    |","lastModifiedDate":"2024-03-06"},{"lineNumber":489,"author":{"gitId":"solomonng2001"},"content":"| `*`      | insurance agent | add the maturity date of my client’s policy           | update them and plan for future policies                              |","lastModifiedDate":"2024-03-06"},{"lineNumber":490,"author":{"gitId":"solomonng2001"},"content":"| `*`      | developer       | view list of all bugs reported by users               | conveniently view all reported bugs and fix them                      |","lastModifiedDate":"2024-03-06"},{"lineNumber":491,"author":{"gitId":"solomonng2001"},"content":"| `*`      | colleague       | import someone\u0027s contact list                         | take over his clients                                                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":492,"author":{"gitId":"solomonng2001"},"content":"| `*`      | insurance agent | report issues/bugs                                    | get someone to fix bugs                                               |","lastModifiedDate":"2024-03-06"},{"lineNumber":493,"author":{"gitId":"solomonng2001"},"content":"| `*`      | developer\t      | get a log list of user activity                       | view user activity to bug fix                                         |","lastModifiedDate":"2024-03-06"},{"lineNumber":494,"author":{"gitId":"solomonng2001"},"content":"| `*`      | manager         | view all my subordinates\u0027 clients                     | be aware of their progress and client base                            |","lastModifiedDate":"2024-03-06"},{"lineNumber":495,"author":{"gitId":"solomonng2001"},"content":"| `*`      | insurance agent | get reminders of client birthday                      | send birthday message                                                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"getsquared"},"content":"(For all use cases below, the **System** is the `ClientCare` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-05"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC01 - Add new client**","lastModifiedDate":"2024-04-10"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":505,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-04-10"},{"lineNumber":506,"author":{"gitId":"ReganChoy"},"content":"1.  User requests to add new client.","lastModifiedDate":"2024-04-10"},{"lineNumber":507,"author":{"gitId":"ReganChoy"},"content":"2.  ClientCare adds the new client to the list.","lastModifiedDate":"2024-04-10"},{"lineNumber":508,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows the client\u0027s details and success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":509,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":510,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":511,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-04-10"},{"lineNumber":512,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":513,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":514,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":515,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":516,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":517,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":518,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that the client to be added  already exists in the system.","lastModifiedDate":"2024-04-12"},{"lineNumber":519,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":520,"author":{"gitId":"yorklim"},"content":"    Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":523,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC02 - Delete client**","lastModifiedDate":"2024-04-10"},{"lineNumber":524,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":525,"author":{"gitId":"ReganChoy"},"content":"**MSS**","lastModifiedDate":"2024-04-10"},{"lineNumber":526,"author":{"gitId":"yorklim"},"content":"1.  User requests to \u003cu\u003elist all clients (UC04)\u003c/u\u003e or \u003cu\u003efind client by name (UC06)\u003c/u\u003e.","lastModifiedDate":"2024-04-12"},{"lineNumber":527,"author":{"gitId":"ReganChoy"},"content":"2.  ClientCare shows a list of clients.","lastModifiedDate":"2024-04-10"},{"lineNumber":528,"author":{"gitId":"ReganChoy"},"content":"3.  User requests to delete a specific client in the list by index.","lastModifiedDate":"2024-04-10"},{"lineNumber":529,"author":{"gitId":"ReganChoy"},"content":"4.  ClientCare deletes the client.\u003cbr\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":530,"author":{"gitId":"yorklim"},"content":"5.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":533,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-04-10"},{"lineNumber":534,"author":{"gitId":"yorklim"},"content":"* 2a. User sees that the list is empty.","lastModifiedDate":"2024-04-12"},{"lineNumber":535,"author":{"gitId":"yorklim"},"content":"  * 2a1. User stops as there is no client to delete.","lastModifiedDate":"2024-04-12"},{"lineNumber":536,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":537,"author":{"gitId":"yorklim"},"content":"* 3a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":538,"author":{"gitId":"yorklim"},"content":"  * 3a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":539,"author":{"gitId":"yorklim"},"content":"  * 3a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":540,"author":{"gitId":"yorklim"},"content":"  * 3a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":541,"author":{"gitId":"yorklim"},"content":"    Steps 3a1-3a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":542,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 4.","lastModifiedDate":"2024-04-12"},{"lineNumber":543,"author":{"gitId":"yorklim"},"content":"* 3b. ClientCare detects that the client does not exist.","lastModifiedDate":"2024-04-12"},{"lineNumber":544,"author":{"gitId":"yorklim"},"content":"  * 3b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":545,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":548,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC03 - Edit client**","lastModifiedDate":"2024-04-10"},{"lineNumber":549,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":550,"author":{"gitId":"ReganChoy"},"content":"**MSS**","lastModifiedDate":"2024-04-10"},{"lineNumber":551,"author":{"gitId":"yorklim"},"content":"1.  User requests to \u003cu\u003elist all clients (UC04)\u003c/u\u003e or \u003cu\u003efind client by name (UC06)\u003c/u\u003e.","lastModifiedDate":"2024-04-12"},{"lineNumber":552,"author":{"gitId":"yorklim"},"content":"2.  ClientCare shows a list of clients.","lastModifiedDate":"2024-04-12"},{"lineNumber":553,"author":{"gitId":"yorklim"},"content":"3.  User requests to edit a specific client in the list by index.","lastModifiedDate":"2024-04-12"},{"lineNumber":554,"author":{"gitId":"yorklim"},"content":"4.  ClientCare edits the client.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":555,"author":{"gitId":"yorklim"},"content":"5.  ClientCare shows the client\u0027s details and success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":556,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":557,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":558,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-04-10"},{"lineNumber":559,"author":{"gitId":"yorklim"},"content":"* 2a. User sees that the list is empty.","lastModifiedDate":"2024-04-12"},{"lineNumber":560,"author":{"gitId":"yorklim"},"content":"  * 2a1. User stops as there is no client to edit.","lastModifiedDate":"2024-04-12"},{"lineNumber":561,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":562,"author":{"gitId":"yorklim"},"content":"* 3a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":563,"author":{"gitId":"yorklim"},"content":"  * 3a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":564,"author":{"gitId":"yorklim"},"content":"  * 3a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":565,"author":{"gitId":"yorklim"},"content":"  * 3a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":566,"author":{"gitId":"yorklim"},"content":"    Steps 3a1-3a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":567,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 4.","lastModifiedDate":"2024-04-12"},{"lineNumber":568,"author":{"gitId":"yorklim"},"content":"* 3b. ClientCare detects that the client does not exist.","lastModifiedDate":"2024-04-12"},{"lineNumber":569,"author":{"gitId":"yorklim"},"content":"  * 3b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":570,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":573,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC04 - List all clients**","lastModifiedDate":"2024-04-10"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"getsquared"},"content":"1.  User requests to view all clients.","lastModifiedDate":"2024-03-07"},{"lineNumber":577,"author":{"gitId":"yorklim"},"content":"2.  ClientCare shows a list of all clients.","lastModifiedDate":"2024-04-12"},{"lineNumber":578,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":579,"author":{"gitId":"solomonng2001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"solomonng2001"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":582,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":583,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":584,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":585,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":586,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":587,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":588,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":589,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC05 - View client details and policies**","lastModifiedDate":"2024-04-10"},{"lineNumber":590,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":591,"author":{"gitId":"solomonng2001"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":592,"author":{"gitId":"solomonng2001"},"content":"1.  User requests to view a client\u0027s details and policies.","lastModifiedDate":"2024-03-06"},{"lineNumber":593,"author":{"gitId":"yorklim"},"content":"2.  ClientCare shows that client\u0027s details and policies.","lastModifiedDate":"2024-04-12"},{"lineNumber":594,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":595,"author":{"gitId":"getsquared"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":596,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":597,"author":{"gitId":"getsquared"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":598,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":599,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":600,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":601,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":602,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":603,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":604,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that the client does not exist.","lastModifiedDate":"2024-04-12"},{"lineNumber":605,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":606,"author":{"gitId":"solomonng2001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":608,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":609,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":610,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC06 - Find a client by name**","lastModifiedDate":"2024-04-10"},{"lineNumber":611,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":612,"author":{"gitId":"getsquared"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":613,"author":{"gitId":"getsquared"},"content":"1.  User requests to find a specific client in the list by name.","lastModifiedDate":"2024-03-07"},{"lineNumber":614,"author":{"gitId":"getsquared"},"content":"2.  ClientCare shows list of client that matches the name.\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":615,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows the client details.","lastModifiedDate":"2024-04-12"},{"lineNumber":616,"author":{"gitId":"yorklim"},"content":"4.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":617,"author":{"gitId":"solomonng2001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":618,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":619,"author":{"gitId":"solomonng2001"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":620,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":621,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":622,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":623,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":624,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":625,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":626,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that there is no matching name found.","lastModifiedDate":"2024-04-12"},{"lineNumber":627,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare lets user know that the list is empty.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":628,"author":{"gitId":"solomonng2001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":629,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":630,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC07 - Adding remark to client**","lastModifiedDate":"2024-04-10"},{"lineNumber":631,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":632,"author":{"gitId":"solomonng2001"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":633,"author":{"gitId":"ReganChoy"},"content":"1. PLACEHOLDER","lastModifiedDate":"2024-04-10"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":638,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC08 - Clear all client**","lastModifiedDate":"2024-04-10"},{"lineNumber":639,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":640,"author":{"gitId":"getsquared"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":641,"author":{"gitId":"yorklim"},"content":"1.  User requests to clear all client data.","lastModifiedDate":"2024-04-12"},{"lineNumber":642,"author":{"gitId":"yorklim"},"content":"2.  ClientCare clears all client data.","lastModifiedDate":"2024-04-12"},{"lineNumber":643,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":644,"author":{"gitId":"yorklim"},"content":"    Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":645,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":646,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-04-10"},{"lineNumber":647,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":648,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":649,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":650,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":651,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":652,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":653,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":654,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC09 - Sort clients**","lastModifiedDate":"2024-04-10"},{"lineNumber":655,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":656,"author":{"gitId":"ReganChoy"},"content":"**MSS**","lastModifiedDate":"2024-04-10"},{"lineNumber":657,"author":{"gitId":"ReganChoy"},"content":"1. PLACEHOLDER","lastModifiedDate":"2024-04-10"},{"lineNumber":658,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":659,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-04-10"},{"lineNumber":660,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":661,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":662,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC10 - Update client as met**","lastModifiedDate":"2024-04-10"},{"lineNumber":663,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":664,"author":{"gitId":"ReganChoy"},"content":"**MSS**","lastModifiedDate":"2024-04-10"},{"lineNumber":665,"author":{"gitId":"ReganChoy"},"content":"1.  User marks a client as met.","lastModifiedDate":"2024-04-10"},{"lineNumber":666,"author":{"gitId":"ReganChoy"},"content":"2.  ClientCare updates Last Met date of client.\u003cbr\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":667,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":668,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":669,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":670,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":671,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":672,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":673,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":674,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":675,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":676,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that the given date is of the future.","lastModifiedDate":"2024-04-12"},{"lineNumber":677,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":678,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":679,"author":{"gitId":"yorklim"},"content":"* 1c. ClientCare detects that the client does not exist.","lastModifiedDate":"2024-04-12"},{"lineNumber":680,"author":{"gitId":"yorklim"},"content":"  * 1c1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":681,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":682,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":683,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC11 - Update last met overdue duration**","lastModifiedDate":"2024-04-10"},{"lineNumber":684,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":685,"author":{"gitId":"getsquared"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":686,"author":{"gitId":"ReganChoy"},"content":"1.  User enters the last met overdue duration to the new desired value.","lastModifiedDate":"2024-04-10"},{"lineNumber":687,"author":{"gitId":"ReganChoy"},"content":"2.  ClientCare updates the new last met overdue duration.","lastModifiedDate":"2024-04-11"},{"lineNumber":688,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":689,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":690,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":691,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":692,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":693,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":694,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":695,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":696,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":697,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":698,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that the given input entered is not a non-negative integer.","lastModifiedDate":"2024-04-12"},{"lineNumber":699,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":700,"author":{"gitId":"solomonng2001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":701,"author":{"gitId":"ReganChoy"},"content":"      ","lastModifiedDate":"2024-03-05"},{"lineNumber":702,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC12 - Schedule an appointment with client**","lastModifiedDate":"2024-04-10"},{"lineNumber":703,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":704,"author":{"gitId":"ReganChoy"},"content":"**MSS**","lastModifiedDate":"2024-04-10"},{"lineNumber":705,"author":{"gitId":"ReganChoy"},"content":"1.  User schedules a date and time to meet with a client.","lastModifiedDate":"2024-04-10"},{"lineNumber":706,"author":{"gitId":"yorklim"},"content":"2.  ClientCare adds the appointment to the schedule list.","lastModifiedDate":"2024-04-12"},{"lineNumber":707,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":708,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":709,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":710,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-04-10"},{"lineNumber":711,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":712,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":713,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":714,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":715,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":716,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":717,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that the given Date and time has past.","lastModifiedDate":"2024-04-12"},{"lineNumber":718,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare shows error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":719,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-10"},{"lineNumber":720,"author":{"gitId":"yorklim"},"content":"* 1c. ClientCare detects that the client does not exist.","lastModifiedDate":"2024-04-12"},{"lineNumber":721,"author":{"gitId":"yorklim"},"content":"  * 1c1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":722,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-04-11"},{"lineNumber":723,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":724,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":725,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC13 - Mark appointment**","lastModifiedDate":"2024-04-10"},{"lineNumber":726,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":727,"author":{"gitId":"getsquared"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":728,"author":{"gitId":"getsquared"},"content":"1.  User marks an appointment with client as done.","lastModifiedDate":"2024-03-07"},{"lineNumber":729,"author":{"gitId":"yorklim"},"content":"2.  ClientCare marks the appointment as done and removes it from the schedule list.","lastModifiedDate":"2024-04-12"},{"lineNumber":730,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":731,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":732,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":733,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":734,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":735,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":736,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":737,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":738,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":739,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":740,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that the appointment does not exist or is already marked.","lastModifiedDate":"2024-04-12"},{"lineNumber":741,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":742,"author":{"gitId":"solomonng2001"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":743,"author":{"gitId":"yorklim"},"content":"* 1c. ClientCare detects that the client does not exist.","lastModifiedDate":"2024-04-12"},{"lineNumber":744,"author":{"gitId":"yorklim"},"content":"  * 1c1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":745,"author":{"gitId":"ReganChoy"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":746,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":747,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC14 - Add policies to client**","lastModifiedDate":"2024-04-10"},{"lineNumber":748,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":749,"author":{"gitId":"ReganChoy"},"content":"**MSS**","lastModifiedDate":"2024-04-10"},{"lineNumber":750,"author":{"gitId":"yorklim"},"content":"1.  User requests to add a policy to a client.","lastModifiedDate":"2024-04-12"},{"lineNumber":751,"author":{"gitId":"yorklim"},"content":"2.  ClientCare adds the policy to the client.","lastModifiedDate":"2024-04-12"},{"lineNumber":752,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":753,"author":{"gitId":"yorklim"},"content":"    Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":754,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":755,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-04-10"},{"lineNumber":756,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":757,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":758,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":759,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":760,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":761,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":762,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that the client already has a policy with the given policy id.","lastModifiedDate":"2024-04-12"},{"lineNumber":763,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":764,"author":{"gitId":"yorklim"},"content":"    Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":765,"author":{"gitId":"yorklim"},"content":"* 1c. ClientCare detects that the client does not exist.","lastModifiedDate":"2024-04-12"},{"lineNumber":766,"author":{"gitId":"yorklim"},"content":"  * 1c1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":767,"author":{"gitId":"yorklim"},"content":"    Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":768,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":769,"author":{"gitId":"ReganChoy"},"content":"**Use case: UC15 - Delete policies from client**","lastModifiedDate":"2024-04-10"},{"lineNumber":770,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":771,"author":{"gitId":"ReganChoy"},"content":"**MSS**","lastModifiedDate":"2024-04-10"},{"lineNumber":772,"author":{"gitId":"yorklim"},"content":"1.  User requests to delete a policy from a client.","lastModifiedDate":"2024-04-12"},{"lineNumber":773,"author":{"gitId":"yorklim"},"content":"2.  ClientCare deletes the policy from the client.","lastModifiedDate":"2024-04-12"},{"lineNumber":774,"author":{"gitId":"yorklim"},"content":"3.  ClientCare shows a success message to the user.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":775,"author":{"gitId":"yorklim"},"content":"    Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":776,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":777,"author":{"gitId":"ReganChoy"},"content":"**Extensions**","lastModifiedDate":"2024-04-10"},{"lineNumber":778,"author":{"gitId":"yorklim"},"content":"* 1a. ClientCare detects that the given command is invalid.","lastModifiedDate":"2024-04-12"},{"lineNumber":779,"author":{"gitId":"yorklim"},"content":"  * 1a1. ClientCare shows an error message.","lastModifiedDate":"2024-04-12"},{"lineNumber":780,"author":{"gitId":"yorklim"},"content":"  * 1a2. ClientCare requests for the correct input.","lastModifiedDate":"2024-04-12"},{"lineNumber":781,"author":{"gitId":"yorklim"},"content":"  * 1a3. User enters new data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":782,"author":{"gitId":"yorklim"},"content":"    Steps 1a1-1a3 are repeated until the data entered are correct.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":783,"author":{"gitId":"yorklim"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2024-04-12"},{"lineNumber":784,"author":{"gitId":"yorklim"},"content":"* 1b. ClientCare detects that the client does not have a policy with the given policy id.","lastModifiedDate":"2024-04-12"},{"lineNumber":785,"author":{"gitId":"yorklim"},"content":"  * 1b1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":786,"author":{"gitId":"yorklim"},"content":"    Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":787,"author":{"gitId":"yorklim"},"content":"* 1c. ClientCare detects that the client does not exist.","lastModifiedDate":"2024-04-12"},{"lineNumber":788,"author":{"gitId":"yorklim"},"content":"  * 1c1. ClientCare shows an error message.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":789,"author":{"gitId":"yorklim"},"content":"    Use case ends.","lastModifiedDate":"2024-04-12"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":791,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"getsquared"},"content":"4.  The system should respond to user input within 2 seconds.","lastModifiedDate":"2024-03-05"},{"lineNumber":797,"author":{"gitId":"solomonng2001"},"content":"5.  The user interface should be intuitive and easy to use, even for users with limited technical knowledge. This includes providing clear and concise instructions, organizing information logically, and offering helpful error messages and tooltips.","lastModifiedDate":"2024-03-06"},{"lineNumber":798,"author":{"gitId":"solomonng2001"},"content":"6.  The codebase should be well-structured, modular, and documented to facilitate future maintenance and enhancements. This includes adhering to coding standards, using version control, and providing comprehensive developer documentation.","lastModifiedDate":"2024-03-06"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"getsquared"},"content":"* **Client**: Customers or potential customers the insurance agent wants to keep in contact with","lastModifiedDate":"2024-03-05"},{"lineNumber":805,"author":{"gitId":"getsquared"},"content":"* **Command Line Interface (CLI)**: A text-based interface to input commands to interact with the system","lastModifiedDate":"2024-03-05"},{"lineNumber":806,"author":{"gitId":"solomonng2001"},"content":"* **Graphical User Interface (GUI)**: A visual interface to interact with the system","lastModifiedDate":"2024-03-06"},{"lineNumber":807,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":808,"author":{"gitId":"solomonng2001"},"content":"* **AddressBook**: The underlying system that ClientCare is built on. Interchangeable with ClientCare","lastModifiedDate":"2024-03-06"},{"lineNumber":809,"author":{"gitId":"solomonng2001"},"content":"* **Client Priority**: The level of importance or significance assigned to a client, which may influence the order of interactions or services provided","lastModifiedDate":"2024-03-06"},{"lineNumber":810,"author":{"gitId":"solomonng2001"},"content":"* **Policy**: An agreement or contract between an insurance company and a client, specifying the terms and conditions of insurance coverage","lastModifiedDate":"2024-03-06"},{"lineNumber":811,"author":{"gitId":"solomonng2001"},"content":"* **Scheduler**: A feature of the ClientCare application that allows users to manage and organize appointments and follow-ups with clients","lastModifiedDate":"2024-03-06"},{"lineNumber":812,"author":{"gitId":"solomonng2001"},"content":"* **Reminder**: A notification or alert generated by the ClientCare application to remind users of upcoming appointments or follow-ups with clients","lastModifiedDate":"2024-03-06"},{"lineNumber":813,"author":{"gitId":"solomonng2001"},"content":"* **Last Met**: The date on which the user last interacted with a client, used for tracking and monitoring client interactions","lastModifiedDate":"2024-03-06"},{"lineNumber":814,"author":{"gitId":"solomonng2001"},"content":"* **Refresh**: A command or action that updates the information displayed in the ClientCare application to reflect the most recent data","lastModifiedDate":"2024-03-06"},{"lineNumber":815,"author":{"gitId":"solomonng2001"},"content":"* **Help**: A feature of the ClientCare application that provides assistance, guidance, or instructions to users on how to use the application","lastModifiedDate":"2024-03-06"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually. ","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"ReganChoy"},"content":"The full guide on the expected outcome and format of the commands can be found in our user guide.","lastModifiedDate":"2024-04-13"},{"lineNumber":823,"author":{"gitId":"ReganChoy"},"content":"This appendix will serve to inform users on the assumptions along with a correct and invalid test case.","lastModifiedDate":"2024-04-13"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":827,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":828,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"getsquared"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-04-12"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"getsquared"},"content":"2. Saving window preferences","lastModifiedDate":"2024-04-12"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"getsquared"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":845,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"getsquared"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2024-04-12"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"ReganChoy"},"content":"### Adding a client","lastModifiedDate":"2024-04-13"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"ReganChoy"},"content":"### Deleting a client","lastModifiedDate":"2024-04-13"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":853,"author":{"gitId":"ReganChoy"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2024-04-13"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"getsquared"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":858,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"getsquared"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":861,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"getsquared"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":864,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"getsquared"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2024-04-12"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"ReganChoy"},"content":"### Editing a client","lastModifiedDate":"2024-04-13"},{"lineNumber":869,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":870,"author":{"gitId":"ReganChoy"},"content":"### Listing client","lastModifiedDate":"2024-04-13"},{"lineNumber":871,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":872,"author":{"gitId":"ReganChoy"},"content":"### Viewing a client","lastModifiedDate":"2024-04-13"},{"lineNumber":873,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":874,"author":{"gitId":"ReganChoy"},"content":"### Finding a client","lastModifiedDate":"2024-04-13"},{"lineNumber":875,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":876,"author":{"gitId":"ReganChoy"},"content":"### Adding notes to a client","lastModifiedDate":"2024-04-13"},{"lineNumber":877,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":878,"author":{"gitId":"ReganChoy"},"content":"### Clearing the client list","lastModifiedDate":"2024-04-13"},{"lineNumber":879,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":880,"author":{"gitId":"ReganChoy"},"content":"### Sorting clients","lastModifiedDate":"2024-04-13"},{"lineNumber":881,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":882,"author":{"gitId":"ReganChoy"},"content":"### Updating last met","lastModifiedDate":"2024-04-13"},{"lineNumber":883,"author":{"gitId":"ReganChoy"},"content":"Command Format: `met index d/YYYY-MM-DD`","lastModifiedDate":"2024-04-13"},{"lineNumber":884,"author":{"gitId":"ReganChoy"},"content":"Assumptions: Today is 13 April 2024, date chosen must not be in the future.","lastModifiedDate":"2024-04-13"},{"lineNumber":885,"author":{"gitId":"ReganChoy"},"content":"Desired Outcome: Updating the last met date of the 3rd client to 11 April 2024.  ","lastModifiedDate":"2024-04-13"},{"lineNumber":886,"author":{"gitId":"ReganChoy"},"content":"1. Correct Test Case: `met 3 d/2024-04-11`","lastModifiedDate":"2024-04-13"},{"lineNumber":887,"author":{"gitId":"ReganChoy"},"content":"2. Invalid Test Case: `met 3 d/11-04-2024` wrong date format","lastModifiedDate":"2024-04-13"},{"lineNumber":888,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":889,"author":{"gitId":"ReganChoy"},"content":"### Scheduling an appointment","lastModifiedDate":"2024-04-13"},{"lineNumber":890,"author":{"gitId":"ReganChoy"},"content":"Command Format: `schedule index d/YYYY-MM-DD HH:mm`","lastModifiedDate":"2024-04-13"},{"lineNumber":891,"author":{"gitId":"ReganChoy"},"content":"Assumptions: Today is 13 April 2024, date chosen must not be in the past.","lastModifiedDate":"2024-04-13"},{"lineNumber":892,"author":{"gitId":"ReganChoy"},"content":"Desired Outcome: Creating an appointment with the 3rd client on 18 April 2024 2pm.","lastModifiedDate":"2024-04-13"},{"lineNumber":893,"author":{"gitId":"ReganChoy"},"content":"1. Correct Test Case: `schedule 3 d/2024-04-18 14:00`","lastModifiedDate":"2024-04-13"},{"lineNumber":894,"author":{"gitId":"ReganChoy"},"content":"2. Invalid Test Case: `schedule 3 d/18-04-2024 14:00` wrong dateTime format","lastModifiedDate":"2024-04-13"},{"lineNumber":895,"author":{"gitId":"ReganChoy"},"content":"3. Invalid Test Case: `schedule 3 d/2024-04-18` missing time","lastModifiedDate":"2024-04-13"},{"lineNumber":896,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":897,"author":{"gitId":"ReganChoy"},"content":"### Marking an appointment as complete","lastModifiedDate":"2024-04-13"},{"lineNumber":898,"author":{"gitId":"ReganChoy"},"content":"Command Format: `mark index`","lastModifiedDate":"2024-04-13"},{"lineNumber":899,"author":{"gitId":"ReganChoy"},"content":"Assumptions: An open appointment is present with an existing client.","lastModifiedDate":"2024-04-13"},{"lineNumber":900,"author":{"gitId":"ReganChoy"},"content":"Desired Outcome: Marking an appointment with the 3rd client.","lastModifiedDate":"2024-04-13"},{"lineNumber":901,"author":{"gitId":"ReganChoy"},"content":"1. Correct Test Case: `mark 3`","lastModifiedDate":"2024-04-13"},{"lineNumber":902,"author":{"gitId":"ReganChoy"},"content":"2. Invalid Test Case: `mark 3` if client does not exist or appointment is done","lastModifiedDate":"2024-04-13"},{"lineNumber":903,"author":{"gitId":"ReganChoy"},"content":"3. Invalid Test Case: `mark three` index should be a positive integer","lastModifiedDate":"2024-04-13"},{"lineNumber":904,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":905,"author":{"gitId":"ReganChoy"},"content":"### Set the last met overdue duration","lastModifiedDate":"2024-04-13"},{"lineNumber":906,"author":{"gitId":"ReganChoy"},"content":"Command Format: `mark integer`","lastModifiedDate":"2024-04-13"},{"lineNumber":907,"author":{"gitId":"ReganChoy"},"content":"Assumptions: Nil","lastModifiedDate":"2024-04-13"},{"lineNumber":908,"author":{"gitId":"ReganChoy"},"content":"Desired Outcome: Setting the duration to 45 days.","lastModifiedDate":"2024-04-13"},{"lineNumber":909,"author":{"gitId":"ReganChoy"},"content":"1. Correct Test Case: `set 45`","lastModifiedDate":"2024-04-13"},{"lineNumber":910,"author":{"gitId":"ReganChoy"},"content":"2. Invalid Test Case: `set 45.3` value must be non-negative integer","lastModifiedDate":"2024-04-13"},{"lineNumber":911,"author":{"gitId":"ReganChoy"},"content":"3. Invalid Test Case: `set forty five` value must be a non-negative integer","lastModifiedDate":"2024-04-13"},{"lineNumber":912,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":913,"author":{"gitId":"ReganChoy"},"content":"### Adding a policy","lastModifiedDate":"2024-04-13"},{"lineNumber":914,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":915,"author":{"gitId":"ReganChoy"},"content":"### Deleting a policy","lastModifiedDate":"2024-04-13"},{"lineNumber":916,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":918,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"getsquared"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2024-04-12"},{"lineNumber":925,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":926,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":927,"author":{"gitId":"ReganChoy"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2024-04-10"},{"lineNumber":928,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":929,"author":{"gitId":"ReganChoy"},"content":"Team Size: 4","lastModifiedDate":"2024-04-13"},{"lineNumber":930,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":931,"author":{"gitId":"ReganChoy"},"content":"1. **Feature Flaw** - Currently, users can only schedule one appointment per client. In future versions, we will support multiple appointments per client.","lastModifiedDate":"2024-04-11"},{"lineNumber":932,"author":{"gitId":"ReganChoy"},"content":"2. **Feature Flaw** - Currently, names are case-sensitive. `John` and `john` are regarded as different clients. In future versions, names will be case-insensitive.","lastModifiedDate":"2024-04-11"},{"lineNumber":933,"author":{"gitId":"ReganChoy"},"content":"3. **Feature Flaw** - Currently, tags only allow alphanumeric values. Spaces and special characters are not allowed. In future versions, we will support the use of spaces and special characters for tags.","lastModifiedDate":"2024-04-11"},{"lineNumber":934,"author":{"gitId":"ReganChoy"},"content":"4. **Feature Flaw** - Currently, users are not allowed to use special characters like `/` when adding or editing the client name. In future versions, we will support the use of special characters like `/` for names.","lastModifiedDate":"2024-04-11"},{"lineNumber":935,"author":{"gitId":"ReganChoy"},"content":"5. **Feature Flaw** - Currently, users must fulfill all compulsory parameters to add a client. In future versions, we will make more parameters optional.","lastModifiedDate":"2024-04-13"},{"lineNumber":936,"author":{"gitId":"ReganChoy"},"content":"6. **Feature Flaw** - Currently, users must re-sort the client list after adding, editing or updating clients. Client List does not auto update or re-sort itself upon adding/editing or updating. In future versions, we will support the auto sorting when clients are updated.","lastModifiedDate":"2024-04-11"},{"lineNumber":937,"author":{"gitId":"ReganChoy"},"content":"7. **UI Bug** - Currently, the policy name and policy id may get truncated if there are too many characters. In future versions, we will support the wrapping of fields in the Policy Display.","lastModifiedDate":"2024-04-11"},{"lineNumber":938,"author":{"gitId":"ReganChoy"},"content":"8. **UI Bug** - Currently, the phone number and remark may get truncated if they are too long. In future versions, we will support the wrapping of all fields in the Client View Display.","lastModifiedDate":"2024-04-11"},{"lineNumber":939,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":940,"author":{"gitId":"ReganChoy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-10"},{"lineNumber":941,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":942,"author":{"gitId":"ReganChoy"},"content":"## **Appendix: Effort**","lastModifiedDate":"2024-04-10"},{"lineNumber":943,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":944,"author":{"gitId":"ReganChoy"},"content":"1. Scheduling Features","lastModifiedDate":"2024-04-13"},{"lineNumber":945,"author":{"gitId":"ReganChoy"},"content":"`met`, `schedule`, `mark` and `set` commands help the user manage his scheduling matters. As these 4 commands directly affect each other, the difficulty comes in thinking what and how","lastModifiedDate":"2024-04-13"},{"lineNumber":946,"author":{"gitId":"ReganChoy"},"content":"their respective class methods should interact with each other, especially with what date format to choose as this directly affects our auto-sort implemented for scheduling. It is also difficult to test for extreme cases that may cause these commands to misbehave.","lastModifiedDate":"2024-04-13"},{"lineNumber":947,"author":{"gitId":"ReganChoy"},"content":"We decided to simplify the process by restricting the user to 1 appointment per client as our initial beta version faced multiple bugs due to higher number of classes and functions when supporting multiple appointments per client.","lastModifiedDate":"2024-04-13"},{"lineNumber":948,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":949,"author":{"gitId":"ReganChoy"},"content":"`set` is also saved in a separate txt file as it is not related to client traits. Hence, additional testing is needed to ensure the value that `set` updates is saved correctly and is able to handle","lastModifiedDate":"2024-04-13"},{"lineNumber":950,"author":{"gitId":"ReganChoy"},"content":"invalid values if the txt file is edited wrongly.","lastModifiedDate":"2024-04-13"},{"lineNumber":951,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":952,"author":{"gitId":"ReganChoy"},"content":"2. Policies Features","lastModifiedDate":"2024-04-13"},{"lineNumber":953,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":954,"author":{"gitId":"ReganChoy"},"content":"3. Additional Client Traits and Features","lastModifiedDate":"2024-04-13"},{"lineNumber":955,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":956,"author":{"gitId":"ReganChoy"},"content":"4. GUI","lastModifiedDate":"2024-04-13"},{"lineNumber":957,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":958,"author":{"gitId":"ReganChoy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"getsquared":84,"ReganChoy":294,"solomonng2001":47,"yorklim":181,"-":352}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"![ClientCareLogo](images/ClientCareLogo.png \u003d250x)","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"# ClientCare User Guide","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"This user guide is meant for ClientCare Version `v1.4`.","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"Too many clients to keep track of? Not sure when is your next appointment?","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"Fret not! ClientCare is a **desktop application for assisting insurance agents in managing their client relationships and follow-ups effectively.**","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"Built with your needs in mind, ClientCare is here to help you manage all your clients, appointments and policies, **all in one place**!","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"New to ClientCare? We recommend you to check out the [Using this guide](#using-this-guide) section to get you started.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"Ready to head straight into the action? You can refer to our [Quick Start](#quick-start) section to set ClientCare up.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"\u003cfrontmatter\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"  pageNav: 3","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"  pageNavTitle: \"Table of Contents\"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"\u003c/frontmatter\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"\u003cpage-nav-print\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"## Table of Contents","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"\u003c/page-nav-print\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"## Using this guide","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"This guide walks you through all the features of ClientCare and can be used as a quick reference whenever you need any help. If you\u0027re just getting started with ClientCare, we welcome you to start from our [Introducing ClientCare](#introducing-clientcare) section to learn more about the app. For setting up ClientCare, you might find the [Quick Start](#quick-start) section helpful.","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"Ready to use ClientCare? You can check out our [Features](#features) section. For ease of reference, the","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"[Features](#features) section is divided into subsections corresponding to each main feature:","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"[Clients](#client-related-commands), [Schedules](#schedule-related-commands) and [Policies](#policy-related-commands). Feel free to jump around as you explore ClientCare\u0027s amazing features!","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"Need a quick refresher? You can head to the [Command Summary](#command-summary) for a quick recap!","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"Unsure of any terms? You can take a look at the [Glossary](#glossary) section.","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"You can also refer to our [Table of Contents](#table-of-contents) to navigate between the different sections of this guide.","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"#### Who is this guide for?","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"This guide does not assume any technical knowledge from users. Typing on a keyboard is all you need to know!","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"ClientCare uses a Text Command Box to interact with users. Not sure how to use it? No worries, we got you covered.","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"You can head over to the [Text Command Introduction](#text-commands-introduction) for a quick breakdown.","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"If you are familiar with how text commands work, good news! Using ClientCare will be a breeze for you.","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"#### Conventions used in this guide","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"**Formatting Conventions** \u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"As you read through the guide, you might come across different text formats, and wonder what they mean. Here is a quick rundown of the conventions we use!","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"| Format                                                                       | Description                                                                                                                                                       |","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"|------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"| [blue hyperlink](https://ay2324s2-cs2103t-w12-1.github.io/tp/UserGuide.html) | Blue hyperlinks bring you to another section of the user guide or another website for more relevant information.                                                  |","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"| `command`                                                                    | Text in a monospace font and grey box are ClientCare commands. Refer to [ClientCare Commands](#clientcare-commands) for more details.                             |                                                                                                    |","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"| `FIELD`                                                                      | Upper case text in a monospace font are fields to input with ClientCare commands. Each command has unique fields, which you can find under [Features](#features). |","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"**Call-out Text-box Conventions**\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"You might encounter these call-outs while reading through the guide, which contain additional information for using ClientCare.","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"**Tip:** Tip call-outs like this contain helpful pointers for using ClientCare!","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"**Note:** Information call-outs like this contain information about ClientCare you should take note of!","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"\u003cbox type\u003d\"warning\" theme\u003d\"danger\" icon\u003d\":warning:\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"**CAUTION**: Caution call-outs like this contain warnings you should remember when using ClientCare to avoid errors!","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"## Introducing ClientCare","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"Made for insurance agents and clients, by insurance agents and clients.","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"ClientCare is the easiest way to manage your clients and schedules, all in one place.","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"Powerful features and intuitive design, all packaged into one neat desktop app. ClientCare is supported on all","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"major platforms (Windows, macOS).","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"ReganChoy"},"content":"#### Let ClientCare assist you in...","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"ReganChoy"},"content":"1. [**Managing your clients**](#client-related-commands)","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"ReganChoy"},"content":"   ClientCare lets you store, edit and delete your client\u0027s information. Keep all your clients\u0027 details in one place and save time!","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"ReganChoy"},"content":"2. [**Planning your schedule**](#schedule-related-commands)","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"ReganChoy"},"content":"   Meeting clients are part of the job. Not sure when to meet your next client? ClientCare reminds you of clients that you may have","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"ReganChoy"},"content":"missed out!","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"ReganChoy"},"content":"3. [**Keeping track of policies**](#policy-related-commands)","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"ReganChoy"},"content":"   Too many policies from different companies? Why not track all of them in one place! ClientCare allows you to attach policies","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"ReganChoy"},"content":"to all your clients, regardless of companies and product type.","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"ReganChoy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"ReganChoy"},"content":"# Quick start","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"ReganChoy"},"content":"Let\u0027s get started with ClientCare. This section will help you get familiar with how ClientCare works, from installation to using ClientCare.","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"ReganChoy"},"content":"## Installation instructions","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"ReganChoy"},"content":"Don\u0027t have ClientCare installed on your computer yet? Check out our step-by-step installation instructions to","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"ReganChoy"},"content":"download ClientCare.","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"getsquared"},"content":"1. ClientCare is written in the programming language Java, so you\u0027ll need **Java 11 or above** installed in your computer to run ClientCare.","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"ReganChoy"},"content":"    1. Not sure if you have a compatible Java version installed on your computer?","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"ReganChoy"},"content":"       Windows or macOS users might find [this guide](https://blog.hubspot.com/website/check-java-verison) useful.","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"ReganChoy"},"content":"    2. Don\u0027t have a compatible Java version installed? Fret not, Java is free to install! Complete installation","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"ReganChoy"},"content":"       instructions can be found [here](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html).","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"ReganChoy"},"content":"2. Download the latest version of ClientCare by downloading the `clientcare.jar` file found [here](https://github.com/AY2324S2-CS2103T-W12-1/tp/releases).","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"![Tag](images/ug/ReleaseTag%20v1.2.png \u003d600x)","lastModifiedDate":"2024-04-11"},{"lineNumber":131,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"getsquared"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"getsquared"},"content":"**Note:** The ClientCare application file can be found at the bottom of the release notes, under Assets!","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"getsquared"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"![jar](images/ug/clientcare%20jar%20file%20v1.2.png \u003d600x)","lastModifiedDate":"2024-04-11"},{"lineNumber":138,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"getsquared"},"content":"3. Create a new empty folder (with any name you like) in your computer where you\u0027d like to store ClientCare.","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"getsquared"},"content":"4. Copy the downloaded ClientCare file (`clientcare.jar`) into the new folder.","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"getsquared"},"content":"5. And...that\u0027s it! You now have ClientCare installed on your laptop!","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"getsquared"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"ReganChoy"},"content":"## Starting up ClientCare","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"ReganChoy"},"content":"Congrats! With ClientCare downloaded (if not, our [installation instructions](#installation-instructions)","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"ReganChoy"},"content":"might be useful), let\u0027s get started!","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"ReganChoy"},"content":"These are the platforms we currently support ClientCare on:","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"ReganChoy"},"content":"1. [Windows](#for-windows)","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"ReganChoy"},"content":"2. [macOS](#for-macos)","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"ReganChoy"},"content":"#### For Windows","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"ReganChoy"},"content":"1. To start ClientCare, simply open up the folder where your downloaded `clientcare.jar`.","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"ReganChoy"},"content":"2. Double-click on the app icon and ClientCare should boot up!","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"ReganChoy"},"content":"![DoubleClick](images/ug/doubleclick.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"getsquared"},"content":"If you are facing issues opening the app, you can find an alternative solution [here](#known-issues-and-troubleshooting).","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"ReganChoy"},"content":"#### For macOS","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"solomonng2001"},"content":"1. To start ClientCare, simply open up the folder where your downloaded `clientcare.jar`.","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"solomonng2001"},"content":"2. Next, double left-click on `clientcare.jar` to start the application.","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"solomonng2001"},"content":"![Starting up app on macOS](images/ug/startUpAppMacOS.png \u003d600x)","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"getsquared"},"content":"If you are facing issues opening the app, you can find an alternative solution [here](#known-issues-and-troubleshooting).","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"ReganChoy"},"content":"## Getting familiar with ClientCare","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"getsquared"},"content":"Now that we got ClientCare up and running, let\u0027s get you familiar with its display.","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"ReganChoy"},"content":"You will learn how the different parts of ClientCare look and work in this section.","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"getsquared"},"content":"#### ClientCare\u0027s Display Components","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"ReganChoy"},"content":"ClientCare has **6** components in its display. Different commands affect parts of the Display.","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"getsquared"},"content":"You can refer to the [Quick Tutorial](#quick-tutorial) to see how the different parts of the display change when entering commands!","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"yorklim"},"content":"![Display](images/ug/GUI%20v1.3.2%20Graphic.png)","lastModifiedDate":"2024-04-11"},{"lineNumber":195,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":196,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":197,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":199,"author":{"gitId":"getsquared"},"content":"#### Text Commands Introduction","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"getsquared"},"content":"ClientCare works through text commands. Instead of clicking buttons, you tell ClientCare what to do by typing!","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"ReganChoy"},"content":"These commands must be formatted in a specific way or ClientCare will not understand what you are saying.","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"ReganChoy"},"content":"Let\u0027s learn the language that ClientCare speaks in.","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"ReganChoy"},"content":"### ClientCare commands","lastModifiedDate":"2024-04-13"},{"lineNumber":208,"author":{"gitId":"ReganChoy"},"content":"A ClientCare command has the following parts:","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"solomonng2001"},"content":"![Command Structure](images/ug/commandStructure.png \u003d450x)","lastModifiedDate":"2024-04-11"},{"lineNumber":211,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"ReganChoy"},"content":"##### 1) Command Keyword","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"ReganChoy"},"content":"This keyword tells ClientCare what you want to do. If you want to add a new client, then `add` will be the keyword.","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"ReganChoy"},"content":"All commands must start with a keyword.","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"ReganChoy"},"content":"##### 2) Index","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"getsquared"},"content":"Some commands may involve an index, indicated in command formats as `INDEX`. This is simply a number which is assigned to a particular Client.","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"ReganChoy"},"content":"For example, the first client in the list will have the index `1`.","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"ReganChoy"},"content":"The index can take on values from 1 to the number of clients shown in the Client List. It will never be **0 or a negative number**.","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"getsquared"},"content":"##### 3) Command Fields","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"getsquared"},"content":"Some commands have fields associated with them. For example, when you are adding a client, you need to add his name too.","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"getsquared"},"content":"His name will be considered a field, similarly for Date of Birth, Address etc.","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"getsquared"},"content":"Here are some things to take note of when using them!","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"getsquared"},"content":"* Fields often have a prefix in front of them. For example, name has `n/` and date has `d/`. The command format will show what field a prefix is referring to in uppercase, like `n/NAME`, in case you forget!","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"getsquared"},"content":"* Some fields are even optional, and they\u0027ll be shown with square brackets: `[a/ADDRESS]`.","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"getsquared"},"content":"* Fields that have a trailing ellipsis behind them like `[t/TAG]...`, meaning you can use multiple of them, so you can have both `t/friend t/drives` in one command.","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"yorklim"},"content":"* Not all commands take in fields! For example, when clearing your client list, a simple command keyword of `clear` will do! If any extraneous fields are present for these commands, they will be ignored. ","lastModifiedDate":"2024-04-09"},{"lineNumber":231,"author":{"gitId":"yorklim"},"content":"For example, `clear 1` and `clear all` will both be interpreted as `clear`.","lastModifiedDate":"2024-04-09"},{"lineNumber":232,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":233,"author":{"gitId":"getsquared"},"content":"The full list of commands and their formats can be found under the [Features](#features) section.","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"getsquared"},"content":"Alternatively, [Command Summary](#command-summary) has all of them under one page for a quick reference.","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"getsquared"},"content":"\u003cbox type\u003d\"warning\" theme\u003d\"danger\" icon\u003d\":warning:\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"getsquared"},"content":"**CAUTION**: If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as the command format may be copied over incorrectly.","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"getsquared"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":243,"author":{"gitId":"ReganChoy"},"content":"### Handling ClientCare error messages","lastModifiedDate":"2024-04-13"},{"lineNumber":244,"author":{"gitId":"ReganChoy"},"content":"While using ClientCare, you may encounter errors when you mistype or missed something out in your commands.","lastModifiedDate":"2024-04-11"},{"lineNumber":245,"author":{"gitId":"ReganChoy"},"content":"Not to worry, you will learn how to handle these error messages with ease in this section. ","lastModifiedDate":"2024-04-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":247,"author":{"gitId":"ReganChoy"},"content":"There are **4** types of error messages you may encounter in the Feedback Display.","lastModifiedDate":"2024-04-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":249,"author":{"gitId":"ReganChoy"},"content":"##### 1) Invalid Command","lastModifiedDate":"2024-04-11"},{"lineNumber":250,"author":{"gitId":"ReganChoy"},"content":"This occurs when you have mis-spelt the command keyword or the keyword does not exist. If you do not remember what are the command keywords available, you can easily refer them again under [Command Summary](#command-summary).","lastModifiedDate":"2024-04-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":253,"author":{"gitId":"ReganChoy"},"content":"![Invalid Command](images/ug/error_command.png \u003d450x)","lastModifiedDate":"2024-04-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":255,"author":{"gitId":"ReganChoy"},"content":"##### 2) Invalid Command Format","lastModifiedDate":"2024-04-11"},{"lineNumber":256,"author":{"gitId":"ReganChoy"},"content":"This occurs when you have missed certain required fields or prefixes in the commands.","lastModifiedDate":"2024-04-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":258,"author":{"gitId":"ReganChoy"},"content":"For example: adding a policy to a client requires an index, policy name and policy ID. Missing any one of these will throw an invalid command format error.","lastModifiedDate":"2024-04-11"},{"lineNumber":259,"author":{"gitId":"ReganChoy"},"content":"`addpolicy 1 i/02141` will cause an error as you have missed out the `n/` prefix and its input value.","lastModifiedDate":"2024-04-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":262,"author":{"gitId":"ReganChoy"},"content":"![Invalid Command Format](images/ug/error_commandformat.png \u003d450x)","lastModifiedDate":"2024-04-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":264,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":266,"author":{"gitId":"ReganChoy"},"content":"##### 3) Invalid Fields","lastModifiedDate":"2024-04-11"},{"lineNumber":267,"author":{"gitId":"ReganChoy"},"content":"This occurs when you have all the prefixes required in a command but may have typed an invalid value. ","lastModifiedDate":"2024-04-11"},{"lineNumber":268,"author":{"gitId":"ReganChoy"},"content":"There are 2 possible situations where this is possible.","lastModifiedDate":"2024-04-11"},{"lineNumber":269,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":270,"author":{"gitId":"ReganChoy"},"content":"* Invalid field format:","lastModifiedDate":"2024-04-11"},{"lineNumber":271,"author":{"gitId":"ReganChoy"},"content":"For example: A phone number can only accept numbers. Putting alphabets in a phone number is not allowed.","lastModifiedDate":"2024-04-11"},{"lineNumber":272,"author":{"gitId":"ReganChoy"},"content":"Typing `edit 2 c/123vad43` causes invalid field format error.","lastModifiedDate":"2024-04-11"},{"lineNumber":273,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":274,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":275,"author":{"gitId":"ReganChoy"},"content":"![Invalid Phone](images/ug/error_phone.png \u003d450x)","lastModifiedDate":"2024-04-11"},{"lineNumber":276,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":277,"author":{"gitId":"ReganChoy"},"content":"* Invalid field value:","lastModifiedDate":"2024-04-11"},{"lineNumber":278,"author":{"gitId":"ReganChoy"},"content":"For example: You are not allowed to type a future date when using the command `met` even though your date format is correct.","lastModifiedDate":"2024-04-11"},{"lineNumber":279,"author":{"gitId":"ReganChoy"},"content":"If today is 5 Jan 2024, typing `met 2 d/2024-10-08` which is 8 Oct 2024 will cause an invalid field value error.","lastModifiedDate":"2024-04-11"},{"lineNumber":280,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":281,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":282,"author":{"gitId":"ReganChoy"},"content":"![Future met](images/ug/error_futuremet.png \u003d450x)","lastModifiedDate":"2024-04-11"},{"lineNumber":283,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":284,"author":{"gitId":"ReganChoy"},"content":"##### 4) Invalid Index","lastModifiedDate":"2024-04-11"},{"lineNumber":285,"author":{"gitId":"ReganChoy"},"content":"This occurs when you gave ClientCare an index value that is larger than your current client list.","lastModifiedDate":"2024-04-11"},{"lineNumber":286,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":287,"author":{"gitId":"ReganChoy"},"content":"For example: If you only have 7 clients, then your index should be a value from 1 to 7.","lastModifiedDate":"2024-04-11"},{"lineNumber":288,"author":{"gitId":"ReganChoy"},"content":"`edit 27 n/Bob` will cause an error as you have less than 27 clients.","lastModifiedDate":"2024-04-11"},{"lineNumber":289,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":290,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":291,"author":{"gitId":"ReganChoy"},"content":"![Invalid Index](images/ug/error_index.png \u003d450x)","lastModifiedDate":"2024-04-11"},{"lineNumber":292,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":293,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":294,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":295,"author":{"gitId":"ReganChoy"},"content":"**Note:** ClientCare will only show you **one** error message at a time. If you have multiple errors, not to worry!","lastModifiedDate":"2024-04-11"},{"lineNumber":296,"author":{"gitId":"ReganChoy"},"content":"ClientCare will be with you to correct each error!","lastModifiedDate":"2024-04-11"},{"lineNumber":297,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-24"},{"lineNumber":300,"author":{"gitId":"getsquared"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":301,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"ReganChoy"},"content":"## Quick tutorial","lastModifiedDate":"2024-04-13"},{"lineNumber":303,"author":{"gitId":"ReganChoy"},"content":"Excited to play around with ClientCare?","lastModifiedDate":"2024-03-27"},{"lineNumber":304,"author":{"gitId":"ReganChoy"},"content":"Let’s run you through some simple commands to get you warmed up before you dive right into ClientCare’s full feature list!","lastModifiedDate":"2024-03-27"},{"lineNumber":305,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":306,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":308,"author":{"gitId":"ReganChoy"},"content":"**Note:** Your ClientCare may look different upon starting up. This is because the client data stored within the app may be different.","lastModifiedDate":"2024-03-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":310,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":311,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":312,"author":{"gitId":"ReganChoy"},"content":"Let\u0027s boot up ClientCare and get started!","lastModifiedDate":"2024-03-27"},{"lineNumber":313,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":314,"author":{"gitId":"ReganChoy"},"content":"1. Suppose we just met a new client! Let\u0027s add James Wee to our client list and his following details:","lastModifiedDate":"2024-03-27"},{"lineNumber":315,"author":{"gitId":"ReganChoy"},"content":"  * Phone Number: 98765432","lastModifiedDate":"2024-03-27"},{"lineNumber":316,"author":{"gitId":"ReganChoy"},"content":"  * Email: james@hotmail.com","lastModifiedDate":"2024-03-27"},{"lineNumber":317,"author":{"gitId":"ReganChoy"},"content":"  * Address: East Coast Blk 112","lastModifiedDate":"2024-03-27"},{"lineNumber":318,"author":{"gitId":"ReganChoy"},"content":"  * Birthday: 25 May 1998","lastModifiedDate":"2024-03-27"},{"lineNumber":319,"author":{"gitId":"ReganChoy"},"content":"  * Priority: VIP","lastModifiedDate":"2024-03-27"},{"lineNumber":320,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":321,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input:","lastModifiedDate":"2024-03-27"},{"lineNumber":322,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":323,"author":{"gitId":"yorklim"},"content":"`add n/James Wee c/98765432 e/james@hotmail.com a/East Coast Blk 112 d/1998-05-25 p/vip`","lastModifiedDate":"2024-04-09"},{"lineNumber":324,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":325,"author":{"gitId":"ReganChoy"},"content":"![addclient](images/ug/addclient.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":326,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":327,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":328,"author":{"gitId":"ReganChoy"},"content":"2. We have now added James Wee to our Client List! ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-03-27"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":332,"author":{"gitId":"ReganChoy"},"content":"![success_add](images/ug/success_add.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":334,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":336,"author":{"gitId":"ReganChoy"},"content":"3. Now let\u0027s schedule an appointment with James Wee 7 days from now. From the Client List, James has an index of `7`.","lastModifiedDate":"2024-03-27"},{"lineNumber":337,"author":{"gitId":"yorklim"},"content":"When this guide was released, today was 11 April 2024. Hence, let\u0027s set the appointment at 18 April 2024 2pm.","lastModifiedDate":"2024-04-11"},{"lineNumber":338,"author":{"gitId":"ReganChoy"},"content":"Let\u0027s type the following command into the Command Input:","lastModifiedDate":"2024-03-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":341,"author":{"gitId":"yorklim"},"content":"`schedule 7 d/2024-04-18 14:00`","lastModifiedDate":"2024-04-11"},{"lineNumber":342,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":343,"author":{"gitId":"ReganChoy"},"content":"![schedule](images/ug/schedule.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":344,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":345,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":346,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":347,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":348,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":349,"author":{"gitId":"solomonng2001"},"content":"**Note:** Since you cannot schedule an appointment for a date and time that has passed for that exact moment, ","lastModifiedDate":"2024-04-13"},{"lineNumber":350,"author":{"gitId":"yorklim"},"content":"do change the date field as needed.","lastModifiedDate":"2024-04-09"},{"lineNumber":351,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":352,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":354,"author":{"gitId":"ReganChoy"},"content":"4. Our schedule with James has been updated in both Client Details and Schedule Display!","lastModifiedDate":"2024-03-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":358,"author":{"gitId":"ReganChoy"},"content":"![success_schedule](images/ug/success_schedule.png \u003d600x)","lastModifiedDate":"2024-04-04"},{"lineNumber":359,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":360,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":362,"author":{"gitId":"ReganChoy"},"content":"5. Now let\u0027s get interesting. What happens if we encounter an error?","lastModifiedDate":"2024-03-27"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":364,"author":{"gitId":"ReganChoy"},"content":"ClientCare will show us the error along with the correct command format in the Feedback Display.","lastModifiedDate":"2024-03-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":367,"author":{"gitId":"ReganChoy"},"content":"![error](images/ug/error.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":369,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":371,"author":{"gitId":"ReganChoy"},"content":"**Note:** The Feedback Display may be unable to show the entire error message at once. You can scroll down in the","lastModifiedDate":"2024-04-04"},{"lineNumber":372,"author":{"gitId":"ReganChoy"},"content":"Feedback Display to see the whole message. All error messages due to invalid formatting will end with an example.","lastModifiedDate":"2024-04-04"},{"lineNumber":373,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":374,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"ReganChoy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-25"},{"lineNumber":377,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":378,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":379,"author":{"gitId":"getsquared"},"content":"# Features","lastModifiedDate":"2024-03-25"},{"lineNumber":380,"author":{"gitId":"ReganChoy"},"content":"Dive right into ClientCare\u0027s full list of features. This section guides you through all of ClientCare\u0027s commands.","lastModifiedDate":"2024-03-24"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"ReganChoy"},"content":"For easy reference, similar features are grouped into the same subsections as shown below:","lastModifiedDate":"2024-03-24"},{"lineNumber":383,"author":{"gitId":"ReganChoy"},"content":"* [Client related commands](#client-related-commands)","lastModifiedDate":"2024-03-24"},{"lineNumber":384,"author":{"gitId":"ReganChoy"},"content":"* [Schedule related commands](#schedule-related-commands)","lastModifiedDate":"2024-03-24"},{"lineNumber":385,"author":{"gitId":"ReganChoy"},"content":"* [Policy related commands](#policy-related-commands)","lastModifiedDate":"2024-03-24"},{"lineNumber":386,"author":{"gitId":"ReganChoy"},"content":"* [Miscellaneous](#miscellaneous)","lastModifiedDate":"2024-03-24"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":389,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"ReganChoy"},"content":"## Client related commands","lastModifiedDate":"2024-03-24"},{"lineNumber":393,"author":{"gitId":"ReganChoy"},"content":"ClientCare is all about managing your clients. ClientCare will help you keep track of all your clients and their","lastModifiedDate":"2024-03-24"},{"lineNumber":394,"author":{"gitId":"ReganChoy"},"content":"details, so you never have to lose a contact again.","lastModifiedDate":"2024-03-24"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"solomonng2001"},"content":"![Client list and client view panels\u0027](images/ug/clientViewAndList.png \u003d600x)","lastModifiedDate":"2024-04-05"},{"lineNumber":397,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":398,"author":{"gitId":"ReganChoy"},"content":"ClientCare offers the following commands to help you manage your clients:","lastModifiedDate":"2024-03-24"},{"lineNumber":399,"author":{"gitId":"ReganChoy"},"content":"* [Adding a client: `add`](#adding-a-client-add)","lastModifiedDate":"2024-03-24"},{"lineNumber":400,"author":{"gitId":"getsquared"},"content":"* [Deleting a client: `delete`](#deleting-a-client-delete)","lastModifiedDate":"2024-03-27"},{"lineNumber":401,"author":{"gitId":"getsquared"},"content":"* [Editing a client: `edit`](#editing-a-client-edit)","lastModifiedDate":"2024-03-27"},{"lineNumber":402,"author":{"gitId":"ReganChoy"},"content":"* [Listing all clients: `list`](#listing-all-clients-list)","lastModifiedDate":"2024-03-24"},{"lineNumber":403,"author":{"gitId":"getsquared"},"content":"* [Viewing a client: `view`](#viewing-a-client-view)","lastModifiedDate":"2024-03-27"},{"lineNumber":404,"author":{"gitId":"getsquared"},"content":"* [Finding a client: `find`](#finding-client-by-name-find)","lastModifiedDate":"2024-03-27"},{"lineNumber":405,"author":{"gitId":"ReganChoy"},"content":"* [Adding notes to a client: `remark`](#adding-notes-to-a-client-remark)","lastModifiedDate":"2024-04-13"},{"lineNumber":406,"author":{"gitId":"ReganChoy"},"content":"* [Clearing all clients: `clear`](#clearing-all-entries-clear)","lastModifiedDate":"2024-03-24"},{"lineNumber":407,"author":{"gitId":"ReganChoy"},"content":"* [Sorting your clients: `sort`](#sorting-the-client-list-sort)","lastModifiedDate":"2024-04-05"},{"lineNumber":408,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":409,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":412,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":413,"author":{"gitId":"getsquared"},"content":"### Adding a client: `add`","lastModifiedDate":"2024-03-19"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"ReganChoy"},"content":"The first step for any insurance agent is to find clients! You can add your new client to the client list with `add`.","lastModifiedDate":"2024-04-10"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"ReganChoy"},"content":"Format: `add n/NAME c/PHONE_NUMBER e/EMAIL a/ADDRESS d/BIRTHDAY p/PRIORITY [t/TAG]…​`","lastModifiedDate":"2024-03-27"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"getsquared"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":421,"author":{"gitId":"getsquared"},"content":"**Note:** A client can have any number of tags (including 0). For example, `t/owesMoney t/friends` is allowed.\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":422,"author":{"gitId":"solomonng2001"},"content":"All other fields (except for tags) cannot have duplicate fields. For example, `c/1234567 c/7654321` is **not** allowed.","lastModifiedDate":"2024-04-13"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":426,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":427,"author":{"gitId":"ReganChoy"},"content":"**Note:** The name of the client is case-sensitive. `John` and `john` will be regarded as different people.","lastModifiedDate":"2024-04-10"},{"lineNumber":428,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":430,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":431,"author":{"gitId":"getsquared"},"content":"Fields usage for client details:","lastModifiedDate":"2024-03-27"},{"lineNumber":432,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":433,"author":{"gitId":"getsquared"},"content":"| Field            | Usage                                                                                         | Example                               |","lastModifiedDate":"2024-03-27"},{"lineNumber":434,"author":{"gitId":"solomonng2001"},"content":"|------------------|-----------------------------------------------------------------------------------------------|---------------------------------------|","lastModifiedDate":"2024-04-13"},{"lineNumber":435,"author":{"gitId":"solomonng2001"},"content":"| \u0027n/NAME\u0027         | All names in the system must be unique and names are case sensitive                           | `n/John Doe`                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":436,"author":{"gitId":"solomonng2001"},"content":"| \u0027c/PHONE_NUMBER\u0027 | Phone numbers should only contain numbers, and it should be at least 3 digits long            | `c/98765432`                          |","lastModifiedDate":"2024-03-21"},{"lineNumber":437,"author":{"gitId":"solomonng2001"},"content":"| \u0027e/EMAIL\u0027        | Email should be in the format of `local-part@domain`                                          | `e/johndoe@email.com`                 |","lastModifiedDate":"2024-03-21"},{"lineNumber":438,"author":{"gitId":"solomonng2001"},"content":"| \u0027a/ADDRESS\u0027      | Address can take any text value                                                               | `a/311, Clementi Ave 2, #02-25`       |","lastModifiedDate":"2024-03-21"},{"lineNumber":439,"author":{"gitId":"ReganChoy"},"content":"| \u0027d/BIRTHDAY\u0027     | Birthday should be in the format of `YYYY-MM-DD`                                              | `d/1990-01-01`                        |","lastModifiedDate":"2024-03-27"},{"lineNumber":440,"author":{"gitId":"solomonng2001"},"content":"| \u0027p/PRIORITY\u0027     | Priority can be `low`, `medium`, `high`, `vip`, or `l`, `m`, `h`, `v` \u003cbr/\u003e(Case Insensitive) | `p/medium`, `p/MEDIUM` ,`p/m`, `p/M`  |","lastModifiedDate":"2024-04-13"},{"lineNumber":441,"author":{"gitId":"solomonng2001"},"content":"| \u0027t/TAG\u0027          | Tags can be any text value                                                                    | `t/friends`                           |","lastModifiedDate":"2024-03-21"},{"lineNumber":442,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":443,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"ReganChoy"},"content":"* `add n/John Doe c/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 d/1990-01-01 p/low t/friends t/owesMoney`","lastModifiedDate":"2024-03-27"},{"lineNumber":445,"author":{"gitId":"ReganChoy"},"content":"* `add n/Betsy Crowe t/friend p/vip e/betsycrowe@example.com a/Hougang Road 12 c/1234567 t/buddy d/1979-03-04`","lastModifiedDate":"2024-04-10"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":447,"author":{"gitId":"getsquared"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":449,"author":{"gitId":"getsquared"},"content":"**Tip:** If you are missing information for some fields, you can enter placeholder values like `e/placeholder@email.com`!","lastModifiedDate":"2024-04-10"},{"lineNumber":450,"author":{"gitId":"getsquared"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":452,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"ReganChoy"},"content":"Suppose you just met a new client! Let\u0027s add James Wee to your client list and his following details:","lastModifiedDate":"2024-04-10"},{"lineNumber":455,"author":{"gitId":"ReganChoy"},"content":"* Phone Number: 98765432","lastModifiedDate":"2024-04-10"},{"lineNumber":456,"author":{"gitId":"ReganChoy"},"content":"* Email: james@hotmail.com","lastModifiedDate":"2024-04-10"},{"lineNumber":457,"author":{"gitId":"ReganChoy"},"content":"* Address: East Coast Blk 112","lastModifiedDate":"2024-04-10"},{"lineNumber":458,"author":{"gitId":"ReganChoy"},"content":"* Birthday: 25 May 1998","lastModifiedDate":"2024-04-10"},{"lineNumber":459,"author":{"gitId":"ReganChoy"},"content":"* Priority: VIP","lastModifiedDate":"2024-04-10"},{"lineNumber":460,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":461,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: ","lastModifiedDate":"2024-04-10"},{"lineNumber":462,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":463,"author":{"gitId":"ReganChoy"},"content":"`add n/James Wee c/98765432 e/james@hotmail.com a/East Coast Blk 112 d/1998-05-25 p/vip`","lastModifiedDate":"2024-04-10"},{"lineNumber":464,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":465,"author":{"gitId":"ReganChoy"},"content":"![addclient](images/ug/addclient.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":466,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":467,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":469,"author":{"gitId":"ReganChoy"},"content":"You have now added James Wee to our Client List! ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":471,"author":{"gitId":"ReganChoy"},"content":"![success_add](images/ug/success_add.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":472,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":473,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":475,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":477,"author":{"gitId":"getsquared"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2024-03-27"},{"lineNumber":478,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":479,"author":{"gitId":"ReganChoy"},"content":"While you can have new clients, it is also possible to lose existing clients. Hopefully, that does not happen often!","lastModifiedDate":"2024-04-10"},{"lineNumber":480,"author":{"gitId":"getsquared"},"content":"You can delete a specified client from the client list with `delete`.","lastModifiedDate":"2024-03-27"},{"lineNumber":481,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":482,"author":{"gitId":"getsquared"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-03-27"},{"lineNumber":483,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":484,"author":{"gitId":"getsquared"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2024-03-27"},{"lineNumber":485,"author":{"gitId":"getsquared"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":486,"author":{"gitId":"getsquared"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":487,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":488,"author":{"gitId":"getsquared"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":489,"author":{"gitId":"getsquared"},"content":"* `list` followed by `delete 2` deletes the 2nd client in the client list.","lastModifiedDate":"2024-03-27"},{"lineNumber":490,"author":{"gitId":"getsquared"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":491,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":492,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":493,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":494,"author":{"gitId":"ReganChoy"},"content":"Suppose David Li is no longer your client. He is number 4 on our client list as seen on the left.","lastModifiedDate":"2024-04-10"},{"lineNumber":495,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":496,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `delete 4`","lastModifiedDate":"2024-04-10"},{"lineNumber":497,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":498,"author":{"gitId":"ReganChoy"},"content":"![deleteclient](images/ug/delete.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":499,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":500,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":501,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":502,"author":{"gitId":"ReganChoy"},"content":"You have now removed David Li from our client list! ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":503,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":504,"author":{"gitId":"ReganChoy"},"content":"![success_delete](images/ug/success_delete.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":505,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":506,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":507,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":508,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":509,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":510,"author":{"gitId":"getsquared"},"content":"### Editing a client : `edit`","lastModifiedDate":"2024-03-19"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"ReganChoy"},"content":"Client information is always changing! If you ever need to update your client\u0027s particulars, you can edit an existing client with `edit`.","lastModifiedDate":"2024-04-10"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"ReganChoy"},"content":"Format: `edit INDEX [n/NAME] [c/PHONE] [e/EMAIL] [a/ADDRESS] [d/BIRTHDAY] [p/PRIORITY] [t/TAG]…​`","lastModifiedDate":"2024-04-04"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"getsquared"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":517,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"solomonng2001"},"content":"* When editing tags, the existing tags of the client will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2024-04-13"},{"lineNumber":520,"author":{"gitId":"getsquared"},"content":"* You can remove all the client’s tags by typing `t/` without","lastModifiedDate":"2024-03-19"},{"lineNumber":521,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"ReganChoy"},"content":"* Refer to the [Adding a client](#adding-a-client-add) section for the usage of the fields.","lastModifiedDate":"2024-04-04"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"getsquared"},"content":"*  `edit 1 c/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-19"},{"lineNumber":526,"author":{"gitId":"getsquared"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-19"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":529,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":530,"author":{"gitId":"ReganChoy"},"content":"Suppose you want to edit James Wee\u0027s name. He is number 7 on our client list as seen on the left.","lastModifiedDate":"2024-04-10"},{"lineNumber":531,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":532,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `edit 7 n/James Wee Tan Pi`","lastModifiedDate":"2024-04-10"},{"lineNumber":533,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":534,"author":{"gitId":"ReganChoy"},"content":"![editclient](images/ug/edit.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":535,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":536,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":537,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":538,"author":{"gitId":"ReganChoy"},"content":"You have updated James\u0027 name! ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":539,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":540,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_edit.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":541,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":542,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":543,"author":{"gitId":"getsquared"},"content":"### Listing all clients : `list`","lastModifiedDate":"2024-03-27"},{"lineNumber":544,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":545,"author":{"gitId":"ReganChoy"},"content":"After applying certain filter or finding commands, you can see all your clients again with `list`.","lastModifiedDate":"2024-04-10"},{"lineNumber":546,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":547,"author":{"gitId":"getsquared"},"content":"Format: `list`","lastModifiedDate":"2024-03-27"},{"lineNumber":548,"author":{"gitId":"solomonng2001"},"content":"* Extraneous fields will be ignored. For example, `list all` will be interpreted as `list`.","lastModifiedDate":"2024-04-13"},{"lineNumber":549,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":550,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":551,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":552,"author":{"gitId":"ReganChoy"},"content":"Suppose after finding or filtering clients, you want to see all our clients again.","lastModifiedDate":"2024-04-10"},{"lineNumber":553,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":554,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `list`","lastModifiedDate":"2024-04-10"},{"lineNumber":555,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":556,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/list.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":557,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":558,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":559,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":560,"author":{"gitId":"ReganChoy"},"content":"All your clients are now listed on the client list! ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":561,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":562,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_list.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":563,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":564,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":565,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":566,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":567,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":568,"author":{"gitId":"getsquared"},"content":"### Viewing a client : `view`","lastModifiedDate":"2024-03-27"},{"lineNumber":569,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":570,"author":{"gitId":"ReganChoy"},"content":"There are times when you would want to view a client\u0027s details and his policies in detail. You can do so with `view`.","lastModifiedDate":"2024-04-10"},{"lineNumber":571,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":572,"author":{"gitId":"getsquared"},"content":"Format: `view INDEX`","lastModifiedDate":"2024-03-27"},{"lineNumber":573,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":574,"author":{"gitId":"getsquared"},"content":"* Views the client at the specified `INDEX`.","lastModifiedDate":"2024-03-27"},{"lineNumber":575,"author":{"gitId":"getsquared"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-27"},{"lineNumber":576,"author":{"gitId":"getsquared"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-27"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":578,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-27"},{"lineNumber":579,"author":{"gitId":"getsquared"},"content":"* `list` followed by `view 2` views the 2nd client in the client list.","lastModifiedDate":"2024-03-27"},{"lineNumber":580,"author":{"gitId":"solomonng2001"},"content":"* `find Betsy` followed by `view 1` views the 1st client in the results of the `find` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":581,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":582,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":583,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":584,"author":{"gitId":"ReganChoy"},"content":"Suppose you want to see Bernice Yu\u0027s particulars in greater detail. Bernice Yu is number 2 on the client list.","lastModifiedDate":"2024-04-10"},{"lineNumber":585,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":586,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `view 2`","lastModifiedDate":"2024-04-10"},{"lineNumber":587,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":588,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/view.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":589,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":590,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":591,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":592,"author":{"gitId":"ReganChoy"},"content":"You can now see Bernice Yu\u0027s particulars appearing in the Client Display window! ","lastModifiedDate":"2024-04-10"},{"lineNumber":593,"author":{"gitId":"ReganChoy"},"content":"ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":594,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":595,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_view.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":597,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":599,"author":{"gitId":"getsquared"},"content":"### Finding client by name: `find`","lastModifiedDate":"2024-03-27"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"ReganChoy"},"content":"Is your client list too long? You can look for a client with `find`.","lastModifiedDate":"2024-04-10"},{"lineNumber":602,"author":{"gitId":"ReganChoy"},"content":"Client whose names contain any of the given keywords will show up!","lastModifiedDate":"2024-03-25"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"yorklim"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2024-04-09"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"getsquared"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2024-03-27"},{"lineNumber":607,"author":{"gitId":"getsquared"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2024-03-27"},{"lineNumber":608,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"getsquared"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2024-03-27"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"getsquared"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":614,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":615,"author":{"gitId":"getsquared"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"getsquared"},"content":"**Tip:** You can use `find` to more easily find the client you want for commands that require a client `INDEX`!","lastModifiedDate":"2024-03-27"},{"lineNumber":618,"author":{"gitId":"getsquared"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":622,"author":{"gitId":"ReganChoy"},"content":"Suppose you want to find James in your client list.","lastModifiedDate":"2024-04-10"},{"lineNumber":623,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":624,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `find james`","lastModifiedDate":"2024-04-10"},{"lineNumber":625,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":626,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/find.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":627,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":628,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":630,"author":{"gitId":"solomonng2001"},"content":"All clients whose name contains the word \"james\" will now show up in the client list.","lastModifiedDate":"2024-04-13"},{"lineNumber":631,"author":{"gitId":"ReganChoy"},"content":"ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":632,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":633,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_find.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":634,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":635,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":636,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":637,"author":{"gitId":"ReganChoy"},"content":"### Adding notes to a client: `remark`","lastModifiedDate":"2024-04-13"},{"lineNumber":638,"author":{"gitId":"ReganChoy"},"content":"Need to remember certain information about a client such as his preference or health conditions?","lastModifiedDate":"2024-04-10"},{"lineNumber":639,"author":{"gitId":"yorklim"},"content":"You can add notes to each client with `remark`. If a current remark exists, it will be replaced with the new remark.","lastModifiedDate":"2024-04-09"},{"lineNumber":640,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":641,"author":{"gitId":"ReganChoy"},"content":"Format: `remark INDEX [r/REMARK]`","lastModifiedDate":"2024-04-04"},{"lineNumber":642,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":643,"author":{"gitId":"getsquared"},"content":"* Adds a note to the client at the specified `INDEX`.","lastModifiedDate":"2024-03-27"},{"lineNumber":644,"author":{"gitId":"getsquared"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-27"},{"lineNumber":645,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-27"},{"lineNumber":646,"author":{"gitId":"getsquared"},"content":"* If `r/REMARK` is not present, or if nothing is typed after `r/`, the current remark for the client will be removed. ","lastModifiedDate":"2024-04-10"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":648,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-27"},{"lineNumber":649,"author":{"gitId":"getsquared"},"content":"* `remark 2 r/Has 2 school-age children and 1 elderly dependent` adds a remark for the 2nd client in the client list.","lastModifiedDate":"2024-03-27"},{"lineNumber":650,"author":{"gitId":"getsquared"},"content":"* `remark 1` or `remark 1 r/` deletes the remark for the 1st client in the client list.","lastModifiedDate":"2024-04-10"},{"lineNumber":651,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":652,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":653,"author":{"gitId":"yorklim"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":654,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":655,"author":{"gitId":"getsquared"},"content":"**Tip:** If you make a typo in your remark, you don\u0027t have to delete everything again! Just add a second prefix, for example: `remark 1 r/Speeks Enngliish r/Speaks English` will only save `Speaks English`.","lastModifiedDate":"2024-04-10"},{"lineNumber":656,"author":{"gitId":"yorklim"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":657,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":658,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":659,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":660,"author":{"gitId":"solomonng2001"},"content":"**Note:** ClientCare allows you to put up to about 550 characters for `REMARK` before characters are truncated in fullscreen. The limit might vary depending on your screen size, so do check if the remark is fully displayed.","lastModifiedDate":"2024-04-13"},{"lineNumber":661,"author":{"gitId":"getsquared"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":662,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":663,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":664,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":665,"author":{"gitId":"ReganChoy"},"content":"Suppose you want to add a note about James that he has diabetes. James is number 6 on the client list.","lastModifiedDate":"2024-04-10"},{"lineNumber":666,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":667,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `remark 6 r/has diabetes`","lastModifiedDate":"2024-04-10"},{"lineNumber":668,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":669,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/remark.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":670,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":671,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":672,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":673,"author":{"gitId":"ReganChoy"},"content":"Your new remark about James can now be seen at the Client Display window!","lastModifiedDate":"2024-04-10"},{"lineNumber":674,"author":{"gitId":"ReganChoy"},"content":"ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":675,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":676,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_remark.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":677,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":678,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":680,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2024-03-24"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":682,"author":{"gitId":"ReganChoy"},"content":"Do you want to clear the sample clients from ClientCare or start from scratch?","lastModifiedDate":"2024-04-10"},{"lineNumber":683,"author":{"gitId":"ReganChoy"},"content":"You can clear all the clients from the client list with `clear`.","lastModifiedDate":"2024-04-10"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":685,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2024-03-24"},{"lineNumber":686,"author":{"gitId":"solomonng2001"},"content":"* Extraneous fields will be ignored. For example, `clear all` will be interpreted as `clear`.","lastModifiedDate":"2024-04-13"},{"lineNumber":687,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":688,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"warning\" theme\u003d\"danger\" icon\u003d\":warning:\"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":689,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":690,"author":{"gitId":"getsquared"},"content":"**CAUTION**: Clearing is irreversible and will NOT have a confirmation screen","lastModifiedDate":"2024-03-27"},{"lineNumber":691,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":692,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":693,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":694,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":695,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":696,"author":{"gitId":"ReganChoy"},"content":"Suppose you want to remove all the sample client data from ClientCare.","lastModifiedDate":"2024-04-10"},{"lineNumber":697,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":698,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `clear`","lastModifiedDate":"2024-04-10"},{"lineNumber":699,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":700,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/clear.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":701,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":702,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":703,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":704,"author":{"gitId":"ReganChoy"},"content":"ClientCare has been cleared!","lastModifiedDate":"2024-04-10"},{"lineNumber":705,"author":{"gitId":"ReganChoy"},"content":"ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":706,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":707,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_clear.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":708,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":709,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":710,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":711,"author":{"gitId":"ReganChoy"},"content":"### Sorting the client list : `sort`","lastModifiedDate":"2024-04-04"},{"lineNumber":712,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":713,"author":{"gitId":"ReganChoy"},"content":"Want to see all your VIP clients first? You can sort the client list with `sort`:","lastModifiedDate":"2024-04-10"},{"lineNumber":714,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":715,"author":{"gitId":"ReganChoy"},"content":"Format: `sort CRITERIA o/ORDER`","lastModifiedDate":"2024-04-04"},{"lineNumber":716,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":717,"author":{"gitId":"ReganChoy"},"content":"* Sorts the client list by the specified `CRITERIA`. Sorting `CRITERIA` is *case-insensitive*.","lastModifiedDate":"2024-04-04"},{"lineNumber":718,"author":{"gitId":"solomonng2001"},"content":"* Sorting `CRITERIA` can be `name`, `birthday`, `priority`.","lastModifiedDate":"2024-04-13"},{"lineNumber":719,"author":{"gitId":"ReganChoy"},"content":"* Sorting `ORDER` is specified by `ORDER` and can be `asc` for ascending or `desc` for descending. Sorting `ORDER` is *case-insensitive*","lastModifiedDate":"2024-04-04"},{"lineNumber":720,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":721,"author":{"gitId":"ReganChoy"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":722,"author":{"gitId":"ReganChoy"},"content":"* `sort name o/asc` sorts the client list by name in ascending order.","lastModifiedDate":"2024-04-04"},{"lineNumber":723,"author":{"gitId":"ReganChoy"},"content":"* `sort priority o/desc` sorts the client list by priority in descending order.","lastModifiedDate":"2024-04-04"},{"lineNumber":724,"author":{"gitId":"solomonng2001"},"content":"* `sort birthday o/asc` sorts the client list by birthday date in ascending order.","lastModifiedDate":"2024-04-11"},{"lineNumber":725,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":726,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":727,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":728,"author":{"gitId":"ReganChoy"},"content":"Suppose you want to sort the client list by priority where the most important clients appear first.","lastModifiedDate":"2024-04-10"},{"lineNumber":729,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":730,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `sort priority o/desc`","lastModifiedDate":"2024-04-10"},{"lineNumber":731,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":732,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/sort.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":733,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":734,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":735,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":736,"author":{"gitId":"ReganChoy"},"content":"Clients of a higher priority will now show up first!","lastModifiedDate":"2024-04-10"},{"lineNumber":737,"author":{"gitId":"ReganChoy"},"content":"ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":738,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":739,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_sort.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":740,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":741,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":742,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":743,"author":{"gitId":"ReganChoy"},"content":"## Schedule related commands","lastModifiedDate":"2024-03-24"},{"lineNumber":744,"author":{"gitId":"ReganChoy"},"content":"Not sure what is happening next? Fear not, ClientCare can help manage your schedule too!","lastModifiedDate":"2024-03-24"},{"lineNumber":745,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":746,"author":{"gitId":"yorklim"},"content":"ClientCare reminds you of your upcoming appointments as well as clients you have not met in a while. It also reminds you","lastModifiedDate":"2024-04-04"},{"lineNumber":747,"author":{"gitId":"yorklim"},"content":"of your clients\u0027 birthday!","lastModifiedDate":"2024-04-04"},{"lineNumber":748,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":749,"author":{"gitId":"solomonng2001"},"content":"![Reminders panel\u0027](images/ug/reminders.png \u003d600x)","lastModifiedDate":"2024-04-05"},{"lineNumber":750,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":751,"author":{"gitId":"solomonng2001"},"content":"**Last Met Display:** Shows you the list of clients you have not met in a while (that do not have an active schedule). You can set the overdue period using [`set`](#setting-last-met-overdue-period-set), which by default is 90 days.","lastModifiedDate":"2024-04-13"},{"lineNumber":752,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":753,"author":{"gitId":"yorklim"},"content":"**Schedule Display:** Shows you the list of clients you have an appointment with.","lastModifiedDate":"2024-04-04"},{"lineNumber":754,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":755,"author":{"gitId":"yorklim"},"content":"**Birthday Display:** Shows you the list of clients whose birthday is within the next 7 days.","lastModifiedDate":"2024-04-04"},{"lineNumber":756,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":757,"author":{"gitId":"yorklim"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":758,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":759,"author":{"gitId":"ReganChoy"},"content":"ClientCare offers the following commands to help you manage your schedule:","lastModifiedDate":"2024-03-24"},{"lineNumber":760,"author":{"gitId":"ReganChoy"},"content":"* [Updating last met: `met`](#updating-last-met-met)","lastModifiedDate":"2024-03-24"},{"lineNumber":761,"author":{"gitId":"yorklim"},"content":"* [Setting last met overdue period: `set`](#setting-last-met-overdue-period-set)","lastModifiedDate":"2024-04-04"},{"lineNumber":762,"author":{"gitId":"ReganChoy"},"content":"* [Scheduling appointments: `schedule`](#scheduling-appointments-schedule)","lastModifiedDate":"2024-04-13"},{"lineNumber":763,"author":{"gitId":"ReganChoy"},"content":"* [Marking appointments: `mark`](#marking-appointments-mark)","lastModifiedDate":"2024-04-13"},{"lineNumber":764,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":765,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":766,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":767,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":768,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":769,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":770,"author":{"gitId":"ReganChoy"},"content":"### Updating last met : `met`","lastModifiedDate":"2024-03-19"},{"lineNumber":771,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":772,"author":{"gitId":"ReganChoy"},"content":"Just met up with a client? You can update the last met date you had with your client with `met`.","lastModifiedDate":"2024-04-10"},{"lineNumber":773,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":774,"author":{"gitId":"ReganChoy"},"content":"Format: `met INDEX d/DATE`","lastModifiedDate":"2024-03-27"},{"lineNumber":775,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":776,"author":{"gitId":"ReganChoy"},"content":"* Updates the client at the specified `INDEX`.","lastModifiedDate":"2024-03-19"},{"lineNumber":777,"author":{"gitId":"ReganChoy"},"content":"* Using `mark` on a schedule **will not** update the last met date.","lastModifiedDate":"2024-03-27"},{"lineNumber":778,"author":{"gitId":"ReganChoy"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":779,"author":{"gitId":"ReganChoy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":780,"author":{"gitId":"ReganChoy"},"content":"* The DATE format must be in **YYYY-MM-DD**. 7 May 2023 should be entered as 2023-05-07.","lastModifiedDate":"2024-03-19"},{"lineNumber":781,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":782,"author":{"gitId":"ReganChoy"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":783,"author":{"gitId":"ReganChoy"},"content":"* `met 2 d/2023-05-07` updates the last met date of the 2nd client in the client list to 7 May 2023.","lastModifiedDate":"2024-03-27"},{"lineNumber":784,"author":{"gitId":"ReganChoy"},"content":"* `met 7 d/2024-07-08` updates the last met date of the 7th client in the client list to 8 July 2024.","lastModifiedDate":"2024-03-27"},{"lineNumber":785,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":786,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":787,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":788,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":789,"author":{"gitId":"ReganChoy"},"content":"**Note:** Clients will only show up in the Last Met Display if the number of days since the last meeting exceeds the period specified.","lastModifiedDate":"2024-03-27"},{"lineNumber":790,"author":{"gitId":"ReganChoy"},"content":"By default, the period is **90 days**.","lastModifiedDate":"2024-03-27"},{"lineNumber":791,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":792,"author":{"gitId":"ReganChoy"},"content":"If there is currently a schedule with the client, he will not show up in the Last Met Display.","lastModifiedDate":"2024-03-27"},{"lineNumber":793,"author":{"gitId":"ReganChoy"},"content":"Rather, you will see him under the Schedule Display.","lastModifiedDate":"2024-03-27"},{"lineNumber":794,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":795,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":796,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":797,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":798,"author":{"gitId":"ReganChoy"},"content":"**Note:** ClientCare will not allow you to meet someone from a future date.","lastModifiedDate":"2024-03-27"},{"lineNumber":799,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":800,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":801,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":802,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":803,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":804,"author":{"gitId":"ReganChoy"},"content":"Suppose you just met up with David Li today! David Li is number 4 on the client list.","lastModifiedDate":"2024-04-10"},{"lineNumber":805,"author":{"gitId":"ReganChoy"},"content":"As of this guide, today is `2024-04-10`, 10 April 2024.","lastModifiedDate":"2024-04-10"},{"lineNumber":806,"author":{"gitId":"ReganChoy"},"content":"Do change the date as required.","lastModifiedDate":"2024-04-10"},{"lineNumber":807,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":808,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `met 4 d/2024-04-10`","lastModifiedDate":"2024-04-10"},{"lineNumber":809,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":810,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/met.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":811,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":812,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":813,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":814,"author":{"gitId":"ReganChoy"},"content":"David Li\u0027s last met date has been updated to 10 April 2024!","lastModifiedDate":"2024-04-10"},{"lineNumber":815,"author":{"gitId":"ReganChoy"},"content":"ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":816,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":817,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_met.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":818,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":819,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":820,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":821,"author":{"gitId":"ReganChoy"},"content":"### Setting last met overdue period : `set`","lastModifiedDate":"2024-03-29"},{"lineNumber":822,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":823,"author":{"gitId":"ReganChoy"},"content":"Feel that 90 days is too short or long of a period? You can set your own desired overdue duration with `set`.","lastModifiedDate":"2024-03-29"},{"lineNumber":824,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":825,"author":{"gitId":"ReganChoy"},"content":"Format: `set NUMBER_OF_DAYS`","lastModifiedDate":"2024-03-29"},{"lineNumber":826,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":827,"author":{"gitId":"ReganChoy"},"content":"* Sets the last met overdue to `NUMBER_OF_DAYS`.","lastModifiedDate":"2024-03-29"},{"lineNumber":828,"author":{"gitId":"ReganChoy"},"content":"* The number of days **must be a non-negative integer** 0, 1, 2, 3, …​","lastModifiedDate":"2024-03-29"},{"lineNumber":829,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":830,"author":{"gitId":"ReganChoy"},"content":"Examples:","lastModifiedDate":"2024-03-29"},{"lineNumber":831,"author":{"gitId":"ReganChoy"},"content":"* `set 75` updates the last met overdue duration to 75 days. Clients who you have not met in more than 75 days or","lastModifiedDate":"2024-03-29"},{"lineNumber":832,"author":{"gitId":"ReganChoy"},"content":"no appointments are scheduled will show up in the Last Met reminder display.","lastModifiedDate":"2024-03-29"},{"lineNumber":833,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":834,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":835,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":836,"author":{"gitId":"ReganChoy"},"content":"Suppose you feel that 90 days is too long, and we want to be reminded to meet all your clients every 30 days.","lastModifiedDate":"2024-04-10"},{"lineNumber":837,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":838,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `set 30`","lastModifiedDate":"2024-04-10"},{"lineNumber":839,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":840,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":841,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/set.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":842,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":843,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":844,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":845,"author":{"gitId":"ReganChoy"},"content":"All clients which you have not met in 30 days will be shown in the Last Met Display!","lastModifiedDate":"2024-04-10"},{"lineNumber":846,"author":{"gitId":"ReganChoy"},"content":"ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":847,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":848,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_set.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":849,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":850,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":851,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":852,"author":{"gitId":"ReganChoy"},"content":"### Scheduling appointments : `schedule`","lastModifiedDate":"2024-03-19"},{"lineNumber":853,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":854,"author":{"gitId":"solomonng2001"},"content":"Got a new appointment or a rescheduling is needed?","lastModifiedDate":"2024-04-13"},{"lineNumber":855,"author":{"gitId":"ReganChoy"},"content":"You can schedule an appointment date and time you have with your client with `schedule`.","lastModifiedDate":"2024-03-25"},{"lineNumber":856,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":857,"author":{"gitId":"ReganChoy"},"content":"Format: `schedule INDEX d/DATETIME`","lastModifiedDate":"2024-03-27"},{"lineNumber":858,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":859,"author":{"gitId":"ReganChoy"},"content":"* Schedules an appointment the client at the specified `INDEX`.","lastModifiedDate":"2024-03-19"},{"lineNumber":860,"author":{"gitId":"ReganChoy"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":861,"author":{"gitId":"ReganChoy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":862,"author":{"gitId":"ReganChoy"},"content":"* The DATETIME format must be in **YYYY-MM-DD HH:mm**. 7 May 2023 2.15pm should be entered as 2023-05-07 14:15.","lastModifiedDate":"2024-03-19"},{"lineNumber":863,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":864,"author":{"gitId":"ReganChoy"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":865,"author":{"gitId":"ReganChoy"},"content":"* `schedule 2 d/2023-05-07 22:00` schedules an appointment with the","lastModifiedDate":"2024-03-27"},{"lineNumber":866,"author":{"gitId":"ReganChoy"},"content":"2nd client in the client list at 7 May 2023 10pm.","lastModifiedDate":"2024-03-19"},{"lineNumber":867,"author":{"gitId":"ReganChoy"},"content":"* `schedule 7 d/2024-07-08 07:30` schedules an appointment with the","lastModifiedDate":"2024-03-27"},{"lineNumber":868,"author":{"gitId":"ReganChoy"},"content":"7th client in the client list at 8 July 2024 7.30am.","lastModifiedDate":"2024-03-19"},{"lineNumber":869,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":870,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":871,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":872,"author":{"gitId":"yorklim"},"content":"**Note:** ClientCare will only allow you to create a schedule with someone with a valid future date and time.","lastModifiedDate":"2024-04-09"},{"lineNumber":873,"author":{"gitId":"yorklim"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":874,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":875,"author":{"gitId":"yorklim"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":876,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":877,"author":{"gitId":"yorklim"},"content":"**Tip:** ClientCare currently only keeps track of a single schedule with a client at a time. ","lastModifiedDate":"2024-04-09"},{"lineNumber":878,"author":{"gitId":"yorklim"},"content":"If you have multiple appointments, you can use the `schedule` command to update the appointment date and time to the ","lastModifiedDate":"2024-04-09"},{"lineNumber":879,"author":{"gitId":"yorklim"},"content":"next appointment after the most recent one is done.","lastModifiedDate":"2024-04-09"},{"lineNumber":880,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":881,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":882,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":883,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":884,"author":{"gitId":"ReganChoy"},"content":"Suppose you want to set an appointment with Roy at 4 June 2024 2pm. ","lastModifiedDate":"2024-04-10"},{"lineNumber":885,"author":{"gitId":"ReganChoy"},"content":"Roy is number 6 on the client list. As of this guide, today is 10 April 2024.","lastModifiedDate":"2024-04-10"},{"lineNumber":886,"author":{"gitId":"ReganChoy"},"content":"Hence, you are able to set the appointment on 4 June 2024 2pm.","lastModifiedDate":"2024-04-10"},{"lineNumber":887,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":888,"author":{"gitId":"ReganChoy"},"content":"Remember that you are only able to set a schedule in the future. Do change the appointment data to a future date as required.","lastModifiedDate":"2024-04-10"},{"lineNumber":889,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":890,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `schedule 6 d/2024-06-04 14:00`","lastModifiedDate":"2024-04-10"},{"lineNumber":891,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":892,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/scheduleA.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":893,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":894,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":895,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":896,"author":{"gitId":"ReganChoy"},"content":"An appointment with Roy has been made! Notice how Roy\u0027s name is removed from Last Met Display and added to Schedule Display.","lastModifiedDate":"2024-04-10"},{"lineNumber":897,"author":{"gitId":"ReganChoy"},"content":"ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":898,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":899,"author":{"gitId":"ReganChoy"},"content":"![success_edit](images/ug/success_scheduleA.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":900,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":901,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":902,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":903,"author":{"gitId":"ReganChoy"},"content":"### Marking appointments : `mark`","lastModifiedDate":"2024-03-24"},{"lineNumber":904,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":905,"author":{"gitId":"ReganChoy"},"content":"Done with or need to cancel an appointment?","lastModifiedDate":"2024-03-27"},{"lineNumber":906,"author":{"gitId":"ReganChoy"},"content":"You can mark an appointment as completed with `mark`.","lastModifiedDate":"2024-03-25"},{"lineNumber":907,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":908,"author":{"gitId":"ReganChoy"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-03-24"},{"lineNumber":909,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":910,"author":{"gitId":"ReganChoy"},"content":"* Marks an appointment with the client at the specified `INDEX` as completed.","lastModifiedDate":"2024-03-24"},{"lineNumber":911,"author":{"gitId":"ReganChoy"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-24"},{"lineNumber":912,"author":{"gitId":"ReganChoy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-24"},{"lineNumber":913,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":914,"author":{"gitId":"ReganChoy"},"content":"Examples:","lastModifiedDate":"2024-03-24"},{"lineNumber":915,"author":{"gitId":"ReganChoy"},"content":"* `mark 1` marks the appointment with the","lastModifiedDate":"2024-03-24"},{"lineNumber":916,"author":{"gitId":"ReganChoy"},"content":"  1st client in the client list as completed.","lastModifiedDate":"2024-03-24"},{"lineNumber":917,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":918,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"tip\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":919,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":920,"author":{"gitId":"ReganChoy"},"content":"**Tip:** If you have successfully met up with your client, do remember to update the last met date with `met`!","lastModifiedDate":"2024-03-27"},{"lineNumber":921,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":922,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":923,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":924,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":925,"author":{"gitId":"ReganChoy"},"content":"Suppose you have met up with Roy in the appointment.","lastModifiedDate":"2024-04-10"},{"lineNumber":926,"author":{"gitId":"ReganChoy"},"content":"Roy is number 6 on the client list. ","lastModifiedDate":"2024-04-10"},{"lineNumber":927,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":928,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `mark 6`","lastModifiedDate":"2024-04-10"},{"lineNumber":929,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/mark.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":930,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":931,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":932,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":933,"author":{"gitId":"ReganChoy"},"content":"Your appointment with Roy has been marked as done! ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":934,"author":{"gitId":"ReganChoy"},"content":"Notice how Roy\u0027s name is removed from Schedule Display and added to Last Met Display. This is because you need to use \u0027met\u0027 ","lastModifiedDate":"2024-04-10"},{"lineNumber":935,"author":{"gitId":"ReganChoy"},"content":"to update your Last Met date with Roy.","lastModifiedDate":"2024-04-10"},{"lineNumber":936,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":937,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/success_mark.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":938,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":939,"author":{"gitId":"ReganChoy"},"content":"If your appointment has been cancelled or postponed, you can still use `mark`. You can leave the Last Met date with Roy unchanged.","lastModifiedDate":"2024-04-10"},{"lineNumber":940,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":941,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":942,"author":{"gitId":"ReganChoy"},"content":"## Policy related commands","lastModifiedDate":"2024-03-24"},{"lineNumber":943,"author":{"gitId":"ReganChoy"},"content":"Not sure what policies your clients have? ClientCare got you covered!","lastModifiedDate":"2024-03-24"},{"lineNumber":944,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":945,"author":{"gitId":"yorklim"},"content":"ClientCare helps you to manage all your clients\u0027 policies and allows you to view what policies your clients have easily.","lastModifiedDate":"2024-04-04"},{"lineNumber":946,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":947,"author":{"gitId":"solomonng2001"},"content":"![Policies panel\u0027](images/ug/policies.png \u003d600x)","lastModifiedDate":"2024-04-05"},{"lineNumber":948,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":949,"author":{"gitId":"yorklim"},"content":"You can click on \"Policy ID\" and \"Policy Name\" to sort the policies by their respective field. Clicking once will sort ","lastModifiedDate":"2024-04-09"},{"lineNumber":950,"author":{"gitId":"yorklim"},"content":"in ascending order, and clicking again will sort in descending order.","lastModifiedDate":"2024-04-09"},{"lineNumber":951,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":952,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":953,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":954,"author":{"gitId":"solomonng2001"},"content":"**Note:** Sorting for both \"Policy ID\" and \"Policy Name\" will follow lexicographical order.","lastModifiedDate":"2024-04-13"},{"lineNumber":955,"author":{"gitId":"yorklim"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":956,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":957,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":958,"author":{"gitId":"ReganChoy"},"content":"ClientCare offers the following commands to help you manage your clients\u0027 policies:","lastModifiedDate":"2024-03-24"},{"lineNumber":959,"author":{"gitId":"ReganChoy"},"content":"* [Adding a policy: `addpolicy`](#adding-a-policy-addpolicy)","lastModifiedDate":"2024-03-24"},{"lineNumber":960,"author":{"gitId":"ReganChoy"},"content":"* [Deleting a policy: `deletepolicy`](#deleting-a-policy-deletepolicy)","lastModifiedDate":"2024-03-24"},{"lineNumber":961,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":962,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":963,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":964,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":965,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":966,"author":{"gitId":"yorklim"},"content":"### Adding a policy : `addpolicy`","lastModifiedDate":"2024-03-19"},{"lineNumber":967,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":968,"author":{"gitId":"ReganChoy"},"content":"Just closed a deal?","lastModifiedDate":"2024-03-25"},{"lineNumber":969,"author":{"gitId":"ReganChoy"},"content":"You can add a policy to a client with `addpolicy`.","lastModifiedDate":"2024-03-25"},{"lineNumber":970,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":971,"author":{"gitId":"yorklim"},"content":"Format: `addpolicy INDEX n/POLICY_NAME i/POLICY_ID`","lastModifiedDate":"2024-03-19"},{"lineNumber":972,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":973,"author":{"gitId":"yorklim"},"content":"* Adds a policy to the client at the specified `INDEX`.","lastModifiedDate":"2024-03-19"},{"lineNumber":974,"author":{"gitId":"yorklim"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":975,"author":{"gitId":"yorklim"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":976,"author":{"gitId":"yorklim"},"content":"* The policy ID of the new policy must be unique to other policies the client has.","lastModifiedDate":"2024-03-19"},{"lineNumber":977,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":978,"author":{"gitId":"yorklim"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":979,"author":{"gitId":"yorklim"},"content":"* `addpolicy 1 n/Life i/1` adds a policy named `Life` with policy ID `1` to the 1st client in the client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":980,"author":{"gitId":"yorklim"},"content":"* `addpolicy 3 n/Health i/2` adds a policy named `Health` with policy ID `2` to the 3rd client in the client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":981,"author":{"gitId":"ReganChoy"},"content":"  ","lastModifiedDate":"2024-04-10"},{"lineNumber":982,"author":{"gitId":"yorklim"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":983,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":984,"author":{"gitId":"yorklim"},"content":"**Note:** \"001\" and \"1\" are not considered duplicated policy IDs as different insurance companies have different ","lastModifiedDate":"2024-04-09"},{"lineNumber":985,"author":{"gitId":"yorklim"},"content":"numbering schemes.","lastModifiedDate":"2024-04-09"},{"lineNumber":986,"author":{"gitId":"yorklim"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":987,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":988,"author":{"gitId":"ReganChoy"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":989,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":990,"author":{"gitId":"ReganChoy"},"content":"**Note:** Although most policy IDs will be up to 25 digits, ","lastModifiedDate":"2024-04-10"},{"lineNumber":991,"author":{"gitId":"ReganChoy"},"content":"ClientCare allows you to put up to about 40 digits long before values are truncated in fullscreen. The limit might vary depending on your screen size, so do check if the policy ID is fully displayed.","lastModifiedDate":"2024-04-13"},{"lineNumber":992,"author":{"gitId":"ReganChoy"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":993,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":994,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":995,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":996,"author":{"gitId":"ReganChoy"},"content":"Suppose you have closed a new policy with Roy. His new policy name is Travel and policy ID is 4123.","lastModifiedDate":"2024-04-10"},{"lineNumber":997,"author":{"gitId":"ReganChoy"},"content":"Roy is number 6 on the client list.","lastModifiedDate":"2024-04-10"},{"lineNumber":998,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":999,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `addpolicy 6 n/Travel i/4123`","lastModifiedDate":"2024-04-10"},{"lineNumber":1000,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1001,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/addpolicyA.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":1002,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1003,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":1004,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1005,"author":{"gitId":"ReganChoy"},"content":"Roy\u0027s new policy has been added! ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":1006,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1007,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/success_addpolicyA.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":1008,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1009,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1010,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":1011,"author":{"gitId":"yorklim"},"content":"### Deleting a policy : `deletepolicy`","lastModifiedDate":"2024-03-19"},{"lineNumber":1012,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1013,"author":{"gitId":"ReganChoy"},"content":"Wrong policy or a policy just matured?","lastModifiedDate":"2024-03-25"},{"lineNumber":1014,"author":{"gitId":"ReganChoy"},"content":"You can delete a policy from a client with `deletepolicy`.","lastModifiedDate":"2024-03-25"},{"lineNumber":1015,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1016,"author":{"gitId":"yorklim"},"content":"Format: `deletepolicy INDEX i/POLICY_ID`","lastModifiedDate":"2024-03-19"},{"lineNumber":1017,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1018,"author":{"gitId":"yorklim"},"content":"* Deletes a policy from the client at the specified `INDEX`.","lastModifiedDate":"2024-03-19"},{"lineNumber":1019,"author":{"gitId":"yorklim"},"content":"* The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":1020,"author":{"gitId":"yorklim"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":1021,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1022,"author":{"gitId":"yorklim"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":1023,"author":{"gitId":"yorklim"},"content":"* `deletepolicy 1 i/1` deletes the policy with policy ID `1` from the 1st client in the client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":1024,"author":{"gitId":"yorklim"},"content":"* `deletepolicy 3 i/2` deletes the policy with policy ID `2` from the 3rd client in the client list.","lastModifiedDate":"2024-03-19"},{"lineNumber":1025,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1026,"author":{"gitId":"ReganChoy"},"content":"**Before Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":1027,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1028,"author":{"gitId":"ReganChoy"},"content":"Suppose Roy\u0027s policy has matured. His policy name is Travel and policy ID is 4123.","lastModifiedDate":"2024-04-10"},{"lineNumber":1029,"author":{"gitId":"ReganChoy"},"content":"Roy is number 6 on the client list.","lastModifiedDate":"2024-04-10"},{"lineNumber":1030,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1031,"author":{"gitId":"ReganChoy"},"content":"Type the following into the Command Input: `deletepolicy 6 i/4123`","lastModifiedDate":"2024-04-10"},{"lineNumber":1032,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1033,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/deletepolicyA.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":1034,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1035,"author":{"gitId":"ReganChoy"},"content":"**After Command:**","lastModifiedDate":"2024-04-10"},{"lineNumber":1036,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1037,"author":{"gitId":"ReganChoy"},"content":"Roy\u0027s policy with ID 4123 has been deleted! ClientCare shows a success message in the Feedback Display too.","lastModifiedDate":"2024-04-10"},{"lineNumber":1038,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1039,"author":{"gitId":"ReganChoy"},"content":"![list](images/ug/success_deletepolicyA.png \u003d600x)","lastModifiedDate":"2024-04-10"},{"lineNumber":1040,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":1041,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":1042,"author":{"gitId":"ReganChoy"},"content":"## Miscellaneous","lastModifiedDate":"2024-03-24"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1044,"author":{"gitId":"ReganChoy"},"content":"### Viewing help : `help`","lastModifiedDate":"2024-03-24"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1046,"author":{"gitId":"ReganChoy"},"content":"You can look for help by typing `help`.","lastModifiedDate":"2024-03-25"},{"lineNumber":1047,"author":{"gitId":"ReganChoy"},"content":"You will see a message explaining how to access the help page.","lastModifiedDate":"2024-03-25"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1049,"author":{"gitId":"ReganChoy"},"content":"![help message](images/helpMessage.png \u003d600x)","lastModifiedDate":"2024-03-24"},{"lineNumber":1050,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1051,"author":{"gitId":"ReganChoy"},"content":"Format: `help`","lastModifiedDate":"2024-03-24"},{"lineNumber":1052,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":1053,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":1054,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1058,"author":{"gitId":"ReganChoy"},"content":"Done with all your work? You can exit the program with `exit`.","lastModifiedDate":"2024-03-25"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1062,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":1063,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":1064,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1067,"author":{"gitId":"ReganChoy"},"content":"No manual saving is required!","lastModifiedDate":"2024-03-25"},{"lineNumber":1068,"author":{"gitId":"getsquared"},"content":"ClientCare data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-19"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1070,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":1071,"author":{"gitId":"ReganChoy"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":1075,"author":{"gitId":"yorklim"},"content":"ClientCare data is automatically saved as a file `[ClientCare file location]/data/clientcare.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-11"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":1077,"author":{"gitId":"yorklim"},"content":"\u003cbox type\u003d\"warning\" theme\u003d\"danger\" icon\u003d\":warning:\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1079,"author":{"gitId":"getsquared"},"content":"**CAUTION**: If your changes to the data file makes its format invalid, ClientCare will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1080,"author":{"gitId":"getsquared"},"content":"Furthermore, certain edits can cause the ClientCare to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-19"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1083,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1084,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1088,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":1089,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":1090,"author":{"gitId":"getsquared"},"content":"# FAQ","lastModifiedDate":"2024-03-25"},{"lineNumber":1091,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1092,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":1093,"author":{"gitId":"getsquared"},"content":"**Q** : How do I transfer my data to another computer?\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1094,"author":{"gitId":"getsquared"},"content":"**A** : Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ClientCare home folder.","lastModifiedDate":"2024-03-19"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1096,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1097,"author":{"gitId":"ReganChoy"},"content":"**Q** : Why is ClientCare saying my date format is wrong?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1098,"author":{"gitId":"getsquared"},"content":"**A** : Ensure that your date format is in YYYY-MM-DD instead of DD-MM-YYYY.","lastModifiedDate":"2024-04-10"},{"lineNumber":1099,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1100,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1101,"author":{"gitId":"ReganChoy"},"content":"**Q** : Why is my client not showing up in Last Met Display?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1102,"author":{"gitId":"ReganChoy"},"content":"**A** : Check if your client already has an open appointment scheduled. In addition, the default number of days before a client shows up in Last Met Display is 90 days.","lastModifiedDate":"2024-04-10"},{"lineNumber":1103,"author":{"gitId":"ReganChoy"},"content":"This means the last met duration must be 91 days or more.","lastModifiedDate":"2024-04-10"},{"lineNumber":1104,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1105,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1106,"author":{"gitId":"ReganChoy"},"content":"**Q** : Where is my 2nd schedule I made for my client?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1107,"author":{"gitId":"ReganChoy"},"content":"**A** : Currently, ClientCare only allows users to have 1 schedule per client. Scheduling another appointment will overwrite the previous one.","lastModifiedDate":"2024-04-10"},{"lineNumber":1108,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1109,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1110,"author":{"gitId":"ReganChoy"},"content":"**Q** : Can I use ClientCare on my tablets or mobile devices?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1111,"author":{"gitId":"ReganChoy"},"content":"**A** : As of now, no. ClientCare is only supported on Desktop devices that can run Java. Not to worry, mobile device support is currently in development!","lastModifiedDate":"2024-04-10"},{"lineNumber":1112,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1113,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1114,"author":{"gitId":"solomonng2001"},"content":"**Q** : Why can ClientCare only be found on GitHub?\u003cbr/\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":1115,"author":{"gitId":"solomonng2001"},"content":"**A** : GitHub allows ClientCare to be vetted by other users and programmers too. This ensures ClientCare to be up for public scrutiny, so you know ClientCare can be trusted.","lastModifiedDate":"2024-04-13"},{"lineNumber":1116,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1117,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1118,"author":{"gitId":"ReganChoy"},"content":"**Q** : I tried following the guides for `schedule` and `met`. I encountered errors telling me that the dates are invalid.\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1119,"author":{"gitId":"ReganChoy"},"content":"**A** : The `schedule` and `met` commands are time-sensitive. The dates provided in the examples may no longer be relevant.","lastModifiedDate":"2024-04-10"},{"lineNumber":1120,"author":{"gitId":"ReganChoy"},"content":"You can easily change the dates to a future or past date to suit your needs.","lastModifiedDate":"2024-04-10"},{"lineNumber":1121,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1122,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1123,"author":{"gitId":"ReganChoy"},"content":"**Q** : I accidentally cleared my data in ClientCare. Can I get my data back?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1124,"author":{"gitId":"ReganChoy"},"content":"**A** : Unfortunately, you cannot get back your data which has been cleared. In the future, you can consider copying the data folder to save as backup.","lastModifiedDate":"2024-04-10"},{"lineNumber":1125,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1126,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1127,"author":{"gitId":"ReganChoy"},"content":"**Q** : A new ClientCare version has been released. Can I use my existing my data on the new version?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1128,"author":{"gitId":"ReganChoy"},"content":"**A** : Certainly! You just need to copy and overwrite the data folder.","lastModifiedDate":"2024-04-10"},{"lineNumber":1129,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1130,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1131,"author":{"gitId":"ReganChoy"},"content":"**Q** : What happens if I edit the data files directly?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1132,"author":{"gitId":"ReganChoy"},"content":"**A** : If you have edited the data file and have used valid values and formatting, ClientCare will load with the updated data. However, if invalid values or formatting is detected,","lastModifiedDate":"2024-04-10"},{"lineNumber":1133,"author":{"gitId":"ReganChoy"},"content":"ClientCare will regard it as data corruption and reset the data by to default state. This means you can lose all your work and data!","lastModifiedDate":"2024-04-10"},{"lineNumber":1134,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1136,"author":{"gitId":"ReganChoy"},"content":"**Q** : I am not an insurance agent. Is ClientCare still relevant for me?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1137,"author":{"gitId":"ReganChoy"},"content":"**A** : Sure! You can still use ClientCare to manage all your contact details and personal scheduling affairs. The only features that will be less relevant are those under policies.","lastModifiedDate":"2024-04-10"},{"lineNumber":1138,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1139,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1140,"author":{"gitId":"ReganChoy"},"content":"**Q** : Can someone steal my data on ClientCare?\u003cbr/\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":1141,"author":{"gitId":"ReganChoy"},"content":"**A** : All data in ClientCare is stored only in your own device. Unless you give someone the data folder or has access to your computer, no one can steal your data.","lastModifiedDate":"2024-04-10"},{"lineNumber":1142,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1146,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":1147,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":1148,"author":{"gitId":"ReganChoy"},"content":"# Known issues and Troubleshooting","lastModifiedDate":"2024-03-27"},{"lineNumber":1149,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":1151,"author":{"gitId":"ReganChoy"},"content":"#### Opening ClientCare app ","lastModifiedDate":"2024-03-27"},{"lineNumber":1152,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1153,"author":{"gitId":"ReganChoy"},"content":"**If you are unable to open ClientCare by clicking**, here is another way.","lastModifiedDate":"2024-03-27"},{"lineNumber":1154,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1155,"author":{"gitId":"getsquared"},"content":"**For Windows:**\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1156,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1157,"author":{"gitId":"getsquared"},"content":"1. First, click on the Address Bar as shown below. It should turn !!blue!! upon clicking.","lastModifiedDate":"2024-03-27"},{"lineNumber":1158,"author":{"gitId":"getsquared"},"content":"       ","lastModifiedDate":"2024-03-27"},{"lineNumber":1159,"author":{"gitId":"ReganChoy"},"content":"![folder](images/ug/windows%20saveDirectory.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":1160,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1161,"author":{"gitId":"getsquared"},"content":"2. Type `powershell` into the Address Bar and press ENTER on your keyboard","lastModifiedDate":"2024-03-27"},{"lineNumber":1162,"author":{"gitId":"getsquared"},"content":"   ","lastModifiedDate":"2024-03-27"},{"lineNumber":1163,"author":{"gitId":"ReganChoy"},"content":"![bar](images/ug/windows%20powershell.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":1164,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1165,"author":{"gitId":"getsquared"},"content":"3. Your PowerShell Terminal should be activated. Next, type the following: `java -jar clientcare.jar`","lastModifiedDate":"2024-03-27"},{"lineNumber":1166,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1167,"author":{"gitId":"ReganChoy"},"content":"![jar](images/ug/windows%20java%20jar.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":1168,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1169,"author":{"gitId":"getsquared"},"content":"4. Hit ENTER and there we go! You should see ClientCare running on your computer! \u003cbr/\u003e \u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1170,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1171,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1172,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1173,"author":{"gitId":"ReganChoy"},"content":"**For macOS:**","lastModifiedDate":"2024-03-27"},{"lineNumber":1174,"author":{"gitId":"solomonng2001"},"content":"1. If you see the following prompt, fret not! Simply click on OK and follow the following.","lastModifiedDate":"2024-03-27"},{"lineNumber":1175,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1176,"author":{"gitId":"solomonng2001"},"content":"![Unidentified developer prompt on macOS](images/ug/unidentifiedDeveloperMacOS.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":1177,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1179,"author":{"gitId":"solomonng2001"},"content":"2. To bypass the prompt, right-click on the \u0027clientcare.jar\u0027 app and select \u0027Open\u0027.","lastModifiedDate":"2024-03-27"},{"lineNumber":1180,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1181,"author":{"gitId":"solomonng2001"},"content":"![Bypassing the prompt on macOS](images/ug/bypassPromptMacOS.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":1182,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1183,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1184,"author":{"gitId":"solomonng2001"},"content":"3. Select \u0027Open\u0027 to start the application.","lastModifiedDate":"2024-03-27"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":1186,"author":{"gitId":"getsquared"},"content":"![Confirmation to open the app on macOS](images/ug/confirmOpenMacOS.png \u003d600x)","lastModifiedDate":"2024-03-27"},{"lineNumber":1187,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1188,"author":{"gitId":"getsquared"},"content":"\u003cbr/\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":1190,"author":{"gitId":"ReganChoy"},"content":"#### Multiple Screens","lastModifiedDate":"2024-03-27"},{"lineNumber":1191,"author":{"gitId":"ReganChoy"},"content":"**When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the application will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2024-03-27"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1195,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":1197,"author":{"gitId":"ReganChoy"},"content":"# Glossary","lastModifiedDate":"2024-04-04"},{"lineNumber":1198,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1199,"author":{"gitId":"ReganChoy"},"content":"1. **Desktop Application**","lastModifiedDate":"2024-04-04"},{"lineNumber":1200,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1201,"author":{"gitId":"ReganChoy"},"content":"This refers to electronic devices that ClientCare can run on. This includes devices such as computers and laptops. ","lastModifiedDate":"2024-04-04"},{"lineNumber":1202,"author":{"gitId":"ReganChoy"},"content":"Mobile devices such as phones and tablets are not supported by ClientCare.","lastModifiedDate":"2024-04-04"},{"lineNumber":1203,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1204,"author":{"gitId":"ReganChoy"},"content":"2. **Features**","lastModifiedDate":"2024-04-04"},{"lineNumber":1205,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1206,"author":{"gitId":"ReganChoy"},"content":"These are things ClientCare can do!","lastModifiedDate":"2024-04-04"},{"lineNumber":1207,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1208,"author":{"gitId":"ReganChoy"},"content":"3. **Command**","lastModifiedDate":"2024-04-04"},{"lineNumber":1209,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1210,"author":{"gitId":"ReganChoy"},"content":"This is the text you type to tell ClientCare what to do!","lastModifiedDate":"2024-04-04"},{"lineNumber":1211,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1212,"author":{"gitId":"ReganChoy"},"content":"4. **Hyperlinks**","lastModifiedDate":"2024-04-04"},{"lineNumber":1213,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1214,"author":{"gitId":"ReganChoy"},"content":"These are texts that you can click on. They will either bring you to another section in the User Guide or open up","lastModifiedDate":"2024-04-04"},{"lineNumber":1215,"author":{"gitId":"ReganChoy"},"content":"the relevant website link. Not to worry, all external website links are from official distributors and are safe!","lastModifiedDate":"2024-04-04"},{"lineNumber":1216,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1217,"author":{"gitId":"ReganChoy"},"content":"5. **Fields**","lastModifiedDate":"2024-04-04"},{"lineNumber":1218,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1219,"author":{"gitId":"ReganChoy"},"content":"These are inputs that you can choose! For example: `name`, `phone number`, `date` are all fields you can type into ClientCare.","lastModifiedDate":"2024-04-04"},{"lineNumber":1220,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1221,"author":{"gitId":"ReganChoy"},"content":"6. **Java 11**","lastModifiedDate":"2024-04-04"},{"lineNumber":1222,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1223,"author":{"gitId":"ReganChoy"},"content":"Java is the programming language that ClientCare is built on! The number 11 refers to Java version. Not to worry!","lastModifiedDate":"2024-04-04"},{"lineNumber":1224,"author":{"gitId":"ReganChoy"},"content":"You do not need to know programming to use ClientCare.","lastModifiedDate":"2024-04-04"},{"lineNumber":1225,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1226,"author":{"gitId":"ReganChoy"},"content":"7. **Index**","lastModifiedDate":"2024-04-04"},{"lineNumber":1227,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1228,"author":{"gitId":"ReganChoy"},"content":"This is the number which is assigned to a particular Client. For example, the 3rd client in the list will have the index `3`.","lastModifiedDate":"2024-04-04"},{"lineNumber":1229,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1230,"author":{"gitId":"ReganChoy"},"content":"8. **Integer**","lastModifiedDate":"2024-04-04"},{"lineNumber":1231,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1232,"author":{"gitId":"ReganChoy"},"content":"This is a whole number. No decimal or fractions is allowed.","lastModifiedDate":"2024-04-04"},{"lineNumber":1233,"author":{"gitId":"ReganChoy"},"content":"-7 , -1, 0, 7, 14 are all integers. 3.14 or 5/8 are not integers.","lastModifiedDate":"2024-04-04"},{"lineNumber":1234,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1235,"author":{"gitId":"ReganChoy"},"content":"9. **Address**","lastModifiedDate":"2024-04-04"},{"lineNumber":1236,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1237,"author":{"gitId":"ReganChoy"},"content":"This is the place your client lives at.","lastModifiedDate":"2024-04-04"},{"lineNumber":1238,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1239,"author":{"gitId":"ReganChoy"},"content":"10. **Prefix**","lastModifiedDate":"2024-04-04"},{"lineNumber":1240,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1241,"author":{"gitId":"ReganChoy"},"content":"These are characters that you need to put in front of certain fields. For example, phone numbers have the prefix `c/` and","lastModifiedDate":"2024-04-04"},{"lineNumber":1242,"author":{"gitId":"ReganChoy"},"content":"names have the prefix `n/`. Indexes do not have any prefix in front.","lastModifiedDate":"2024-04-04"},{"lineNumber":1243,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1244,"author":{"gitId":"ReganChoy"},"content":"For more information, you can visit our [**Text Command Introduction**](#text-commands-introduction) for a more comprehensive explanation.","lastModifiedDate":"2024-04-04"},{"lineNumber":1245,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1246,"author":{"gitId":"ReganChoy"},"content":"11. **Email**","lastModifiedDate":"2024-04-04"},{"lineNumber":1247,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1248,"author":{"gitId":"ReganChoy"},"content":"Emails have 2 components. The `local-part` and the `domain`. The `local-part` often refers to the username while `domain` is where","lastModifiedDate":"2024-04-04"},{"lineNumber":1249,"author":{"gitId":"ReganChoy"},"content":"the email was created from. ","lastModifiedDate":"2024-04-04"},{"lineNumber":1250,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1251,"author":{"gitId":"ReganChoy"},"content":"For example: mike@gmail.com","lastModifiedDate":"2024-04-04"},{"lineNumber":1252,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1253,"author":{"gitId":"ReganChoy"},"content":"`mike` will be the `local-part` while `gmail.com` will be the `domain`.","lastModifiedDate":"2024-04-04"},{"lineNumber":1254,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1255,"author":{"gitId":"ReganChoy"},"content":"12. **Not Cumulative**","lastModifiedDate":"2024-04-04"},{"lineNumber":1256,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1257,"author":{"gitId":"ReganChoy"},"content":"This means that the new value added will not be added on top of the existing information. This is especially so for Tags.","lastModifiedDate":"2024-04-04"},{"lineNumber":1258,"author":{"gitId":"ReganChoy"},"content":"For example, if a Client currently has 2 tags `friend` and `important`, editing the tags with `high` will override the previous 2 tags.","lastModifiedDate":"2024-04-04"},{"lineNumber":1259,"author":{"gitId":"getsquared"},"content":"The Client will only have the `high` tag upon a success edit. To preserve all the tags, users must key in all previous tags in addition","lastModifiedDate":"2024-04-10"},{"lineNumber":1260,"author":{"gitId":"ReganChoy"},"content":"to their new tag they wish to add.","lastModifiedDate":"2024-04-04"},{"lineNumber":1261,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1262,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":1263,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1264,"author":{"gitId":"ReganChoy"},"content":"13. **Last Met Overdue Period**","lastModifiedDate":"2024-04-04"},{"lineNumber":1265,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1266,"author":{"gitId":"ReganChoy"},"content":"This refers to the number of days users can wait and not meet up with the Client before the Client shows up in the Last Met Display.","lastModifiedDate":"2024-04-04"},{"lineNumber":1267,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1268,"author":{"gitId":"ReganChoy"},"content":"The default period is 90 days. You can change this value using the `set` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":1269,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1270,"author":{"gitId":"ReganChoy"},"content":"14. **Miscellaneous**","lastModifiedDate":"2024-04-04"},{"lineNumber":1271,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1272,"author":{"gitId":"ReganChoy"},"content":"This refers to features or commands in ClientCare that are not related to Client, Schedules or Policies.","lastModifiedDate":"2024-04-04"},{"lineNumber":1273,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1274,"author":{"gitId":"getsquared"},"content":"15. **Truncated**","lastModifiedDate":"2024-04-10"},{"lineNumber":1275,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":1276,"author":{"gitId":"getsquared"},"content":"If a text is truncated in the display, this means that the full text has been shortened, with an ellipsis `...` at the end.","lastModifiedDate":"2024-04-10"},{"lineNumber":1277,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1278,"author":{"gitId":"ReganChoy"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":1279,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":1280,"author":{"gitId":"getsquared"},"content":"# Command summary","lastModifiedDate":"2024-03-25"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1282,"author":{"gitId":"ReganChoy"},"content":"| Action                                               | Format, Examples                                                                                                                                                                                                 |","lastModifiedDate":"2024-03-19"},{"lineNumber":1283,"author":{"gitId":"ReganChoy"},"content":"|------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-04"},{"lineNumber":1284,"author":{"gitId":"getsquared"},"content":"| [**Add**](#adding-a-client-add)                      | `add n/NAME c/PHONE_NUMBER e/EMAIL a/ADDRESS d/BIRTHDAY p/PRIORITY [t/TAG]…​` \u003cbr/\u003e e.g.`add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 d/1990-01-01 p/medium t/friend t/colleague` |","lastModifiedDate":"2024-03-27"},{"lineNumber":1285,"author":{"gitId":"getsquared"},"content":"| [**Delete**](#deleting-a-client-delete)              | `delete INDEX`\u003cbr/\u003e e.g. `delete 3`                                                                                                                                                                              |","lastModifiedDate":"2024-03-27"},{"lineNumber":1286,"author":{"gitId":"ReganChoy"},"content":"| [**Edit**](#editing-a-client-edit)                   | `edit INDEX [n/NAME] [c/PHONE] [e/EMAIL] [a/ADDRESS] [d/BIRTHDAY] [p/PRIORITY] [t/TAG]…​`\u003cbr/\u003e e.g.`edit 2 n/James Lee e/jameslee@example.com`                                                                   |","lastModifiedDate":"2024-04-04"},{"lineNumber":1287,"author":{"gitId":"getsquared"},"content":"| [**List**](#listing-all-clients-list)                | `list`                                                                                                                                                                                                           |","lastModifiedDate":"2024-03-27"},{"lineNumber":1288,"author":{"gitId":"getsquared"},"content":"| [**View**](#viewing-a-client-view)                   | `view INDEX`\u003cbr/\u003e e.g, `view 1`                                                                                                                                                                                  |","lastModifiedDate":"2024-03-27"},{"lineNumber":1289,"author":{"gitId":"ReganChoy"},"content":"| [**Find**](#finding-client-by-name-find)             | `find KEYWORD [MORE_KEYWORDS]`\u003cbr/\u003e e.g. `find James Jake`                                                                                                                                                       |","lastModifiedDate":"2024-04-04"},{"lineNumber":1290,"author":{"gitId":"ReganChoy"},"content":"| [**Remark**](#adding-notes-to-a-client-remark)       | `remark INDEX [r/REMARK]`\u003cbr/\u003e e.g. `remark 3 r/Has 2 school-age children and 1 elderly dependent`                                                                                                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":1291,"author":{"gitId":"getsquared"},"content":"| [**Clear**](#clearing-all-entries-clear)             | `clear`                                                                                                                                                                                                          |","lastModifiedDate":"2024-03-27"},{"lineNumber":1292,"author":{"gitId":"ReganChoy"},"content":"| [**Sort**](#sorting-the-client-list-sort)            | `sort CRITERIA o/ORDER` \u003cbr/\u003e e.g. `sort priority o/desc`                                                                                                                                                        |","lastModifiedDate":"2024-04-05"},{"lineNumber":1293,"author":{"gitId":"ReganChoy"},"content":"| [**LastMet**](#updating-last-met-met)                | `met INDEX d/DATE`\u003cbr/\u003e e.g. `met 2 d/2023-05-07`                                                                                                                                                                |","lastModifiedDate":"2024-04-04"},{"lineNumber":1294,"author":{"gitId":"ReganChoy"},"content":"| [**Set**](#setting-last-met-overdue-period-set)      | `set NUMBER_OF_DAYS`\u003cbr/\u003e e.g. `set 5`                                                                                                                                                                           |","lastModifiedDate":"2024-04-05"},{"lineNumber":1295,"author":{"gitId":"ReganChoy"},"content":"| [**Schedule**](#scheduling-appointments-schedule)    | `schedule INDEX d/DATETIME`\u003cbr/\u003e e.g. `schedule 2 d/2023-05-07 22:00`                                                                                                                                            |                                                                                                                               |","lastModifiedDate":"2024-04-04"},{"lineNumber":1296,"author":{"gitId":"getsquared"},"content":"| [**Mark**](#marking-appointments-mark)               | `mark INDEX`\u003cbr/\u003e e.g. `mark 2`                                                                                                                                                                                  |                                                                                                                               |","lastModifiedDate":"2024-03-27"},{"lineNumber":1297,"author":{"gitId":"ReganChoy"},"content":"| [**Add Policy**](#adding-a-policy-addpolicy)         | `addpolicy INDEX n/POLICY_NAME i/POLICY_ID` \u003cbr/\u003e e.g. `addpolicy 1 n/Life i/1`                                                                                                                                  |","lastModifiedDate":"2024-03-25"},{"lineNumber":1298,"author":{"gitId":"ReganChoy"},"content":"| [**Delete Policy**](#deleting-a-policy-deletepolicy) | `deletepolicy INDEX i/POLICY_ID` \u003cbr/\u003e e.g. `deletepolicy 1 i/1`                                                                                                                                                 |","lastModifiedDate":"2024-03-25"},{"lineNumber":1299,"author":{"gitId":"ReganChoy"},"content":"| [**Help**](#viewing-help-help)                       | `help`                                                                                                                                                                                                           |","lastModifiedDate":"2024-03-24"},{"lineNumber":1300,"author":{"gitId":"ReganChoy"},"content":"| [**Exit**](#exiting-the-program-exit)                | `exit`                                                                                                                                                                                                           |","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"getsquared":190,"ReganChoy":840,"solomonng2001":41,"yorklim":79,"-":150}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eClientCare\u003c/a\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S2-CS2103T-W12-1/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"getsquared":1,"-":66}},{"path":"docs/diagrams/AddPolicyObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"!include style.puml","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"skinparam objectFontColor white","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003e:AddPolicyCommand\u003c/u\u003e\" as AddPolicyCommand LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003e:AddPolicyCommandParser\u003c/u\u003e\" as AddPolicyCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003e:AddressBookParser\u003c/u\u003e\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003e:Model\u003c/u\u003e\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003e:CommandResult\u003c/u\u003e\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003epolicyAddedPerson:Person\" as Person1 LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003epersonToAddPolicy:Person\" as Person2 LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003e:ArgumentMultimap\" as ArgumentMultimap LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"object \"\u003cu\u003e:ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"AddressBookParser --\u003e AddPolicyCommandParser : calls","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"AddressBookParser --\u003e AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"AddPolicyCommandParser -\u003e AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"AddPolicyCommandParser --\u003e ArgumentMultimap : instantiates","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"ParserUtil --\u003e ArgumentMultimap : parses","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand --\u003e Person1","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand --\u003e Person2","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand --\u003e Model","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand -right-\u003e CommandResult : outputs","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"Model --\u003e Person2 : Removes","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"Model --\u003e Person1 : Updates","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yorklim":26}},{"path":"docs/diagrams/AddPolicySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"!include style.puml","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"participant \"a:AddPolicyCommand\" as AddPolicyCommand LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"[-\u003e LogicManager : execute(\"addpolicy 1 n/Travel i/1\")","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"activate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addpolicy 1 n/Travel i/1\")","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"create AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"AddressBookParser -\u003e AddPolicyCommand : AddPolicyCommand(1, newPolicy)","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"activate AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand --\u003e AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"deactivate AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"LogicManager -\u003e AddPolicyCommand : execute()","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"activate AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand -\u003e Model : setPerson(personToAddPolicy, policyAddedPerson)","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"Model --\u003e AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand -\u003e Model : setDisplayClient(policyAddedPerson)","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"Model --\u003e AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"create CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand --\u003e CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"activate CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"CommandResult --\u003e AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"deactivate AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"AddPolicyCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"destroy AddPolicyCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"yorklim":60}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e Birthday","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e LastMet","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e Schedule","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e Priority","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e PolicyList","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"PolicyList --\u003e \"*\" Policy","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ReganChoy":5,"yorklim":2,"-":21}},{"path":"docs/diagrams/LastMetObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"skinparam objectFontColor white","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003e:LastMetCommand\u003c/u\u003e\" as LastMetCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003e:LastMetCommandParser\u003c/u\u003e\" as LastMetCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003e:AddressBookParser\u003c/u\u003e\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003e:Model\u003c/u\u003e\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003e:CommandResult\u003c/u\u003e\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003emetPerson:Person\" as Person1 LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003epersonToMeet:Person\" as Person2 LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003e:ArgumentMultimap\" as ArgumentMultimap LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"object \"\u003cu\u003e:ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"AddressBookParser --\u003e LastMetCommandParser : calls","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"AddressBookParser --\u003e LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"LastMetCommandParser -\u003e LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"LastMetCommandParser --\u003e ArgumentMultimap : instantiates","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"ParserUtil --\u003e ArgumentMultimap : parses","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand --\u003e Person1","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand --\u003e Person2","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand --\u003e Model","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand -right-\u003e CommandResult : outputs","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"Model --\u003e Person2 : Removes","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"Model --\u003e Person1 : Updates","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ReganChoy":26}},{"path":"docs/diagrams/LastMetSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"!include style.puml","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"participant \"a:LastMetCommand\" as LastMetCommand LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"end box","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"[-\u003e LogicManager : execute(\"met 1 d/2024-03-04\")","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"activate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"met 1 d/2024-03-04\")","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"create LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"AddressBookParser -\u003e LastMetCommand : LastMetCommand(1, newLastMet)","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"activate LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand --\u003e AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"deactivate LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"LogicManager -\u003e LastMetCommand : execute()","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"activate LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand -\u003e Model : setPerson(personToMeet, metPerson)","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"Model --\u003e LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand -\u003e Model : setDisplayClient(metPerson)","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"activate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"Model --\u003e LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"deactivate Model","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"create CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand --\u003e CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"activate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"CommandResult --\u003e LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"deactivate LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"LastMetCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"destroy LastMetCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ReganChoy":60}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"Class DisplayClient","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"Class Birthday","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"Class LastMet","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"Class Schedule","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"Class Priority","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"Class Policy","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"Class PolicyList","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"ModelManager -right-\u003e \"1\" DisplayClient","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"DisplayClient --\u003e \"0..1\\n\" Person","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e Birthday","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e LastMet","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e Schedule","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e Priority","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"Person *--\u003e Remark","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"Person *--\u003e PolicyList","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"PolicyList --\u003e \"*\" Policy","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"getsquared":6,"ReganChoy":10,"yorklim":3,"-":54}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"Class JsonAdaptedPolicy","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedPolicy","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yorklim":2,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"Class ClientListPanel","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"Class ClientListCard","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"Class ClientDetailsCard","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"Class ClientViewPanel","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"Class ClientPolicyTable","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"Class RemindersPanel","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"Class RemindersCard","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"MainWindow *-down-\u003e \"1\" ClientListPanel","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"MainWindow *-down-\u003e \"1\" ClientViewPanel","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"MainWindow *-down-\u003e \"1\" RemindersPanel","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"ClientListPanel *-down-\u003e \"*\" ClientListCard","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"ClientViewPanel *-down-\u003e \"1\" ClientDetailsCard","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"ClientViewPanel *-down-\u003e \"1\" ClientPolicyTable","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"RemindersPanel *-down-\u003e \"3\" RemindersCard","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"MainWindow --|\u003e UiPart","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"ClientListPanel --|\u003e UiPart","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"ClientListCard --|\u003e UiPart","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"ClientDetailsCard --|\u003e UiPart","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"ClientPolicyTable --|\u003e UiPart","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"RemindersCard --|\u003e UiPart","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"ClientListCard ...\u003e Model","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"ClientDetailsCard ...\u003e Model","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"ClientPolicyTable ...\u003e Model","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"RemindersCard ...\u003e Model","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"ResultDisplay -[hidden]left- HelpWindow","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"CommandBox -[hidden]left- HelpWindow","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"StatusBarFooter -[hidden]right- HelpWindow","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"getsquared":25,"solomonng2001":5,"-":47}},{"path":"docs/diagrams/ViewClientSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"end box","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"[-\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"activate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"view 1\")","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"create ViewCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"AddressBookParser -\u003e ViewCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"activate ViewCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"activate ViewCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"create ViewCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"activate ViewCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"deactivate ViewCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"ViewCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"LogicManager -\u003e ViewCommand : execute(m)","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"activate ViewCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"ViewCommand -\u003e Model : setDisplayClient(personToView)","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"activate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"deactivate Model","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"create CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"activate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"ViewCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"deactivate ViewCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"getsquared":67}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"# ClientCare","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-W12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-W12-1/tp/actions)","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W12-1/tp/graph/badge.svg?token\u003dSFY0S3364D)](https://codecov.io/gh/AY2324S2-CS2103T-W12-1/tp)","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"**ClientCare is a desktop application for assisting insurance agents in managing their client relationships and follow-ups effectively.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"* If you are interested in using ClientCare, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"* If you are interested about developing ClientCare, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ReganChoy":2,"yorklim":4,"-":15}},{"path":"docs/stylesheets/main.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"mark {","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  background-color: #ff0;","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  padding-top: 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  padding-bottom: 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":".indented {","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  padding-left: 20px;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":".theme-card img {","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/* Scrollbar */","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":".slim-scroll::-webkit-scrollbar {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  width: 5px;","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":".slim-scroll::-webkit-scrollbar-thumb {","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  background: #808080;","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  border-radius: 20px;","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":".slim-scroll::-webkit-scrollbar-track {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  background: transparent;","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  border-radius: 20px;","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":".slim-scroll-blue::-webkit-scrollbar {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  width: 5px;","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":".slim-scroll-blue::-webkit-scrollbar-thumb {","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  background: #00b0ef;","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  border-radius: 20px;","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":".slim-scroll-blue::-webkit-scrollbar-track {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  background: transparent;","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  border-radius: 20px;","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"/* Layout containers */","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"#flex-body {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  flex: 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  align-items: start;","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"#content-wrapper {","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  flex: 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  min-width: 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  max-width: 1000px;","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  padding: 0.8rem 20px 0 20px;","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  transition: 0.4s;","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  -webkit-transition: 0.4s;","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"#site-nav,","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"#page-nav {","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  position: sticky;","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  top: var(--sticky-header-height);","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  flex: 0 0 auto;","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  max-width: 300px;","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  max-height: calc(100vh - var(--sticky-header-height));","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  width: 300px;","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"#site-nav {","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  border-right: 1px solid lightgrey;","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  padding-bottom: 20px;","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  z-index: 999;","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":".site-nav-top {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  margin: 0.8rem 0;","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  padding: 0 12px 12px 12px;","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":".nav-component {","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  overflow-y: auto;","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"#page-nav {","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  border-left: 1px solid lightgrey;","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"@media screen and (max-width: 1299.98px) {","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  #page-nav {","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/* Bootstrap medium(md) responsive breakpoint */","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"@media screen and (max-width: 991.98px) {","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  #site-nav {","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"/* Bootstrap small(sm) responsive breakpoint */","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"@media (max-width: 767.98px) {","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  .indented {","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    padding-left: 10px;","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  #content-wrapper {","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    padding: 0 10px;","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"/* Bootstrap extra small(xs) responsive breakpoint */","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"@media screen and (max-width: 575.98px) {","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  #site-nav {","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"/* Hide site navigation when printing */","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  #site-nav {","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  #page-nav {","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  /* Reduce font size when printing */","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  h1 {","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"ReganChoy"},"content":"      font-size: 1.8rem !important;","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"ReganChoy"},"content":"      font-size: 1.2rem !important;","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"ReganChoy"},"content":"      font-size: 0.7rem !important;","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      font-size: 0.8rem !important;","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  h5 {","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      font-size: 0.7rem !important;","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      font-size: 0.65rem !important;","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  .btn {","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      font-size: 0.65rem !important;","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  img {","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      zoom: 0.8;  /* might not work on some browsers */","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"ReganChoy"},"content":"  h1 {","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"ReganChoy"},"content":"      font-weight: bold;","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"ReganChoy"},"content":"      color: #3e7b91;","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"ReganChoy"},"content":"  }","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"ReganChoy"},"content":"  h2 {","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"ReganChoy"},"content":"      font-weight: bold;","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"ReganChoy"},"content":"      background-color: #3e7b91;","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"ReganChoy"},"content":"      color: white;","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"ReganChoy"},"content":"      padding: 4px 8px;","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"ReganChoy"},"content":"      margin-bottom: 18px;","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"ReganChoy"},"content":"      color: #FFFFFF;","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"ReganChoy"},"content":"  }","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"ReganChoy"},"content":"  h3 {","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"ReganChoy"},"content":"      font-weight: bold;","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"ReganChoy"},"content":"      color: tomato;","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"ReganChoy"},"content":"  h4, h6 {","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"ReganChoy"},"content":"    font-weight: bold;","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"ReganChoy"},"content":"  \tcolor: white;","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"ReganChoy"},"content":"  \tbackground-color: tomato;","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"ReganChoy"},"content":"  \tpadding: 4px;","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"ReganChoy"},"content":"  }","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":189,"author":{"gitId":"ReganChoy"},"content":"  h5 {","lastModifiedDate":"2024-03-24"},{"lineNumber":190,"author":{"gitId":"ReganChoy"},"content":"  color: tomato","lastModifiedDate":"2024-03-24"},{"lineNumber":191,"author":{"gitId":"ReganChoy"},"content":"  }","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"ReganChoy":31,"-":161}},{"path":"docs/team/reganchoy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"title: \"Regan Choy\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"### Project: ClientCare","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"* **Project management**:","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"* **Tools**:","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"ReganChoy":46}},{"path":"docs/team/shuqing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"title: \"Shuqing\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"### Project: ClientCare","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"* **Project management**:","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"    * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"* **Tools**:","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"getsquared":46}},{"path":"docs/team/yorklim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"layout: default.md","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"title: \"York Lim\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"### Project: ClientCare","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"* **Project management**:","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"    * User Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"* **Community**:","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"* **Tools**:","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"yorklim":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"solomonng2001"},"content":"You must delete AddressBook’s storage file located at `/data/clientcare.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2024-04-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"solomonng2001":1,"-":401}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.storage.SetStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"ReganChoy"},"content":"            SetStorage.loadData();","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"ReganChoy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"ReganChoy"},"content":"            logger.warning(\"SetData is invalid.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ReganChoy":8,"-":186}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    private static final double DEFAULT_HEIGHT \u003d 720;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"    private static final double DEFAULT_WIDTH \u003d 1280;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"getsquared":2,"-":80}},{"path":"src/main/java/seedu/address/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":" * Helper functions for handling dates and times.","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"should be in the format YYYY-MM-DD HH:mm \"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"            + \"and must be an actual dateTime\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"    public static final String DATE_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"     * Returns true if a given string is a valid dateTime.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"     * The string must be in the format \"yyyy-MM-dd hh:mm\".","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"     * The dateTime string should be validated as parsable before calling this method.","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"     * @param test the string to test","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"     * @return true if the string is a valid date","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    public static boolean isValidDateTimeString(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        return (test !\u003d null) \u0026\u0026 test.matches(VALIDATION_REGEX)","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"                \u0026\u0026 isParsableDateTimeString(test);","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"     * Returns true if a given string is a parsable dateTime.","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"     * @param test the string representation of a dateTime to check","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"     * @return true if the string is a parsable dateTime","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"    public static boolean isParsableDateTimeString(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        if (test \u003d\u003d null || test.isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"            dateTime \u003d LocalDateTime.parse(test, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        // Date is not parsable if truncation needed, eg. 29 Feb on non leap years will be truncated by parser","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        if (!DateTimeUtil.parseDateToString(dateTime).equals(test)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"     * Returns true if a given dateTime is in the past.","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"     * @param dateTime the dateTime to check","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"     * @return true if the dateTime is in the past","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"    public static boolean isPastDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"        return dateTime.isBefore(LocalDateTime.now());","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"     * Parses a string representation of a dateTime into a LocalDateTime object.","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"     * The string representation must be in the format \"yyyy-MM-dd hh:mm\".","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"     * The dateTime string should be validated as parsable before calling this method.","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"     * @param dateTime the string representation of a date","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"     * @return the LocalDate object","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"    public static LocalDateTime parseStringToDateTime(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"        if (dateTime \u003d\u003d null || dateTime.isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"            throw new DateTimeParseException(\"Date string is empty\", dateTime, 0);","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"        return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"ReganChoy"},"content":"     * Parses a LocalDateTime object into a string representation of a dateTime.","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"ReganChoy"},"content":"     * The string representation will be in the format \"YYYY-MM-DD hh:mm\".","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"ReganChoy"},"content":"     * The date should be validated as parsable before calling this method.","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"ReganChoy"},"content":"     * @param dateTime the LocalDateTtime object","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"ReganChoy"},"content":"     * @return the string representation of the date","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"ReganChoy"},"content":"    public static String parseDateToString(LocalDateTime dateTime) throws DateTimeException {","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"ReganChoy"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"ReganChoy"},"content":"            return \"\";","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"ReganChoy"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"ReganChoy"},"content":"     * Returns a message constraint that is contextualised to the date type.","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"ReganChoy"},"content":"     * For example, if the date type is \"Birthday\", the message constraint will be \"Birthday should be in the format.","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"ReganChoy"},"content":"     * @param dateType the type of date, such as \"Birthday\", \"Appointment\"","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"ReganChoy"},"content":"     * @return a message constraint that is contextualised to the date type","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"ReganChoy"},"content":"    public static String getMessageConstraintsForDateType(String dateType) {","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"ReganChoy"},"content":"        return dateType + \" \" + MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ReganChoy":100,"solomonng2001":14}},{"path":"src/main/java/seedu/address/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" * Helper functions for handling dates and times.","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"public class DateUtil {","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"            \"date should be in the format YYYY-MM-DD and must be an actual date.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    public static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"     * The string must be in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"     * The date string should be validated as parsable before calling this method.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"     * @param test the string to test","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"     * @return true if the string is a valid date","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    public static boolean isValidDateString(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        return (test !\u003d null) \u0026\u0026 test.matches(VALIDATION_REGEX)","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"                \u0026\u0026 isParsableDateString(test);","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if a given string is a parsable date.","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"     * @param test the string representation of a date to check","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"     * @return true if the string is a parsable date","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    public static boolean isParsableDateString(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        if (test \u003d\u003d null || test.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        LocalDate date;","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"            date \u003d LocalDate.parse(test, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        // Date is not parsable if truncation needed, eg. 29 Feb on non leap years will be truncated by parser","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        if (!DateUtil.parseDateToString(date).equals(test)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if a given date is in the past.","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"     * @param date the date to check","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"     * @return true if the date is in the past","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"    public static boolean isFutureDate(LocalDate date) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        return date.isAfter(LocalDate.now());","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"     * Parses a string representation of a date into a LocalDate object.","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"     * The string representation must be in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"     * The date string should be validated as parsable before calling this method.","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"     * @param date the string representation of a date","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"     * @return the LocalDate object","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"    public static LocalDate parseStringToDate(String date) throws DateTimeParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        if (date \u003d\u003d null || date.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"            throw new DateTimeParseException(\"Date string is empty\", date, 0);","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"     * Parses a LocalDate object into a string representation of a date.","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"     * The string representation will be in the format \"YYYY-MM-DD\".","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"     * The date should be validated as parsable before calling this method.","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"     * @param date the LocalDate object","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"     * @return the string representation of the date","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"    public static String parseDateToString(LocalDate date) throws DateTimeException {","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"            return \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        return date.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"     * Returns a message constraint that is contextualised to the date type.","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"     * For example, if the date type is \"Birthday\", the message constraint will be \"Birthday should be in the format.","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"     * @param dateType the type of date, such as \"Birthday\", \"Appointment\"","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"     * @return a message constraint that is contextualised to the date type","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"    public static String getMessageConstraintsForDateType(String dateType) {","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"        return dateType + \" \" + MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"solomonng2001":114}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"     * Returns the client to be displayed in ClientViewPanel.","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"    Person getDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"     * Returns true if there is a client in the display.","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"    boolean hasDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"     * Returns the reminder list for the overdue last met to be displayed in RemindersPanel.","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"    ReminderList getOverDueLastMet();","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"     * Returns the reminder list for the appointments to be displayed in RemindersPanel.","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"    ReminderList getSchedules();","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"     * Returns the reminder list for the birthday reminders to be displayed in RemindersPanel.","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"    ReminderList getBirthdayReminders();","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"getsquared":10,"solomonng2001":6,"yorklim":10,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        return model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"    public Person getDisplayClient() {","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"        return model.getDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"    public boolean hasDisplayClient() {","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"        return model.hasDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"    public ReminderList getOverDueLastMet() {","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"        return model.getOverDueLastMet();","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"yorklim"},"content":"    public ReminderList getSchedules() {","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"yorklim"},"content":"        return model.getSchedules();","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"    public ReminderList getBirthdayReminders() {","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"        return model.getBirthdayReminders();","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"getsquared":10,"solomonng2001":6,"yorklim":10,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The client index provided is not on the list!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_LASTMET_FUTURE \u003d \"You cannot meet someone from the future!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_SCHEDULE_PAST \u003d \"You cannot schedule an appointment in the past!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_SCHEDULE_DONE \u003d \"This client has no open appointment.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_DUPLICATE_POLICY \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"            \"You cannot add a policy with the same Policy ID as an existing policy!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_POLICY_NOT_FOUND \u003d","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"            \"You cannot delete a policy that does not exist!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"                .append(\"; Birthday: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"                .append(person.getBirthday())","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"                .append(\"; Priority: \")","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"                .append(person.getPriority())","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"solomonng2001":4,"yorklim":11,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.PriorityValue;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the address book.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"            + PREFIX_BIRTHDAY + \"BIRTHDAY \"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"            + PREFIX_PRIORITY + \"PRIORITY \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"            + PREFIX_BIRTHDAY + \"1990-01-01 \"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"            + PREFIX_PRIORITY + PriorityValue.getFullPriorities()[0] + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in the address book!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"        model.setDisplayClient(toAdd);","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"getsquared":1,"solomonng2001":7,"yorklim":3,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddPolicyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYID;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYNAME;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":" * Adds a policy to person.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"public class AddPolicyCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"    public static final String COMMAND_WORD \u003d \"addpolicy\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new policy to the policy list of the client\"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"            + \" identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"            + PREFIX_POLICYNAME + \"POLICYNAME \"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"            + PREFIX_POLICYID + \"POLICYID\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"            + \"1 \"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"            + PREFIX_POLICYNAME + \"Travel Bali \"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"            + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have added a policy to %1$s.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"    private final Index index;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"    private final Policy policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"     * Creates a AddPolicyCommand to add a policy to specified {@code Person}","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"    public AddPolicyCommand(Index index, Policy policy) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"        requireNonNull(policy);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"        this.policy \u003d policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"        Person personToAddPolicy \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"        // Checks for conflicting Policy ID here","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"yorklim"},"content":"        if (personToAddPolicy.isConflictingPolicyId(policy)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_POLICY);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"        PolicyList updatedPolicyList \u003d personToAddPolicy.getPolicyList();","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"        updatedPolicyList.addPolicy(policy);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"        Person policyAddedPerson \u003d new Person(personToAddPolicy.getName(), personToAddPolicy.getPhone(),","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"yorklim"},"content":"                personToAddPolicy.getEmail(), personToAddPolicy.getAddress(), personToAddPolicy.getBirthday(),","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"                personToAddPolicy.getPriority(), personToAddPolicy.getRemark(), personToAddPolicy.getLastMet(),","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"                personToAddPolicy.getSchedule(), personToAddPolicy.getTags(), updatedPolicyList);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"        model.setPerson(personToAddPolicy, policyAddedPerson);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"        model.setDisplayClient(policyAddedPerson);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"yorklim"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToAddPolicy.getName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"yorklim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"        if (!(other instanceof AddPolicyCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand otherAddPolicyCommand \u003d (AddPolicyCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"        return index.equals(otherAddPolicyCommand.index) \u0026\u0026 policy.equals(otherAddPolicyCommand.policy);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"yorklim"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"yorklim"},"content":"                .add(\"addPolicy\", policy)","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"yorklim"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":3,"solomonng2001":3,"yorklim":101}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"ClientCare has been cleared!\";","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"        model.clearDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"getsquared":1,"yorklim":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"        model.clearDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"getsquared":1,"solomonng2001":1,"yorklim":2,"-":66}},{"path":"src/main/java/seedu/address/logic/commands/DeletePolicyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYID;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":" * Delete a policy from person.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"public class DeletePolicyCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"    public static final String COMMAND_WORD \u003d \"deletepolicy\";","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a policy from the policy list of the client\"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"            + \" identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"            + PREFIX_POLICYID + \"POLICYID\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"            + \"1 \"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"            + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have deleted Policy #%1$s from %2$s.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"    private final Index index;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"    private final String policyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"     * Creates a DeletePolicyCommand to delete a policy from specified {@code Person}","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"    public DeletePolicyCommand(Index index, String policyId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"        requireNonNull(policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"        this.policyId \u003d policyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"        Person personToDeletePolicy \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"        // Checks if Policy ID exists","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"        if (!personToDeletePolicy.hasPolicyID(policyId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"            throw new CommandException(Messages.MESSAGE_POLICY_NOT_FOUND);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"        PolicyList updatedPolicyList \u003d personToDeletePolicy.getPolicyList();","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"yorklim"},"content":"        updatedPolicyList.deletePolicy(policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"        Person policyDeletedPerson \u003d new Person(personToDeletePolicy.getName(), personToDeletePolicy.getPhone(),","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"                personToDeletePolicy.getEmail(), personToDeletePolicy.getAddress(), personToDeletePolicy.getBirthday(),","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"                personToDeletePolicy.getPriority(), personToDeletePolicy.getRemark(), personToDeletePolicy.getLastMet(),","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"                personToDeletePolicy.getSchedule(), personToDeletePolicy.getTags(), updatedPolicyList);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"yorklim"},"content":"        model.setPerson(personToDeletePolicy, policyDeletedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"yorklim"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"        model.setDisplayClient(policyDeletedPerson);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, policyId, policyDeletedPerson.getName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"yorklim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"yorklim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"yorklim"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"yorklim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"        if (!(other instanceof DeletePolicyCommand)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand otherDeletePolicyCommand \u003d (DeletePolicyCommand) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"        return index.equals(otherDeletePolicyCommand.index) \u0026\u0026 policyId.equals(otherDeletePolicyCommand.policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"                .add(\"deletePolicy\", policyId)","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"                .toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"getsquared":1,"solomonng2001":3,"yorklim":99}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"            + \"[\" + PREFIX_PRIORITY + \"PRIORITY] \"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This client already exists in the address book.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"        model.setDisplayClient(editedPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"        Priority updatedPriority \u003d editPersonDescriptor.getPriority().orElse(personToEdit.getPriority());","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"ReganChoy"},"content":"        LastMet currentLastMet \u003d personToEdit.getLastMet();","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"ReganChoy"},"content":"        Schedule currentSchedule \u003d personToEdit.getSchedule();","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"yorklim"},"content":"        PolicyList currentPolicyList \u003d personToEdit.getPolicyList();","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthday, updatedPriority,","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"getsquared"},"content":"                updatedRemark, currentLastMet, currentSchedule, updatedTags, currentPolicyList);","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"solomonng2001"},"content":"        private Birthday birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"        private Priority priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"ReganChoy"},"content":"        private LastMet lastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":163,"author":{"gitId":"ReganChoy"},"content":"        private Schedule schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"solomonng2001"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"solomonng2001"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"solomonng2001"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, birthday, priority, tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"solomonng2001"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"solomonng2001"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":223,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"solomonng2001"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2024-03-11"},{"lineNumber":226,"author":{"gitId":"solomonng2001"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":229,"author":{"gitId":"solomonng2001"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"solomonng2001"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"solomonng2001"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"solomonng2001"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2024-03-18"},{"lineNumber":235,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":236,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":270,"author":{"gitId":"solomonng2001"},"content":"                    \u0026\u0026 Objects.equals(birthday, otherEditPersonDescriptor.birthday)","lastModifiedDate":"2024-03-11"},{"lineNumber":271,"author":{"gitId":"solomonng2001"},"content":"                    \u0026\u0026 Objects.equals(priority, otherEditPersonDescriptor.priority)","lastModifiedDate":"2024-03-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":282,"author":{"gitId":"solomonng2001"},"content":"                    .add(\"birthday\", birthday)","lastModifiedDate":"2024-03-11"},{"lineNumber":283,"author":{"gitId":"solomonng2001"},"content":"                    .add(\"priority\", priority)","lastModifiedDate":"2024-03-18"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"getsquared":2,"solomonng2001":36,"ReganChoy":7,"yorklim":6,"-":237}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting ClientCare as requested ...\";","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yorklim":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        model.setDisplayClientAsFirstInSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getSortedFilteredPersonList().size()));","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"solomonng2001":2,"yorklim":1,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/LastMetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.FutureDateException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":" * Updates the last met date of the person.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"public class LastMetCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    public static final String COMMAND_WORD \u003d \"met\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the last met of the client identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"            + \"by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"            + PREFIX_LASTMET + \"DATE\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"            + \"1 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"            + PREFIX_LASTMET + \"2001-02-03\"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"            + \" which refers to 3 Feb 2001\";","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have met %1$s.\";","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    private final Index index;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    private final LastMet lastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"     * Creates a LastMetCommand to update last met date of the specified {@code Person}","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    public LastMetCommand(Index index, LastMet lastMet) {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(lastMet);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"        this.lastMet \u003d lastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"            checkFutureDate(this.lastMet.getLastMet());","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"        } catch (FutureDateException e) {","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"            throw new CommandException(Messages.MESSAGE_LASTMET_FUTURE);","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"        Person personToMeet \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"        Person metPerson \u003d new Person(","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"                personToMeet.getName(), personToMeet.getPhone(), personToMeet.getEmail(),","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"                personToMeet.getAddress(), personToMeet.getBirthday(), personToMeet.getPriority(),","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"                personToMeet.getRemark(), this.lastMet, personToMeet.getSchedule(), personToMeet.getTags(),","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"                personToMeet.getPolicyList());","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"        model.setPerson(personToMeet, metPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"        model.setDisplayClient(metPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToMeet.getName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"        if (!(other instanceof LastMetCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"ReganChoy"},"content":"        LastMetCommand otherMetCommand \u003d (LastMetCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"ReganChoy"},"content":"        return index.equals(otherMetCommand.index);","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"ReganChoy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"ReganChoy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"ReganChoy"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"ReganChoy"},"content":"                .add(\"date\", lastMet.getLastMet())","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"ReganChoy"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"ReganChoy"},"content":"    private void checkFutureDate(LocalDate date) throws FutureDateException {","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"ReganChoy"},"content":"        if (date.isAfter(LocalDate.now())) {","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"ReganChoy"},"content":"            throw new FutureDateException(Messages.MESSAGE_LASTMET_FUTURE);","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"getsquared":3,"ReganChoy":100,"solomonng2001":4,"yorklim":3}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        model.setDisplayClientAsFirstInSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"solomonng2001":3,"yorklim":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import java.util.List;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.ScheduleAlreadyDoneException;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":" * Marks a schedule with a Client as done.","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the schedule of the client identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"            + \"by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"            + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"            + \"1 \";","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Your schedule with %1$s has been marked as done.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"    private final Index index;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"     * Creates a MarkCommand to complete the schedule of the specified {@code Person}","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    public MarkCommand(Index index) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"        Person personToMeet \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"            checkIsDone(personToMeet.getSchedule());","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"        } catch (ScheduleAlreadyDoneException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"            throw new CommandException(Messages.MESSAGE_SCHEDULE_DONE);","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"        Person metPerson \u003d new Person(","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"                personToMeet.getName(), personToMeet.getPhone(), personToMeet.getEmail(),","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"                personToMeet.getAddress(), personToMeet.getBirthday(), personToMeet.getPriority(),","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"                personToMeet.getRemark(), personToMeet.getLastMet(), personToMeet.getSchedule(), personToMeet.getTags(),","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"                personToMeet.getPolicyList());","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"        metPerson.getSchedule().markIsDone();","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"        model.setPerson(personToMeet, metPerson);","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"        model.setDisplayClient(metPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToMeet.getName()));","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"        MarkCommand otherMarkCommand \u003d (MarkCommand) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"        return index.equals(otherMarkCommand.index);","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"ReganChoy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"ReganChoy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"ReganChoy"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"ReganChoy"},"content":"                .toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"ReganChoy"},"content":"    private void checkIsDone(Schedule schedule) throws ScheduleAlreadyDoneException {","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"ReganChoy"},"content":"        if (schedule.getIsDone()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"ReganChoy"},"content":"            throw new ScheduleAlreadyDoneException(Messages.MESSAGE_SCHEDULE_DONE);","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"getsquared":2,"ReganChoy":91,"solomonng2001":4,"yorklim":5}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the client identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Client: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Client: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(),","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"                personToEdit.getBirthday(), personToEdit.getPriority(), remark, personToEdit.getLastMet(),","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"                personToEdit.getSchedule(), personToEdit.getTags(), personToEdit.getPolicyList());","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"        model.setDisplayClient(editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"    private String generateSuccessMessage(Person editedPerson) {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"        return String.format(message, Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"getsquared":6,"solomonng2001":4,"yorklim":4,"-":85}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.PastDateException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":" * Schedules an appointment with the person.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"            + \": Schedules an appointment with the client identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"            + \"by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"            + PREFIX_SCHEDULE + \"DATETIME\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"            + \"1 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"            + PREFIX_SCHEDULE + \"2001-03-02 12:00 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"            + \"which refers to 2 March 2001 12pm\";","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You have scheduled an appointment with %1$s.\";","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    private final Index index;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"    private final Schedule schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"     * Creates a ScheduleCommand to schedule an appointment with the specified {@code Person}","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"    public ScheduleCommand(Index index, Schedule schedule) {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"            checkPastDate(this.schedule.getSchedule());","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"        } catch (PastDateException e) {","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"            throw new CommandException(Messages.MESSAGE_SCHEDULE_PAST);","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"        Person personToMeet \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"        Person metPerson \u003d new Person(","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"                personToMeet.getName(), personToMeet.getPhone(), personToMeet.getEmail(),","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"                personToMeet.getAddress(), personToMeet.getBirthday(), personToMeet.getPriority(),","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"                personToMeet.getRemark(), personToMeet.getLastMet(), this.schedule, personToMeet.getTags(),","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"                personToMeet.getPolicyList());","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"        model.setPerson(personToMeet, metPerson);","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"        model.setDisplayClient(metPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToMeet.getName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"ReganChoy"},"content":"        if (!(other instanceof ScheduleCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"ReganChoy"},"content":"        ScheduleCommand otherScheduleCommand \u003d (ScheduleCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"ReganChoy"},"content":"        return index.equals(otherScheduleCommand.index);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"ReganChoy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"ReganChoy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"ReganChoy"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"ReganChoy"},"content":"                .add(\"dateTime\", schedule.getSchedule())","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"ReganChoy"},"content":"                .toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"ReganChoy"},"content":"    private void checkPastDate(LocalDateTime dateTime) throws PastDateException {","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"ReganChoy"},"content":"        if (dateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"ReganChoy"},"content":"            throw new PastDateException(Messages.MESSAGE_SCHEDULE_PAST);","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":111,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"getsquared":3,"ReganChoy":99,"solomonng2001":5,"yorklim":4}},{"path":"src/main/java/seedu/address/logic/commands/SetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.storage.SetStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":" * Sets the LastMet Overdue time period for all Clients.","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"    public static final String COMMAND_WORD \u003d \"set\";","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the LastMet overdue time period.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"            + \"NUMBER_OF_DAYS (must be an integer and be at least 0)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"            + \"90.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"LastMet overdue time period has been set to %1$s days.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"     * Creates a LastMetCommand to update last mete date of the specified {@code Person}","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    private int overdueTimePeriod;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"     * Creates a SetCommand to update last met overdue duration of the LastMet class","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"    public SetCommand(Integer numberOfDays) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(numberOfDays);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"        this.overdueTimePeriod \u003d numberOfDays;","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"        LastMet.setLastMetDuration(this.overdueTimePeriod);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        int numberOfClients \u003d lastShownList.size();","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"        for (int i \u003d 0; i \u003c numberOfClients; i++) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"            //Index index \u003d Index.fromZeroBased(i);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"            Person personToCheck \u003d lastShownList.get(i);","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"            personToCheck.getLastMet().checkOverdue();","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"        SetStorage.setData(this.overdueTimePeriod);","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.overdueTimePeriod));","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"        if (!(other instanceof SetCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"        SetCommand otherSetCommand \u003d (SetCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"        return overdueTimePeriod \u003d\u003d (otherSetCommand.overdueTimePeriod);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"                .add(\"overdueTimePeriod\", overdueTimePeriod)","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ReganChoy":77,"yorklim":3}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.PersonComparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":" * Sorts the client list in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"            + \": Sorts the client list in the address book.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"            + \"CRITERIA \"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"            + PREFIX_SORT_ORDER + \"ORDER\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"            + \"priority \"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"            + PREFIX_SORT_ORDER + \"desc\";","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Client list sorted by %s in %s order.\";","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    private final SortCriteria sortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    private final SortOrder sortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"     * Creates a SortCommand to sort the client list.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    public SortCommand(SortCriteria sortCriteria, SortOrder sortOrder) {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(sortCriteria);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(sortOrder);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        this.sortCriteria \u003d sortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        model.updateSortPersonComparator(PersonComparator.getComparator(sortCriteria, sortOrder));","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        model.setDisplayClientAsFirstInSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        return new CommandResult(getMessageSuccess(sortCriteria, sortOrder));","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"     * Returns a success message based on the sort criteria and sort order.","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"     * @param sortCriteria the sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"     * @param sortOrder the sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"     * @return the success message","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    public static String getMessageSuccess(SortCriteria sortCriteria, SortOrder sortOrder)","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        if (sortCriteria \u003d\u003d null || sortOrder \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"            throw new IllegalArgumentException(\"SortCriteria and SortOrder cannot be null.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        if (sortCriteria \u003d\u003d SortCriteria.INVALID || sortOrder \u003d\u003d SortOrder.INVALID) {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"            return String.format(MESSAGE_SUCCESS, SortCriteria.NAME, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        return String.format(MESSAGE_SUCCESS, sortCriteria, sortOrder);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        SortCommand otherSortCommand \u003d (SortCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        return sortCriteria.equals(otherSortCommand.sortCriteria)","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"                \u0026\u0026 sortOrder.equals(otherSortCommand.sortOrder);","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"                .add(\"sortCriteria\", sortCriteria)","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"                .add(\"sortOrder\", sortOrder)","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":92,"yorklim":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":" * Views the details and policies of an existing person in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"            + \": Views the details and policies of the client identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"            + \"by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Viewing Client: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"     * Creates a {@code ViewCommand} to view a Person at the specified {@code targetIndex}.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"        model.setDisplayClient(personToView);","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS, Messages.format(personToView)));","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"        return targetIndex.equals(otherViewCommand.targetIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":67,"solomonng2001":1,"yorklim":3}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/FutureDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"public class FutureDateException extends Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"     * Constructs a new {@code FutureDateException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"    public FutureDateException(String message) {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"        super(message);","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ReganChoy":13}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/PastDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"public class PastDateException extends Exception {","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"     * Constructs a new {@code PastDateException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"    public PastDateException(String message) {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"        super(message);","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ReganChoy":13}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/ScheduleAlreadyDoneException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"public class ScheduleAlreadyDoneException extends Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"     * Constructs a new {@code ScheduleAlreadyDoneException}","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"     * with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"    public ScheduleAlreadyDoneException(String message) {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"        super(message);","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":14}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"                        PREFIX_BIRTHDAY, PREFIX_PRIORITY, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"                PREFIX_BIRTHDAY, PREFIX_PRIORITY)","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"                PREFIX_BIRTHDAY, PREFIX_PRIORITY);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        Birthday birthday \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        Priority priority \u003d ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"        Person person \u003d new Person(name, phone, email, address, birthday, priority, remark, tagList);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"getsquared":1,"solomonng2001":12,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddPolicyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYID;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYNAME;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.AddPolicyCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":" * Parses input arguments and creates a new AddPolicyCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"public class AddPolicyCommandParser implements Parser\u003cAddPolicyCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPolicyCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"     * and returns an AddPolicyCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"    public AddPolicyCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_POLICYNAME, PREFIX_POLICYID);","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POLICYNAME, PREFIX_POLICYID)","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPolicyCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_POLICYNAME, PREFIX_POLICYID);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"        Index index;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"                    AddPolicyCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"        Policy policy \u003d ParserUtil.parsePolicyInfo(argMultimap.getValue(PREFIX_POLICYNAME).get(),","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"                argMultimap.getValue(PREFIX_POLICYID).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"        return new AddPolicyCommand(index, policy);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"yorklim":58}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.AddPolicyCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.DeletePolicyCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.LastMetCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"        case LastMetCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"            return new LastMetCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"ReganChoy"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"ReganChoy"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"ReganChoy"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":104,"author":{"gitId":"yorklim"},"content":"        case AddPolicyCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"yorklim"},"content":"            return new AddPolicyCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"yorklim"},"content":"        case DeletePolicyCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"yorklim"},"content":"            return new DeletePolicyCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"ReganChoy"},"content":"        case SetCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"ReganChoy"},"content":"            return new SetCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"getsquared":4,"ReganChoy":16,"solomonng2001":4,"yorklim":8,"-":90}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"    public static final Prefix PREFIX_LASTMET \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"    public static final Prefix PREFIX_SCHEDULE \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"    public static final Prefix PREFIX_POLICYNAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"    public static final Prefix PREFIX_POLICYID \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    public static final Prefix PREFIX_SORT_ORDER \u003d new Prefix(\"o/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"solomonng2001":3,"ReganChoy":3,"yorklim":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeletePolicyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYID;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.DeletePolicyCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":" * Parses input arguments and creates a new DeletePolicyCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"public class DeletePolicyCommandParser implements Parser\u003cDeletePolicyCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePolicyCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"     * and returns an DeletePolicyCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"    public DeletePolicyCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_POLICYID);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POLICYID)","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePolicyCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_POLICYID);","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"        Index index;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"                    DeletePolicyCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"        String policyId \u003d ParserUtil.parsePolicyId(argMultimap.getValue(PREFIX_POLICYID).get());","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"        return new DeletePolicyCommand(index, policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"yorklim":54}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"                        PREFIX_BIRTHDAY, PREFIX_PRIORITY, PREFIX_TAG);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"                PREFIX_BIRTHDAY, PREFIX_PRIORITY);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"            editPersonDescriptor.setPriority(ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"solomonng2001":12,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/LastMetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LASTMET;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.LastMetCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":" * Parses input arguments and creates a new LastMetCommand object","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"public class LastMetCommandParser {","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    public static final String DATE_MESSAGE_CONSTRAINTS \u003d DateUtil.getMessageConstraintsForDateType(\"LastMet\");","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"     * Parses the given {@code String} of arguments in the context of the LastMetCommand","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"     * and returns an LastMetCommand object for execution.","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    public LastMetCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LASTMET);","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_LASTMET)","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LastMetCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_LASTMET);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"        Index index;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LastMetCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"        String lastMetString \u003d argMultimap.getValue(PREFIX_LASTMET).orElse(\"\");","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        if (!DateUtil.isValidDateString(lastMetString)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"            throw new ParseException(DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"            LastMet lastMet \u003d convertStringToLastMet(lastMetString);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"            return new LastMetCommand(index, lastMet);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"        } catch (DateTimeParseException ive) {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LastMetCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"    private LastMet convertStringToLastMet(String input) throws DateTimeParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        if (!DateUtil.isValidDateString(input)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"            throw new DateTimeParseException(DATE_MESSAGE_CONSTRAINTS, input, 0);","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"        LocalDate formattedInput \u003d DateUtil.parseStringToDate(input);","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"        return new LastMet(formattedInput);","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ReganChoy":68,"solomonng2001":8}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"public class MarkCommandParser {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"     * and returns an MarkCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"        if (!arePrefixesPresent(argMultimap)","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        Index index;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":49}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":" * The type Parser util.","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"     * @param oneBasedIndex the one based index","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"     * @return the index","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"     * @param name the name","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"     * @return the name","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"     * @param phone the phone","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"     * @return the phone","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"yorklim"},"content":"     * @param address the address","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"yorklim"},"content":"     * @return the address","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"     * Parses a {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"     * @param birthday the birthday","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"     * @return the birthday","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"     * @throws ParseException if the given {@code birthday} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"        if (!Birthday.isValidBirthday(trimmedBirthday)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"        return new Birthday(trimmedBirthday);","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(priority);","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"        if (!Priority.isValidPriority(trimmedPriority)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"solomonng2001"},"content":"        return new Priority(trimmedPriority);","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"yorklim"},"content":"     * @param email the email","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"yorklim"},"content":"     * @return the email","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"yorklim"},"content":"     * @param tag the tag","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"yorklim"},"content":"     * @return the tag","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"yorklim"},"content":"     * Parses {@code String policyName} and {@code String policyId} into a {@code Policy}.","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"yorklim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"yorklim"},"content":"     * @param policyName the name","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"getsquared"},"content":"     * @param policyId the id","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"yorklim"},"content":"     * @return the policy","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"yorklim"},"content":"     * @throws ParseException if the given {@code policyName} or {@code policyId} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"getsquared"},"content":"    public static Policy parsePolicyInfo(String policyName, String policyId) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"getsquared"},"content":"        requireNonNull(policyName, policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"yorklim"},"content":"        String trimmedPolicyName \u003d policyName.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"getsquared"},"content":"        String trimmedPolicyId \u003d policyId.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"yorklim"},"content":"        if (!Policy.isValidName(trimmedPolicyName)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"yorklim"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS_NAME);","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"getsquared"},"content":"        if (!Policy.isValidId(trimmedPolicyId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"yorklim"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS_ID);","lastModifiedDate":"2024-03-17"},{"lineNumber":193,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"getsquared"},"content":"        return new Policy(trimmedPolicyName, trimmedPolicyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"yorklim"},"content":"     * Parses {@code String policyId} into a {@code String}.","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"yorklim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"yorklim"},"content":"     * @param policyId the policy id","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"yorklim"},"content":"     * @return the policyid","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"yorklim"},"content":"     * @throws ParseException","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"yorklim"},"content":"    public static String parsePolicyId(String policyId) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"yorklim"},"content":"        requireNonNull(policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"yorklim"},"content":"        String trimmedPolicyId \u003d policyId.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"getsquared"},"content":"        if (!Policy.isValidId(trimmedPolicyId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"yorklim"},"content":"            throw new ParseException(Policy.MESSAGE_CONSTRAINTS_ID);","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"yorklim"},"content":"        return trimmedPolicyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"solomonng2001"},"content":"     * Parses {@code String sortOrder} into a {@code SortOrder}.","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"solomonng2001"},"content":"     * @param sortOrder the sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"solomonng2001"},"content":"     * @return the sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"solomonng2001"},"content":"     * @throws ParseException if the given {@code sortOrder} is invalid","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"solomonng2001"},"content":"    public static SortOrder parseSortOrder(String sortOrder) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(sortOrder);","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"solomonng2001"},"content":"        String trimmedSortOrder \u003d sortOrder.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"solomonng2001"},"content":"        if (!SortOrder.isValidSortOrder(trimmedSortOrder)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"solomonng2001"},"content":"            throw new ParseException(SortOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"solomonng2001"},"content":"        return SortOrder.getSortOrder(trimmedSortOrder);","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":228,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":229,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"solomonng2001"},"content":"     * Parses {@code String sortCriteria} into a {@code SortCriteria}.","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"solomonng2001"},"content":"     * @param sortCriteria the sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":233,"author":{"gitId":"solomonng2001"},"content":"     * @return the sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"solomonng2001"},"content":"     * @throws ParseException if the given {@code sortCriteria} is invalid","lastModifiedDate":"2024-03-25"},{"lineNumber":235,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"solomonng2001"},"content":"    public static SortCriteria parseSortCriteria(String sortCriteria) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":237,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(sortCriteria);","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"solomonng2001"},"content":"        String trimmedSortCriteria \u003d sortCriteria.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":239,"author":{"gitId":"solomonng2001"},"content":"        if (!SortCriteria.isValidSortCriteria(trimmedSortCriteria)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":240,"author":{"gitId":"solomonng2001"},"content":"            throw new ParseException(SortCriteria.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":242,"author":{"gitId":"solomonng2001"},"content":"        return SortCriteria.getSortCriteria(trimmedSortCriteria);","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"getsquared":7,"solomonng2001":66,"yorklim":48,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":" * Parses input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"public class ScheduleCommandParser {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    public static final String DATE_MESSAGE_CONSTRAINTS \u003d DateTimeUtil.getMessageConstraintsForDateType(\"Schedule\");","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"     * and returns an ScheduleCommand object for execution.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SCHEDULE);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SCHEDULE)","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_SCHEDULE);","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"        Index index;","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"                    ScheduleCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"        String scheduleString \u003d argMultimap.getValue(PREFIX_SCHEDULE).orElse(\"\");","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        if (!DateTimeUtil.isValidDateTimeString(scheduleString)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"            throw new ParseException(DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"            Schedule schedule \u003d convertStringToSchedule(scheduleString);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"            return new ScheduleCommand(index, schedule);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"        } catch (DateTimeParseException ive) {","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"                    ScheduleCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"    private Schedule convertStringToSchedule(String input) {","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime formattedInput \u003d DateTimeUtil.parseStringToDateTime(input);","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"        return new Schedule(formattedInput);","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ReganChoy":70,"solomonng2001":4}},{"path":"src/main/java/seedu/address/logic/parser/SetCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":" * Parses input arguments and creates a new SetCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"public class SetCommandParser {","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"     * Parses the given {@code String} of arguments in the context of the SetCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"     * and returns an SetCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"    public SetCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"        if (!arePrefixesPresent(argMultimap)","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"        int numberOfDays;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"            numberOfDays \u003d Integer.parseInt(argMultimap.getPreamble());","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"            checkIfNegativeNumber(numberOfDays);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"        } catch (NumberFormatException ive) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        } catch (ParseException ive) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"        return new SetCommand(numberOfDays);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"    private void checkIfNegativeNumber(int days) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"        if (days \u003c 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ReganChoy":56}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SORT_ORDER);","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_ORDER)","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_SORT_ORDER);","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        SortCriteria sortCriteria \u003d ParserUtil.parseSortCriteria(argMultimap.getPreamble());","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        SortOrder sortOrder \u003d ParserUtil.parseSortOrder(argMultimap.getValue(PREFIX_SORT_ORDER).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        return new SortCommand(sortCriteria, sortOrder);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":44}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"yorklim"},"content":"     * Returns the list of persons who are overdue to be met according to their last met date.","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"yorklim"},"content":"     * @return list of persons who are overdue to be met","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"yorklim"},"content":"    public ObservableList\u003cPerson\u003e getOverDueLastMet() {","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"yorklim"},"content":"        return persons.getOverDueLastMet();","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"yorklim"},"content":"     * Returns the list of persons who are have been schedule to be met.","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"yorklim"},"content":"     * @return list of persons who have been scheduled to be met","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"yorklim"},"content":"    public ObservableList\u003cPerson\u003e getSchedules() {","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"yorklim"},"content":"        return persons.getSchedules();","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"solomonng2001"},"content":"     * Returns the list of persons who have upcoming birthdays.","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"solomonng2001"},"content":"     * @return list of persons who have upcoming birthdays","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"solomonng2001"},"content":"    public ObservableList\u003cPerson\u003e getPersonsWithUpcomingBirthdays() {","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"solomonng2001"},"content":"        return persons.sortFilterHaveUpcomingBirthday();","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"solomonng2001":8,"yorklim":16,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    Comparator\u003cPerson\u003e COMPARATOR_SHOW_ORIGINAL_ORDER \u003d (person1, person2) -\u003e 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"    ObservableList\u003cPerson\u003e getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"     * Sorts the filtered person list by the given {@code comparator}.","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"    void updateSortPersonComparator(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"getsquared"},"content":"     * Returns the client to be displayed in ClientViewPanel.","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"getsquared"},"content":"    Person getDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"getsquared"},"content":"     * Returns true if there is a client in the display.","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"    boolean hasDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"getsquared"},"content":"     * Clears the client to display to null.","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"getsquared"},"content":"    void clearDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"getsquared"},"content":"     * Replaces the current client to be displayed to {@code person}.","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"getsquared"},"content":"    void setDisplayClient(Person person);","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"    void setDisplayClientAsFirstInSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"yorklim"},"content":"     * Returns the reminder list for the overdue last met to be displayed in RemindersPanel.","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"yorklim"},"content":"    ReminderList getOverDueLastMet();","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"yorklim"},"content":"     * Returns the reminder list for the appointments to be displayed in RemindersPanel.","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"yorklim"},"content":"    ReminderList getSchedules();","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"solomonng2001"},"content":"     * Returns the reminder list for the birthdays reminders to be displayed in RemindersPanel.","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"solomonng2001"},"content":"    ReminderList getBirthdayReminders();","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"getsquared":20,"solomonng2001":19,"yorklim":9,"-":86}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.person.DisplayClient;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderType;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    private Comparator\u003cPerson\u003e personComparator;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    private final DisplayClient displayClient;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        personComparator \u003d COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"        displayClient \u003d filteredPersons.isEmpty()","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"                ? new DisplayClient(null)","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"                : new DisplayClient(filteredPersons.get(0));","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"        updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"yorklim"},"content":"     * Adds a policy to the person in AddressBook.","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"yorklim"},"content":"     * @param target person to add policy to","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"yorklim"},"content":"     * @param policy policy to be added","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"yorklim"},"content":"    public void addPolicy(Person target, Policy policy) {","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"yorklim"},"content":"        requireAllNonNull(target, policy);","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"yorklim"},"content":"        PolicyList newPolicyList \u003d target.getPolicyList();","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"yorklim"},"content":"        newPolicyList.addPolicy(policy);","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"yorklim"},"content":"        setPerson(target, new Person(target.getName(), target.getPhone(), target.getEmail(), target.getAddress(),","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"getsquared"},"content":"                target.getBirthday(), target.getPriority(), target.getRemark(),","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"getsquared"},"content":"                target.getLastMet(), target.getSchedule(), target.getTags(), newPolicyList));","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"yorklim"},"content":"     * Deletes a policy from the person in AddressBook.","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"yorklim"},"content":"     * @param target person to delete policy from","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"yorklim"},"content":"     * @param policyId policy to be deleted","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"yorklim"},"content":"    public void deletePolicy(Person target, String policyId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"yorklim"},"content":"        requireAllNonNull(target, policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"yorklim"},"content":"        PolicyList newPolicyList \u003d target.getPolicyList();","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"yorklim"},"content":"        newPolicyList.deletePolicy(policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"yorklim"},"content":"        setPerson(target, new Person(target.getName(), target.getPhone(), target.getEmail(), target.getAddress(),","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"getsquared"},"content":"                target.getBirthday(), target.getPriority(), target.getRemark(),","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"getsquared"},"content":"                target.getLastMet(), target.getSchedule(), target.getTags(), newPolicyList));","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"solomonng2001"},"content":"    public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"solomonng2001"},"content":"        SortedList\u003cPerson\u003e sortedPersons \u003d new SortedList\u003c\u003e(filteredPersons);","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"solomonng2001"},"content":"        sortedPersons.setComparator(personComparator);","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"solomonng2001"},"content":"        return sortedPersons;","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"solomonng2001"},"content":"     * Updates the comparator used to sort the list of persons.","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"solomonng2001"},"content":"     * Comparator is used to sort when {@code getSortedFilteredPersonList()} is called.","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"solomonng2001"},"content":"     * @param comparator Comparator to be used to sort the list of persons","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"solomonng2001"},"content":"    public void updateSortPersonComparator(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"solomonng2001"},"content":"        personComparator \u003d comparator;","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"getsquared"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Client Being Displayed \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"getsquared"},"content":"    public Person getDisplayClient() {","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"getsquared"},"content":"        return displayClient.getDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"getsquared"},"content":"    public boolean hasDisplayClient() {","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"getsquared"},"content":"        return displayClient.hasDisplayClient();","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":215,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":216,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":217,"author":{"gitId":"getsquared"},"content":"    public void clearDisplayClient() {","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"getsquared"},"content":"        displayClient.setDisplayClient(null);","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":221,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":222,"author":{"gitId":"getsquared"},"content":"    public void setDisplayClient(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":223,"author":{"gitId":"getsquared"},"content":"        displayClient.setDisplayClient(person);","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":226,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"solomonng2001"},"content":"     * Sets the display client to be the first person in the sorted filtered person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"solomonng2001"},"content":"     * If the list is empty, display client is set to null.","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"solomonng2001"},"content":"    public void setDisplayClientAsFirstInSortedFilteredPersonList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e sortedFilteredPersonList \u003d getSortedFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"solomonng2001"},"content":"        if (sortedFilteredPersonList.isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"solomonng2001"},"content":"            displayClient.setDisplayClient(null);","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"solomonng2001"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"solomonng2001"},"content":"            displayClient.setDisplayClient(sortedFilteredPersonList.get(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"yorklim"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PolicyList Displayed \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":241,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":242,"author":{"gitId":"yorklim"},"content":"    public ReminderList getOverDueLastMet() {","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"yorklim"},"content":"        return new ReminderList(ReminderType.LAST_MET, addressBook.getOverDueLastMet());","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"yorklim"},"content":"    public ReminderList getSchedules() {","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"yorklim"},"content":"        return new ReminderList(ReminderType.SCHEDULES, addressBook.getSchedules());","lastModifiedDate":"2024-03-25"},{"lineNumber":248,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":249,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":250,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"solomonng2001"},"content":"    public ReminderList getBirthdayReminders() {","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"solomonng2001"},"content":"        return new ReminderList(ReminderType.BIRTHDAYS, addressBook.getPersonsWithUpcomingBirthdays());","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"getsquared":29,"solomonng2001":39,"yorklim":40,"-":146}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"clientcare.json\");","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yorklim":1,"-":87}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class Address implements Comparable\u003cAddress\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"    public int compareTo(Address other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        return this.value.compareTo(other.value);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"solomonng2001":5,"-":64}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":" * Represents a Client\u0027s birthday in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthday(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"public class Birthday implements Comparable\u003cBirthday\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d DateUtil.getMessageConstraintsForDateType(\"Birthday\")","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"            + \" Birthday should not be in the future.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    public final LocalDate date;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        checkArgument(isValidBirthday(birthday), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        this.date \u003d DateUtil.parseStringToDate(birthday);","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if a given string is a valid birthday.","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    public static boolean isValidBirthday(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        if (!DateUtil.isValidDateString(test)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        LocalDate birthdayTest \u003d DateUtil.parseStringToDate(test);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        if (DateUtil.isFutureDate(birthdayTest)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if the birthday is upcoming within at most 1 week\u0027s time and is not in the past.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"     * @return true if the birthday is upcoming","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"    public boolean isUpcoming() {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        int currentYear \u003d LocalDate.now().getYear();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        LocalDate birthdayThisYear \u003d date.withYear(currentYear);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        return !birthdayThisYear.isBefore(LocalDate.now())","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"                \u0026\u0026 !birthdayThisYear.isAfter(LocalDate.now().plusWeeks(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        return DateUtil.parseDateToString(date);","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        return date.equals(otherBirthday.date);","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        return date.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"    public int compareTo(Birthday other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        return date.compareTo(other.date);","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"     * Compares the month and date of this birthday with another birthday.","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"     * Ignores the year.","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"     * @param other The other birthday to compare with","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"     * @return A negative integer, zero, or a positive integer as this birthday is before, at the same time, or after","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"    public int compareByBirthdayMonthAndDateOnly(Birthday other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"        int currentYear \u003d LocalDate.now().getYear();","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"        return date.withYear(currentYear).compareTo(other.date.withYear(currentYear));","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"solomonng2001":96}},{"path":"src/main/java/seedu/address/model/person/DisplayClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":" * Represents a Client that is being displayed.","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"public class DisplayClient {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"    private Person person;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    public DisplayClient(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"        this.person \u003d person;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    public Person getDisplayClient() {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"        return this.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    public void setDisplayClient(Person newPerson) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"        this.person \u003d newPerson;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    public boolean hasDisplayClient() {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"        return this.person !\u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"        if (!(other instanceof DisplayClient)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        DisplayClient otherDisplayClient \u003d (DisplayClient) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"            return otherDisplayClient.getDisplayClient() \u003d\u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"        return person.equals(otherDisplayClient.getDisplayClient());","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"getsquared":44}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class Email implements Comparable\u003cEmail\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]+\"","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"    public int compareTo(Email other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        return this.value.compareTo(other.value);","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"getsquared":1,"solomonng2001":5,"-":77}},{"path":"src/main/java/seedu/address/model/person/LastMet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static java.lang.Math.abs;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":" * Represents the last met date with a Client in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"public class LastMet implements Comparable\u003cLastMet\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"    private static long lastMetDuration \u003d 90;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    private final LocalDate lastMetDate;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    private boolean isOverdue;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"     * Constructs a {@code LastMet}.","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"     * @param lastMet A valid lastMet date.","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"    public LastMet(LocalDate lastMet) {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"        this.lastMetDate \u003d lastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"        checkOverdue();","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"     * Changes the number of days of lastMet before a Client\u0027s LastMet is flagged in the schedule tracker.","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"     * @param days","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"    public static void setLastMetDuration(long days) {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        lastMetDuration \u003d days;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"     * Method updates and set the new LastMetDuration before overdue.","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"     * @param days","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    public static void setLastMetDuration(int days) {","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"        lastMetDuration \u003d days;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"    public static long getLastMetDuration() {","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"        return lastMetDuration;","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"     * Method checks for the number of days since the last meeting has exceeded the LastMet reminder period.","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"    public void checkOverdue() {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"        long periodGap \u003d getPeriodGap();","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"        if (periodGap \u003e lastMetDuration) {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"            this.isOverdue \u003d true;","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"            this.isOverdue \u003d false;","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"     * Method returns isOverdue boolean","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"     * @return The status if a new meetup with client is overdue.","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"    public boolean getIsOverdue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"        checkOverdue();","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"        return this.isOverdue;","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"     * Method returns number of days since lastMet with client.","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"     * @return The number of days since lastMet with client.","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"    public long getPeriodGap() {","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"        return ChronoUnit.DAYS.between(this.lastMetDate, LocalDate.now());","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"    public LocalDate getLastMet() {","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"        return this.lastMetDate;","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"     * Method returns a string representation of LastMet for the GUI.","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"     * @return A string representation of LastMet for the GUI.","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"    public String showLastMet() {","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"        return \"Last Met: \" + this.lastMetDate + \", \" + abs(this.getPeriodGap()) + \" Days Ago.\";","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"     * Compares two LastMet objects based on the lastMetDate. The method returns 0 if the two LastMet objects have the","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"     * same lastMetDate, a positive integer if this LastMet object has a later lastMetDate than the other LastMet","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"     * object, and a negative integer if this LastMet object has an earlier lastMetDate than the other LastMet object.","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"     * @param other","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"     * @return An integer value based on the comparison of the lastMetDate of two LastMet objects.","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"    public int compareTo(LastMet other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"        return this.lastMetDate.compareTo(other.lastMetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"ReganChoy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"ReganChoy"},"content":"        return DateUtil.parseDateToString(this.lastMetDate);","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"        if (!(other instanceof LastMet)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"        LastMet otherLastMet \u003d (LastMet) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"        return lastMetDate.equals(otherLastMet.lastMetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"        return lastMetDate.hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ReganChoy":91,"solomonng2001":22,"yorklim":12}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        return this.fullName.compareTo(other.fullName);","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"solomonng2001":5,"-":66}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    private final Birthday birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    private final Priority priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"    private final LastMet lastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"    private final Schedule schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"    private final PolicyList policyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Birthday birthday, Priority priority,","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"                  Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        requireAllNonNull(name, phone, email, address, birthday, priority, tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"        this.lastMet \u003d new LastMet(LocalDate.now());","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"        this.schedule \u003d new Schedule(LocalDateTime.now(), true);","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"        this.policyList \u003d new PolicyList();","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"     * Person constructor used for subsequent LastMet, Schedule and Mark Commands.","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Birthday birthday,","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"        Priority priority, Remark remark, LastMet lastmet, Schedule schedule, Set\u003cTag\u003e tags, PolicyList policyList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"        requireAllNonNull(name, phone, email, address, birthday, tags, policyList);","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"        this.address \u003d address;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"        this.lastMet \u003d checkNullLastMet(lastmet);","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"        this.schedule \u003d checkNullSchedule(schedule);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"        this.policyList \u003d policyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        return birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"    public Priority getPriority() {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"        return priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Remark getRemark() {","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"ReganChoy"},"content":"    public LastMet getLastMet() {","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"ReganChoy"},"content":"        return lastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"ReganChoy"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"ReganChoy"},"content":"        return schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":110,"author":{"gitId":"yorklim"},"content":"    public PolicyList getPolicyList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"yorklim"},"content":"        return policyList.getPolicyListClone();","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":114,"author":{"gitId":"ReganChoy"},"content":"    private LastMet checkNullLastMet(LastMet lastmet) {","lastModifiedDate":"2024-03-12"},{"lineNumber":115,"author":{"gitId":"ReganChoy"},"content":"        if (lastmet \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":116,"author":{"gitId":"ReganChoy"},"content":"            return new LastMet(LocalDate.now());","lastModifiedDate":"2024-03-12"},{"lineNumber":117,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"ReganChoy"},"content":"            return lastmet;","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"ReganChoy"},"content":"    private Schedule checkNullSchedule(Schedule schedule) {","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"ReganChoy"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":124,"author":{"gitId":"ReganChoy"},"content":"            return new Schedule(LocalDateTime.now(), true);","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":126,"author":{"gitId":"ReganChoy"},"content":"            return schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":127,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":128,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":129,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"yorklim"},"content":"     * Returns true if person has a policy in their policyList that has conflicting policyId as testPolicy.","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"yorklim"},"content":"     * @param testPolicy Policy to be tested for conflicting policyId","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"yorklim"},"content":"     * @return true if person has a policy in their policyList that has conflicting policyId as testPolicy","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"yorklim"},"content":"    public boolean isConflictingPolicyId(Policy testPolicy) {","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"yorklim"},"content":"        assert testPolicy !\u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"yorklim"},"content":"        return policyList.hasConflictingPolicyId(testPolicy);","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"yorklim"},"content":"     * Returns true if person has any policy in their policyList that has policyId.","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"yorklim"},"content":"     * @param policyId Policy ID to be tested for existence","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"yorklim"},"content":"     * @return true if person has any policy in their policyList that has policyId","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"yorklim"},"content":"    public boolean hasPolicyID(String policyId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"yorklim"},"content":"        assert policyId !\u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"yorklim"},"content":"        return policyList.hasPolicy(policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"                \u0026\u0026 birthday.equals(otherPerson.birthday)","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"                \u0026\u0026 priority.equals(otherPerson.priority)","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"yorklim"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"yorklim"},"content":"                \u0026\u0026 policyList.equals(otherPerson.policyList);","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"solomonng2001"},"content":"        return Objects.hash(name, phone, email, address, birthday, priority, tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"solomonng2001"},"content":"                .add(\"birthday\", birthday)","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"solomonng2001"},"content":"                .add(\"priority\", priority)","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2024-02-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":215,"author":{"gitId":"yorklim"},"content":"                .add(\"policies\", policyList)","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"yorklim"},"content":"     * Returns true if the person has an overdue lastMet and there is no active schedule, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"yorklim"},"content":"     * @return true if the person has an overdue lastMet and there is no active schedule.","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"yorklim"},"content":"    public boolean isOverDueLastMet() {","lastModifiedDate":"2024-03-24"},{"lineNumber":224,"author":{"gitId":"yorklim"},"content":"        return lastMet.getIsOverdue() \u0026\u0026 schedule.getIsDone();","lastModifiedDate":"2024-03-24"},{"lineNumber":225,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":226,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":228,"author":{"gitId":"yorklim"},"content":"     * Returns true if the person has an active schedule, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":229,"author":{"gitId":"yorklim"},"content":"     * @return true if the person has an active schedule.","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"yorklim"},"content":"    public boolean hasActiveSchedule() {","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"yorklim"},"content":"        return !schedule.getIsDone();","lastModifiedDate":"2024-03-25"},{"lineNumber":233,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":235,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"solomonng2001"},"content":"     * Returns true if the person has an upcoming birthday, false otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"solomonng2001"},"content":"     * @return true if the person has an upcoming birthday.","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"solomonng2001"},"content":"    public boolean hasUpcomingBirthday() {","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"solomonng2001"},"content":"        return birthday.isUpcoming();","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"yorklim"},"content":"     * Returns the string representation of the overdue person for GUI.","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"yorklim"},"content":"     * @return The string representation of the overdue person","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"yorklim"},"content":"    public String overdueLastMetStringFormat() {","lastModifiedDate":"2024-03-25"},{"lineNumber":248,"author":{"gitId":"yorklim"},"content":"        return String.format(name + \" - %dd ago\", lastMet.getPeriodGap());","lastModifiedDate":"2024-03-25"},{"lineNumber":249,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":250,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"yorklim"},"content":"     * Returns the string representation of the scheduled person for GUI.","lastModifiedDate":"2024-03-25"},{"lineNumber":253,"author":{"gitId":"yorklim"},"content":"     * @return The string representation of the scheduled person","lastModifiedDate":"2024-03-25"},{"lineNumber":254,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":255,"author":{"gitId":"yorklim"},"content":"    public String scheduleStringFormat() {","lastModifiedDate":"2024-03-25"},{"lineNumber":256,"author":{"gitId":"yorklim"},"content":"        return schedule.getScheduleDateString() + \" - \" + name + (schedule.getIsMissed() ? \" (Missed)\" : \"\");","lastModifiedDate":"2024-03-25"},{"lineNumber":257,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":258,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"solomonng2001"},"content":"     * Returns the string representation of the person\u0027s birthday for GUI.","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"solomonng2001"},"content":"     * @return The string representation of the person\u0027s birthday","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"solomonng2001"},"content":"    public String birthdayStringFormat() {","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"solomonng2001"},"content":"        return birthday.toString() + \" - \" + name;","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"getsquared":3,"ReganChoy":43,"solomonng2001":38,"yorklim":61,"-":121}},{"path":"src/main/java/seedu/address/model/person/PersonComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":" * Comparator for comparing persons.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class PersonComparator {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"     * Returns a comparator based on the sort criteria and sort order.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"     * @param sortCriteria the sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"     * @param sortOrder the sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"     * @return the comparator","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public static Comparator\u003cPerson\u003e getComparator(SortCriteria sortCriteria, SortOrder sortOrder) {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        switch (sortCriteria) {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"        case NAME:","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"            comparator \u003d Comparator.comparing(Person::getName);","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"            break;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        case PRIORITY:","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"            comparator \u003d Comparator.comparing(Person::getPriority);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"            break;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        case BIRTHDAY:","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"            comparator \u003d Comparator.comparing(Person::getBirthday);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"            break;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        default:","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"            return COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        if (sortOrder \u003d\u003d SortOrder.DESC) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"            return comparator.reversed();","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        return comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":38}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class Phone implements Comparable\u003cPhone\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    public int compareTo(Phone other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        return this.value.compareTo(other.value);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"solomonng2001":5,"-":59}},{"path":"src/main/java/seedu/address/model/person/PolicyList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":" * The type Policy list.","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"public class PolicyList {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"     * The Policy list.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"    public final ObservableList\u003cPolicy\u003e policyList;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"     * Instantiates a new Policy list.","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"    public PolicyList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"        this.policyList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"     * Instantiates a new Policy list.","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"     * @param policyList the policy list","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"    public PolicyList(ObservableList\u003cPolicy\u003e policyList) {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"        this.policyList \u003d policyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"     * Add policy.","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"     * @param newPolicy the new policy","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"    public void addPolicy(Policy newPolicy) {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"        policyList.add(newPolicy);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"     * Delete policy.","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"     * @param policyId the policy id","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"    public void deletePolicy(String policyId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"        Policy toDelete \u003d findPolicy(policyId);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"        policyList.remove(toDelete);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"    private Policy findPolicy(String policyId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"        for (Policy p: policyList) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"            if (p.isID(policyId)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"yorklim"},"content":"                return p;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"        return null;","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"     * Has conflicting policy id boolean.","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"yorklim"},"content":"     * @param newPolicy the new policy","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"     * @return the boolean","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"    public boolean hasConflictingPolicyId(Policy newPolicy) {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"        assert newPolicy !\u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"        boolean isConflicting \u003d false;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"        for (Policy p: policyList) {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"            if (p.hasSameId(newPolicy)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"yorklim"},"content":"                isConflicting \u003d true;","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"yorklim"},"content":"                break;","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"        return isConflicting;","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"yorklim"},"content":"     * Has policy boolean.","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"yorklim"},"content":"     * @param policyId the policy id","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"yorklim"},"content":"     * @return the boolean","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"yorklim"},"content":"    public boolean hasPolicy(String policyId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"        return findPolicy(policyId) !\u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"     * Creates a stream from PolicyList.","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"     * @return the stream","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"yorklim"},"content":"    public Stream\u003cPolicy\u003e toStream() {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"        return policyList.stream();","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"     * Gets policy list clone.","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"yorklim"},"content":"     * @return the policy list clone","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"yorklim"},"content":"    public PolicyList getPolicyListClone() {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e cloneArraylist \u003d FXCollections.observableArrayList(policyList);","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"yorklim"},"content":"        return new PolicyList(cloneArraylist);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"yorklim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"yorklim"},"content":"        return policyList.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"yorklim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"yorklim"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"yorklim"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"yorklim"},"content":"        if (!(other instanceof PolicyList)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"yorklim"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"yorklim"},"content":"        PolicyList otherPolicyList \u003d (PolicyList) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"yorklim"},"content":"        return policyList.equals(otherPolicyList.policyList);","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":1,"yorklim":126}},{"path":"src/main/java/seedu/address/model/person/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":" * Represents a Person\u0027s Priority in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPriority(String)}","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class Priority implements Comparable\u003cPriority\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Priority should be one of the following values: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"            + String.join(\", \", PriorityValue.getFullPriorities()) + \" or \"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"            + String.join(\", \", PriorityValue.getShortPriorities());","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    public final PriorityValue value;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"     * Constructs an {@code Priority}.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"     * @param priority A valid priority string input.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    public Priority(String priority) {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        requireNonNull(priority);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        checkArgument(isValidPriority(priority), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        value \u003d PriorityValue.getPriority(priority);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"     * Returns if a given string is a valid priority.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    public static boolean isValidPriority(String test) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        return PriorityValue.FULL_PRIORITY_MAP.containsKey(test.toLowerCase())","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"                || PriorityValue.SHORT_PRIORITY_MAP.containsKey(test.toLowerCase());","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        return value.toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        if (!(other instanceof Priority)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        Priority otherPriority \u003d (Priority) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        return value.equals(otherPriority.value);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"    public int compareTo(Priority other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        return value.compareTo(other.value);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"solomonng2001":65}},{"path":"src/main/java/seedu/address/model/person/PriorityValue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.person.Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":" * Represents the value of a person\u0027s priority in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"public enum PriorityValue { // Already implements Comparable\u003cPriorityValue\u003e in the original code","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    LOW, MEDIUM, HIGH, VIP; // Order of priority values matters for compareTo method (low \u003c medium \u003c high \u003c vip)","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"     * Mapping of priority values to their corresponding string representations in full form.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    public static final HashMap\u003cString, PriorityValue\u003e FULL_PRIORITY_MAP \u003d new HashMap\u003c\u003e(","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"            Map.of(\"low\", LOW, \"medium\", MEDIUM, \"high\", HIGH, \"vip\", VIP)","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"     * Mapping of priority values to their corresponding string representations in short form.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public static final HashMap\u003cString, PriorityValue\u003e SHORT_PRIORITY_MAP \u003d new HashMap\u003c\u003e(","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"            Map.of(\"l\", LOW, \"m\", MEDIUM, \"h\", HIGH, \"v\", VIP)","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"    );","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"     * Returns the priority value from the input string.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"     * Checks have been made to ensure that the input is valid before calling this method.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"     * @param priority the input string","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"     * @return the priority value","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"    public static PriorityValue getPriority(String priority) throws IllegalArgumentException {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        String lowerCaseInput \u003d priority.toLowerCase();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        if (FULL_PRIORITY_MAP.containsKey(lowerCaseInput)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"            return FULL_PRIORITY_MAP.get(lowerCaseInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        if (SHORT_PRIORITY_MAP.containsKey(lowerCaseInput)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"            return SHORT_PRIORITY_MAP.get(lowerCaseInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"     * Returns the full form string representation of the priority value.","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"     * @return the full form string representation of the priority value","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"    public static String[] getFullPriorities() {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        return new String[]{\"low\", \"medium\", \"high\", \"vip\"};","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"     * Returns the short form string representation of the priority value.","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"     * @return the short form string representation of the priority value","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"    public static String[] getShortPriorities() {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        return new String[]{\"l\", \"m\", \"h\", \"v\"};","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"        return this.name().toUpperCase();","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"getsquared":1,"solomonng2001":70}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Remark {","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Remark(String remark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        value \u003d remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"        return value.equals(otherRemark.value);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"getsquared":11,"-":35}},{"path":"src/main/java/seedu/address/model/person/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":" * Schedule class is responsible for keep tracking for appointments with a Client in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class Schedule implements Comparable\u003cSchedule\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"    private LocalDateTime schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"    private boolean isDone;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"    private boolean isMissed;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"     * Constructs a {@code Schedule}.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"     * @param schedule A valid schedule dateTime.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"    public Schedule(LocalDateTime schedule) {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"        checkIsMissed();","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"     * Constructs a {@code Schedule}.","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"     * @param schedule A valid schedule dateTime.","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"     * @param isDone Status of schedule if known","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"    public Schedule(LocalDateTime schedule, boolean isDone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"        checkIsMissed();","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    public LocalDateTime getSchedule() {","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        return this.schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        return this.isDone;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"    public void markIsDone() {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"        return DateTimeUtil.parseDateToString(this.schedule) + \"/\" + isDoneToString();","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"     * Method is used for generating a String representation for the GUI.","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"     * @return A string representation of Schedule for the GUI.","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"    public String showSchedule() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"        if (isDone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"            return \"No upcoming appointment\";","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"            return \"Your next appointment is \" + DateTimeUtil.parseDateToString(this.schedule);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"     * Method is used for converting Storage values to boolean isDone when loading app.","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"     * @param input","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"     * @return","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"    public static boolean checkIsDoneFromString(String input) {","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"        if (input.equals(\"1\")) {","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"     * Method is used for converting boolean isDone value to String value for Storage.","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"     * @return","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"    public String isDoneToString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"        if (isDone) {","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"            return \"1\";","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"            return \"0\";","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":91,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"ReganChoy"},"content":"    public boolean getIsMissedReminder() {","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"ReganChoy"},"content":"        if (this.isMissed \u0026\u0026 !this.isDone) {","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"ReganChoy"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"ReganChoy"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"ReganChoy"},"content":"    private void checkIsMissed() {","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"ReganChoy"},"content":"        if (this.schedule.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"ReganChoy"},"content":"            this.isMissed \u003d true;","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"ReganChoy"},"content":"            this.isMissed \u003d false;","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"ReganChoy"},"content":"    public boolean getIsMissed() {","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"yorklim"},"content":"        checkIsMissed();","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"ReganChoy"},"content":"        return this.isMissed;","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"        if (!(other instanceof Schedule)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"        Schedule otherSchedule \u003d (Schedule) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"        return schedule.equals(otherSchedule.schedule);","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"        return schedule.hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"yorklim"},"content":"     * Compares two Schedule objects based on the schedule. The method returns 0 if the two Schedule objects have the","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"yorklim"},"content":"     * same schedule, a value less than 0 if this Schedule is before the other Schedule, and a value greater than 0 if","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"yorklim"},"content":"     * this Schedule is after the other Schedule.","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"yorklim"},"content":"     * @param other","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"yorklim"},"content":"     * @return","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"solomonng2001"},"content":"    public int compareTo(Schedule other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"solomonng2001"},"content":"        return this.schedule.compareTo(other.schedule);","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"yorklim"},"content":"     * Method is used for generating a String representation of the schedule date for the GUI.","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"yorklim"},"content":"     * @return A string representation of the schedule date for the GUI.","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"yorklim"},"content":"    public String getScheduleDateString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"yorklim"},"content":"        return DateTimeUtil.parseDateToString(this.schedule);","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ReganChoy":110,"solomonng2001":26,"yorklim":16}},{"path":"src/main/java/seedu/address/model/person/SortCriteria.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":" * Represents the sort criteria of the client list.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"public enum SortCriteria {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"    NAME,","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"    BIRTHDAY,","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"    PRIORITY,","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"    INVALID;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sort criteria should be either \"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"            + SortCriteria.NAME + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"            + SortCriteria.PRIORITY + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"            + SortCriteria.BIRTHDAY + \".\";","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"     * Returns the sort criteria given the string.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"     * Should check if the given string is a valid sort criteria before calling this method.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"     * @param test the given string","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"     * @return the sort criteria, or INVALID if the given string is not a valid sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public static SortCriteria getSortCriteria(String test) {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"            return SortCriteria.INVALID;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        for (SortCriteria criteria : SortCriteria.values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"            if (criteria.name().equalsIgnoreCase(test)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"                return criteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        return SortCriteria.INVALID;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"     * Returns if the given string is a valid sort criteria.","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"     * @param test the given string","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"     * @return true if the given string is a valid sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"    public static boolean isValidSortCriteria(String test) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        if (test.equalsIgnoreCase(SortCriteria.INVALID.toString())) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        for (SortCriteria criteria : SortCriteria.values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"            if (criteria.name().equalsIgnoreCase(test)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"                return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"     * Returns the string representation of the sort criteria.","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"     * @return the string representation of the sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        return name().toLowerCase();","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":66}},{"path":"src/main/java/seedu/address/model/person/SortOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":" * Represents the sort order of the client list.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"public enum SortOrder {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"    ASC,","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"    DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"    INVALID;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sort order should be either \"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"            + SortOrder.ASC + \" or \"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"            + SortOrder.DESC + \".\";","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"     * Returns the sort order given the string.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"     * Should check if the given string is a valid sort order before calling this method.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"     * @param test the given string","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"     * @return the sort order, or INVALID if the given string is not a valid sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    public static SortOrder getSortOrder(String test) {","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"            return SortOrder.INVALID;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        for (SortOrder order : SortOrder.values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"            if (order.name().equalsIgnoreCase(test)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"                return order;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        return SortOrder.INVALID;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"     * Returns if the given string is a valid sort order.","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"     * @param test the given string","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"     * @return true if the given string is a valid sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    public static boolean isValidSortOrder(String test) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"        if (test.equalsIgnoreCase(SortOrder.INVALID.toString())) {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        for (SortOrder order : SortOrder.values()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"            if (order.name().equalsIgnoreCase(test)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"                return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"     * Returns the string representation of the sort order.","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"     * @return the string representation of the sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        return name().toLowerCase();","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":64}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"yorklim"},"content":"     * Returns the list of persons who are overdue to be met according to their last met date, sorted from most overdue","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"yorklim"},"content":"     * to least.","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"yorklim"},"content":"     * @return list of persons who are overdue to be met","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"yorklim"},"content":"    public ObservableList\u003cPerson\u003e getOverDueLastMet() {","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPerson\u003e overDueLastMet \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"yorklim"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"yorklim"},"content":"            if (person.isOverDueLastMet()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"yorklim"},"content":"                overDueLastMet.add(person);","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"yorklim"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"yorklim"},"content":"        overDueLastMet.sort((p1, p2) -\u003e p1.getLastMet().compareTo(p2.getLastMet()));","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"yorklim"},"content":"        return overDueLastMet;","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"yorklim"},"content":"     * Returns the list of persons who have been scheduled to be met, sorted by schedule.","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"yorklim"},"content":"     * @return list of persons who have been scheduled to be met","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"yorklim"},"content":"    public ObservableList\u003cPerson\u003e getSchedules() {","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPerson\u003e schedules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"yorklim"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"yorklim"},"content":"            if (person.hasActiveSchedule()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"yorklim"},"content":"                schedules.add(person);","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"yorklim"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"yorklim"},"content":"        schedules.sort((p1, p2) -\u003e p1.getSchedule().compareTo(p2.getSchedule()));","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"yorklim"},"content":"        return schedules;","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"solomonng2001"},"content":"     * Returns the list of persons who have upcoming birthdays, sorted by birthday.","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"solomonng2001"},"content":"     * @return list of persons who have upcoming birthdays","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"solomonng2001"},"content":"    public ObservableList\u003cPerson\u003e sortFilterHaveUpcomingBirthday() {","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"solomonng2001"},"content":"        FilteredList\u003cPerson\u003e filteredPersonsWithUpcomingBirthdays \u003d new FilteredList\u003c\u003e(internalList);","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"solomonng2001"},"content":"        filteredPersonsWithUpcomingBirthdays.setPredicate(Person::hasUpcomingBirthday);","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"        SortedList\u003cPerson\u003e sortedFilteredPersonsWithUpcomingBirthdays \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"                new SortedList\u003c\u003e(filteredPersonsWithUpcomingBirthdays);","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"solomonng2001"},"content":"        sortedFilteredPersonsWithUpcomingBirthdays.setComparator(","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"solomonng2001"},"content":"                Comparator.comparing(Person::getBirthday, Birthday::compareByBirthdayMonthAndDateOnly));","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"solomonng2001"},"content":"        return sortedFilteredPersonsWithUpcomingBirthdays;","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"solomonng2001":17,"yorklim":31,"-":150}},{"path":"src/main/java/seedu/address/model/policy/Policy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":" * The type Policy.","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"public class Policy {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"     * The constant MESSAGE_CONSTRAINTS_NAME.","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_CONSTRAINTS_NAME \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"            \"Policy names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"     * The constant MESSAGE_CONSTRAINTS_ID.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_CONSTRAINTS_ID \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"            \"Policy ID should only contain numbers, and it should be at least 1 digit long\";","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"     * The constant VALIDATION_NAME_REGEX.","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"    public static final String VALIDATION_NAME_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"     * The constant VALIDATION_ID_REGEX.","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"    public static final String VALIDATION_ID_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"     * The Policy name.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"    public final String policyName;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"     * The Policy id.","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"    public final String policyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"     * Instantiates a new Policy.","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"     * @param policyName the policy name","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"     * @param policyId   the policy id","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    public Policy(String policyName, String policyId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"        requireNonNull(policyName, policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"        checkArgument(isValidName(policyName), MESSAGE_CONSTRAINTS_NAME);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"        checkArgument(isValidId(policyId), MESSAGE_CONSTRAINTS_ID);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"        this.policyName \u003d policyName;","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"        this.policyId \u003d policyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"    public String getPolicyId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"        return policyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"    public String getPolicyName() {","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"        return policyName;","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"     * Is id boolean.","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"     * @param testID the test id","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"     * @return the boolean","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"    public boolean isID(String testID) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"        return testID.equals(policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"     * Is valid name boolean.","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"     * @param test the test","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"yorklim"},"content":"     * @return the boolean","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"yorklim"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"        return test.matches(VALIDATION_NAME_REGEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"yorklim"},"content":"     * Is valid id boolean.","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"yorklim"},"content":"     * @param test the test","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"yorklim"},"content":"     * @return the boolean","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"        return test.matches(VALIDATION_ID_REGEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"     * Has same id boolean.","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"     * @param policy the policy","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"     * @return the boolean","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"    public boolean hasSameId(Policy policy) {","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"        return policyId.equals(policy.policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"        return \"Name:\" + policyName + \", Policy ID:\" + policyId;","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"yorklim"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"yorklim"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"yorklim"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"yorklim"},"content":"        if (!(obj instanceof Policy)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"yorklim"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"yorklim"},"content":"        Policy policy \u003d (Policy) obj;","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"getsquared"},"content":"        return policyId.equals(policy.policyId) \u0026\u0026 policyName.equals(policy.policyName);","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":21,"yorklim":95}},{"path":"src/main/java/seedu/address/model/reminder/ReminderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":" * Represents a list of reminders.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"public class ReminderList {","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"    private ObservableList\u003cPerson\u003e remindersList;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"    private final ReminderType reminderType;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"     * Instantiates a new Reminder list.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"     * @param reminderType  the reminder type","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"     * @param remindersList the reminders list","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"    public ReminderList(ReminderType reminderType, ObservableList\u003cPerson\u003e remindersList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"        this.reminderType \u003d reminderType;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"        this.remindersList \u003d remindersList;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"     * Returns the size of the reminder list.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"     * @return size of the reminder list.","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"    public int size() {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"        return remindersList.size();","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"        for (Person p : remindersList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"            switch (reminderType) {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"            case LAST_MET:","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"                sb.append(p.overdueLastMetStringFormat()).append(\"\\n\");","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"            case SCHEDULES:","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"                sb.append(p.scheduleStringFormat()).append(\"\\n\");","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"            case BIRTHDAYS:","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"                sb.append(p.birthdayStringFormat()).append(\"\\n\");","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"                break;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"            default:","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        if (!(other instanceof ReminderList)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        ReminderList otherReminderList \u003d (ReminderList) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"        if (otherReminderList.reminderType !\u003d reminderType) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        if (!remindersList.equals(otherReminderList.remindersList)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":26,"yorklim":49}},{"path":"src/main/java/seedu/address/model/reminder/ReminderType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":" * Represents the type of reminder.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"public enum ReminderType {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"    LAST_MET,","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"    SCHEDULES,","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"    BIRTHDAYS;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"        switch(this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"        case LAST_MET:","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"            return \"Last Met\";","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"        case SCHEDULES:","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"            return \"Schedules\";","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"        case BIRTHDAYS:","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"            return \"Birthday\";","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"        default:","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":4,"yorklim":20}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Birthday(\"1990-01-01\"), new Priority(\"vip\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"                new Remark(\"Prefers speaking English\"), new LastMet(LocalDate.now()),","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"                new Schedule(LocalDateTime.now().plusMonths(1)), getTagSet(\"friends\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"                getPoliciesSet(\"Health,001\", \"Travel,002\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Birthday(\"1983-03-15\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"                new Priority(\"high\"), EMPTY_REMARK, getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Birthday(\"1997-12-23\"), new Priority(\"medium\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"                new Remark(\"Prefer email communication\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Birthday(\"2001-05-20\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"                new Priority(\"medium\"), EMPTY_REMARK, getTagSet(\"family\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Birthday(\"1979-10-29\"), new Priority(\"medium\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"                EMPTY_REMARK, getTagSet(\"classmates\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Birthday(\"2003-11-07\"), new Priority(\"low\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"                EMPTY_REMARK, getTagSet(\"colleagues\"))","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"    public static PolicyList getPoliciesSet(String... strings) {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"yorklim"},"content":"        PolicyList policies \u003d new PolicyList();","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"yorklim"},"content":"        Arrays.stream(strings).forEach(x -\u003e policies.addPolicy(new Policy(x.split(\",\")[0],","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"yorklim"},"content":"                x.split(\",\")[1])));","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"        return policies;","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"getsquared":8,"solomonng2001":8,"yorklim":13,"-":50}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    private final String birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    private final String priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    private final String lastmet;","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    private final String schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"    private final List\u003cJsonAdaptedPolicy\u003e policies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"            @JsonProperty(\"birthday\") String birthday, @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"            @JsonProperty(\"remark\") String remark, @JsonProperty(\"lastmet\") String lastmet,","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"            @JsonProperty(\"schedule\") String schedule, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"            @JsonProperty(\"policies\") List\u003cJsonAdaptedPolicy\u003e policies) {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        this.lastmet \u003d lastmet;","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"        if (policies !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"            this.policies.addAll(policies);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        birthday \u003d source.getBirthday().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        priority \u003d source.getPriority().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"        lastmet \u003d source.getLastMet().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"        schedule \u003d source.getSchedule().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"        policies.addAll(source.getPolicyList().toStream()","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"                .map(JsonAdaptedPolicy::new)","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"        final PolicyList personPolicies \u003d new PolicyList();","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"yorklim"},"content":"        for (JsonAdaptedPolicy policy : policies) {","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"yorklim"},"content":"            personPolicies.addPolicy(policy.toModelType());","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"solomonng2001"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"solomonng2001"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"solomonng2001"},"content":"                    Birthday.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"solomonng2001"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"solomonng2001"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"solomonng2001"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"solomonng2001"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"solomonng2001"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"solomonng2001"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"solomonng2001"},"content":"        if (!Priority.isValidPriority(priority)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"solomonng2001"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"solomonng2001"},"content":"        final Priority modelPriority \u003d new Priority(priority);","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"ReganChoy"},"content":"        final LastMet modelLastMet \u003d new LastMet(DateUtil.parseStringToDate(lastmet));","lastModifiedDate":"2024-03-12"},{"lineNumber":168,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"ReganChoy"},"content":"        String[] scheduleString \u003d schedule.toString().split(\"/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"ReganChoy"},"content":"        String scheduleDateTimeString \u003d scheduleString[0];","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"ReganChoy"},"content":"        String isDoneString \u003d scheduleString[1];","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"ReganChoy"},"content":"        final Schedule modelSchedule \u003d new Schedule(DateTimeUtil.parseStringToDateTime(scheduleDateTimeString),","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"ReganChoy"},"content":"                Schedule.checkIsDoneFromString(isDoneString));","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"getsquared"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelBirthday, modelPriority, modelRemark,","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"yorklim"},"content":"                modelLastMet, modelSchedule, modelTags, personPolicies);","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"getsquared":3,"ReganChoy":19,"solomonng2001":26,"yorklim":17,"-":115}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPolicy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":" * Jackson-friendly version of {@link Policy}.","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"class JsonAdaptedPolicy {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"    private final String policyName;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    private final String policyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"     * Constructs a {@code JsonAdaptedPolicy} with the given {@code policyName, policyID}.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"    public JsonAdaptedPolicy(String policyDetails) {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"        String[] args \u003d policyDetails.split(\",\");","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"        this.policyName \u003d args[0];","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"        this.policyId \u003d args[1];","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"     * Converts a given {@code Policy} into this class for Jackson use.","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"    public JsonAdaptedPolicy(Policy source) {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"        policyName \u003d source.policyName;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        policyId \u003d source.policyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"    @JsonValue","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"    public String getPolicyDetails() {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        return policyName + \",\" + policyId;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"     * Converts this Jackson-friendly adapted policy object into the model\u0027s {@code Policy} object.","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted policy.","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"    public Policy toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"        if (!Policy.isValidName(policyName)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"            throw new IllegalValueException(Policy.MESSAGE_CONSTRAINTS_NAME);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"        if (!Policy.isValidId(policyId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"            throw new IllegalValueException(Policy.MESSAGE_CONSTRAINTS_ID);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"        return new Policy(policyName, policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":6,"yorklim":49}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Client list contains duplicate client(s).\";","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yorklim":1,"-":59}},{"path":"src/main/java/seedu/address/storage/SetStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import java.io.File;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":" * This class is responsible for loading and storing the LastMet Overdue value","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"public class SetStorage {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"    private static int value;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    private static final String PATH \u003d \"data/setvalue.txt\";","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"    private SetStorage(int day) {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"        value \u003d day;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"    public int getValue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"        return value;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    public static void setData(int days) {","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        value \u003d days;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"        storeData();","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"     * Loads the LastMet Overdue value from setvalue.txt","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"     * @throws IOException","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"    public static void loadData() throws IOException {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"        File file \u003d new File(PATH);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"            file.createNewFile();","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"            value \u003d 90;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"            storeData();","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"            try {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"                checkContents(file);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"                createNewFile();","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"     * Stores the LastMet Overdue value into setvalue.txt","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"    public static void storeData() {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"            FileWriter writer \u003d new FileWriter(PATH);","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"            String setValue \u003d Integer.toString(value);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"            writer.write(setValue);","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"            writer.close();","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"            System.out.println(\"Error\");","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"     * Reset the setvalue.txt file if value is invalid","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"    public static void createNewFile() {","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"        value \u003d 90;","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"        storeData();","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"     * Checks the contents of setvalue.txt","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"    public static void checkContents(File file) throws IOException {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"        if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"            createNewFile();","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"            Integer inputConverted \u003d Integer.valueOf(input);","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"            if (inputConverted instanceof Integer) {","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"                if (inputConverted \u003c 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"                    createNewFile();","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"ReganChoy"},"content":"                } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"ReganChoy"},"content":"                    value \u003d inputConverted;","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"ReganChoy"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"ReganChoy"},"content":"                LastMet.setLastMetDuration(value);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"ReganChoy"},"content":"            } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"ReganChoy"},"content":"                createNewFile();","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"ReganChoy"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"ReganChoy"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"ReganChoy":99}},{"path":"src/main/java/seedu/address/ui/ClientDetailsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":" * An UI component that displays detailed information of a {@code Person}.","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"public class ClientDetailsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"    private static final String FXML \u003d \"ClientDetailsCard.fxml\";","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    private Label birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    private Label priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    private Label remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"    private Label lastMet;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    private Label schedule;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    @FXML","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"     * Creates an empty {@code ClientDetailsCard}.","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"    public ClientDetailsCard() {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"        super(FXML);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"        this.person \u003d null;","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"     * Creates a {@code ClientDetailsCard} with the given {@code Person}.","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"    public ClientDetailsCard(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"        phone.setText(\"Phone Number: \" + person.getPhone().value);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"        birthday.setText(\"Date of Birth: \" + person.getBirthday().toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"        priority.setText(\"Priority: \" + person.getPriority().toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"        remark.setText(\"Remarks: \" + person.getRemark().value);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"        lastMet.setText(person.getLastMet().showLastMet());","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"        schedule.setText(person.getSchedule().showSchedule());","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"getsquared":21,"solomonng2001":4,"ReganChoy":7,"-":37}},{"path":"src/main/java/seedu/address/ui/ClientListCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"public class ClientListCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"     * Creates a {@code ClientListCard} with the given {@code Person} and index to display.","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"    public ClientListCard(Person person, int displayedIndex) {","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"getsquared":4,"-":52}},{"path":"src/main/java/seedu/address/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    private ListView\u003cPerson\u003e clientListView;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    public ClientListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"        clientListView.setItems(personList);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code ClientListCard}.","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"    class ClientListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"                setGraphic(new ClientListCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"getsquared":12,"-":37}},{"path":"src/main/java/seedu/address/ui/ClientPolicyTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":" * An UI component that displays policies of a {@code Person} in a TableView.","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"public class ClientPolicyTable extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    private static final String FXML \u003d \"ClientPolicyTable.fxml\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    private TableView\u003cPolicy\u003e policyTableView;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    private TableColumn\u003cPolicy, String\u003e policyId;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    private TableColumn\u003cPolicy, String\u003e policyName;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"     * Creates an empty {@code ClientPolicyTable}.","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    public ClientPolicyTable() {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        super(FXML);","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"     * Creates a {@code ClientPolicyTable} with the given {@code policyList}.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    public ClientPolicyTable(PolicyList policyList) {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        super(FXML);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        policyId.setCellValueFactory(new PropertyValueFactory\u003cPolicy, String\u003e(\"policyId\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"        policyName.setCellValueFactory(new PropertyValueFactory\u003cPolicy, String\u003e(\"policyName\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"        policyTableView.setItems(policyList.policyList);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"getsquared":43}},{"path":"src/main/java/seedu/address/ui/ClientViewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":" * A UI Class that encapsulates {@code ClientDetailsCard} and {@code ClientPolicyTable}.","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":" * To make updating the client details and policies together easier.","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"public class ClientViewPanel {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"    private ClientDetailsCard clientDetailsCard;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    private ClientPolicyTable clientPolicyTable;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"     * Creates a {@code ClientViewPanel} with the given {@code person}.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    public ClientViewPanel(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"            this.clientDetailsCard \u003d new ClientDetailsCard();","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"            this.clientPolicyTable \u003d new ClientPolicyTable();","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"            this.clientDetailsCard \u003d new ClientDetailsCard(person);","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"            this.clientPolicyTable \u003d new ClientPolicyTable(person.getPolicyList());","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    public ClientDetailsCard getClientDetailsCard() {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"        return clientDetailsCard;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"    public ClientPolicyTable getClientPolicyTable() {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        return clientPolicyTable;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"     * Updates the {@code ClientDetailsCard} with new {@code Person}.","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"    public void updateClientDetailsCard(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"        clientDetailsCard \u003d new ClientDetailsCard(person);","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"     * Updates the {@code ClientPolicyTable} with new {@code ObservableList\u003cPolicy\u003e}","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"    public void updateClientPolicyTable(PolicyList policyList) {","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"        clientPolicyTable \u003d new ClientPolicyTable(policyList);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"     * Updates the {@code ClientViewPanel} with new {@code Person}.","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"    public void updateClientViewPanel(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"        updateClientDetailsCard(person);","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"        updateClientPolicyTable(person.getPolicyList());","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"getsquared":57}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-w12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yorklim":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"    private ClientViewPanel clientViewPanel;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"    private RemindersPanel remindersPanel;","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"    private StackPane clientDetailsCardPlaceholder;","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"    private StackPane clientPolicyTablePlaceholder;","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"    private StackPane lastMetCardPlaceholder;","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"    private StackPane appointmentsCardPlaceholder;","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"    private StackPane birthdayRemindersCardPlaceholder;","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"getsquared"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"getsquared"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"getsquared"},"content":"        clientViewPanel \u003d new ClientViewPanel(logic.getDisplayClient());","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"getsquared"},"content":"        addClientViewPanel();","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"getsquared"},"content":"        // Clear table if no clients to keep UI consistent","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"getsquared"},"content":"        if (!logic.hasDisplayClient()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"getsquared"},"content":"            clearClientViewPanel();","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"        remindersPanel \u003d new RemindersPanel(logic.getOverDueLastMet(), logic.getSchedules(),","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"solomonng2001"},"content":"                logic.getBirthdayReminders());","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"getsquared"},"content":"        addRemindersPanel();","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"solomonng2001"},"content":"     * Clears the placeholders of client list panel.","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"solomonng2001"},"content":"    private void clearClientListPanel() {","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"solomonng2001"},"content":"        clientListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"solomonng2001"},"content":"     * Fills up the placeholders of client list panel.","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"solomonng2001"},"content":"    private void addClientListPanel() {","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"solomonng2001"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"solomonng2001"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"solomonng2001"},"content":"     * Refreshes the client list panel.","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"solomonng2001"},"content":"    private void refreshClientListPanel() {","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"solomonng2001"},"content":"        clearClientListPanel();","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"solomonng2001"},"content":"        addClientListPanel();","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"getsquared"},"content":"     * Fills up placeholders of client view panel.","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"getsquared"},"content":"    private void addClientViewPanel() {","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"getsquared"},"content":"        ClientDetailsCard clientDetailsCard \u003d clientViewPanel.getClientDetailsCard();","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"getsquared"},"content":"        clientDetailsCardPlaceholder.getChildren().add(clientDetailsCard.getRoot());","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"getsquared"},"content":"        ClientPolicyTable clientPolicyTable \u003d clientViewPanel.getClientPolicyTable();","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"getsquared"},"content":"        clientPolicyTablePlaceholder.getChildren().add(clientPolicyTable.getRoot());","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"getsquared"},"content":"     * Clears the placeholders of client view panel.","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"getsquared"},"content":"    private void clearClientViewPanel() {","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"getsquared"},"content":"        clientDetailsCardPlaceholder.getChildren().clear();","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"getsquared"},"content":"        clientPolicyTablePlaceholder.getChildren().clear();","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"getsquared"},"content":"     * Refreshes the client view panel.","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"getsquared"},"content":"    private void refreshClientViewPanel() {","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"getsquared"},"content":"        clearClientViewPanel();","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"getsquared"},"content":"        if (logic.hasDisplayClient()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"getsquared"},"content":"            clientViewPanel.updateClientViewPanel(logic.getDisplayClient());","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"getsquared"},"content":"            addClientViewPanel();","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"getsquared"},"content":"     * Fills up placeholders of reminders panel.","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"getsquared"},"content":"    private void addRemindersPanel() {","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"getsquared"},"content":"        RemindersCard lastMetCard \u003d remindersPanel.getLastMetCard();","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"getsquared"},"content":"        lastMetCardPlaceholder.getChildren().add(lastMetCard.getRoot());","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"getsquared"},"content":"        RemindersCard appointmentsCard \u003d remindersPanel.getAppointmentsCard();","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"getsquared"},"content":"        appointmentsCardPlaceholder.getChildren().add(appointmentsCard.getRoot());","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"solomonng2001"},"content":"        RemindersCard birthdayRemindersCard \u003d remindersPanel.getBirthdayRemindersCard();","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"solomonng2001"},"content":"        birthdayRemindersCardPlaceholder.getChildren().add(birthdayRemindersCard.getRoot());","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"getsquared"},"content":"     * Clears the placeholders of reminders panel.","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"getsquared"},"content":"    private void clearRemindersPanel() {","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"getsquared"},"content":"        lastMetCardPlaceholder.getChildren().clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"getsquared"},"content":"        appointmentsCardPlaceholder.getChildren().clear();","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"getsquared"},"content":"     * Refreshes the reminders panel.","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"getsquared"},"content":"    private void refreshRemindersPanel() {","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"getsquared"},"content":"        clearRemindersPanel();","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"solomonng2001"},"content":"        remindersPanel.updateRemindersPanel(logic.getOverDueLastMet(), logic.getSchedules(),","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"solomonng2001"},"content":"                logic.getBirthdayReminders());","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"getsquared"},"content":"        addRemindersPanel();","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":242,"author":{"gitId":"solomonng2001"},"content":"     * Refreshes the client view panel, client list panel and reminders panel.","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"solomonng2001"},"content":"    private void refreshAllPanels() {","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"solomonng2001"},"content":"        refreshClientViewPanel();","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"solomonng2001"},"content":"        refreshClientListPanel();","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"solomonng2001"},"content":"        refreshRemindersPanel();","lastModifiedDate":"2024-03-25"},{"lineNumber":248,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"solomonng2001"},"content":"        logger.info(\"All panels refreshed: client view, client list and reminders\");","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":251,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":303,"author":{"gitId":"solomonng2001"},"content":"            refreshAllPanels();","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"getsquared":87,"solomonng2001":43,"-":190}},{"path":"src/main/java/seedu/address/ui/RemindersCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderType;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"public class RemindersCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    private static final String FXML \u003d \"RemindersCard.fxml\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"    private final ReminderList remindersList;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"    private final ReminderType reminderType;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    private Label title;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    private Label remindersCardList;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"     * Creates a {@code ClientListCard} with the given {@code }.","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"    public RemindersCard(ReminderType reminderType, ReminderList remindersList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        super(FXML);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"        this.reminderType \u003d reminderType;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"        this.remindersList \u003d remindersList;","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"        title.setText(reminderType.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"        remindersCardList.setText(remindersList.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"        remindersCardList.setPrefHeight(60);","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        remindersCardList.setPrefHeight(60 + remindersList.size() * 20);","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        cardPane.setPrefHeight(80);","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"        cardPane.setPrefHeight(80 + remindersList.size() * 20);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"getsquared":29,"yorklim":11}},{"path":"src/main/java/seedu/address/ui/RemindersPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderType;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":" * A UI Class that encapsulates {@code RemindersCard} for Last Met and Appointments.","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":" * To make updating them together easier.","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"public class RemindersPanel {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    private RemindersCard lastMetCard;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"    private RemindersCard scheduleCard;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    private RemindersCard birthdayRemindersCard;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"     * Creates a {@code RemindersPanel} with the given {@code }.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public RemindersPanel(ReminderList overDueLastMetList, ReminderList appointmentsList,","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"                          ReminderList birthdayRemindersList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"        this.lastMetCard \u003d new RemindersCard(ReminderType.LAST_MET, overDueLastMetList);","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"        this.scheduleCard \u003d new RemindersCard(ReminderType.SCHEDULES, appointmentsList);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"        this.birthdayRemindersCard \u003d new RemindersCard(ReminderType.BIRTHDAYS, birthdayRemindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    public RemindersCard getLastMetCard() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"        return lastMetCard;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"    public RemindersCard getAppointmentsCard() {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"        return scheduleCard;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    public RemindersCard getBirthdayRemindersCard() {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        return birthdayRemindersCard;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"     * Updates the {@code LastMetCard} with new {@code }.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"    public void updateLastMetCard(ReminderList updatedOverDueList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"        lastMetCard \u003d new RemindersCard(ReminderType.LAST_MET, updatedOverDueList);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"     * Updates the {@code AppointmentsCard} with new {@code }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    public void updateAppointmentsCard(ReminderList updatedAppointmentsList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"        scheduleCard \u003d new RemindersCard(ReminderType.SCHEDULES, updatedAppointmentsList);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"     * Updates the {@code BirthdayRemindersCard} with new {@code }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"    public void updateBirthdayRemindersCard(ReminderList updatedBirthdayRemindersList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        birthdayRemindersCard \u003d new RemindersCard(ReminderType.BIRTHDAYS, updatedBirthdayRemindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"     * Updates the {@code RemindersPanel} with new {@code }.","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    public void updateRemindersPanel(ReminderList updatedOverDueList, ReminderList updatedAppointmentsList,","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"                                     ReminderList updatedBirthdayRemindersList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"        updateLastMetCard(updatedOverDueList);","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"        updateAppointmentsCard(updatedAppointmentsList);","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"        updateBirthdayRemindersCard(updatedBirthdayRemindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"getsquared":36,"solomonng2001":18,"yorklim":13}},{"path":"src/main/resources/view/ClientDetailsCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"\u003cScrollPane styleClass\u003d\"client-details\" prefHeight\u003d\"250.0\" prefWidth\u003d\"700.0\" fitToWidth\u003d\"true\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"       \u003cGridPane prefHeight\u003d\"250.0\" prefWidth\u003d\"700.0\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"          \u003cColumnConstraints percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"          \u003cColumnConstraints percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"          \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"            \u003cHBox GridPane.columnSpan\u003d\"2\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"                    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$full\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"                \u003c/children\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"            \u003cVBox GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"                \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"                \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthday\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"                \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"            \u003cVBox GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"                    \u003cLabel fx:id\u003d\"lastMet\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$lastMet\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"                    \u003cLabel fx:id\u003d\"schedule\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$Schedule\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"                    \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"                \u003c/children\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"getsquared"},"content":"   \u003c/content\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"getsquared":56,"solomonng2001":1}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"getsquared":1,"-":7}},{"path":"src/main/resources/view/ClientPolicyTable.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" ?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.TableColumn ?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.TableView ?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"\u003cTableView fx:id\u003d\"policyTableView\" prefHeight\u003d\"250.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"    \u003cplaceholder\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"        \u003cLabel text\u003d\"No policies under this client at the moment.\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"    \u003c/placeholder\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    \u003ccolumns\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"        \u003cTableColumn fx:id\u003d\"policyId\" editable\u003d\"false\" minWidth\u003d\"80.0\" prefWidth\u003d\"100.0\" reorderable\u003d\"false\" text\u003d\"Policy ID\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"        \u003cTableColumn fx:id\u003d\"policyName\" editable\u003d\"false\" minWidth\u003d\"120.0\" prefWidth\u003d\"300.0\" reorderable\u003d\"false\" text\u003d\"Policy Name\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    \u003c/columns\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"    \u003ccolumnResizePolicy\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"        \u003cTableView fx:constant\u003d\"CONSTRAINED_RESIZE_POLICY\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    \u003c/columnResizePolicy\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"\u003c/TableView\u003e","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"getsquared":18}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"    -fx-base: #383838;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"    -fx-control-inner-background: #383838;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":".scroll-pane {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"    -fx-background: transparent;","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"getsquared"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"getsquared"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"getsquared"},"content":".client-details {","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"getsquared"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"getsquared"},"content":".reminders-card {","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"getsquared"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"getsquared":19,"-":346}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"         title\u003d\"ClientCare\" minWidth\u003d\"1000\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"          \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"250\" prefWidth\u003d\"300\" maxWidth\u003d\"300\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"            \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"          \u003cVBox fx:id\u003d\"clientView\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" prefWidth\u003d\"700\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"            \u003cStackPane fx:id\u003d\"clientDetailsCardPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"            \u003cStackPane fx:id\u003d\"clientPolicyTablePlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"          \u003cVBox fx:id\u003d\"remindersView\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"350\" prefWidth\u003d\"350\" maxWidth\u003d\"350\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"            \u003cScrollPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"              \u003ccontent\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"                \u003cVBox minWidth\u003d\"310\" prefWidth\u003d\"310\" maxWidth\u003d\"310\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"                  \u003cStackPane fx:id\u003d\"lastMetCardPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"                  \u003cRegion prefWidth\u003d\"310\" prefHeight\u003d\"20\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"                  \u003cStackPane fx:id\u003d\"appointmentsCardPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"                  \u003cRegion prefWidth\u003d\"310\" prefHeight\u003d\"20\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"                  \u003cStackPane fx:id\u003d\"birthdayRemindersCardPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"              \u003c/content\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"getsquared":27,"solomonng2001":2,"yorklim":3,"-":56}},{"path":"src/main/resources/view/RemindersCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"    \u003cGridPane styleClass\u003d\"reminders-card\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"        \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"60\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"            \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"                \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$title\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"            \u003cLabel fx:id\u003d\"remindersCardList\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remindersCardList\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"getsquared":25}},{"path":"src/test/java/seedu/address/commons/util/DateTmeUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"public class DateTmeUtilTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    public void isValidDateTimeString_validFormat_returnTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(DateTimeUtil.isValidDateTimeString(\"2022-03-13 12:30\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"    public void isValidDateTimeString_invalidFormat_returnFalse() {","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(DateTimeUtil.isValidDateTimeString(\"2022/03/13 12:30\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"    public void isValidDateTimeString_nullInput_returnFalse() {","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(DateTimeUtil.isValidDateTimeString(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"    public void isParsableDateTimeString_parsableDateTime_returnTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(DateTimeUtil.isParsableDateTimeString(\"2022-03-13 12:30\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"    public void isParsableDateTimeString_invalidDateTime_returnFalse() {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(DateTimeUtil.isParsableDateTimeString(\"2022/03/13 12:30\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    public void isPastDateTime_pastDateTime_returnTrue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(DateTimeUtil.isPastDateTime(LocalDateTime.now().minusHours(1)));","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"    public void isPastDateTime_futureDateTime_returnFalse() {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(DateTimeUtil.isPastDateTime(LocalDateTime.now().plusHours(1)));","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"    public void parseStringToDateTime_validDateTime_returnLocalDateTime() {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.parse(\"2022-03-13 12:30\",","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"                DateTimeFormatter.ofPattern(DateTimeUtil.DATE_FORMAT));","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expectedDateTime, DateTimeUtil.parseStringToDateTime(\"2022-03-13 12:30\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"    public void parseStringToDateTime_invalidDateTime_throwDateTimeParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseStringToDateTime(\"2022/03/13 12:30\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"    public void parseDateToString_validDateTime_returnFormattedString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2022-03-13 12:30\",","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"                DateTimeFormatter.ofPattern(DateTimeUtil.DATE_FORMAT));","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(\"2022-03-13 12:30\", DateTimeUtil.parseDateToString(dateTime));","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"    public void parseDateToString_nullDateTime_returnEmptyString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(\"\", DateTimeUtil.parseDateToString(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"    public void getMessageConstraintsForDateType_validDateType_returnFormattedMessage() {","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(\"Birthday should be in the format YYYY-MM-DD HH:mm and must be an actual dateTime\",","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"                DateTimeUtil.getMessageConstraintsForDateType(\"Birthday\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":81}},{"path":"src/test/java/seedu/address/commons/util/DateUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"public class DateUtilTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    public void isValidDateString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        // null date","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        // blank date","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\" \")); // spaces only","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        // invalid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"91-12-2020\")); // invalid day","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"31-13-2020\")); // invalid month","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"31-12-20200\")); // invalid year","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"31-12-2020 \")); // trailing space","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\" 31-12-2020\")); // leading space","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"31- 12-2020\")); // spaces within date","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"31-12- 2020\")); // spaces within date","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"31-12-2020 12:00\")); // time included","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"31-12-2020 12:00:00\")); // time included","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"12-31-2020\")); // MM-DD-YYYY format with hyphens","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"2020/12/31\")); // YYYY/MM/DD format with slashes","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"12/31/2020\")); // MM/DD/YYYY format with slashes","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"20201231\")); // YYYYMMDD format without delimiters","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"12312020\")); // MMDDYYYY format without delimiters","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"3 Jan 2021\")); // d MMM YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"31-Jan-2021\")); // DD-MMM-YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"January 3, 2021\")); // Month d, YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"2021-Jan-3\")); // YYYY-MMM-d format","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"2020-12-3A\")); // Alphabetic character in day component","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"2020-AB-31\")); // Alphabetic characters in month component","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"ABCD-12-31\")); // Alphabetic characters in year component","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isValidDateString(\"2020-12-31ABC\")); // Alphabetic characters after the date","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        // valid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2021-01-01\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2022-02-28\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2023-03-15\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2024-04-30\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2025-05-10\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2026-06-20\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2027-07-31\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2028-08-15\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2029-09-25\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isValidDateString(\"2030-10-05\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    public void isParsableDateString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        // null date","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        // blank date","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\" \")); // spaces only","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        // invalid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"91-12-2020\")); // invalid day","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"31-13-2020\")); // invalid month","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"31-12-20200\")); // invalid year","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"31-12-2020 \")); // trailing space","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\" 31-12-2020\")); // leading space","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"31- 12-2020\")); // spaces within date","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"31-12- 2020\")); // spaces within date","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"31-12-2020 12:00\")); // time included","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"31-12-2020 12:00:00\")); // time included","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"12-31-2020\")); // MM-DD-YYYY format with hyphens","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"2020/12/31\")); // YYYY/MM/DD format with slashes","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"12/31/2020\")); // MM/DD/YYYY format with slashes","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"20201231\")); // YYYYMMDD format without delimiters","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"12312020\")); // MMDDYYYY format without delimiters","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"3 Jan 2021\")); // d MMM YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"31-Jan-2021\")); // DD-MMM-YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"January 3, 2021\")); // Month d, YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"2021-Jan-3\")); // YYYY-MMM-d format","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"2020-12-3A\")); // Alphabetic character in day component","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"2020-AB-31\")); // Alphabetic characters in month component","lastModifiedDate":"2024-03-11"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"ABCD-12-31\")); // Alphabetic characters in year component","lastModifiedDate":"2024-03-11"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isParsableDateString(\"2020-12-31ABC\")); // Alphabetic characters after the date","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"        // valid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2021-01-01\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2022-02-28\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2023-03-15\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2024-04-30\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2025-05-10\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2026-06-20\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2027-07-31\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2028-08-15\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2029-09-25\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isParsableDateString(\"2030-10-05\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"    public void isFutureDate() {","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"        // null date","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isFutureDate(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"        // future dates","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isFutureDate(LocalDate.now().plusDays(1)));","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isFutureDate(LocalDate.now().plusMonths(1)));","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(DateUtil.isFutureDate(LocalDate.now().plusYears(1)));","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"        // current date","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isFutureDate(LocalDate.now()));","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"        // past dates","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isFutureDate(LocalDate.now().minusDays(1)));","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isFutureDate(LocalDate.now().minusMonths(1)));","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DateUtil.isFutureDate(LocalDate.now().minusYears(1)));","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"solomonng2001"},"content":"    public void parseStringToDate() {","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"        // null date","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateUtil.parseStringToDate(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"solomonng2001"},"content":"        // blank date","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateUtil.parseStringToDate(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateUtil.parseStringToDate(\" \")); // spaces only","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"solomonng2001"},"content":"        // invalid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"91-12-2020\")); // invalid day","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"31-13-2020\")); // invalid month","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"31-12-20200\")); // invalid year","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"31-12-2020 \")); // trailing space","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\" 31-12-2020\")); // leading space","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"31- 12-2020\")); // spaces within date","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":149,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"31-12- 2020\")); // spaces within date","lastModifiedDate":"2024-03-11"},{"lineNumber":150,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"31-12-2020 12:00\")); // time included","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"31-12-2020 12:00:00\")); // time included","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"12-31-2020\")); // MM-DD-YYYY format with hyphens","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":157,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"2020/12/31\")); // YYYY/MM/DD format with slashes","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"12/31/2020\")); // MM/DD/YYYY format with slashes","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"20201231\")); // YYYYMMDD format without delimiters","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"12312020\")); // MMDDYYYY format without delimiters","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"3 Jan 2021\")); // d MMM YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":167,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"31-Jan-2021\")); // DD-MMM-YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"January 3, 2021\")); // Month d, YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":170,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"2021-Jan-3\")); // YYYY-MMM-d format","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"2020-12-3A\")); // Alphabetic character in day component","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"2020-AB-31\")); // Alphabetic characters in month component","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"ABCD-12-31\")); // Alphabetic characters in year component","lastModifiedDate":"2024-03-11"},{"lineNumber":178,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseStringToDate(\"2020-12-31ABC\")); // Alphabetic characters after the date","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"solomonng2001"},"content":"        // valid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":182,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2021-01-01\"), LocalDate.of(2021, 1, 1));","lastModifiedDate":"2024-03-11"},{"lineNumber":183,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":184,"author":{"gitId":"solomonng2001"},"content":"        // valid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2021-01-01\"), LocalDate.of(2021, 1, 1));","lastModifiedDate":"2024-03-11"},{"lineNumber":186,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2022-02-28\"), LocalDate.of(2022, 2, 28));","lastModifiedDate":"2024-03-11"},{"lineNumber":187,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2023-03-15\"), LocalDate.of(2023, 3, 15));","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2024-04-30\"), LocalDate.of(2024, 4, 30));","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2025-05-10\"), LocalDate.of(2025, 5, 10));","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2026-06-20\"), LocalDate.of(2026, 6, 20));","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2027-07-31\"), LocalDate.of(2027, 7, 31));","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2028-08-15\"), LocalDate.of(2028, 8, 15));","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2029-09-25\"), LocalDate.of(2029, 9, 25));","lastModifiedDate":"2024-03-11"},{"lineNumber":194,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseStringToDate(\"2030-10-05\"), LocalDate.of(2030, 10, 5));","lastModifiedDate":"2024-03-11"},{"lineNumber":195,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":196,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":198,"author":{"gitId":"solomonng2001"},"content":"    public void parseDateToString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"solomonng2001"},"content":"        // null date","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(null), \"\");","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":202,"author":{"gitId":"solomonng2001"},"content":"        // valid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2021, 1, 1)), \"2021-01-01\");","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2022, 2, 28)), \"2022-02-28\");","lastModifiedDate":"2024-03-11"},{"lineNumber":205,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2023, 3, 15)), \"2023-03-15\");","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2024, 4, 30)), \"2024-04-30\");","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2025, 5, 10)), \"2025-05-10\");","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2026, 6, 20)), \"2026-06-20\");","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2027, 7, 31)), \"2027-07-31\");","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2028, 8, 15)), \"2028-08-15\");","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2029, 9, 25)), \"2029-09-25\");","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(DateUtil.parseDateToString(LocalDate.of(2030, 10, 5)), \"2030-10-05\");","lastModifiedDate":"2024-03-11"},{"lineNumber":213,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":214,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"solomonng2001"},"content":"    void getMessageConstraintsForDateType() {","lastModifiedDate":"2024-03-11"},{"lineNumber":217,"author":{"gitId":"solomonng2001"},"content":"        String dateType \u003d \"Birthday\";","lastModifiedDate":"2024-03-11"},{"lineNumber":218,"author":{"gitId":"solomonng2001"},"content":"        String expectedMessage \u003d dateType + \" \" + DateUtil.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":219,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expectedMessage, DateUtil.getMessageConstraintsForDateType(dateType));","lastModifiedDate":"2024-03-11"},{"lineNumber":220,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":221,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"solomonng2001":221}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"clientcare.json\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"solomonng2001"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY + PRIORITY_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"solomonng2001":4,"-":173}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"        assertEquals(validPerson, modelStub.displayClient);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"        private static final String MESSAGE_METHOD_SHOULD_NOT_BE_CALLED \u003d \"This method should not be called.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":153,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"solomonng2001"},"content":"        public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"solomonng2001"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"solomonng2001"},"content":"        public void updateSortPersonComparator(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"getsquared"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"getsquared"},"content":"        public Person getDisplayClient() {","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"getsquared"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"getsquared"},"content":"        public boolean hasDisplayClient() {","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"getsquared"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"getsquared"},"content":"        public void clearDisplayClient() {","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"getsquared"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"getsquared"},"content":"        public void setDisplayClient(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"solomonng2001"},"content":"        @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"        public void setDisplayClientAsFirstInSortedFilteredPersonList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"yorklim"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"yorklim"},"content":"        public ReminderList getSchedules() {","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"yorklim"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"yorklim"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"yorklim"},"content":"        public ReminderList getOverDueLastMet() {","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"solomonng2001"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"solomonng2001"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"solomonng2001"},"content":"        public ReminderList getBirthdayReminders() {","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"solomonng2001"},"content":"            throw new AssertionError(MESSAGE_METHOD_SHOULD_NOT_BE_CALLED);","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"getsquared"},"content":"        private Person displayClient;","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":255,"author":{"gitId":"getsquared"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":256,"author":{"gitId":"getsquared"},"content":"        public void setDisplayClient(Person person) {","lastModifiedDate":"2024-03-17"},{"lineNumber":257,"author":{"gitId":"getsquared"},"content":"            displayClient \u003d person;","lastModifiedDate":"2024-03-17"},{"lineNumber":258,"author":{"gitId":"getsquared"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"getsquared":24,"solomonng2001":41,"yorklim":6,"-":190}},{"path":"src/test/java/seedu/address/logic/commands/AddPolicyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.commands.AddPolicyCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"public class AddPolicyCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand addPolicyCommand \u003d new AddPolicyCommand(index, new Policy(\"Life\", \"123\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand sameAddPolicyCommand \u003d new AddPolicyCommand(index, new Policy(\"Life\", \"123\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"        assertTrue(addPolicyCommand.equals(addPolicyCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        assertTrue(addPolicyCommand.equals(sameAddPolicyCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"        assertFalse(addPolicyCommand.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"        assertFalse(addPolicyCommand.equals(new Object()));","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"        assertFalse(addPolicyCommand.equals(new AddPolicyCommand(Index.fromOneBased(2),","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"                new Policy(\"Life\", \"123\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"        assertFalse(addPolicyCommand.equals(new AddPolicyCommand(Index.fromOneBased(1),","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"                new Policy(\"Health\", \"123\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"        assertFalse(addPolicyCommand.equals(new AddPolicyCommand(Index.fromOneBased(1),","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"                new Policy(\"Life\", \"113\"))));","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"    public void execute_validIndexAndPolicyID_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"        Policy policyToAdd \u003d new Policy(\"Life\", \"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand addPolicyCommand \u003d new AddPolicyCommand(validIndex, policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"        expectedModel.addPolicy(model.getAddressBook().getPersonList().get(0), policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"        CommandTestUtil.assertCommandSuccess(addPolicyCommand, model,","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"                String.format(MESSAGE_SUCCESS, model.getSortedFilteredPersonList().get(0).getName()), expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"        Policy policyToAdd \u003d new Policy(\"Life\", \"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand addPolicyCommand \u003d new AddPolicyCommand(invalidIndex, policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"        assertThrows(CommandException.class, () -\u003e addPolicyCommand.execute(model),","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"    public void execute_conflictingId_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"yorklim"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"yorklim"},"content":"        Policy policyToAdd \u003d new Policy(\"Life\", \"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"yorklim"},"content":"        Policy conflictingPolicyToAdd \u003d new Policy(\"Health\", \"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"        expectedModel.addPolicy(model.getAddressBook().getPersonList().get(0), policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand firstAddPolicyCommand \u003d new AddPolicyCommand(validIndex, policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand secondAddPolicyCommand \u003d new AddPolicyCommand(validIndex, conflictingPolicyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"yorklim"},"content":"        CommandTestUtil.assertCommandSuccess(firstAddPolicyCommand, model,","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"                String.format(MESSAGE_SUCCESS, model.getSortedFilteredPersonList().get(0).getName()), expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"        assertThrows(CommandException.class, () -\u003e secondAddPolicyCommand.execute(model),","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"yorklim"},"content":"                Messages.MESSAGE_DUPLICATE_POLICY);","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"        Policy policyToAdd \u003d new Policy(\"Life\", \"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand addPolicyCommand \u003d new AddPolicyCommand(validIndex, policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"        expectedModel.addPolicy(model.getAddressBook().getPersonList().get(0), policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"        CommandTestUtil.assertCommandSuccess(addPolicyCommand, model,","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"                String.format(MESSAGE_SUCCESS, model.getSortedFilteredPersonList().get(0).getName()), expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"yorklim"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"yorklim"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"yorklim"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"yorklim"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"yorklim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"yorklim"},"content":"        Policy policyToAdd \u003d new Policy(\"Life\", \"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand addPolicyCommand \u003d new AddPolicyCommand(outOfBoundIndex, policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"yorklim"},"content":"        assertCommandFailure(addPolicyCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"yorklim"},"content":"    public void toString_validCommand_returnsExpectedString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"yorklim"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"yorklim"},"content":"        Policy policyToAdd \u003d new Policy(\"Life\", \"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand addPolicyCommand \u003d new AddPolicyCommand(index, policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"yorklim"},"content":"        String expected \u003d AddPolicyCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", addPolicy\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"yorklim"},"content":"                + policyToAdd + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"yorklim"},"content":"        assertEquals(expected, addPolicyCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"solomonng2001":4,"yorklim":126}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"1990-01-01\";","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"1978-11-03\";","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_PRIORITY_AMY \u003d \"high\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_PRIORITY_BOB \u003d \"low\";","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    public static final String VALID_POLICY_LIFE \u003d \"Life,1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    public static final String PRIORITY_DESC_AMY \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    public static final String PRIORITY_DESC_BOB \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY + \"01-01-1990\"; // reversed date format","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"    public static final String INVALID_PRIORITY_DESC \u003d \" \" + PREFIX_PRIORITY + \"highly\"; // should be high","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"                .withBirthday(VALID_BIRTHDAY_AMY).withPriority(VALID_PRIORITY_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"                .withBirthday(VALID_BIRTHDAY_BOB).withPriority(VALID_PRIORITY_BOB).withTags(VALID_TAG_HUSBAND,","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"                        VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expectedFilteredList, actualModel.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getSortedFilteredPersonList().size());","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"        Person person \u003d model.getSortedFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(1, model.getSortedFilteredPersonList().size());","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"solomonng2001":20,"yorklim":1,"-":123}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        Person personToDelete \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        Person personToDelete \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(model.getSortedFilteredPersonList().isEmpty());","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"solomonng2001":4,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/DeletePolicyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.commands.DeletePolicyCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"public class DeletePolicyCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand deletePolicyCommand \u003d new DeletePolicyCommand(index, \"123\");","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand sameDeletePolicyCommand \u003d new DeletePolicyCommand(index, \"123\");","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"        assertTrue(deletePolicyCommand.equals(deletePolicyCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"        assertTrue(deletePolicyCommand.equals(sameDeletePolicyCommand));","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"        assertFalse(deletePolicyCommand.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        assertFalse(deletePolicyCommand.equals(new Object()));","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"        assertFalse(deletePolicyCommand.equals(new DeletePolicyCommand(Index.fromOneBased(2),","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"                \"123\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"        assertFalse(deletePolicyCommand.equals(new DeletePolicyCommand(Index.fromOneBased(1),","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"                 \"113\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"    public void execute_validIndexAndPolicyID_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"        Index validIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"        String policyToDelete \u003d \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand deletePolicyCommand \u003d new DeletePolicyCommand(validIndex, policyToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"        expectedModel.deletePolicy(model.getAddressBook().getPersonList().get(1), policyToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"        CommandTestUtil.assertCommandSuccess(deletePolicyCommand, model,","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"                String.format(MESSAGE_SUCCESS, policyToDelete, model.getSortedFilteredPersonList().get(1).getName()),","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"                expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"        String policyToDelete \u003d \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand deletePolicyCommand \u003d new DeletePolicyCommand(invalidIndex, policyToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"        assertThrows(CommandException.class, () -\u003e deletePolicyCommand.execute(model),","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"    public void execute_nonExistingId_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"        Index validIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"        String policyToDelete \u003d \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"yorklim"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"yorklim"},"content":"        expectedModel.deletePolicy(model.getAddressBook().getPersonList().get(1), policyToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand deletePolicyCommand \u003d new DeletePolicyCommand(validIndex, \"123\");","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"        CommandTestUtil.assertCommandSuccess(deletePolicyCommand, model,","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"                String.format(MESSAGE_SUCCESS, policyToDelete, model.getSortedFilteredPersonList().get(1).getName()),","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"yorklim"},"content":"                expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"yorklim"},"content":"        assertThrows(CommandException.class, () -\u003e deletePolicyCommand.execute(model),","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"yorklim"},"content":"                Messages.MESSAGE_POLICY_NOT_FOUND);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"yorklim"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"        String policyToDelete \u003d \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand deletePolicyCommand \u003d new DeletePolicyCommand(validIndex, policyToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"yorklim"},"content":"        expectedModel.deletePolicy(model.getAddressBook().getPersonList().get(1), policyToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"        CommandTestUtil.assertCommandSuccess(deletePolicyCommand, model,","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"                String.format(MESSAGE_SUCCESS, policyToDelete , model.getSortedFilteredPersonList().get(0).getName()),","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"                expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"yorklim"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"yorklim"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"yorklim"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"yorklim"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"yorklim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"yorklim"},"content":"        String policyToDelete \u003d \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand deletePolicyCommand \u003d new DeletePolicyCommand(outOfBoundIndex, policyToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"yorklim"},"content":"        assertCommandFailure(deletePolicyCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"yorklim"},"content":"    public void toString_validCommand_returnsExpectedString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"yorklim"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"yorklim"},"content":"        String policyToDelete \u003d \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand deletePolicyCommand \u003d new DeletePolicyCommand(index, policyToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"yorklim"},"content":"        String expected \u003d DeletePolicyCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", deletePolicy\u003d\"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"yorklim"},"content":"                + policyToDelete + \"}\";","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"yorklim"},"content":"        assertEquals(expected, deletePolicyCommand.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"solomonng2001":4,"yorklim":123}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size());","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        Person lastPerson \u003d model.getSortedFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        Person editedPerson \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"        Person personInFilteredList \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"        Person firstPerson \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"solomonng2001":8,"-":176}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        // different birthday -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPriority(VALID_PRIORITY_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"                + editPersonDescriptor.getBirthday().orElse(null) + \", birthday\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"                + editPersonDescriptor.getPriority().orElse(null) + \", priority\u003d\"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"solomonng2001":12,"-":71}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getSortedFilteredPersonList());","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"solomonng2001":2,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/LastMetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.commands.LastMetCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"public class LastMetCommandTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"        LastMetCommand lastMetCommand \u003d new LastMetCommand(index, new LastMet(LocalDate.now()));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        LastMetCommand sameMetCommand \u003d new LastMetCommand(index, new LastMet(LocalDate.now()));","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(lastMetCommand.equals(lastMetCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(lastMetCommand.equals(sameMetCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(lastMetCommand.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(lastMetCommand.equals(new Object()));","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(lastMetCommand.equals(new LastMetCommand(Index.fromOneBased(2), new LastMet(LocalDate.now()))));","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    public void execute_validIndexAndDate_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        LocalDate validDate \u003d LocalDate.now().minusDays(1); // Set a valid date (1 day ago)","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"        LastMetCommand lastMetCommand \u003d new LastMetCommand(validIndex, new LastMet(validDate));","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        CommandTestUtil.assertCommandSuccess(lastMetCommand, model,","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"                String.format(MESSAGE_SUCCESS, model.getSortedFilteredPersonList().get(0).getName()), expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"        LocalDate validDate \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"        LastMetCommand lastMetCommand \u003d new LastMetCommand(invalidIndex, new LastMet(validDate));","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(CommandException.class, () -\u003e lastMetCommand.execute(model),","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"    public void execute_futureDate_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"        LocalDate futureDate \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"        LastMetCommand lastMetCommand \u003d new LastMetCommand(validIndex, new LastMet(futureDate));","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(CommandException.class, () -\u003e lastMetCommand.execute(model),","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"                Messages.MESSAGE_LASTMET_FUTURE);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"    public void toString_validCommand_returnsExpectedString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"        LastMetCommand lastMetCommand \u003d new LastMetCommand(index, new LastMet(date));","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"        String expected \u003d LastMetCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", date\u003d\" + date + \"}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expected, lastMetCommand.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":80,"solomonng2001":2}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"        MarkCommand markCommand \u003d new MarkCommand(index);","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"        MarkCommand sameMarkCommand \u003d new MarkCommand(index);","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(markCommand.equals(markCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(markCommand.equals(sameMarkCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(markCommand.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(markCommand.equals(new Object()));","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(markCommand.equals(new MarkCommand(Index.fromOneBased(2))));","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"        MarkCommand markCommand \u003d new MarkCommand(invalidIndex);","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(CommandException.class, () -\u003e markCommand.execute(model),","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"    public void execute_alreadyDoneSchedule_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        Person personWithDoneSchedule \u003d model.getSortedFilteredPersonList().get(0);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"        personWithDoneSchedule.getSchedule().markIsDone();","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"        MarkCommand markCommand \u003d new MarkCommand(validIndex);","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(CommandException.class, () -\u003e markCommand.execute(model),","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"                Messages.MESSAGE_SCHEDULE_DONE);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"    public void toString_validCommand_returnsExpectedString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"        MarkCommand markCommand \u003d new MarkCommand(index);","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"        String expected \u003d MarkCommand.class.getCanonicalName() + \"{index\u003d\" + index + \"}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expected, markCommand.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":64,"solomonng2001":2}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        Person firstPerson \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        Person firstPerson \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        Person firstPerson \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getSortedFilteredPersonList()","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased())).withRemark(REMARK_STUB).build();","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"getsquared":4,"solomonng2001":6,"-":121}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(index, new Schedule(LocalDateTime.now()));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        ScheduleCommand sameScheduleCommand \u003d new ScheduleCommand(index, new Schedule(LocalDateTime.now()));","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(scheduleCommand.equals(scheduleCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(scheduleCommand.equals(sameScheduleCommand));","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(scheduleCommand.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(scheduleCommand.equals(new Object()));","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(scheduleCommand.equals(new ScheduleCommand(Index.fromOneBased(2),","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"                new Schedule(LocalDateTime.now()))));","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    public void execute_validIndexAndFutureDate_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime validDateTime \u003d LocalDateTime.now().plusDays(1); // Set a future date (1 day later)","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(validIndex, new Schedule(validDateTime));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"        CommandTestUtil.assertCommandSuccess(scheduleCommand, model,","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"                String.format(MESSAGE_SUCCESS, model.getSortedFilteredPersonList().get(0).getName()), expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        Index invalidIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime validDateTime \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(invalidIndex, new Schedule(validDateTime));","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(CommandException.class, () -\u003e scheduleCommand.execute(model),","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"    public void execute_pastDate_throwsCommandException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime pastDateTime \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(validIndex, new Schedule(pastDateTime));","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(CommandException.class, () -\u003e scheduleCommand.execute(model),","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"                Messages.MESSAGE_SCHEDULE_PAST);","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"    public void toString_validCommand_returnsExpectedString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(index, new Schedule(dateTime));","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"        String expected \u003d ScheduleCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", dateTime\u003d\" + dateTime + \"}\";","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expected, scheduleCommand.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":81,"solomonng2001":2}},{"path":"src/test/java/seedu/address/logic/commands/SetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"public class SetCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"    public void constructor_nullInput_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SetCommand(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        SetCommand setCommand \u003d new SetCommand(90);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(setCommand.equals(setCommand));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"    public void equals_equalObjects_returnsTrue() {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"        SetCommand setCommand1 \u003d new SetCommand(90);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        SetCommand setCommand2 \u003d new SetCommand(90);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(setCommand1.equals(setCommand2));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    public void equals_differentObjects_returnsFalse() {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        SetCommand setCommand1 \u003d new SetCommand(90);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"        SetCommand setCommand2 \u003d new SetCommand(100);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(setCommand1.equals(setCommand2));","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ReganChoy":44}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.PersonComparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"public class SortCommandTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    private final ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    private final String invalidSortPriorityAsc \u003d SortCommand.getMessageSuccess(SortCriteria.PRIORITY, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        // null sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(null, SortOrder.ASC));","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        // null sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(SortCriteria.PRIORITY, null));","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        // both null","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(null, null));","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"    public void execute_sortNoPersonsModel_sortSuccesstul() {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        ModelManager expectedEmptyModel \u003d new ModelManager(new AddressBook(new AddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        expectedEmptyModel.updateSortPersonComparator(","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"                PersonComparator.getComparator(SortCriteria.PRIORITY, SortOrder.ASC));","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        CommandTestUtil.assertCommandSuccess(new SortCommand(SortCriteria.PRIORITY, SortOrder.ASC),","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"                new ModelManager(new AddressBook(new AddressBook()), new UserPrefs()),","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"                invalidSortPriorityAsc, expectedEmptyModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    public void execute_sortPersonsModel_sortSuccessful() {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        expectedModel.updateSortPersonComparator(PersonComparator.getComparator(SortCriteria.PRIORITY, SortOrder.ASC));","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        CommandTestUtil.assertCommandSuccess(new SortCommand(SortCriteria.PRIORITY, SortOrder.ASC), model,","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"                invalidSortPriorityAsc, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    public void execute_invalidSortCriteria_sortSuccessful() {","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCriteria.INVALID, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        expectedModel.updateSortPersonComparator(PersonComparator.getComparator(SortCriteria.INVALID, SortOrder.ASC));","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        String expectedMessage \u003d SortCommand.getMessageSuccess(SortCriteria.INVALID, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        CommandTestUtil.assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    public void execute_invalidSortOrder_sortSuccessful() {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCriteria.PRIORITY, SortOrder.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        expectedModel.updateSortPersonComparator(","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"                PersonComparator.getComparator(SortCriteria.PRIORITY, SortOrder.INVALID));","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        String expectedMessage \u003d SortCommand.getMessageSuccess(SortCriteria.PRIORITY, SortOrder.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        CommandTestUtil.assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        SortCommand sortPriorityAscCommand \u003d new SortCommand(SortCriteria.PRIORITY, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        SortCommand sortPriorityDescCommand \u003d new SortCommand(SortCriteria.PRIORITY, SortOrder.DESC);","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        SortCommand sortNameAscCommand \u003d new SortCommand(SortCriteria.NAME, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(sortPriorityAscCommand.equals(sortPriorityAscCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"        SortCommand sortPriorityAscCommandCopy \u003d new SortCommand(SortCriteria.PRIORITY, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(sortPriorityAscCommand.equals(sortPriorityAscCommandCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortPriorityAscCommand.equals(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortPriorityAscCommand.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"        // different sort criteria -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortPriorityAscCommand.equals(sortNameAscCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        // different sort order -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortPriorityAscCommand.equals(sortPriorityDescCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        SortCommand sortPriorityAscCommand \u003d new SortCommand(SortCriteria.PRIORITY, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        String expected \u003d SortCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"                + \"{sortCriteria\u003d\" + SortCriteria.PRIORITY","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"                + \", sortOrder\u003d\" + SortOrder.ASC + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expected, sortPriorityAscCommand.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":104}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":" * {@code ViewCommand}.","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"public class ViewCommandTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        Person personToView \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"                Messages.format(personToView));","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"        expectedModel.setDisplayClient(personToView);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"getsquared"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        Person personToView \u003d model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"getsquared"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"getsquared"},"content":"                Messages.format(personToView));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"getsquared"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"getsquared"},"content":"        expectedModel.setDisplayClient(personToView);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"getsquared"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"getsquared"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"getsquared"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"getsquared"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"getsquared"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"getsquared"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"getsquared"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"getsquared"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"getsquared"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"getsquared"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"getsquared"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"getsquared"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"getsquared"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"getsquared"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(targetIndex);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"getsquared"},"content":"        String expected \u003d ViewCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"getsquared"},"content":"        assertEquals(expected, viewCommand.toString());","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":108,"solomonng2001":3}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"                        + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"        // multiple birthdays","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, BIRTHDAY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"        // multiple priorities","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, PRIORITY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"                        + BIRTHDAY_DESC_AMY + PRIORITY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"                        PREFIX_PHONE, PREFIX_BIRTHDAY, PREFIX_PRIORITY));","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"solomonng2001"},"content":"        // invalid birthday","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, INVALID_BIRTHDAY_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"solomonng2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"        // invalid priority","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, INVALID_PRIORITY_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"solomonng2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"solomonng2001"},"content":"        // invalid birthday","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_BIRTHDAY_DESC,","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"solomonng2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2024-03-11"},{"lineNumber":165,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"solomonng2001"},"content":"        // invalid priority","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PRIORITY_DESC,","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"solomonng2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":175,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_AMY + PRIORITY_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":185,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":189,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":197,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":199,"author":{"gitId":"solomonng2001"},"content":"        // missing birthday prefix","lastModifiedDate":"2024-03-11"},{"lineNumber":200,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":201,"author":{"gitId":"solomonng2001"},"content":"                + VALID_BIRTHDAY_BOB + PRIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"solomonng2001"},"content":"        // missing priority prefix","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + VALID_PRIORITY_BOB, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"solomonng2001"},"content":"                + VALID_BIRTHDAY_BOB + VALID_PRIORITY_BOB, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":216,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"solomonng2001"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":221,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"solomonng2001"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":226,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"solomonng2001"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":231,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"solomonng2001"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":234,"author":{"gitId":"solomonng2001"},"content":"        // invalid birthday","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"solomonng2001"},"content":"                + INVALID_BIRTHDAY_DESC + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"solomonng2001"},"content":"                Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"solomonng2001"},"content":"        // invalid priority","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + INVALID_PRIORITY_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":242,"author":{"gitId":"solomonng2001"},"content":"                Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":246,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":247,"author":{"gitId":"solomonng2001"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":250,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":251,"author":{"gitId":"solomonng2001"},"content":"                + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":255,"author":{"gitId":"solomonng2001"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-18"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"solomonng2001":87,"-":171}},{"path":"src/test/java/seedu/address/logic/parser/AddPolicyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYID;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYNAME;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.AddPolicyCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"public class AddPolicyCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"    private final AddPolicyCommandParser parser \u003d new AddPolicyCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"    public void parse_validArgs_returnsAddPolicyCommand() throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"1 \" + PREFIX_POLICYNAME + \"Life \" + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"        Policy policyToAdd \u003d new Policy(\"Life\", \"123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand expectedCommand \u003d new AddPolicyCommand(ParserUtil.parseIndex(\"1\"), policyToAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"        // Missing index","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"        String args \u003d PREFIX_POLICYNAME + \"Life \" + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    public void parse_missingPolicyNamePrefix_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"        // Missing policyName prefix","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"1 Life \" + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"    public void parse_missingPolicyIdPrefix_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"        // Missing policyId prefix","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"1 \" + PREFIX_POLICYNAME + \"Life 123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    public void parse_invalidIndexFormat_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"        // Invalid index format","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"invalid \" + PREFIX_POLICYNAME + \"Life \" + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"    public void parse_invalidPolicyNameFormat_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"        // Invalid policyName format","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"1 \" + PREFIX_POLICYNAME + \"#Life \" + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"    public void parse_invalidPolicyIdFormat_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"        // Invalid policyId format","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"1 \" + PREFIX_POLICYNAME + \"Life \" + PREFIX_POLICYID + \"a123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"yorklim":66}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.PersonUtil.getSortPersonsDescriptor;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.AddPolicyCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.DeletePolicyCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"getsquared"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"getsquared"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"getsquared"},"content":"                ViewCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"getsquared"},"content":"        assertEquals(new ViewCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"yorklim"},"content":"    public void parseCommand_addPolicy() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"yorklim"},"content":"        AddPolicyCommand command \u003d (AddPolicyCommand) parser.parseCommand(","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"yorklim"},"content":"                AddPolicyCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"yorklim"},"content":"                        + \" n/Health i/123\");","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"yorklim"},"content":"        assertEquals(new AddPolicyCommand(INDEX_FIRST_PERSON, new Policy(\"Health\", \"123\")), command);","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"yorklim"},"content":"    public void parseCommand_deletePolicy() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand command \u003d (DeletePolicyCommand) parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"yorklim"},"content":"                DeletePolicyCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"yorklim"},"content":"                        + \" i/123\");","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"yorklim"},"content":"        assertEquals(new DeletePolicyCommand(INDEX_FIRST_PERSON, \"123\"), command);","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"solomonng2001"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"solomonng2001"},"content":"                + getSortPersonsDescriptor(SortCriteria.NAME, SortOrder.ASC)) instanceof SortCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"solomonng2001"},"content":"                + getSortPersonsDescriptor(SortCriteria.PRIORITY, SortOrder.DESC)) instanceof SortCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"getsquared":9,"solomonng2001":12,"yorklim":16,"-":114}},{"path":"src/test/java/seedu/address/logic/parser/DeletePolicyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICYID;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.commands.DeletePolicyCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"public class DeletePolicyCommandParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"    private final DeletePolicyCommandParser parser \u003d new DeletePolicyCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"    public void parse_validArgs_returnsDeletePolicyCommand() throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"1 \" + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"        String policytoDelete \u003d \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"        DeletePolicyCommand expectedCommand \u003d new DeletePolicyCommand(ParserUtil.parseIndex(\"1\"),","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"                policytoDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"    public void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"        // Missing index","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"        String args \u003d PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    public void parse_missingPolicyIdPrefix_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"        // Missing policyId prefix","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"1 \";","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"    public void parse_invalidIndexFormat_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"        // Invalid index format","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"invalid \" + PREFIX_POLICYID + \"123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    public void parse_invalidPolicyIdFormat_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"        // Invalid policyId format","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"        String args \u003d \"1 \" + PREFIX_POLICYID + \"a123\";","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"yorklim":52}},{"path":"src/test/java/seedu/address/logic/parser/LastMetCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.LastMetCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"public class LastMetCommandParserTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    private final LastMetCommandParser parser \u003d new LastMetCommandParser();","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"    public void parse_validArgs_returnsLastMetCommand() throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"1 \" + CliSyntax.PREFIX_LASTMET + \"2022-12-31\";","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"        LastMetCommand expectedCommand \u003d new LastMetCommand(ParserUtil.parseIndex(\"1\"),","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"                new LastMet(DateUtil.parseStringToDate(\"2022-12-31\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"    public void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"        // Missing index","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d CliSyntax.PREFIX_LASTMET + \"2022-12-31\";","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"    public void parse_missingLastMetPrefix_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"        // Missing last met prefix","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"1 2022-12-31\";","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    public void parse_invalidIndexFormat_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"        // Invalid index format","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"invalid \" + CliSyntax.PREFIX_LASTMET + \"2022-12-31\";","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"    public void parse_invalidLastMetFormat_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"        // Invalid last met format","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"1 \" + CliSyntax.PREFIX_LASTMET + \"invalid-date-format\";","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":53}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"    private final MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    public void parse_validArgs_returnsMarkCommand() throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"1\";","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"        MarkCommand expectedCommand \u003d new MarkCommand(ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    public void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"        // Missing index","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"    public void parse_invalidIndexFormat_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"        // Invalid index format","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"invalid\";","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    public void parse_extraArgs_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        // Extra arguments","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"1 extra\";","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":44}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"    private static final String INVALID_POLICYNAME \u003d \"#Life\";","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"    private static final String INVALID_POLICYID \u003d \"#123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"    private static final String VALID_POLICYNAME \u003d \"Life\";","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"    private static final String VALID_POLICYID \u003d \"123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyInfo_nullPolicyName_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"yorklim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePolicyInfo((String) null, VALID_POLICYID));","lastModifiedDate":"2024-03-17"},{"lineNumber":208,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":209,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":210,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":211,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyInfo_nullPolicyId_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":212,"author":{"gitId":"yorklim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePolicyInfo(VALID_POLICYNAME, (String) null));","lastModifiedDate":"2024-03-17"},{"lineNumber":213,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":214,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyInfo_invalidValuePolicyName_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePolicyInfo(INVALID_POLICYNAME, VALID_POLICYID));","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":220,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":221,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyInfo_invalidValuePolicyId_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":222,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePolicyInfo(VALID_POLICYNAME, INVALID_POLICYID));","lastModifiedDate":"2024-03-17"},{"lineNumber":223,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":224,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":225,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":226,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyInfo_validValueWithoutWhitespace_returnsPolicy() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":227,"author":{"gitId":"yorklim"},"content":"        Policy expectedPolicy \u003d new Policy(VALID_POLICYNAME, VALID_POLICYID);","lastModifiedDate":"2024-03-17"},{"lineNumber":228,"author":{"gitId":"yorklim"},"content":"        assertEquals(expectedPolicy, ParserUtil.parsePolicyInfo(VALID_POLICYNAME, VALID_POLICYID));","lastModifiedDate":"2024-03-17"},{"lineNumber":229,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":230,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":232,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyInfo_validValueWithWhitespacePolicyName_returnsTrimmedPolicy() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":233,"author":{"gitId":"yorklim"},"content":"        String policyNameWithWhitespace \u003d WHITESPACE + VALID_POLICYNAME + WHITESPACE;","lastModifiedDate":"2024-03-17"},{"lineNumber":234,"author":{"gitId":"yorklim"},"content":"        Policy expectedPolicy \u003d new Policy(VALID_POLICYNAME, VALID_POLICYID);","lastModifiedDate":"2024-03-17"},{"lineNumber":235,"author":{"gitId":"yorklim"},"content":"        assertEquals(expectedPolicy, ParserUtil.parsePolicyInfo(policyNameWithWhitespace, VALID_POLICYID));","lastModifiedDate":"2024-03-17"},{"lineNumber":236,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":238,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":239,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyInfo_validValueWithWhitespacePolicyID_returnsTrimmedPolicy() throws Exception {","lastModifiedDate":"2024-03-17"},{"lineNumber":240,"author":{"gitId":"yorklim"},"content":"        String policyIdWithWhitespace \u003d WHITESPACE + VALID_POLICYID + WHITESPACE;","lastModifiedDate":"2024-03-17"},{"lineNumber":241,"author":{"gitId":"yorklim"},"content":"        Policy expectedPolicy \u003d new Policy(VALID_POLICYNAME, VALID_POLICYID);","lastModifiedDate":"2024-03-17"},{"lineNumber":242,"author":{"gitId":"yorklim"},"content":"        assertEquals(expectedPolicy, ParserUtil.parsePolicyInfo(VALID_POLICYNAME, policyIdWithWhitespace));","lastModifiedDate":"2024-03-17"},{"lineNumber":243,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":245,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyId_nullPolicyId_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"yorklim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePolicyId((String) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":250,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyId_invalidValuePolicyId_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":252,"author":{"gitId":"yorklim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePolicyId(INVALID_POLICYID));","lastModifiedDate":"2024-03-19"},{"lineNumber":253,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":254,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":255,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":256,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyId_validValueWithoutWhitespace_returnsString() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":257,"author":{"gitId":"yorklim"},"content":"        assertEquals(VALID_POLICYID, ParserUtil.parsePolicyId(VALID_POLICYID));","lastModifiedDate":"2024-03-19"},{"lineNumber":258,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":259,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":260,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":261,"author":{"gitId":"yorklim"},"content":"    public void parsePolicyId_validValueWithWhitespacePolicyID_returnsTrimmedString() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":262,"author":{"gitId":"yorklim"},"content":"        String policyIdWithWhitespace \u003d WHITESPACE + VALID_POLICYID + WHITESPACE;","lastModifiedDate":"2024-03-19"},{"lineNumber":263,"author":{"gitId":"yorklim"},"content":"        assertEquals(VALID_POLICYID, ParserUtil.parsePolicyId(policyIdWithWhitespace));","lastModifiedDate":"2024-03-19"},{"lineNumber":264,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":265,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":266,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":267,"author":{"gitId":"solomonng2001"},"content":"    public void parseSortCriteria_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":268,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSortCriteria(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":269,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":270,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":271,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":272,"author":{"gitId":"solomonng2001"},"content":"    public void parseSortCriteria_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":273,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSortCriteria(\"invalid\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":274,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":275,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":276,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":277,"author":{"gitId":"solomonng2001"},"content":"    public void parseSortCriteria_validValueWithoutWhitespace_returnsSortCriteria() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":278,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.NAME, ParserUtil.parseSortCriteria(\"name\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":279,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":280,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"solomonng2001"},"content":"    public void parseSortCriteria_validValueWithWhitespace_returnsTrimmedSortCriteria() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":283,"author":{"gitId":"solomonng2001"},"content":"        String sortCriteriaWithWhitespace \u003d WHITESPACE + \"name\" + WHITESPACE;","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.NAME, ParserUtil.parseSortCriteria(sortCriteriaWithWhitespace));","lastModifiedDate":"2024-03-25"},{"lineNumber":285,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":286,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":287,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":288,"author":{"gitId":"solomonng2001"},"content":"    public void parseSortOrder_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":289,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSortOrder(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":290,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":291,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":292,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":293,"author":{"gitId":"solomonng2001"},"content":"    public void parseSortOrder_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":294,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSortOrder(\"invalid\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":296,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":297,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"solomonng2001"},"content":"    public void parseSortOrder_validValueWithoutWhitespace_returnsSortOrder() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":299,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(ParserUtil.parseSortOrder(\"asc\"), ParserUtil.parseSortOrder(\"asc\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":300,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":301,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":302,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"solomonng2001"},"content":"    public void parseSortOrder_validValueWithWhitespace_returnsTrimmedSortOrder() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"solomonng2001"},"content":"        String sortOrderWithWhitespace \u003d WHITESPACE + \"asc\" + WHITESPACE;","lastModifiedDate":"2024-03-25"},{"lineNumber":305,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(ParserUtil.parseSortOrder(\"asc\"), ParserUtil.parseSortOrder(sortOrderWithWhitespace));","lastModifiedDate":"2024-03-25"},{"lineNumber":306,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"solomonng2001":43,"yorklim":68,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    private final ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"    public void parse_validArgs_returnsScheduleCommand() throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"1 \" + PREFIX_SCHEDULE + \"2022-12-31 18:00\";","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"        ScheduleCommand expectedCommand \u003d new ScheduleCommand(ParserUtil.parseIndex(\"1\"),","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"                new Schedule(DateTimeUtil.parseStringToDateTime(\"2022-12-31 18:00\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    public void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"        // Missing index","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d PREFIX_SCHEDULE + \"2022-12-31 18:00\";","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"    public void parse_missingSchedulePrefix_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"        // Missing schedule prefix","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"1 2022-12-31 18:00\";","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    public void parse_invalidIndexFormat_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"        // Invalid index format","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"invalid \" + PREFIX_SCHEDULE + \"2022-12-31 18:00\";","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"    public void parse_invalidScheduleFormat_throwsParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"        // Invalid schedule format","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"1 \" + PREFIX_SCHEDULE + \"invalid-date-format\";","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"ReganChoy":54}},{"path":"src/test/java/seedu/address/logic/parser/SetCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.commands.SetCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"public class SetCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"    private final SetCommandParser parser \u003d new SetCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    public void parse_validArgs_returnsSetCommand() throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"90\";","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"        SetCommand expectedCommand \u003d new SetCommand(90);","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expectedCommand, parser.parse(args));","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    public void parse_missingArgs_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"        // Missing arguments","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"\";","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"        // Invalid arguments","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"invalid\";","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    public void parse_extraArgs_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        // Extra arguments","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"        String args \u003d \"90 extra\";","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(args));","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"ReganChoy":43}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_SORT_NAME_ASC \u003d SortCriteria.NAME + \" \" + PREFIX_SORT_ORDER + SortOrder.ASC;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_SORT_NAME_DESC \u003d SortCriteria.NAME + \" \" + PREFIX_SORT_ORDER + SortOrder.DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_SORT_PRIORITY_ASC \u003d SortCriteria.PRIORITY + \" \" + PREFIX_SORT_ORDER","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"            + SortOrder.ASC;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_SORT_PRIORITY_DESC \u003d SortCriteria.PRIORITY + \" \" + PREFIX_SORT_ORDER","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"            + SortOrder.DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_SORT_BIRTHDAY_ASC \u003d SortCriteria.BIRTHDAY + \" \" + PREFIX_SORT_ORDER","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"            + SortOrder.ASC;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public static final String VALID_SORT_BIRTHDAY_DESC \u003d SortCriteria.BIRTHDAY + \" \" + PREFIX_SORT_ORDER","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"            + SortOrder.DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_SORT_NAME_ASC,","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"                new SortCommand(SortCriteria.NAME, SortOrder.ASC));","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_SORT_NAME_DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"                new SortCommand(SortCriteria.NAME, SortOrder.DESC));","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_SORT_PRIORITY_ASC,","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"                new SortCommand(SortCriteria.PRIORITY, SortOrder.ASC));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_SORT_PRIORITY_DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"                new SortCommand(SortCriteria.PRIORITY, SortOrder.DESC));","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_SORT_BIRTHDAY_ASC,","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"                new SortCommand(SortCriteria.BIRTHDAY, SortOrder.ASC));","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_SORT_BIRTHDAY_DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"                new SortCommand(SortCriteria.BIRTHDAY, SortOrder.DESC));","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        // without whitespace preamble","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, VALID_SORT_NAME_ASC, new SortCommand(SortCriteria.NAME, SortOrder.ASC));","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, VALID_SORT_NAME_DESC, new SortCommand(SortCriteria.NAME, SortOrder.DESC));","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, VALID_SORT_PRIORITY_ASC, new SortCommand(SortCriteria.PRIORITY, SortOrder.ASC));","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, VALID_SORT_PRIORITY_DESC, new SortCommand(SortCriteria.PRIORITY, SortOrder.DESC));","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, VALID_SORT_BIRTHDAY_ASC, new SortCommand(SortCriteria.BIRTHDAY, SortOrder.ASC));","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        assertParseSuccess(parser, VALID_SORT_BIRTHDAY_DESC, new SortCommand(SortCriteria.BIRTHDAY, SortOrder.DESC));","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"    public void parse_repeatedParameter_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        // multiple sort orders","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, VALID_SORT_NAME_ASC + \" \" + PREFIX_SORT_ORDER + SortOrder.DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SORT_ORDER));","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"        // missing sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SORT_ORDER + SortOrder.ASC, expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        // missing sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, SortCriteria.NAME.toString(), expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, SortCriteria.NAME.toString() + \" \" + SortOrder.DESC, expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        // missing both sort criteria and sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"        // invalid sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, \"invalid\" + \" \" + PREFIX_SORT_ORDER + SortOrder.ASC,","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"                SortCriteria.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, \"x\" + \" \" + PREFIX_SORT_ORDER + SortOrder.DESC,","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"                SortCriteria.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, \" name \" + VALID_SORT_NAME_ASC,","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"                SortCriteria.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"        // invalid sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, SortCriteria.NAME + \" \" + PREFIX_SORT_ORDER + \"invalid\",","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"                SortOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, SortCriteria.NAME + \" \" + PREFIX_SORT_ORDER + \"x\",","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"                SortOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        assertParseFailure(parser, SortCriteria.NAME + \" \" + PREFIX_SORT_ORDER,","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"                SortOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":94}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"    public void getPersonsWithUpcomingBirthdays() {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        Person aliceWithUpcomingBirthday \u003d new PersonBuilder(ALICE).withBirthday(DateUtil.parseDateToString(","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"                LocalDate.now().plusWeeks(1).minusYears(40))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"        addressBook.addPerson(aliceWithUpcomingBirthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        Person bobWithNoUpcomingBirthday \u003d new PersonBuilder(BOB).withBirthday(DateUtil.parseDateToString(","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"                LocalDate.now().minusDays(1).minusYears(30))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"        addressBook.addPerson(bobWithNoUpcomingBirthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e birthdayList \u003d addressBook.getPersonsWithUpcomingBirthdays();","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(1, birthdayList.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthdayList.contains(aliceWithUpcomingBirthday));","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"solomonng2001":18,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.model.Model.COMPARATOR_SHOW_ORIGINAL_ORDER;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.reminder.ReminderList;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.reminder.ReminderType;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getSortedFilteredPersonList().remove(0));","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"solomonng2001"},"content":"        modelManager.updateSortPersonComparator(COMPARATOR_SHOW_ORIGINAL_ORDER);","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"solomonng2001"},"content":"    public void getBirthdayReminders() {","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"solomonng2001"},"content":"        ModelManager localModelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"solomonng2001"},"content":"        // No birthday reminders","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, localModelManager.getBirthdayReminders().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"solomonng2001"},"content":"        // Add a person with upcoming birthday","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"solomonng2001"},"content":"        Person aliceWithUpcomingBirthday \u003d new PersonBuilder(ALICE).withBirthday(DateUtil.parseDateToString(","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"solomonng2001"},"content":"                LocalDate.now().plusWeeks(1).minusYears(40))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"solomonng2001"},"content":"        localModelManager.addPerson(aliceWithUpcomingBirthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"solomonng2001"},"content":"        Person bobWithNoUpcomingBirthday \u003d new PersonBuilder(BOB).withBirthday(DateUtil.parseDateToString(","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"solomonng2001"},"content":"                LocalDate.now().minusDays(1).minusYears(30))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"solomonng2001"},"content":"        localModelManager.addPerson(bobWithNoUpcomingBirthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"solomonng2001"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"solomonng2001"},"content":"        addressBook.addPerson(aliceWithUpcomingBirthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e expectedBirthdayReminderPersons \u003d addressBook.getPersonsWithUpcomingBirthdays();","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"        ReminderList expectedBirthdayReminder \u003d new ReminderList(ReminderType.BIRTHDAYS,","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"solomonng2001"},"content":"                expectedBirthdayReminderPersons);","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(1, localModelManager.getBirthdayReminders().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(localModelManager.getBirthdayReminders(), expectedBirthdayReminder);","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"solomonng2001":36,"-":131}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"public class BirthdayTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_invalidBirthday_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        String invalidBirthday \u003d \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Birthday(invalidBirthday));","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        // null date","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        // blank date","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"\")); // empty string","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\" \")); // spaces only","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        // invalid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"91-12-2020\")); // invalid day","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"31-13-2020\")); // invalid month","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"31-12-20200\")); // invalid year","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"31-12-2020 \")); // trailing space","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\" 31-12-2020\")); // leading space","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"31- 12-2020\")); // spaces within date","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"31-12- 2020\")); // spaces within date","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"31-12-2020 12:00\")); // time included","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"31-12-2020 12:00:00\")); // time included","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"12-31-2020\")); // MM-DD-YYYY format with hyphens","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"2020/12/31\")); // YYYY/MM/DD format with slashes","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"12/31/2020\")); // MM/DD/YYYY format with slashes","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"20201231\")); // YYYYMMDD format without delimiters","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"12312020\")); // MMDDYYYY format without delimiters","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"3 Jan 2021\")); // d MMM YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"31-Jan-2021\")); // DD-MMM-YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"January 3, 2021\")); // Month d, YYYY format","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"2021-Jan-3\")); // YYYY-MMM-d format","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"2020-12-3A\")); // Alphabetic character in day component","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"2020-AB-31\")); // Alphabetic characters in month component","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"ABCD-12-31\")); // Alphabetic characters in year component","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(\"2020-12-31ABC\")); // Alphabetic characters after the date","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DateUtil.DATE_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(LocalDate.now().plusDays(1)","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"                .format(formatter))); // future date","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(LocalDate.now().plusMonths(1)","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"                .format(formatter))); // future date","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Birthday.isValidBirthday(LocalDate.now().plusYears(1)","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"                .format(formatter))); // future date","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        // valid dates","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"1992-01-01\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"1993-02-28\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"1994-03-15\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"1995-04-30\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"1996-05-10\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"1997-06-20\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"1998-07-31\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"1999-08-15\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"2000-09-25\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Birthday.isValidBirthday(\"2001-10-05\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"    public void isUpcoming() {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        // are not upcoming","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        // birthday is yesterday\u0027s date 10 years ago","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(new Birthday(LocalDate.now().minusYears(10).minusDays(1)","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"                .format(DateTimeFormatter.ofPattern(DateUtil.DATE_FORMAT))).isUpcoming());","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"        // birthday is 8 days later, birthdate is 25 years ago","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(new Birthday(LocalDate.now().minusYears(25).plusDays(8)","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"                .format(DateTimeFormatter.ofPattern(DateUtil.DATE_FORMAT))).isUpcoming());","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        // are upcoming","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        // birthday is today","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(new Birthday(LocalDate.now()","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"                .format(DateTimeFormatter.ofPattern(DateUtil.DATE_FORMAT))).isUpcoming());","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"        // birthday is tomorrow, birthdate is 30 years ago","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(new Birthday(LocalDate.now().minusYears(30).plusDays(1)","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"                .format(DateTimeFormatter.ofPattern(DateUtil.DATE_FORMAT))).isUpcoming());","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        // birthday next week, birthdate is 20 years ago","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(new Birthday(LocalDate.now().minusYears(20).plusDays(7)","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"                .format(DateTimeFormatter.ofPattern(DateUtil.DATE_FORMAT))).isUpcoming());","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        // birthday 6 days later, birthdate is 5 years ago","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(new Birthday(LocalDate.now().minusYears(5).plusDays(6)","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"                .format(DateTimeFormatter.ofPattern(DateUtil.DATE_FORMAT))).isUpcoming());","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"        Birthday birthday \u003d new Birthday(\"1993-09-22\");","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthday.equals(new Birthday(\"1993-09-22\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthday.equals(birthday));","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(birthday.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(birthday.equals(5.0f));","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(birthday.equals(new Birthday(\"1993-09-23\")));","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"solomonng2001"},"content":"    public void compareByBirthdayMonthAndDateOnly() {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"        Birthday birthday \u003d new Birthday(\"1993-09-22\");","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"        // same values -\u003e returns 0 regardless of year","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, birthday.compareByBirthdayMonthAndDateOnly(new Birthday(\"1998-09-22\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"solomonng2001"},"content":"        // different month -\u003e returns negative integer regardless of year","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthday.compareByBirthdayMonthAndDateOnly(new Birthday(\"1992-10-22\")) \u003c 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"solomonng2001"},"content":"        // different day -\u003e returns negative integer regardless of year","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthday.compareByBirthdayMonthAndDateOnly(new Birthday(\"1991-09-23\")) \u003c 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"solomonng2001"},"content":"        // different month -\u003e returns positive integer regardless of year","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthday.compareByBirthdayMonthAndDateOnly(new Birthday(\"2023-08-22\")) \u003e 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"solomonng2001"},"content":"        // different day -\u003e returns positive integer regardless of year","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthday.compareByBirthdayMonthAndDateOnly(new Birthday(\"2008-09-01\")) \u003e 0);","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"solomonng2001":145}},{"path":"src/test/java/seedu/address/model/person/DisplayClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"getsquared"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"getsquared"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"getsquared"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"getsquared"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"getsquared"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"getsquared"},"content":"public class DisplayClientTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"getsquared"},"content":"    public void hasDisplayCLient() {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"getsquared"},"content":"        DisplayClient displayClientNull \u003d new DisplayClient(null);","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"getsquared"},"content":"        DisplayClient displayClientNonNull \u003d new DisplayClient(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"        // null person","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"        assertFalse(displayClientNull.hasDisplayClient());","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"        // non-null person","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"        assertTrue(displayClientNonNull.hasDisplayClient());","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"        DisplayClient displayClientNull \u003d new DisplayClient(null);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"getsquared"},"content":"        DisplayClient displayClientNonNull \u003d new DisplayClient(ALICE);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"getsquared"},"content":"        // non-null - same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"getsquared"},"content":"        assertTrue(displayClientNonNull.equals(new DisplayClient(ALICE)));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"getsquared"},"content":"        // non-null - same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"        assertTrue(displayClientNonNull.equals(displayClientNonNull));","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"getsquared"},"content":"        // non-null - null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"getsquared"},"content":"        assertFalse(displayClientNonNull.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"        // non-null - different values -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"getsquared"},"content":"        assertFalse(displayClientNonNull.equals(BENSON));","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"getsquared"},"content":"        // null - same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"getsquared"},"content":"        assertTrue(displayClientNull.equals(new DisplayClient(null)));","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"getsquared"},"content":"        // null - same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"getsquared"},"content":"        assertTrue(displayClientNull.equals(displayClientNull));","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"getsquared"},"content":"        // null - different values -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"        assertFalse(displayClientNull.equals(BENSON));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"getsquared":50}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"getsquared"},"content":"        assertTrue(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"getsquared":1,"-":87}},{"path":"src/test/java/seedu/address/model/person/LastMetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"public class LastMetTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    public void constructor_validLastMet_noExceptionThrown() {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"        assertDoesNotThrow(() -\u003e new LastMet(LocalDate.now().minusDays(7)));","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"    public void constructor_nullLastMet_throwsNullPointerException() {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LastMet(null));","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"    public void getIsOverdue_isOverdueTrue_returnsCorrectIsOverdue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        LastMet.setLastMetDuration(90);","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"        LocalDate lastMetDate \u003d LocalDate.now().minusDays(100);","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"        LastMet lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"        boolean getIsOverdue \u003d lastMet.getIsOverdue();","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(true, getIsOverdue);","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"    public void getIsOverdue_isOverdueFalse_returnsCorrectIsOverdue() {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"        LastMet.setLastMetDuration(90);","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"        LocalDate lastMetDate \u003d LocalDate.now().minusDays(50);","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"        LastMet lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"        boolean getIsOverdue \u003d lastMet.getIsOverdue();","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(false, getIsOverdue);","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    public void getPeriodGap_validLastMet_returnsCorrectGap() {","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"        LocalDate lastMetDate \u003d LocalDate.now().minusDays(10);","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"        LastMet lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        long periodGap \u003d lastMet.getPeriodGap();","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(10, periodGap);","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"    public void setIsOverdue_overdueLastMet_returnsTrue() {","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"        LastMet.setLastMetDuration(90);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"        LocalDate lastMetDate \u003d LocalDate.now().minusDays(100);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"        LastMet lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(lastMet.getIsOverdue());","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"    public void setIsOverdue_recentLastMet_returnsFalse() {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"        LastMet.setLastMetDuration(90);","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"        LocalDate lastMetDate \u003d LocalDate.now().minusDays(60);","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"        LastMet lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(lastMet.getIsOverdue());","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"    public void showLastMet_validLastMet_returnsFormattedString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"        LocalDate lastMetDate \u003d LocalDate.now().minusDays(15);","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"        LastMet lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"        String expected \u003d \"Last Met: \" + lastMetDate + \", 15 Days Ago.\";","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(expected, lastMet.showLastMet());","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"    public void setLastMetDuration_validDuration_updatesLastMetDuration() {","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"        long newDuration \u003d 120;","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"        LastMet.setLastMetDuration(newDuration);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(newDuration, LastMet.getLastMetDuration());","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"    public void compareTo() {","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"        LocalDate lastMetDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"        LastMet lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"        LastMet lastMet2 \u003d new LastMet(lastMetDate.plusDays(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"        assertTrue(lastMet.compareTo(lastMet2) \u003c 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"        assertTrue(lastMet2.compareTo(lastMet) \u003e 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"        assertTrue(lastMet.compareTo(lastMet) \u003d\u003d 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        LocalDate lastMetDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"        LastMet lastMet \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"        LastMet lastMetCopy \u003d new LastMet(lastMetDate);","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(lastMet.equals(lastMet));","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(lastMet.equals(lastMet));","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(lastMet.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(lastMet.equals(5.0f));","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(lastMet.equals(new LastMet(lastMetDate.plusDays(1))));","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"ReganChoy"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"ReganChoy":86,"solomonng2001":22,"yorklim":10}},{"path":"src/test/java/seedu/address/model/person/PersonComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"public class PersonComparatorTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    public void getComparator() {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"        // sort by name","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"        Person aliceCopy \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        // ascending","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        Comparator\u003cPerson\u003e nameAscComparator \u003d PersonComparator.getComparator(SortCriteria.NAME, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(nameAscComparator.compare(alice, bob) \u003c 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, nameAscComparator.compare(alice, aliceCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        // descending","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        Comparator\u003cPerson\u003e nameDescComparator \u003d PersonComparator.getComparator(SortCriteria.NAME, SortOrder.DESC);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(nameDescComparator.compare(alice, bob) \u003e 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, nameDescComparator.compare(alice, aliceCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        // sort by priority","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        Person priority1 \u003d new PersonBuilder().withPriority(\"low\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        Person priority1Copy \u003d new PersonBuilder().withPriority(\"low\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        Person priority2 \u003d new PersonBuilder().withPriority(\"high\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        // ascending","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        Comparator\u003cPerson\u003e priorityAscComparator \u003d PersonComparator.getComparator(SortCriteria.PRIORITY, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(priorityAscComparator.compare(priority1, priority2) \u003c 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, priorityAscComparator.compare(priority1, priority1Copy));","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        // descending","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        Comparator\u003cPerson\u003e priorityDescComparator \u003d PersonComparator.getComparator(SortCriteria.PRIORITY,","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"                SortOrder.DESC);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(priorityDescComparator.compare(priority1, priority2) \u003e 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, priorityDescComparator.compare(priority1, priority1Copy));","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        // sort by birthday","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        Person birthday1 \u003d new PersonBuilder().withBirthday(\"2021-01-01\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"        Person birthday1Copy \u003d new PersonBuilder().withBirthday(\"2021-01-01\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        Person birthday2 \u003d new PersonBuilder().withBirthday(\"2021-01-02\").build();","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        // ascending","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        Comparator\u003cPerson\u003e birthdayAscComparator \u003d PersonComparator.getComparator(SortCriteria.BIRTHDAY, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthdayAscComparator.compare(birthday1, birthday2) \u003c 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, birthdayAscComparator.compare(birthday1, birthday1Copy));","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        // descending","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        Comparator\u003cPerson\u003e birthdayDescComparator \u003d PersonComparator.getComparator(SortCriteria.BIRTHDAY,","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"                SortOrder.DESC);","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthdayDescComparator.compare(birthday1, birthday2) \u003e 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, birthdayDescComparator.compare(birthday1, birthday1Copy));","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        // sort by invalid or default criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        Comparator\u003cPerson\u003e invalidAscComparator \u003d PersonComparator.getComparator(SortCriteria.INVALID, SortOrder.ASC);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        // ascending","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(invalidAscComparator.compare(alice, bob) \u003d\u003d 0);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, invalidAscComparator.compare(alice, aliceCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        // descending","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(invalidAscComparator.compare(alice, bob) \u003d\u003d 0);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(0, invalidAscComparator.compare(alice, aliceCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":65}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POLICY_LIFE;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"                .withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB).withPriority(VALID_PRIORITY_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        // different birthday -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPriority(VALID_PRIORITY_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":109,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"yorklim"},"content":"        //differnt policies -\u003e return false","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"yorklim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPolicies(VALID_POLICY_LIFE).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"yorklim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"yorklim"},"content":"    public void isConflictingPolicyID() {","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"yorklim"},"content":"        // same policy id -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"yorklim"},"content":"        assertTrue(BENSON.isConflictingPolicyId(new Policy(\"Health\", \"123\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"yorklim"},"content":"        // different policy id -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"yorklim"},"content":"        assertFalse(BENSON.isConflictingPolicyId(new Policy(\"Saving\", \"789\")));","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"yorklim"},"content":"    public void hasPolicyID() {","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"yorklim"},"content":"        // has policy id -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"yorklim"},"content":"        assertTrue(BENSON.hasPolicyID(\"123\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"yorklim"},"content":"        // does not have policy id -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"yorklim"},"content":"        assertFalse(BENSON.hasPolicyID(\"789\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"solomonng2001"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"                + \", birthday\u003d\" + ALICE.getBirthday() + \", priority\u003d\" + ALICE.getPriority()","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"getsquared"},"content":"                + \", remark\u003d\" + ALICE.getRemark() + \", tags\u003d\" + ALICE.getTags() + \", policies\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"yorklim"},"content":"                + ALICE.getPolicyList() + \"}\";","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"yorklim"},"content":"    public void isOverDueLastMet() {","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"yorklim"},"content":"        Person dueAlice \u003d new PersonBuilder(ALICE).withLastMet(LocalDate.of(2000, 1, 1)).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"yorklim"},"content":"        assertTrue(dueAlice.isOverDueLastMet());","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"yorklim"},"content":"        Person noDueAlice \u003d new PersonBuilder(ALICE).withLastMet(LocalDate.now()).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"yorklim"},"content":"        assertFalse(noDueAlice.isOverDueLastMet());","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"yorklim"},"content":"        Person scheduledAlice \u003d new PersonBuilder(ALICE).withSchedule(LocalDateTime.now().plusDays(1), false)","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"yorklim"},"content":"                .withLastMet(LocalDate.of(2000, 1, 1)).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"yorklim"},"content":"        assertFalse(scheduledAlice.isOverDueLastMet());","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"yorklim"},"content":"    public void hasActiveAppointments() {","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"yorklim"},"content":"        assertFalse(ALICE.hasActiveSchedule());","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"yorklim"},"content":"        Person scheduleAlice \u003d new PersonBuilder(ALICE).withSchedule(LocalDateTime.now().plusDays(1), false)","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"yorklim"},"content":"                .build();","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"yorklim"},"content":"        assertTrue(scheduleAlice.hasActiveSchedule());","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"yorklim"},"content":"    public void overdueLastMetStringFormat() {","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"yorklim"},"content":"        assertEquals(ALICE.overdueLastMetStringFormat(),","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"yorklim"},"content":"                ALICE.getName() + \" - \" + Long.toString(ALICE.getLastMet().getPeriodGap()) + \"d ago\");","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"yorklim"},"content":"    public void scheduleStringFormat() {","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"yorklim"},"content":"        Person notMissedAlice \u003d new PersonBuilder(ALICE).withSchedule(LocalDateTime.now().plusDays(1), false)","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"yorklim"},"content":"                .build();","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"yorklim"},"content":"        assertEquals(notMissedAlice.getSchedule().getScheduleDateString() + \" - \" + ALICE.getName(),","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"yorklim"},"content":"                notMissedAlice.scheduleStringFormat());","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"yorklim"},"content":"        Person missedAlice \u003d new PersonBuilder(ALICE).withSchedule(LocalDateTime.now().minusDays(1), false)","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"yorklim"},"content":"                .build();","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"yorklim"},"content":"        assertEquals(missedAlice.getSchedule().getScheduleDateString() + \" - \" + ALICE.getName() + \" (Missed)\",","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"yorklim"},"content":"                missedAlice.scheduleStringFormat());","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"solomonng2001"},"content":"    public void birthdayStringFormat() {","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(ALICE.birthdayStringFormat(), ALICE.getBirthday() + \" - \" + ALICE.getName());","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"solomonng2001"},"content":"    public void hasUpcomingBirthday() {","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"solomonng2001"},"content":"        Person upcomingAlice \u003d new PersonBuilder(ALICE).withBirthday(DateUtil.parseDateToString(","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"solomonng2001"},"content":"                LocalDate.now().plusWeeks(1).minusYears(40))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(upcomingAlice.hasUpcomingBirthday());","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"solomonng2001"},"content":"        Person noUpcomingAlice \u003d new PersonBuilder(ALICE).withBirthday(DateUtil.parseDateToString(","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"solomonng2001"},"content":"                LocalDate.now().minusDays(1).minusYears(30))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(noUpcomingAlice.hasUpcomingBirthday());","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"getsquared":1,"solomonng2001":30,"yorklim":64,"-":99}},{"path":"src/test/java/seedu/address/model/person/PolicyListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"public class PolicyListTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"    private static final Policy policy1 \u003d new Policy(\"Life\", \"1\");","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"    private static final Policy policy2 \u003d new Policy(\"Health\", \"2\");","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"    private static final Policy policy3 \u003d new Policy(\"Travel\", \"3\");","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"    private static final Policy policy4 \u003d new Policy(\"Saving\", \"4\");","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"    public void addPolicy() {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e policyObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy1);","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy2);","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy3);","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"        PolicyList actualPolicyList \u003d new PolicyList(policyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e expectedPolicyObservableList \u003d FXCollections.observableArrayList(policyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"        expectedPolicyObservableList.add(policy4);","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"        PolicyList expectedPolicyList \u003d new PolicyList(expectedPolicyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"        actualPolicyList.addPolicy(policy4);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"        assertEquals(actualPolicyList, expectedPolicyList);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"    public void deletePolicy() {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e expectedPolicyObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        expectedPolicyObservableList.add(policy1);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"        expectedPolicyObservableList.add(policy2);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"        PolicyList expectedPolicyList \u003d new PolicyList(expectedPolicyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e actualPolicyObservableList \u003d FXCollections","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"                .observableArrayList(expectedPolicyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"        actualPolicyObservableList.add(policy3);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"        PolicyList actualPolicyList \u003d new PolicyList(actualPolicyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"getsquared"},"content":"        actualPolicyList.deletePolicy(policy3.policyId);","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"        assertEquals(actualPolicyList, expectedPolicyList);","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"    public void hasConflictingPolicyID() {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e policyObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy1);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy2);","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy3);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"yorklim"},"content":"        PolicyList actualPolicyList \u003d new PolicyList(policyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"        assertTrue(actualPolicyList.hasConflictingPolicyId(policy2));","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"        assertFalse(actualPolicyList.hasConflictingPolicyId(policy4));","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"    public void hasPolicy() {","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e policyObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy1);","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy2);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy3);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"        PolicyList actualPolicyList \u003d new PolicyList(policyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"getsquared"},"content":"        assertTrue(actualPolicyList.hasPolicy(policy2.policyId));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"getsquared"},"content":"        assertFalse(actualPolicyList.hasPolicy(policy4.policyId));","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"    public void getPolicyListClone() {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e policyObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy1);","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy2);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy3);","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"        PolicyList actualPolicyList \u003d new PolicyList(policyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"        assertEquals(actualPolicyList, actualPolicyList.getPolicyListClone());","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"yorklim"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPolicy\u003e policyObservableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy1);","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy2);","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"        policyObservableList.add(policy3);","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"yorklim"},"content":"        PolicyList policyList \u003d new PolicyList(policyObservableList);","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"yorklim"},"content":"        PolicyList copyPolicyList \u003d policyList.getPolicyListClone();","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"yorklim"},"content":"        PolicyList differentPolicyList \u003d policyList.getPolicyListClone();","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"        differentPolicyList.addPolicy(policy4);","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"        assertTrue(policyList.equals(policyList));","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"        assertTrue(policyList.equals(copyPolicyList));","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"        assertFalse(policyList.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"yorklim"},"content":"        assertFalse(policyList.equals(5));","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"        assertFalse(policyList.equals(differentPolicyList));","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"getsquared":3,"yorklim":97}},{"path":"src/test/java/seedu/address/model/person/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class PriorityTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Priority(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_blankPriority_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\"\"));; // empty string","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\" \")); // spaces only","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_invalidPriority_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\"invalid\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\"x\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\"random\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_validPriority_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        // valid priority","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"low\"), new Priority(\"low\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"medium\"), new Priority(\"medium\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"high\"), new Priority(\"high\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"vip\"), new Priority(\"vip\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"l\"), new Priority(\"l\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"m\"), new Priority(\"m\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"h\"), new Priority(\"h\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"v\"), new Priority(\"v\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"LOW\"), new Priority(\"LOW\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"MEDIUM\"), new Priority(\"MEDIUM\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"HIGH\"), new Priority(\"HIGH\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"VIP\"), new Priority(\"VIP\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"L\"), new Priority(\"L\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"M\"), new Priority(\"M\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"H\"), new Priority(\"H\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(new Priority(\"V\"), new Priority(\"V\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    public void isValidPriority() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        // null priority","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e Priority.isValidPriority(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        // blank priority","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Priority.isValidPriority(\"\")); // empty string","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Priority.isValidPriority(\" \")); // spaces only","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        // invalid priority","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Priority.isValidPriority(\"invalid\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Priority.isValidPriority(\"x\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(Priority.isValidPriority(\"random\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"        // valid priority","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"low\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"medium\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"high\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"vip\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"l\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"m\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"h\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"v\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"LOW\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"MEDIUM\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"HIGH\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"VIP\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"L\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"M\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"H\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(Priority.isValidPriority(\"V\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"        Priority priority \u003d new Priority(\"medium\");","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(priority.equals(new Priority(\"medium\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(priority.equals(priority));","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(priority.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(priority.equals(5.0f));","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(priority.equals(new Priority(\"high\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"solomonng2001":103}},{"path":"src/test/java/seedu/address/model/person/PriorityValueTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"public class PriorityValueTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"    public void testGetPriority() {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"        // null priority","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e PriorityValue.getPriority(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"        // blank priority","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e PriorityValue.getPriority(\"\")); // empty string","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e PriorityValue.getPriority(\" \")); // spaces only","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"        // invalid priority","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e PriorityValue.getPriority(\"invalid\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e PriorityValue.getPriority(\"x\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e PriorityValue.getPriority(\"random\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        // valid priority","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.LOW, PriorityValue.getPriority(\"low\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.MEDIUM, PriorityValue.getPriority(\"medium\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.HIGH, PriorityValue.getPriority(\"high\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.VIP, PriorityValue.getPriority(\"vip\")); // full form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.LOW, PriorityValue.getPriority(\"l\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.MEDIUM, PriorityValue.getPriority(\"m\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.HIGH, PriorityValue.getPriority(\"h\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.VIP, PriorityValue.getPriority(\"v\")); // short form, lowercase","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.LOW, PriorityValue.getPriority(\"LOW\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.MEDIUM, PriorityValue.getPriority(\"MEDIUM\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.HIGH, PriorityValue.getPriority(\"HIGH\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.VIP, PriorityValue.getPriority(\"VIP\")); // full form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.LOW, PriorityValue.getPriority(\"L\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.MEDIUM, PriorityValue.getPriority(\"M\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.HIGH, PriorityValue.getPriority(\"H\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(PriorityValue.VIP, PriorityValue.getPriority(\"V\")); // short form, uppercase","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"    public void testToString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"        assertEquals(\"LOW\", PriorityValue.LOW.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"getsquared"},"content":"        assertEquals(\"MEDIUM\", PriorityValue.MEDIUM.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"getsquared"},"content":"        assertEquals(\"HIGH\", PriorityValue.HIGH.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"getsquared"},"content":"        assertEquals(\"VIP\", PriorityValue.VIP.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"    public void testGetFullPriorities() {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        String[] expected \u003d {\"low\", \"medium\", \"high\", \"vip\"};","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        assertArrayEquals(expected, PriorityValue.getFullPriorities());","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    public void testGetShortPriorities() {","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        String[] expected \u003d {\"l\", \"m\", \"h\", \"v\"};","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        assertArrayEquals(expected, PriorityValue.getShortPriorities());","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"    public void testFullPriorityMap() {","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        HashMap\u003cString, PriorityValue\u003e expectedFullPriorityMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        expectedFullPriorityMap.put(\"low\", PriorityValue.LOW);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        expectedFullPriorityMap.put(\"medium\", PriorityValue.MEDIUM);","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        expectedFullPriorityMap.put(\"high\", PriorityValue.HIGH);","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        expectedFullPriorityMap.put(\"vip\", PriorityValue.VIP);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expectedFullPriorityMap, PriorityValue.FULL_PRIORITY_MAP);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"    public void testShortPriorityMap() {","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        HashMap\u003cString, PriorityValue\u003e expectedShortPriorityMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"        expectedShortPriorityMap.put(\"l\", PriorityValue.LOW);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"        expectedShortPriorityMap.put(\"m\", PriorityValue.MEDIUM);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        expectedShortPriorityMap.put(\"h\", PriorityValue.HIGH);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        expectedShortPriorityMap.put(\"v\", PriorityValue.VIP);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(expectedShortPriorityMap, PriorityValue.SHORT_PRIORITY_MAP);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"getsquared":4,"solomonng2001":83}},{"path":"src/test/java/seedu/address/model/person/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ReganChoy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"ReganChoy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"ReganChoy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"ReganChoy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"ReganChoy"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"ReganChoy"},"content":"public class ScheduleTest {","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"ReganChoy"},"content":"    public void constructor_singleParameter_scheduleInitialized() {","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime schedule \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(schedule);","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(schedule, testSchedule.getSchedule());","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(testSchedule.getIsDone()); // By default, isDone should be false","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"ReganChoy"},"content":"    public void constructor_twoParameters_scheduleAndIsDoneInitialized() {","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime schedule \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(schedule, true);","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(schedule, testSchedule.getSchedule());","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(testSchedule.getIsDone());","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"ReganChoy"},"content":"    public void getIsMissed_returnsCorrectIsMissed() {","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime schedule \u003d LocalDateTime.of(2022, 1, 1, 12, 0);","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(schedule, false);","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(true, testSchedule.getIsMissed());","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"ReganChoy"},"content":"    public void getIsMissedReminder_isDoneTrue_returnsCorrectIsMissedReminder() {","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime schedule \u003d LocalDateTime.of(2022, 1, 1, 12, 0);","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(schedule, true);","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(false, testSchedule.getIsMissedReminder());","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"ReganChoy"},"content":"    public void getIsMissedReminder_isDoneFalse_returnsCorrectIsMissedReminder() {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime schedule \u003d LocalDateTime.of(2022, 1, 1, 12, 0);","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(schedule, false);","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(true, testSchedule.getIsMissedReminder());","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"ReganChoy"},"content":"    public void toString_formattingCorrect() {","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime schedule \u003d LocalDateTime.of(2022, 1, 1, 12, 0);","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(schedule, false);","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(\"2022-01-01 12:00/0\", testSchedule.toString());","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"ReganChoy"},"content":"    public void showSchedule_upcomingAppointment_returnsCorrectMessage() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime futureSchedule \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(futureSchedule, false);","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(\"Your next appointment is \"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"ReganChoy"},"content":"                + DateTimeUtil.parseDateToString(futureSchedule), testSchedule.showSchedule());","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"ReganChoy"},"content":"    public void showSchedule_noUpcomingAppointment_returnsCorrectMessage() {","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"ReganChoy"},"content":"        LocalDateTime pastSchedule \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(pastSchedule, true);","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(\"No upcoming appointment\", testSchedule.showSchedule());","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"ReganChoy"},"content":"    public void checkIsDoneFromString_validInput_returnsCorrectBoolean() {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"ReganChoy"},"content":"        assertTrue(Schedule.checkIsDoneFromString(\"1\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"ReganChoy"},"content":"        assertFalse(Schedule.checkIsDoneFromString(\"0\"));","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"ReganChoy"},"content":"    public void isDoneToString_isDoneTrue_returnsCorrectString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(LocalDateTime.now(), true);","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(\"1\", testSchedule.isDoneToString());","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"ReganChoy"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"ReganChoy"},"content":"    public void isDoneToString_isDoneFalse_returnsCorrectString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"ReganChoy"},"content":"        Schedule testSchedule \u003d new Schedule(LocalDateTime.now(), false);","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"ReganChoy"},"content":"        assertEquals(\"0\", testSchedule.isDoneToString());","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"ReganChoy"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"yorklim"},"content":"    public void compareTo() {","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"yorklim"},"content":"        LocalDateTime schedule1 \u003d LocalDateTime.of(2022, 1, 1, 12, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"yorklim"},"content":"        LocalDateTime schedule2 \u003d LocalDateTime.of(2022, 1, 2, 12, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"yorklim"},"content":"        Schedule testSchedule1 \u003d new Schedule(schedule1, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"yorklim"},"content":"        Schedule testSchedule2 \u003d new Schedule(schedule2, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"yorklim"},"content":"        assertTrue(testSchedule1.compareTo(testSchedule2) \u003c 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"yorklim"},"content":"        assertTrue(testSchedule1.compareTo(testSchedule1) \u003d\u003d 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"yorklim"},"content":"        assertTrue(testSchedule2.compareTo(testSchedule1) \u003e 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"yorklim"},"content":"    public void getScheduleDateString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"yorklim"},"content":"        LocalDateTime schedule \u003d LocalDateTime.of(2022, 1, 1, 12, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"yorklim"},"content":"        Schedule testSchedule \u003d new Schedule(schedule, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"yorklim"},"content":"        assertEquals(DateTimeUtil.parseDateToString(schedule), testSchedule.getScheduleDateString());","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"ReganChoy"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime scheduleDate \u003d LocalDateTime.of(2022, 1, 1, 12, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"        Schedule schedule \u003d new Schedule(scheduleDate, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        Schedule scheduleCopy \u003d new Schedule(scheduleDate, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(schedule.equals(scheduleCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(schedule.equals(schedule));","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"solomonng2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(schedule.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"solomonng2001"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(schedule.equals(5));","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"solomonng2001"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"solomonng2001"},"content":"        LocalDateTime otherScheduleDate \u003d LocalDateTime.of(2022, 1, 2, 12, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"        Schedule otherSchedule \u003d new Schedule(otherScheduleDate, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(schedule.equals(otherSchedule));","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"ReganChoy":90,"solomonng2001":24,"yorklim":18}},{"path":"src/test/java/seedu/address/model/person/SortCriteriaTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class SortCriteriaTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    public void getSortCriteria_null_returnsInvalid() {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(null), SortCriteria.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_blankPriority_returnsInvalid() {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"\"), SortCriteria.INVALID); // empty string","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\" \"), SortCriteria.INVALID); // spaces only","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_invalidPriority_returnsInvalid() {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"invalid\"), SortCriteria.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"x\"), SortCriteria.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"random\"), SortCriteria.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_validPriority_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"name\"), SortCriteria.NAME); // lowercase","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"priority\"), SortCriteria.PRIORITY); // lowercase","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"birthday\"), SortCriteria.BIRTHDAY); // lowercase","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"NAME\"), SortCriteria.NAME); // uppercase","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"PRIORITY\"), SortCriteria.PRIORITY); // uppercase","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortCriteria.getSortCriteria(\"BIRTHDAY\"), SortCriteria.BIRTHDAY); // uppercase","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"    public void isValidSortCriteria() {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        // null sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortCriteria.isValidSortCriteria(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        // blank sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortCriteria.isValidSortCriteria(\"\")); // empty string","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortCriteria.isValidSortCriteria(\" \")); // spaces only","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        // invalid sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortCriteria.isValidSortCriteria(\"invalid\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortCriteria.isValidSortCriteria(\"x\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortCriteria.isValidSortCriteria(\"random\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        // valid sort criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortCriteria.isValidSortCriteria(\"name\")); // lowercase","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortCriteria.isValidSortCriteria(\"priority\")); // lowercase","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortCriteria.isValidSortCriteria(\"birthday\")); // lowercase","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortCriteria.isValidSortCriteria(\"NAME\")); // uppercase","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortCriteria.isValidSortCriteria(\"PRIORITY\")); // uppercase","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortCriteria.isValidSortCriteria(\"BIRTHDAY\")); // uppercase","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"        SortCriteria sortCriteria \u003d SortCriteria.getSortCriteria(\"name\");","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(sortCriteria.equals(SortCriteria.getSortCriteria(\"name\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(sortCriteria.equals(sortCriteria));","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortCriteria.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortCriteria.equals(5.0f));","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortCriteria.equals(SortCriteria.getSortCriteria(\"priority\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":82}},{"path":"src/test/java/seedu/address/model/person/SortOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"solomonng2001"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"solomonng2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"public class SortOrderTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"    public void getSortOrder_null_returnsInvalid() {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(null), SortOrder.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_blankPriority_returnsInvalid() {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\"\"), SortOrder.INVALID); // empty string","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\" \"), SortOrder.INVALID); // spaces only","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_invalidPriority_returnsInvalid() {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\"invalid\"), SortOrder.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\"x\"), SortOrder.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\"random\"), SortOrder.INVALID);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"solomonng2001"},"content":"    public void constructor_validPriority_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\"asc\"), SortOrder.ASC); // lowercase","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\"desc\"), SortOrder.DESC); // lowercase","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\"ASC\"), SortOrder.ASC); // uppercase","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(SortOrder.getSortOrder(\"DESC\"), SortOrder.DESC); // uppercase","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    public void isValidSortOrder() {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"        // null sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortOrder.isValidSortOrder(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        // blank sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortOrder.isValidSortOrder(\"\")); // empty string","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortOrder.isValidSortOrder(\" \")); // spaces only","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        // invalid sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortOrder.isValidSortOrder(\"invalid\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortOrder.isValidSortOrder(\"x\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(SortOrder.isValidSortOrder(\"random\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        // valid sort order","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortOrder.isValidSortOrder(\"asc\")); // lowercase","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortOrder.isValidSortOrder(\"desc\")); // lowercase","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortOrder.isValidSortOrder(\"ASC\")); // uppercase","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(SortOrder.isValidSortOrder(\"DESC\")); // uppercase","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        SortOrder sortOrder \u003d SortOrder.getSortOrder(\"asc\");","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(sortOrder.equals(SortOrder.getSortOrder(\"asc\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(sortOrder.equals(sortOrder));","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortOrder.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortOrder.equals(5.0f));","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(sortOrder.equals(SortOrder.getSortOrder(\"desc\")));","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":78}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":179,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"solomonng2001"},"content":"    public void filterHaveUpcomingBirthday() {","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"solomonng2001"},"content":"        Person personWithUpcomingBirthdaySecond \u003d new PersonBuilder(ALICE).withBirthday(","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseDateToString(LocalDate.now().plusWeeks(1)","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"solomonng2001"},"content":"                        .minusYears(40))).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"solomonng2001"},"content":"        Person personWithNoUpcomingBirthday \u003d new PersonBuilder(BOB).withBirthday(","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseDateToString(LocalDate.now().minusDays(1)","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"solomonng2001"},"content":"                        .minusYears(30))).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"solomonng2001"},"content":"        Person personWithUpcomingBirthdayFirst \u003d new PersonBuilder(BENSON).withBirthday(","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseDateToString(LocalDate.now().plusDays(3)","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"solomonng2001"},"content":"                        .minusYears(30))).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"solomonng2001"},"content":"        UniquePersonList newPersonsList \u003d new UniquePersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"solomonng2001"},"content":"        newPersonsList.add(personWithUpcomingBirthdaySecond);","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"solomonng2001"},"content":"        newPersonsList.add(personWithNoUpcomingBirthday);","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"solomonng2001"},"content":"        newPersonsList.add(personWithUpcomingBirthdayFirst);","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e birthdayList \u003d newPersonsList.sortFilterHaveUpcomingBirthday();","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(2, birthdayList.size());","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(personWithUpcomingBirthdayFirst, birthdayList.get(0));","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(personWithUpcomingBirthdaySecond, birthdayList.get(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"solomonng2001"},"content":"    public void sortFilterHaveUpcomingBirthday() {","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"solomonng2001"},"content":"        Person personWithUpcomingBirthday \u003d new PersonBuilder(ALICE).withBirthday(","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseDateToString(LocalDate.now().plusWeeks(1)","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"solomonng2001"},"content":"                        .minusYears(40))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"solomonng2001"},"content":"        Person personWithNoUpcomingBirthday \u003d new PersonBuilder(BOB).withBirthday(","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"solomonng2001"},"content":"                DateUtil.parseDateToString(LocalDate.now().minusDays(1)","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"solomonng2001"},"content":"                        .minusYears(30))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"solomonng2001"},"content":"        UniquePersonList newPersonsList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"solomonng2001"},"content":"        newPersonsList.add(personWithUpcomingBirthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"solomonng2001"},"content":"        newPersonsList.add(personWithNoUpcomingBirthday);","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e birthdayList \u003d newPersonsList.sortFilterHaveUpcomingBirthday();","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(1, birthdayList.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"solomonng2001"},"content":"        assertTrue(birthdayList.contains(personWithUpcomingBirthday));","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"solomonng2001"},"content":"        assertFalse(birthdayList.contains(personWithNoUpcomingBirthday));","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"solomonng2001":46,"-":175}},{"path":"src/test/java/seedu/address/model/policy/PolicyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"public class PolicyTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"    private static final String VALID_NAME \u003d \"Life\";","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"    private static final String VALID_ID \u003d \"123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"    private static final String INVALID_NAME \u003d \"#Life\";","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"    private static final String INVALID_ID \u003d \"#123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"    private static final Policy policy \u003d new Policy(VALID_NAME, VALID_ID);","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"getsquared"},"content":"    public void getPolicyId() {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"getsquared"},"content":"        assertEquals(policy.getPolicyId(), VALID_ID);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"getsquared"},"content":"    public void getPolicyName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"getsquared"},"content":"        assertEquals(policy.getPolicyName(), VALID_NAME);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"    public void isIdTestTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"        assertTrue(policy.isID(VALID_ID));","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"    public void isIdTestFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"        assertFalse(policy.isID(\"124\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"    public void isValidNameTestTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"        assertTrue(Policy.isValidName(VALID_NAME));","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"    public void isValidNameTestFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"        assertFalse(Policy.isValidName(INVALID_NAME));","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    public void isValidIdTestTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"getsquared"},"content":"        assertTrue(Policy.isValidId(VALID_ID));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"yorklim"},"content":"    public void isValidIdTestFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"getsquared"},"content":"        assertFalse(Policy.isValidId(INVALID_ID));","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"yorklim"},"content":"    public void hasSameIdTestTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"getsquared"},"content":"        assertTrue(policy.hasSameId(policy));","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"    public void hasSameIdTestFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"yorklim"},"content":"        Policy otherPolicy \u003d new Policy(\"Health\", \"456\");","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"getsquared"},"content":"        assertFalse(policy.hasSameId(otherPolicy));","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"yorklim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"yorklim"},"content":"        assertEquals(\"Name:\" + VALID_NAME + \", Policy ID:\" + VALID_ID, policy.toString());","lastModifiedDate":"2024-04-11"},{"lineNumber":69,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"yorklim"},"content":"    public void equals() {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"yorklim"},"content":"        Policy policyCopy \u003d new Policy(VALID_NAME, VALID_ID);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"yorklim"},"content":"        Policy differentPolicy \u003d new Policy(\"Health\", \"456\");","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"yorklim"},"content":"        Policy sameNameDifferentId \u003d new Policy(VALID_NAME, \"456\");","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"        Policy sameIdDifferentName \u003d new Policy(\"Health\", VALID_ID);","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"yorklim"},"content":"        assertTrue(policy.equals(policyCopy));","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"yorklim"},"content":"        assertTrue(policy.equals(policy));","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"yorklim"},"content":"        assertFalse(policy.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"yorklim"},"content":"        assertFalse(policy.equals(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"yorklim"},"content":"        assertFalse(policy.equals(differentPolicy));","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"yorklim"},"content":"        assertFalse(policy.equals(sameNameDifferentId));","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"yorklim"},"content":"        assertFalse(policy.equals(sameIdDifferentName));","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"getsquared":14,"yorklim":72}},{"path":"src/test/java/seedu/address/model/reminder/ReminderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"yorklim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"yorklim"},"content":"public class ReminderListTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"yorklim"},"content":"    public void toStringMethodLastMet() {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"yorklim"},"content":"        Person person1 \u003d new PersonBuilder().withLastMet(LocalDate.of(2001, 1, 1)).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"yorklim"},"content":"        remindersList.add(person1);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"yorklim"},"content":"        Person person2 \u003d new PersonBuilder().withLastMet(LocalDate.of(2002, 2, 2)).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"yorklim"},"content":"        remindersList.add(person2);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"yorklim"},"content":"        ReminderList reminderList \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"yorklim"},"content":"        assertEquals(reminderList.toString(), person1.overdueLastMetStringFormat()","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"yorklim"},"content":"                + \"\\n\" + person2.overdueLastMetStringFormat() + \"\\n\");","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    public void toStringMethodSchedule() {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"yorklim"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"yorklim"},"content":"        Person person1 \u003d new PersonBuilder().withSchedule(LocalDateTime.now().plusDays(10), false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"yorklim"},"content":"        remindersList.add(person1);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"        Person person2 \u003d new PersonBuilder().withSchedule(LocalDateTime.now().plusDays(5), false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"yorklim"},"content":"        remindersList.add(person2);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"yorklim"},"content":"        ReminderList reminderList \u003d new ReminderList(ReminderType.SCHEDULES, remindersList);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"yorklim"},"content":"        assertEquals(reminderList.toString(), person1.scheduleStringFormat()","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"yorklim"},"content":"                + \"\\n\" + person2.scheduleStringFormat() + \"\\n\");","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"solomonng2001"},"content":"    public void toStringMethodBirthday() {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"        Person person1 \u003d new PersonBuilder().withBirthday(DateUtil.parseDateToString(","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"solomonng2001"},"content":"                LocalDate.of(2001, 1, 1))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"        remindersList.add(person1);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"        Person person2 \u003d new PersonBuilder().withBirthday(DateUtil.parseDateToString(","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"solomonng2001"},"content":"                LocalDate.of(2002, 2, 2))).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"        remindersList.add(person2);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList \u003d new ReminderList(ReminderType.BIRTHDAYS, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(reminderList.toString(), person1.birthdayStringFormat()","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"                + \"\\n\" + person2.birthdayStringFormat() + \"\\n\");","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(reminderList, reminderList);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"    public void equals_sameValues_true() {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList1 \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList2 \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(reminderList1, reminderList2);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    public void equals_differentType_false() {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(reminderList.equals(1), false);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"    public void equals_differentReminderType_false() {","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList1 \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList2 \u003d new ReminderList(ReminderType.SCHEDULES, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(reminderList1.equals(reminderList2), false);","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"    public void equals_null_false() {","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(reminderList.equals(null), false);","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"    public void equals_differentRemindersList_false() {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList1 \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList2 \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"solomonng2001"},"content":"        remindersList2.add(ALICE);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList1 \u003d new ReminderList(ReminderType.LAST_MET, remindersList1);","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList2 \u003d new ReminderList(ReminderType.LAST_MET, remindersList2);","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(reminderList1.equals(reminderList2), false);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"    public void equals_sameRemindersList_true() {","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"        ObservableList\u003cPerson\u003e remindersList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList1 \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"        ReminderList reminderList2 \u003d new ReminderList(ReminderType.LAST_MET, remindersList);","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(reminderList1.equals(reminderList2), true);","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":71,"yorklim":41}},{"path":"src/test/java/seedu/address/model/reminder/ReminderTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yorklim"},"content":"package seedu.address.model.reminder;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"yorklim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"yorklim"},"content":"public class ReminderTypeTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"yorklim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"yorklim"},"content":"        assertEquals(\"Last Met\", ReminderType.LAST_MET.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"        assertEquals(\"Schedules\", ReminderType.SCHEDULES.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"solomonng2001"},"content":"        assertEquals(\"Birthday\", ReminderType.BIRTHDAYS.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"yorklim"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"solomonng2001":1,"yorklim":13}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"getsquared"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"solomonng2001"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"15-09-1995\";","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"solomonng2001"},"content":"    private static final String INVALID_PRIORITY \u003d \"important\";","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ReganChoy"},"content":"    private static final String INVALID_LASTMET \u003d \"03-03-2001\";","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ReganChoy"},"content":"    private static final String INVALID_SCHEDULE \u003d \"03-03-2001 12:12/1\";","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"yorklim"},"content":"    private static final String INVALID_POLICY \u003d \"Health,a123\";","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    private static final String VALID_PRIORITY \u003d BENSON.getPriority().toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ReganChoy"},"content":"    private static final String VALID_LASTMET \u003d BENSON.getLastMet().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"ReganChoy"},"content":"    private static final String VALID_SCHEDULE \u003d BENSON.getSchedule().toString();","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"yorklim"},"content":"    private static final List\u003cJsonAdaptedPolicy\u003e VALID_POLICIES \u003d BENSON.getPolicyList().toStream()","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"yorklim"},"content":"            .map(JsonAdaptedPolicy::new)","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"yorklim"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"getsquared"},"content":"                        VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"getsquared"},"content":"                VALID_BIRTHDAY, VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS,","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"getsquared"},"content":"                VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"getsquared"},"content":"                        VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"getsquared"},"content":"                VALID_BIRTHDAY, VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS,","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"getsquared"},"content":"                VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"solomonng2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"getsquared"},"content":"                        VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"getsquared"},"content":"                VALID_BIRTHDAY, VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS,","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"getsquared"},"content":"                VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"getsquared"},"content":"                        VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"getsquared"},"content":"                VALID_BIRTHDAY, VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS,","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"getsquared"},"content":"                VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"solomonng2001"},"content":"    public void toModelType_invalidBirthday_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"solomonng2001"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"solomonng2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_BIRTHDAY,","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"getsquared"},"content":"                        VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"solomonng2001"},"content":"        String expectedMessage \u003d Birthday.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":138,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"solomonng2001"},"content":"    public void toModelType_nullBirthday_throwsIllegalValueException() {","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"solomonng2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"getsquared"},"content":"                null, VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"solomonng2001"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName());","lastModifiedDate":"2024-03-11"},{"lineNumber":143,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-11"},{"lineNumber":144,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"solomonng2001"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"solomonng2001"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"solomonng2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"getsquared"},"content":"                        INVALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"solomonng2001"},"content":"        String expectedMessage \u003d Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"solomonng2001"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"solomonng2001"},"content":"    public void toModelType_nullPriority_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"solomonng2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"getsquared"},"content":"                VALID_BIRTHDAY, null, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"solomonng2001"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Priority.class.getSimpleName());","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"solomonng2001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"getsquared"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"getsquared"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"getsquared"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"getsquared"},"content":"                VALID_BIRTHDAY, VALID_PRIORITY, null, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"getsquared"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"getsquared"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"getsquared"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"solomonng2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"getsquared"},"content":"                        VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, invalidTags, VALID_POLICIES);","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"yorklim"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"yorklim"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"yorklim"},"content":"    public void toModelType_invalidPolicies_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"yorklim"},"content":"        List\u003cJsonAdaptedPolicy\u003e invalidPolicies \u003d new ArrayList\u003c\u003e(VALID_POLICIES);","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"yorklim"},"content":"        invalidPolicies.add(new JsonAdaptedPolicy(INVALID_POLICY));","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"yorklim"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"yorklim"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"getsquared"},"content":"                        VALID_PRIORITY, VALID_REMARK, VALID_LASTMET, VALID_SCHEDULE, VALID_TAGS, invalidPolicies);","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"getsquared":27,"solomonng2001":41,"ReganChoy":4,"yorklim":13,"-":106}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"clientcare.json\"));","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"solomonng2001":1,"-":122}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        descriptor.setPriority(person.getPriority());","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"     * Sets the {@code Birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"solomonng2001"},"content":"     * Sets the {@code Priority} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"solomonng2001"},"content":"    public EditPersonDescriptorBuilder withPriority(String priority) {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"solomonng2001"},"content":"        descriptor.setPriority(new Priority(priority));","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"solomonng2001"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"solomonng2001":20,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"yorklim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"yorklim"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.LastMet;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.PolicyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.Priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"yorklim"},"content":"import seedu.address.model.person.Schedule;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"getsquared"},"content":"    public static final String DEFAULT_REMARK \u003d \"Prefers speaking English.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"1990-01-01\";","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"    public static final String DEFAULT_PRIORITY \u003d \"MEDIUM\";","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"    private Birthday birthday;","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"    private Priority priority;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Remark remark;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"yorklim"},"content":"    private LastMet lastMet;","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"yorklim"},"content":"    private Schedule schedule;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"yorklim"},"content":"    private PolicyList policyList;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"solomonng2001"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"solomonng2001"},"content":"        priority \u003d new Priority(DEFAULT_PRIORITY);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"yorklim"},"content":"        lastMet \u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"yorklim"},"content":"        schedule \u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"yorklim"},"content":"        policyList \u003d new PolicyList();","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"solomonng2001"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"        priority \u003d personToCopy.getPriority();","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"yorklim"},"content":"        policyList \u003d personToCopy.getPolicyList();","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"solomonng2001"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"solomonng2001"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"solomonng2001"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"solomonng2001"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"solomonng2001"},"content":"     * Sets the {@code Priority} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"solomonng2001"},"content":"    public PersonBuilder withPriority(String priority) {","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"solomonng2001"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"solomonng2001"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2024-02-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"getsquared"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"yorklim"},"content":"     * Sets the {@code LastMet} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"yorklim"},"content":"    public PersonBuilder withLastMet(LocalDate lastMet) {","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"yorklim"},"content":"        this.lastMet \u003d new LastMet(lastMet);","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"yorklim"},"content":"        return this;","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"yorklim"},"content":"     * Sets the {@code Schedule} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"yorklim"},"content":"    public PersonBuilder withSchedule(LocalDateTime schedule, Boolean isDone) {","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"yorklim"},"content":"        this.schedule \u003d new Schedule(schedule, isDone);","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"yorklim"},"content":"        return this;","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"yorklim"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"yorklim"},"content":"     * Parses the {@code policies} into a {@code PolicyList} and set it to the {@code Person} that we are building.","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"yorklim"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"yorklim"},"content":"    public PersonBuilder withPolicies(String... policies) {","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"yorklim"},"content":"        this.policyList \u003d SampleDataUtil.getPoliciesSet(policies);","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"yorklim"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"yorklim"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"yorklim"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"solomonng2001"},"content":"     * Builds a person object.","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"solomonng2001"},"content":"     * @return the person","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":172,"author":{"gitId":"getsquared"},"content":"        return new Person(name, phone, email, address, birthday, priority, remark, lastMet, schedule, tags,","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"solomonng2001"},"content":"                policyList);","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"getsquared":4,"solomonng2001":30,"yorklim":35,"-":107}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_ORDER;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortCriteria;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"solomonng2001"},"content":"import seedu.address.model.person.SortOrder;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"solomonng2001"},"content":"        sb.append(PREFIX_BIRTHDAY + person.getBirthday().toString() + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"        sb.append(PREFIX_PRIORITY + person.getPriority().toString() + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"solomonng2001"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY).append(birthday)","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"                .append(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"        descriptor.getPriority().ifPresent(priority -\u003e sb.append(PREFIX_PRIORITY).append(priority)","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"solomonng2001"},"content":"                .append(\" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"solomonng2001"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"solomonng2001"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"solomonng2001"},"content":"     * Returns the descriptor part of sort command string for the given {@code criteria} and {@code order}.","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"solomonng2001"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"solomonng2001"},"content":"     * @param criteria the criteria","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"solomonng2001"},"content":"     * @param order the order","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"solomonng2001"},"content":"     * @return the sort command string descriptor","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"solomonng2001"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"solomonng2001"},"content":"    public static String getSortPersonsDescriptor(SortCriteria criteria, SortOrder order) {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"solomonng2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"solomonng2001"},"content":"        sb.append(criteria.toString() + \" \");","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"solomonng2001"},"content":"        sb.append(PREFIX_SORT_ORDER + order.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"solomonng2001"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"solomonng2001"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"solomonng2001":25,"-":62}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"solomonng2001"},"content":"        return Index.fromOneBased(model.getSortedFilteredPersonList().size() / 2);","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"        return Index.fromOneBased(model.getSortedFilteredPersonList().size());","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"        return model.getSortedFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"solomonng2001":3,"-":52}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"solomonng2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"solomonng2001"},"content":"            .withPhone(\"94351253\").withBirthday(\"1993-09-22\").withPriority(\"vip\")","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"getsquared"},"content":"            .withRemark(\"Prefers speaking English\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"solomonng2001"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withBirthday(\"1998-12-03\")","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withPriority(\"high\")","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"yorklim"},"content":"            .withTags(\"owesMoney\", \"friends\").withPolicies(\"Health,123\", \"Travel,456\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"getsquared"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withBirthday(\"1978-05-06\")","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"solomonng2001"},"content":"            .withPriority(\"medium\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"solomonng2001"},"content":"            .withBirthday(\"1999-07-23\").withPriority(\"medium\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withBirthday(\"1995-09-15\")","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"solomonng2001"},"content":"            .withPriority(\"medium\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withBirthday(\"2000-01-01\")","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"solomonng2001"},"content":"            .withPriority(\"medium\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withBirthday(\"1978-11-03\")","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"solomonng2001"},"content":"            .withPriority(\"low\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withBirthday(\"1987-05-20\")","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"solomonng2001"},"content":"            .withPriority(\"medium\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withBirthday(\"1999-03-27\")","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"solomonng2001"},"content":"            .withPriority(\"high\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"solomonng2001"},"content":"            .withPriority(VALID_PRIORITY_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"solomonng2001"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"solomonng2001"},"content":"            .withPriority(VALID_PRIORITY_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"getsquared":2,"solomonng2001":25,"yorklim":1,"-":61}}]
