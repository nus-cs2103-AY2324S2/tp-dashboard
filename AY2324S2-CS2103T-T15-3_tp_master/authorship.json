[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T15-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T15-3/tp/actions)","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T15-3/tp/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2324S2-CS2103T-T15-3/tp)","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"# BandBook","lastModifiedDate":"2024-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"## About the App","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"BandBook is your all-in-one software designed to streamline the management of band members\u0027 contact details and","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"attendance. Optimised for use via a Command Line Interface (CLI), BandBook can assist you in managing your members\u0027 details","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"faster than traditional GUI apps.","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"  * It is **written in OOP fashion** and provides a **reasonably well-written** code base.","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"## Main Features","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"It offers a user-friendly platform to **add, edit and delete members\u0027 contact information**,","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"along with optional fields such as **tag, birthday, matriculation year and instrument information**.","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"Moreover, you can **assign instruments** to your members and **find your members by their name and/or instrument","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"assigned**. You may also **indicate and view the attendance history of your members**, ensuring that they stay on","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"track with the band\u0027s activities.","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"## Getting Started","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"2. Download the latest `bandbook.jar` from [here](https://github.com/AY2324S2-CS2103T-T15-3/tp/releases).","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for BandBook.","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar bandbook.jar`","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"   command to run the application.","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"**Tip:** For the detailed documentation of this project, see the [BandBook Product Website](https://ay2324s2-cs2103t-t15-3.github.io/tp/).","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"## Acknowledgements","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"triciiaaa":35,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"    archiveFileName \u003d \u0027bandbook.jar\u0027","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"run {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"run {","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"triciiaaa":5,"-":73,"brennalaurentan":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"    title: \"About Us\"","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"You can reach us at the following emails:","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"* `e0959380@u.nus.edu` (Brenna Tan)","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"* `shaunlai@u.nus.edu` (Shaun Lai)","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"* `triciaang@u.nus.edu` (Tricia Ang)","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"## Project Team","lastModifiedDate":"2024-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"### Brenna Tan","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"\u003cimg src\u003d\"images/brennalaurentan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"[[github](http://github.com/brennalaurentan)]","lastModifiedDate":"2024-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"* Responsibilities:","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"  * Backend for Birthday information","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"  * Backend for Matriculation Year information","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"### Shaun Lai","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"\u003cimg src\u003d\"images/casaarlai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"[[github](http://github.com/casaarlai)]","lastModifiedDate":"2024-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"* Responsibilities:","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"  * Backend for Indicate and Delete Attendance feature","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"  * Backend for Mass Delete Matriculation Year feature","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"### Tricia Ang","lastModifiedDate":"2024-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"\u003cimg src\u003d\"images/triciiaaa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"[[github](http://github.com/triciiaaa)]","lastModifiedDate":"2024-03-04"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"[[portfolio](team/triciiaaa.md)]","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"* Responsibilities:","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"  * User Interface Design (Mockup and Development)","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"  * Backend for Instrument information","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"  * Backend for Assign Instrument feature","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"  * Backend for Find (by name and/or instrument) feature","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"```","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"triciiaaa":27,"-":24,"brennalaurentan":1}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to create a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2324S2-CS2103T-T15-3/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"triciiaaa":2,"-":80}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"# BandBook Developer Guide","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"BandBook is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"It is a project under the CS2103T module, School of Computing, National University of Singapore.","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-T15-3/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-T15-3/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-T15-3/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-T15-3/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-T15-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-T15-3/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-T15-3/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"triciiaaa"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-T15-3/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"brennalaurentan"},"content":"### Edit Command feature","lastModifiedDate":"2024-04-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"#### Our Implementation","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"brennalaurentan"},"content":"The implementation of the edit feature which allows users to change various fields of an existing contact can be seen","lastModifiedDate":"2024-03-22"},{"lineNumber":166,"author":{"gitId":"brennalaurentan"},"content":"in the UML sequence diagram below.","lastModifiedDate":"2024-03-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"\u003cpuml src\u003d\"diagrams/EditUser.puml\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"brennalaurentan"},"content":"Note: The activation bars for :Ui and logicManager:LogicManager are meant to be deactivated after and within the","lastModifiedDate":"2024-03-22"},{"lineNumber":170,"author":{"gitId":"brennalaurentan"},"content":"reference frame respectively. Due to a PlantUML bug, this is unable to be reflected accurately in the diagram.","lastModifiedDate":"2024-03-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"brennalaurentan"},"content":"### Find Command feature","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"The find feature mainly allows users to search for contacts based on specific fields. Currently, it only supports","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"searching by name and instrument. The logic of the find feature is implemented using the `FindCommand` class and the","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"`FindCommandParser` class.","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"#### Our Implementation","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"triciiaaa"},"content":"`FindCommand` is implemented to allow users to search for contacts based on specific fields. Currently, it only","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"triciiaaa"},"content":"supports searching by name and instrument. It is implemented as such:","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"triciiaaa"},"content":"1. The `FindCommand` is executed by the `LogicManager`.","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"triciiaaa"},"content":"2. It calls the `Model` to filter the list of contacts based on the search criteria.","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"3. The `Model` then returns the filtered list of contacts to the `FindCommand` as a `CommandResult` object.","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"triciiaaa"},"content":"4. This is passed on to `LogicManager` and then to `UI` to display the filtered list of contacts.","lastModifiedDate":"2024-04-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"triciiaaa"},"content":"`FindCommandParser` is implemented to parse the user input for the find command. It is implemented as such:","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"triciiaaa"},"content":"1. The `FindCommandParser` is called by the `AddressBookParser` to parse the user input.","lastModifiedDate":"2024-04-10"},{"lineNumber":189,"author":{"gitId":"triciiaaa"},"content":"2. With the given string input provided by the user, it undergoes various checks using the `parse` function. ","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"triciiaaa"},"content":"3. It first checks if the input contains the valid prefixes (i.e. /n and /i with no duplicates).","lastModifiedDate":"2024-04-10"},{"lineNumber":191,"author":{"gitId":"triciiaaa"},"content":"   1. If there are no valid prefixes, it throws an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"triciiaaa"},"content":"4. It then checks the arguments provided to the valid prefixes.","lastModifiedDate":"2024-04-10"},{"lineNumber":193,"author":{"gitId":"triciiaaa"},"content":"   1. If there are no arguments provided, it throws an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":194,"author":{"gitId":"triciiaaa"},"content":"   2. If there are invalid arguments provided (i.e. does not fulfil validation regex of respective fields), it throws","lastModifiedDate":"2024-04-10"},{"lineNumber":195,"author":{"gitId":"triciiaaa"},"content":"   an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":196,"author":{"gitId":"triciiaaa"},"content":"5. If there are no exceptions thrown at this point, it retrieves the arguments provided after each prefix and returns","lastModifiedDate":"2024-04-10"},{"lineNumber":197,"author":{"gitId":"triciiaaa"},"content":"them as a `FindCommand` object.","lastModifiedDate":"2024-04-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":199,"author":{"gitId":"triciiaaa"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":201,"author":{"gitId":"triciiaaa"},"content":"**Aspect: How the find feature executes:**","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"triciiaaa"},"content":"* **Alternative 1 (current choice)**: Filters by name and instrument.","lastModifiedDate":"2024-04-10"},{"lineNumber":203,"author":{"gitId":"triciiaaa"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2024-04-10"},{"lineNumber":204,"author":{"gitId":"triciiaaa"},"content":"  * Cons: Limited search criteria.","lastModifiedDate":"2024-04-10"},{"lineNumber":205,"author":{"gitId":"triciiaaa"},"content":"* **Alternative 2**: Filters by all possible fields.","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"triciiaaa"},"content":"  * Pros: More flexible as search criteria is extensive.","lastModifiedDate":"2024-04-10"},{"lineNumber":207,"author":{"gitId":"triciiaaa"},"content":"  * Cons: More complex to implement.","lastModifiedDate":"2024-04-10"},{"lineNumber":208,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":209,"author":{"gitId":"brennalaurentan"},"content":"### Assign Command feature","lastModifiedDate":"2024-04-14"},{"lineNumber":210,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":211,"author":{"gitId":"triciiaaa"},"content":"The assign feature mainly allows users to assign an instrument to a contact. Currently, it only supports assigning a","lastModifiedDate":"2024-04-10"},{"lineNumber":212,"author":{"gitId":"triciiaaa"},"content":"single compulsory instrument to one or more contacts. The logic of the assign feature is implemented using the","lastModifiedDate":"2024-04-10"},{"lineNumber":213,"author":{"gitId":"triciiaaa"},"content":"`InstrumentCommand` class and the `InstrumentCommandParser` class.","lastModifiedDate":"2024-04-10"},{"lineNumber":214,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":215,"author":{"gitId":"triciiaaa"},"content":"#### Our Implementation","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"triciiaaa"},"content":"`InstrumentCommand` is implemented to allow users to assign an instrument to one or more contacts. Currently, it only","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"triciiaaa"},"content":"supports assigning a single compulsory instrument to one or more contacts. It is implemented as such:","lastModifiedDate":"2024-04-10"},{"lineNumber":219,"author":{"gitId":"triciiaaa"},"content":"1. The `InstrumentCommand` is executed by the `LogicManager`.","lastModifiedDate":"2024-04-10"},{"lineNumber":220,"author":{"gitId":"triciiaaa"},"content":"2. For each index, it calls the `Model` to retrieve the list of contacts to be assigned the instrument.","lastModifiedDate":"2024-04-10"},{"lineNumber":221,"author":{"gitId":"triciiaaa"},"content":"3. It checks if the indexes provided are valid corresponding to the filtered list.","lastModifiedDate":"2024-04-10"},{"lineNumber":222,"author":{"gitId":"triciiaaa"},"content":"   1. If there are invalid indexes provided, it throws an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":223,"author":{"gitId":"triciiaaa"},"content":"4. A `Person` object is created and the instrument field is updated with the input instrument.","lastModifiedDate":"2024-04-10"},{"lineNumber":224,"author":{"gitId":"triciiaaa"},"content":"   1. If the instrument provided is the same as the existing instrument assigned to the contact, it throws an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":225,"author":{"gitId":"triciiaaa"},"content":"5. The `Model` is updated with the edited `Person` object.","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"triciiaaa"},"content":"6. Once all valid indexes have been processed, the `Model` returns the updated list of contacts to the `InstrumentCommand`","lastModifiedDate":"2024-04-10"},{"lineNumber":227,"author":{"gitId":"triciiaaa"},"content":"   as a `CommandResult` object.","lastModifiedDate":"2024-04-10"},{"lineNumber":228,"author":{"gitId":"triciiaaa"},"content":"6. This is passed on to `LogicManager` and then to `UI` to update the instruments assigned to the specified contacts. ","lastModifiedDate":"2024-04-10"},{"lineNumber":229,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":230,"author":{"gitId":"triciiaaa"},"content":"`InstrumentCommandParser` is implemented to parse the user input for the assign command. It is implemented as such:","lastModifiedDate":"2024-04-10"},{"lineNumber":231,"author":{"gitId":"triciiaaa"},"content":"1. The `InstrumentCommandParser` is called by the `AddressBookParser` to parse the user input.","lastModifiedDate":"2024-04-10"},{"lineNumber":232,"author":{"gitId":"triciiaaa"},"content":"2. With the given string input provided by the user, it undergoes various checks using the `parse` function.","lastModifiedDate":"2024-04-10"},{"lineNumber":233,"author":{"gitId":"triciiaaa"},"content":"3. It first splits the indexes provided and stores them in a set.","lastModifiedDate":"2024-04-10"},{"lineNumber":234,"author":{"gitId":"triciiaaa"},"content":"   1. If there are no indexes provided, it throws an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":235,"author":{"gitId":"triciiaaa"},"content":"   2. If there are invalid indexes provided (i.e. does not exist in the contact list), it throws an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":236,"author":{"gitId":"triciiaaa"},"content":"4. It then checks the arguments provided to the instrument prefix.","lastModifiedDate":"2024-04-10"},{"lineNumber":237,"author":{"gitId":"triciiaaa"},"content":"   1. If there are no arguments provided, it throws an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":238,"author":{"gitId":"triciiaaa"},"content":"   2. If there are invalid arguments provided (i.e. does not fulfil validation regex of the instrument field), it throws","lastModifiedDate":"2024-04-10"},{"lineNumber":239,"author":{"gitId":"triciiaaa"},"content":"      an exception.","lastModifiedDate":"2024-04-10"},{"lineNumber":240,"author":{"gitId":"triciiaaa"},"content":"5. If there are no exceptions thrown at this point, it retrieves the instrument provided after the instrument prefix and ","lastModifiedDate":"2024-04-10"},{"lineNumber":241,"author":{"gitId":"triciiaaa"},"content":"   returns them as an `InstrumentCommand` object.","lastModifiedDate":"2024-04-10"},{"lineNumber":242,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":243,"author":{"gitId":"triciiaaa"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":245,"author":{"gitId":"triciiaaa"},"content":"**Aspect: How the assign feature executes:**","lastModifiedDate":"2024-04-10"},{"lineNumber":246,"author":{"gitId":"triciiaaa"},"content":"* **Alternative 1 (current choice)**: Assigns a single compulsory instrument to one or more contacts.","lastModifiedDate":"2024-04-10"},{"lineNumber":247,"author":{"gitId":"triciiaaa"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2024-04-10"},{"lineNumber":248,"author":{"gitId":"triciiaaa"},"content":"  * Cons: Limited instrument assignments.","lastModifiedDate":"2024-04-10"},{"lineNumber":249,"author":{"gitId":"triciiaaa"},"content":"* **Alternative 2**: Assigns at least one to possibly multiple instruments to one or more contacts.","lastModifiedDate":"2024-04-10"},{"lineNumber":250,"author":{"gitId":"triciiaaa"},"content":"  * Pros: More flexible as members may be able to play none or more than one instrument.","lastModifiedDate":"2024-04-10"},{"lineNumber":251,"author":{"gitId":"triciiaaa"},"content":"  * Cons: More complex to implement.","lastModifiedDate":"2024-04-10"},{"lineNumber":252,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":253,"author":{"gitId":"brennalaurentan"},"content":"### Birthday Field Feature","lastModifiedDate":"2024-04-14"},{"lineNumber":254,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":255,"author":{"gitId":"brennalaurentan"},"content":"The birthday field allows users to store the birthday of a contact. Users can add the birthday to a new contact,","lastModifiedDate":"2024-04-15"},{"lineNumber":256,"author":{"gitId":"brennalaurentan"},"content":"or edit the birthday of an existing contact. The logic of the birthday field is implemented using the ","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"brennalaurentan"},"content":"`AddCommand` and `AddCommandParser` classes or the `EditCommand` and `EditCommandParser` classes depending on ","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"brennalaurentan"},"content":"whether a new contact is being created or existing contact is being edited.","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":260,"author":{"gitId":"brennalaurentan"},"content":"#### Our Implementation","lastModifiedDate":"2024-04-14"},{"lineNumber":261,"author":{"gitId":"brennalaurentan"},"content":"Adding a new contact with the optional birthday field, is implemented as such:","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"brennalaurentan"},"content":"1. The `AddCommand` is executed by the `LogicManager`.","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"brennalaurentan"},"content":"2. AddressBookParser calls `AddCommandParser` which parses the input containing the birthday of the new contact to be","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"brennalaurentan"},"content":"   added.","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"brennalaurentan"},"content":"3. For each field detail entered in the add command, an object of the field type is created (e.g Name object containing","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"brennalaurentan"},"content":"   contact\u0027s name, Birthday object containing contact\u0027s birthday). Minimally, the 4 compulsory fields ","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"brennalaurentan"},"content":"   (name, phone number, email address, address) must be included in the add command for it to be successful.","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"brennalaurentan"},"content":"4. In creating a Birthday object in the `Birthday` class, the data undergoes date validation in `DateValidatorUtil`","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"brennalaurentan"},"content":"   to verify that the date entered is a valid date.","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"brennalaurentan"},"content":"5. A new `Person` object is created with the fields entered in the add command.","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"brennalaurentan"},"content":"Editing the birthday field of an existing contact, is implemented as such:","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"brennalaurentan"},"content":"1. The `EditCommand` is executed by the `LogicManager`.","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"brennalaurentan"},"content":"2. AddressBookParser calls `EditCommandParser` which parses the input containing the birthday of the existing contact","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"brennalaurentan"},"content":"   that is to be set.","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"brennalaurentan"},"content":"3. For each field detail entered in the edit command (to be changed in the existing contact), an object of the field","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"brennalaurentan"},"content":"   type is created (e.g Name object containing contact\u0027s new name, Birthday object containing contact\u0027s birthday).","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"brennalaurentan"},"content":"   Unlike the add command, there is no minimum number of fields that need to be changed in an edit command.","lastModifiedDate":"2024-04-15"},{"lineNumber":279,"author":{"gitId":"brennalaurentan"},"content":"4. In creating a Birthday object in the `Birthday` class, the data undergoes date validation in `DateValidatorUtil`","lastModifiedDate":"2024-04-15"},{"lineNumber":280,"author":{"gitId":"brennalaurentan"},"content":"   to verify that the date entered is a valid date.","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"brennalaurentan"},"content":"5. A new `Person` object is created with any existing unchanged fields, as well as the edited fields entered in the","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"brennalaurentan"},"content":"   edit command.","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":284,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"triciiaaa"},"content":"## **Appendix A: Requirements**","lastModifiedDate":"2024-04-10"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"triciiaaa"},"content":"* is the band administrator","lastModifiedDate":"2024-04-10"},{"lineNumber":303,"author":{"gitId":"triciiaaa"},"content":"* has a need to manage a significant number of band members","lastModifiedDate":"2024-03-30"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"brennalaurentan"},"content":"**Value proposition**: Our app is specifically designed for a band administrator with a seamless and","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"triciiaaa"},"content":"efficient way to manage and access their members\u0027 details. Also, our app is able to extend capabilities that","lastModifiedDate":"2024-03-30"},{"lineNumber":311,"author":{"gitId":"triciiaaa"},"content":"help make managing a band easier.","lastModifiedDate":"2024-03-30"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"| Priority   | As a …​             | I want to …​                            | So that I can…​                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"triciiaaa"},"content":"|------------|---------------------|-----------------------------------------|-------------------------------------------------------|","lastModifiedDate":"2024-04-10"},{"lineNumber":319,"author":{"gitId":"triciiaaa"},"content":"| `* * *`    | band administrator  | create contact information              | keep track of members in the band                     |","lastModifiedDate":"2024-04-10"},{"lineNumber":320,"author":{"gitId":"triciiaaa"},"content":"| `* * *`    | band administrator  | view contact \u0026 address information      | organise transportation by area of residence          |","lastModifiedDate":"2024-04-10"},{"lineNumber":321,"author":{"gitId":"triciiaaa"},"content":"| `* * *`    | band administrator  | update contact information              | keep the address book current                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":322,"author":{"gitId":"triciiaaa"},"content":"| `* * *`    | band administrator  | delete contact information              | keep address book updated                             |","lastModifiedDate":"2024-04-10"},{"lineNumber":323,"author":{"gitId":"triciiaaa"},"content":"| `* *`      | band administrator  | indicate birthday information           | coordinate celebrations for the members               |","lastModifiedDate":"2024-04-10"},{"lineNumber":324,"author":{"gitId":"triciiaaa"},"content":"| `* *`      | band administrator  | indicate instrument information         | keep track of each member\u0027s instrument assignments    |","lastModifiedDate":"2024-04-10"},{"lineNumber":325,"author":{"gitId":"triciiaaa"},"content":"| `* *`      | band administrator  | indicate matriculation year information | keep track of how long ago the member joined the club |","lastModifiedDate":"2024-04-10"},{"lineNumber":326,"author":{"gitId":"triciiaaa"},"content":"| `* *`      | band administrator  | view attendance history                 | monitor participation and follow up as necessary      |","lastModifiedDate":"2024-04-10"},{"lineNumber":327,"author":{"gitId":"triciiaaa"},"content":"| `* *`      | band administrator  | update attendance history               | keep updated attendance records                       |                                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":328,"author":{"gitId":"triciiaaa"},"content":"| `* *`      | band administrator  | filter contacts by instrument           | better coordinate performance rehearsals              |                                         |","lastModifiedDate":"2024-04-10"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"triciiaaa"},"content":"(For all use cases below, the **System** is the `BandBook` and the **Actor** is the `band administrator`, unless specified otherwise)","lastModifiedDate":"2024-04-10"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"brennalaurentan"},"content":"**Use case: Delete a person**","lastModifiedDate":"2024-03-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"triciiaaa"},"content":"1.  Band administrator requests to list persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":339,"author":{"gitId":"triciiaaa"},"content":"2.  BandBook shows a list of persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":340,"author":{"gitId":"triciiaaa"},"content":"3.  Band administrator requests to delete a specific person in the list.","lastModifiedDate":"2024-04-10"},{"lineNumber":341,"author":{"gitId":"triciiaaa"},"content":"4.  BandBook deletes the person.","lastModifiedDate":"2024-04-10"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"triciiaaa"},"content":"    * 3a1. BandBook shows an error message.","lastModifiedDate":"2024-04-10"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"triciiaaa"},"content":"**Use case: Indicate a birthday of a member**","lastModifiedDate":"2024-04-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":359,"author":{"gitId":"triciiaaa"},"content":"**MSS**","lastModifiedDate":"2024-03-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":361,"author":{"gitId":"triciiaaa"},"content":"1.  Band administrator requests to list persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":362,"author":{"gitId":"triciiaaa"},"content":"2.  BandBook shows a list of persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":363,"author":{"gitId":"triciiaaa"},"content":"3.  Band administrator requests to add a birthday to a specific person in the list.","lastModifiedDate":"2024-04-10"},{"lineNumber":364,"author":{"gitId":"triciiaaa"},"content":"4.  BandBook updates the person\u0027s info to reflect their birthday.","lastModifiedDate":"2024-04-10"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":366,"author":{"gitId":"triciiaaa"},"content":"    Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":368,"author":{"gitId":"triciiaaa"},"content":"**Extensions**","lastModifiedDate":"2024-04-04"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":370,"author":{"gitId":"triciiaaa"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-04-04"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":372,"author":{"gitId":"triciiaaa"},"content":"  Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":374,"author":{"gitId":"triciiaaa"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"triciiaaa"},"content":"    * 3a1. BandBook shows an error message.","lastModifiedDate":"2024-04-10"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":378,"author":{"gitId":"triciiaaa"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":380,"author":{"gitId":"triciiaaa"},"content":"**Use case: Indicate matriculation year of a member**","lastModifiedDate":"2024-04-04"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":382,"author":{"gitId":"triciiaaa"},"content":"**MSS**","lastModifiedDate":"2024-04-04"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":384,"author":{"gitId":"triciiaaa"},"content":"1.  Band administrator requests to list persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":385,"author":{"gitId":"triciiaaa"},"content":"2.  BandBook shows a list of persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":386,"author":{"gitId":"triciiaaa"},"content":"3.  Band administrator requests to add a matriculation year to a specific person in the list.","lastModifiedDate":"2024-04-10"},{"lineNumber":387,"author":{"gitId":"triciiaaa"},"content":"4.  BandBook updates the person\u0027s info to reflect their matriculation year.","lastModifiedDate":"2024-04-10"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":389,"author":{"gitId":"triciiaaa"},"content":"    Use case ends.","lastModifiedDate":"2024-03-30"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":391,"author":{"gitId":"triciiaaa"},"content":"**Extensions**","lastModifiedDate":"2024-03-30"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":393,"author":{"gitId":"triciiaaa"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-30"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":395,"author":{"gitId":"triciiaaa"},"content":"  Use case ends.","lastModifiedDate":"2024-03-30"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":397,"author":{"gitId":"triciiaaa"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-30"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":399,"author":{"gitId":"triciiaaa"},"content":"    * 3a1. BandBook shows an error message.","lastModifiedDate":"2024-04-10"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":401,"author":{"gitId":"triciiaaa"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-30"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":403,"author":{"gitId":"triciiaaa"},"content":"**Use case: Delete all members of a specific matriculation year**","lastModifiedDate":"2024-04-04"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":405,"author":{"gitId":"triciiaaa"},"content":"**MSS**","lastModifiedDate":"2024-04-04"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":407,"author":{"gitId":"triciiaaa"},"content":"1.  Band administrator requests to list persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":408,"author":{"gitId":"triciiaaa"},"content":"2.  BandBook shows a list of persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":409,"author":{"gitId":"triciiaaa"},"content":"3.  Band administrator requests to delete all persons in the list who belong to a specific matriculation year.","lastModifiedDate":"2024-04-10"},{"lineNumber":410,"author":{"gitId":"triciiaaa"},"content":"4.  BandBook deletes all persons who belong to the specific matriculation year.","lastModifiedDate":"2024-04-10"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":412,"author":{"gitId":"triciiaaa"},"content":"    Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":414,"author":{"gitId":"triciiaaa"},"content":"**Extensions**","lastModifiedDate":"2024-04-04"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":416,"author":{"gitId":"triciiaaa"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-04-04"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":418,"author":{"gitId":"triciiaaa"},"content":"  Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":420,"author":{"gitId":"triciiaaa"},"content":"**Use case: Mark attendance for a member**","lastModifiedDate":"2024-03-30"},{"lineNumber":421,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":422,"author":{"gitId":"triciiaaa"},"content":"**MSS**","lastModifiedDate":"2024-03-30"},{"lineNumber":423,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":424,"author":{"gitId":"triciiaaa"},"content":"1.  Band administrator requests to list persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":425,"author":{"gitId":"triciiaaa"},"content":"2.  BandBook shows a list of persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":426,"author":{"gitId":"triciiaaa"},"content":"3.  Band administrator requests to mark the attendance of specific person(s) in the list.","lastModifiedDate":"2024-04-10"},{"lineNumber":427,"author":{"gitId":"triciiaaa"},"content":"4.  BandBook updates the person\u0027s info to reflect their attendance for a specific day.","lastModifiedDate":"2024-04-10"},{"lineNumber":428,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"triciiaaa"},"content":"    Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":430,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"triciiaaa"},"content":"**Extensions**","lastModifiedDate":"2024-04-04"},{"lineNumber":432,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":433,"author":{"gitId":"triciiaaa"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-04-04"},{"lineNumber":434,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":435,"author":{"gitId":"triciiaaa"},"content":"  Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":436,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":437,"author":{"gitId":"triciiaaa"},"content":"* 3a. The given indexes are invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":438,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"triciiaaa"},"content":"    * 3a1. BandBook shows an error message.","lastModifiedDate":"2024-04-10"},{"lineNumber":440,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":441,"author":{"gitId":"triciiaaa"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-04"},{"lineNumber":442,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":443,"author":{"gitId":"triciiaaa"},"content":"**Use case: Unmark attendance for a member**","lastModifiedDate":"2024-04-04"},{"lineNumber":444,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":445,"author":{"gitId":"triciiaaa"},"content":"**MSS**","lastModifiedDate":"2024-04-04"},{"lineNumber":446,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":447,"author":{"gitId":"triciiaaa"},"content":"1.  Band administrator requests to list persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":448,"author":{"gitId":"triciiaaa"},"content":"2.  BandBook shows a list of persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":449,"author":{"gitId":"triciiaaa"},"content":"3.  Band administrator requests to unmark the attendance of specific person(s) in the list.","lastModifiedDate":"2024-04-10"},{"lineNumber":450,"author":{"gitId":"triciiaaa"},"content":"4.  BandBook updates the person\u0027s info to reflect their attendance for a specific day.","lastModifiedDate":"2024-04-10"},{"lineNumber":451,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":452,"author":{"gitId":"triciiaaa"},"content":"    Use case ends.","lastModifiedDate":"2024-03-30"},{"lineNumber":453,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":454,"author":{"gitId":"triciiaaa"},"content":"**Extensions**","lastModifiedDate":"2024-03-30"},{"lineNumber":455,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":456,"author":{"gitId":"triciiaaa"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-30"},{"lineNumber":457,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":458,"author":{"gitId":"triciiaaa"},"content":"  Use case ends.","lastModifiedDate":"2024-03-30"},{"lineNumber":459,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":460,"author":{"gitId":"triciiaaa"},"content":"* 3a. The given indexes are invalid.","lastModifiedDate":"2024-03-30"},{"lineNumber":461,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":462,"author":{"gitId":"triciiaaa"},"content":"    * 3a1. BandBook shows an error message.","lastModifiedDate":"2024-04-10"},{"lineNumber":463,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":464,"author":{"gitId":"triciiaaa"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-04-04"},{"lineNumber":465,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":466,"author":{"gitId":"triciiaaa"},"content":"**Use case: Assign an instrument to a member**","lastModifiedDate":"2024-04-04"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":468,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-04-04"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":470,"author":{"gitId":"triciiaaa"},"content":"1.  Band administrator requests to list persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":471,"author":{"gitId":"triciiaaa"},"content":"2.  BandBook shows a list of persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":472,"author":{"gitId":"triciiaaa"},"content":"3.  Band administrator requests to assign an instrument to specific person(s) in the list.","lastModifiedDate":"2024-04-10"},{"lineNumber":473,"author":{"gitId":"triciiaaa"},"content":"4.  BandBook updates the person\u0027s info to reflect their instrument.","lastModifiedDate":"2024-04-10"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":477,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-04-04"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-04-04"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":481,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":483,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":485,"author":{"gitId":"triciiaaa"},"content":"    * 3a1. BandBook shows an error message.","lastModifiedDate":"2024-04-10"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-30"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":489,"author":{"gitId":"triciiaaa"},"content":"**Use case: Find member by name and/or instrument**","lastModifiedDate":"2024-04-04"},{"lineNumber":490,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":491,"author":{"gitId":"triciiaaa"},"content":"**MSS**","lastModifiedDate":"2024-04-04"},{"lineNumber":492,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":493,"author":{"gitId":"triciiaaa"},"content":"1.  Band administrator requests to list persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":494,"author":{"gitId":"triciiaaa"},"content":"2.  BandBook shows a list of persons.","lastModifiedDate":"2024-04-10"},{"lineNumber":495,"author":{"gitId":"triciiaaa"},"content":"3.  Band administrator requests to find specific person(s) in the list by name and/or instrument.","lastModifiedDate":"2024-04-10"},{"lineNumber":496,"author":{"gitId":"triciiaaa"},"content":"4.  BandBook displays a filtered list of persons who match the keywords provided at each prefix.","lastModifiedDate":"2024-04-10"},{"lineNumber":497,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":498,"author":{"gitId":"triciiaaa"},"content":"    Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":499,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":500,"author":{"gitId":"triciiaaa"},"content":"**Extensions**","lastModifiedDate":"2024-04-04"},{"lineNumber":501,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":502,"author":{"gitId":"triciiaaa"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-04-04"},{"lineNumber":503,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":504,"author":{"gitId":"triciiaaa"},"content":"  Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":505,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":506,"author":{"gitId":"triciiaaa"},"content":"* 3a. The given keyword cannot be found.","lastModifiedDate":"2024-04-04"},{"lineNumber":507,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":508,"author":{"gitId":"triciiaaa"},"content":"    * 3a1. BandBook shows that 0 persons are listed.","lastModifiedDate":"2024-04-10"},{"lineNumber":509,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":510,"author":{"gitId":"triciiaaa"},"content":"      Use case ends.","lastModifiedDate":"2024-04-04"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"triciiaaa"},"content":"2.  Should be able to hold up to 1000 members without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-30"},{"lineNumber":516,"author":{"gitId":"triciiaaa"},"content":"3.  Functions should return results within 2 seconds to prevent the app from feeling too slow and irritating to use.","lastModifiedDate":"2024-03-30"},{"lineNumber":517,"author":{"gitId":"triciiaaa"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-30"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":519,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"brennalaurentan"},"content":"* **API**: Application Programming Interface, a set of rules and protocols that allows different software applications to communicate with each other.","lastModifiedDate":"2024-04-15"},{"lineNumber":522,"author":{"gitId":"brennalaurentan"},"content":"* **CLI**: Command Line Interface, a text-based interface used to interact with software applications. Users input commands into the CLI to execute functions and operations.","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"brennalaurentan"},"content":"* **Command**: A text input entered by the user into the command input box to instruct the software to perform a specific action.","lastModifiedDate":"2024-04-15"},{"lineNumber":524,"author":{"gitId":"brennalaurentan"},"content":"* **GUI**: Graphical User Interface, a visual interface that allows users to interact with software applications through graphical elements such as windows, buttons, and icons.","lastModifiedDate":"2024-04-15"},{"lineNumber":525,"author":{"gitId":"brennalaurentan"},"content":"* **JSON**: JavaScript Object Notation, a lightweight data-interchange format that is easy for humans to read and write and easy for machines to parse and generate.","lastModifiedDate":"2024-04-15"},{"lineNumber":526,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":527,"author":{"gitId":"brennalaurentan"},"content":"* **MSS**: Main Success Scenario, the main path of a use case that describes the basic, successful flow of events.","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"brennalaurentan"},"content":"* **Parameter**: A value that is passed to a command or function by the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"brennalaurentan"},"content":"* **UI**: User Interface, the visual elements of a software application that users interact with to perform tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"triciiaaa"},"content":"## **Appendix B: Instructions for manual testing**","lastModifiedDate":"2024-04-10"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":540,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":541,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"triciiaaa"},"content":"        Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"triciiaaa"},"content":"1. _Deleting a person while a filtered list is being shown_","lastModifiedDate":"2024-04-04"},{"lineNumber":576,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":577,"author":{"gitId":"triciiaaa"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list. Filter the list using the `find` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":578,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":579,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":580,"author":{"gitId":"triciiaaa"},"content":"       Expected: First contact in the filtered list is deleted. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":581,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":582,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":583,"author":{"gitId":"triciiaaa"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-04"},{"lineNumber":584,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":585,"author":{"gitId":"triciiaaa"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the filtered list size)\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":586,"author":{"gitId":"triciiaaa"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2024-04-04"},{"lineNumber":587,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":588,"author":{"gitId":"triciiaaa"},"content":"### Finding a person","lastModifiedDate":"2024-04-04"},{"lineNumber":589,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":590,"author":{"gitId":"triciiaaa"},"content":"1. Finding person(s) by name while all persons are being shown","lastModifiedDate":"2024-04-04"},{"lineNumber":591,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":592,"author":{"gitId":"triciiaaa"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":593,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":594,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `find n/Alex`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":595,"author":{"gitId":"triciiaaa"},"content":"       Expected: The contacts with the name field containing \u0027Alex\u0027 from the list is shown. Number of contacts listed is shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":596,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":597,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `find n/Alex Bernice`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":598,"author":{"gitId":"triciiaaa"},"content":"       Expected: The contacts with the name field containing \u0027Alex\u0027 or \u0027Bernice\u0027 from the list is shown. Number of contacts listed is shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":599,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":600,"author":{"gitId":"triciiaaa"},"content":"    1. Other incorrect find commands to try: `find`, `find n/`, `...` (where the string after n/ is not alphanumeric)\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":601,"author":{"gitId":"triciiaaa"},"content":"       Expected: Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-04"},{"lineNumber":602,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":603,"author":{"gitId":"triciiaaa"},"content":"1. Finding person(s) by instrument while all persons are being shown","lastModifiedDate":"2024-04-04"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":605,"author":{"gitId":"triciiaaa"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":607,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `find i/Clarinet`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":608,"author":{"gitId":"triciiaaa"},"content":"       Expected: The contacts with the instrument field containing \u0027Clarinet\u0027 from the list is shown. Number of contacts listed is shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":610,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `find i/Clarinet Oboe`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":611,"author":{"gitId":"triciiaaa"},"content":"       Expected: The contacts with the instrument field containing \u0027Clarinet\u0027 or \u0027Oboe\u0027 from the list is shown. Number of contacts listed is shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":613,"author":{"gitId":"triciiaaa"},"content":"    1. Other incorrect find commands to try: `find`, `find i/`, `...` (where the string after i/ is not alphanumeric)\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":614,"author":{"gitId":"triciiaaa"},"content":"       Expected: Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-04"},{"lineNumber":615,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":616,"author":{"gitId":"triciiaaa"},"content":"1. Finding person(s) by name and instrument while all persons are being shown","lastModifiedDate":"2024-04-04"},{"lineNumber":617,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":618,"author":{"gitId":"triciiaaa"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":619,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":620,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `find n/Alex i/Clarinet`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":621,"author":{"gitId":"triciiaaa"},"content":"       Expected: The contacts with the name field containing \u0027Alex\u0027 and the instrument field containing \u0027Clarinet\u0027 from the list is shown. Number of contacts listed is shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":622,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":623,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `find n/Alex Bernice i/Clarinet Oboe`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":624,"author":{"gitId":"triciiaaa"},"content":"       Expected: The contacts with the name field containing \u0027Alex\u0027 or \u0027Bernice\u0027 and the instrument field containing \u0027Clarinet\u0027 or \u0027Oboe\u0027 from the list is shown. Number of contacts listed is shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":625,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":626,"author":{"gitId":"triciiaaa"},"content":"    1. Other incorrect find commands to try: `find`, `find n/ i/`, `find i/ n/`, `...` (where the string after n/ and i/ is not alphanumeric)\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":627,"author":{"gitId":"triciiaaa"},"content":"       Expected: Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-04"},{"lineNumber":628,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":629,"author":{"gitId":"triciiaaa"},"content":"### Assigning an instrument to person(s)","lastModifiedDate":"2024-04-04"},{"lineNumber":630,"author":{"gitId":"triciiaaa"},"content":"1. Assigning an instrument to person(s) while all persons are being shown","lastModifiedDate":"2024-04-04"},{"lineNumber":631,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":632,"author":{"gitId":"triciiaaa"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":633,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":634,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `assign 1 i/Clarinet`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":635,"author":{"gitId":"triciiaaa"},"content":"       Expected: First contact in the list is assigned with the instrument \u0027Clarinet\u0027. Name of the edited contact shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":636,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":637,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `assign 3 4 i/Flute`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":638,"author":{"gitId":"triciiaaa"},"content":"       Expected: Third and fourth contact in the list is assigned with the instrument \u0027Flute\u0027. Names of the edited contacts shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":639,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":640,"author":{"gitId":"triciiaaa"},"content":"    1. Other incorrect assign commands to try: `assign`, `assign x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":641,"author":{"gitId":"triciiaaa"},"content":"       Expected: Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-04"},{"lineNumber":642,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":643,"author":{"gitId":"triciiaaa"},"content":"1. Assigning an instrument to person(s) while a filtered list is being shown_","lastModifiedDate":"2024-04-04"},{"lineNumber":644,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":645,"author":{"gitId":"triciiaaa"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list. Filter the list using the `find` command.","lastModifiedDate":"2024-04-04"},{"lineNumber":646,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":647,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `assign 1 i/Clarinet`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":648,"author":{"gitId":"triciiaaa"},"content":"       Expected: First contact in the filtered list is assigned with the instrument \u0027Clarinet\u0027. Name of the edited contact shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":649,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":650,"author":{"gitId":"triciiaaa"},"content":"    1. Test case: `assign 3 4 i/Flute`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":651,"author":{"gitId":"triciiaaa"},"content":"       Expected: Third and fourth contact in the filtered list is assigned with the instrument \u0027Flute\u0027. Names of the edited contacts shown in the status message.","lastModifiedDate":"2024-04-04"},{"lineNumber":652,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":653,"author":{"gitId":"triciiaaa"},"content":"    1. Other incorrect assign commands to try: `assign`, `assign x`, `...` (where x is larger than the filtered list size)\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":654,"author":{"gitId":"triciiaaa"},"content":"       Expected: Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-04-04"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"brennalaurentan"},"content":"   1. Open a command terminal and navigate to the folder where the `data/addressbook.json` is located.","lastModifiedDate":"2024-04-15"},{"lineNumber":661,"author":{"gitId":"brennalaurentan"},"content":"   1. Delete the `addressbook.json` file.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":662,"author":{"gitId":"brennalaurentan"},"content":"      Expected: The app should create a new data file with default data when it is launched.","lastModifiedDate":"2024-04-15"},{"lineNumber":663,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"triciiaaa"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-10"},{"lineNumber":666,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":667,"author":{"gitId":"brennalaurentan"},"content":"## **Appendix C: Effort**","lastModifiedDate":"2024-04-15"},{"lineNumber":668,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":669,"author":{"gitId":"brennalaurentan"},"content":"Listed below are the features added on top of the original AB3 program, with their corresponding evaluated difficulty","lastModifiedDate":"2024-04-15"},{"lineNumber":670,"author":{"gitId":"casaarlai"},"content":"in implementation. Difficulty is represented from a scale of `*` to `****` which each asterisk representing an increased ","lastModifiedDate":"2024-04-15"},{"lineNumber":671,"author":{"gitId":"casaarlai"},"content":"difficulty.","lastModifiedDate":"2024-04-15"},{"lineNumber":672,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":673,"author":{"gitId":"brennalaurentan"},"content":"| Difficulty | Feature                              | ","lastModifiedDate":"2024-04-15"},{"lineNumber":674,"author":{"gitId":"brennalaurentan"},"content":"|------------|--------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":675,"author":{"gitId":"triciiaaa"},"content":"| `*`        | Instrument Field                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":676,"author":{"gitId":"triciiaaa"},"content":"| `* *`      | Assign Instrument Command            |","lastModifiedDate":"2024-04-15"},{"lineNumber":677,"author":{"gitId":"triciiaaa"},"content":"| `* * *`    | Find by Instrument Command           |","lastModifiedDate":"2024-04-15"},{"lineNumber":678,"author":{"gitId":"brennalaurentan"},"content":"| `* *`      | Birthday Field                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":679,"author":{"gitId":"brennalaurentan"},"content":"| `*`        | Matriculation Year Field             |  ","lastModifiedDate":"2024-04-15"},{"lineNumber":680,"author":{"gitId":"casaarlai"},"content":"| `* * *`    | Attendance Field                     | ","lastModifiedDate":"2024-04-15"},{"lineNumber":681,"author":{"gitId":"casaarlai"},"content":"| `* *`      | Delete by Matriculation Year Command |","lastModifiedDate":"2024-04-15"},{"lineNumber":682,"author":{"gitId":"triciiaaa"},"content":"| `*`        | Revamped Ui                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":683,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":684,"author":{"gitId":"brennalaurentan"},"content":"#### Instrument Field","lastModifiedDate":"2024-04-15"},{"lineNumber":685,"author":{"gitId":"triciiaaa"},"content":"This field was relatively straightforward to implement as it was a simple addition to the existing fields. This additional","lastModifiedDate":"2024-04-15"},{"lineNumber":686,"author":{"gitId":"triciiaaa"},"content":"field was implemented for the existing add and edit feature. For this field, we did not plan to account for any data","lastModifiedDate":"2024-04-15"},{"lineNumber":687,"author":{"gitId":"triciiaaa"},"content":"validation so users are free to key in any instrument they wish depending on their band\u0027s needs. ","lastModifiedDate":"2024-04-15"},{"lineNumber":688,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":689,"author":{"gitId":"brennalaurentan"},"content":"#### Assign Instrument Command","lastModifiedDate":"2024-04-15"},{"lineNumber":690,"author":{"gitId":"triciiaaa"},"content":"This feature was slightly harder to implement as it required the need to handle multiple indexes and the assignment of","lastModifiedDate":"2024-04-15"},{"lineNumber":691,"author":{"gitId":"triciiaaa"},"content":"an instrument. Similar to the attendance feature, this meant that it was necessary to check for the validity of the","lastModifiedDate":"2024-04-15"},{"lineNumber":692,"author":{"gitId":"triciiaaa"},"content":"indexes entered, and then to carry out the assignment of the instrument to all the indexes. There was also error handling","lastModifiedDate":"2024-04-15"},{"lineNumber":693,"author":{"gitId":"triciiaaa"},"content":"enforced which displays an error message for any invalid indexes or incorrect instrument inputs (according to the","lastModifiedDate":"2024-04-15"},{"lineNumber":694,"author":{"gitId":"triciiaaa"},"content":"parameter constraints).","lastModifiedDate":"2024-04-15"},{"lineNumber":695,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":696,"author":{"gitId":"brennalaurentan"},"content":"#### Find by Instrument Command","lastModifiedDate":"2024-04-15"},{"lineNumber":697,"author":{"gitId":"triciiaaa"},"content":"While this functionality was built upon the current find feature, it was slightly harder to implement as we wanted to","lastModifiedDate":"2024-04-15"},{"lineNumber":698,"author":{"gitId":"triciiaaa"},"content":"provide users with the flexibility to filter by name only, name and instrument, or instrument only. Multiple keywords","lastModifiedDate":"2024-04-15"},{"lineNumber":699,"author":{"gitId":"triciiaaa"},"content":"were also allowed for each of these scenarios, making it much more complex to implement the validation and perform testing.","lastModifiedDate":"2024-04-15"},{"lineNumber":700,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":701,"author":{"gitId":"brennalaurentan"},"content":"#### Birthday Field","lastModifiedDate":"2024-04-15"},{"lineNumber":702,"author":{"gitId":"brennalaurentan"},"content":"Relatively straightforward to implement as it serves only as an addition to the other existing fields, without a","lastModifiedDate":"2024-04-15"},{"lineNumber":703,"author":{"gitId":"brennalaurentan"},"content":"specific command (utilises the existing add and edit commands). The need for date validation (e.g verifying valid/invalid","lastModifiedDate":"2024-04-15"},{"lineNumber":704,"author":{"gitId":"casaarlai"},"content":"leap year) was the most complex aspect of the implementation of this Birthday field.","lastModifiedDate":"2024-04-15"},{"lineNumber":705,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":706,"author":{"gitId":"brennalaurentan"},"content":"#### Matriculation Year Field","lastModifiedDate":"2024-04-15"},{"lineNumber":707,"author":{"gitId":"brennalaurentan"},"content":"Straightforward to implement as the input must fulfil the strict requirement of being a 4-digit number (enforced using","lastModifiedDate":"2024-04-15"},{"lineNumber":708,"author":{"gitId":"brennalaurentan"},"content":"RegEx). As such, most invalid inputs would already have been filtered out. Extra checking was enforced to ensure that","lastModifiedDate":"2024-04-15"},{"lineNumber":709,"author":{"gitId":"brennalaurentan"},"content":"the year entered does not exceed the current year.","lastModifiedDate":"2024-04-15"},{"lineNumber":710,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":711,"author":{"gitId":"brennalaurentan"},"content":"#### Attendance Field","lastModifiedDate":"2024-04-15"},{"lineNumber":712,"author":{"gitId":"casaarlai"},"content":"This feature was harder to implement as it was the first time we introduced the idea of doing bulk operations ","lastModifiedDate":"2024-04-15"},{"lineNumber":713,"author":{"gitId":"casaarlai"},"content":"into the project. This meant allowing the user to input multiple indexes, ensuring that the handling of these indexes","lastModifiedDate":"2024-04-15"},{"lineNumber":714,"author":{"gitId":"casaarlai"},"content":"are accurate, and then carrying out the addition/deletion of attendance dates to all these indexes. There was also then","lastModifiedDate":"2024-04-15"},{"lineNumber":715,"author":{"gitId":"casaarlai"},"content":"the proper handling of any resulting exceptions from the parsing of the inputted dates.","lastModifiedDate":"2024-04-15"},{"lineNumber":716,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":717,"author":{"gitId":"brennalaurentan"},"content":"#### Delete by Matriculation Year Command","lastModifiedDate":"2024-04-15"},{"lineNumber":718,"author":{"gitId":"casaarlai"},"content":"Another bulk operation that we introduced to increase the quality of life that the application provides. The operation","lastModifiedDate":"2024-04-15"},{"lineNumber":719,"author":{"gitId":"casaarlai"},"content":"having to be done across multiple number of records in the application meant the need for additional logic, and more ","lastModifiedDate":"2024-04-15"},{"lineNumber":720,"author":{"gitId":"casaarlai"},"content":"rigorous testing to ensure that the intended behaviour is carried out correctly.","lastModifiedDate":"2024-04-15"},{"lineNumber":721,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":722,"author":{"gitId":"brennalaurentan"},"content":"#### Revamped Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":723,"author":{"gitId":"triciiaaa"},"content":"Revamping the UI was not as difficult as we already had a visual reference (Figma mockup) on how we envision the","lastModifiedDate":"2024-04-15"},{"lineNumber":724,"author":{"gitId":"triciiaaa"},"content":"application to look like. The main challenge was amending the various CSS files and formatting of the UI components","lastModifiedDate":"2024-04-15"},{"lineNumber":725,"author":{"gitId":"triciiaaa"},"content":"to ensure that the application looks as intended.","lastModifiedDate":"2024-04-15"},{"lineNumber":726,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":727,"author":{"gitId":"brennalaurentan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":728,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":729,"author":{"gitId":"brennalaurentan"},"content":"## **Appendix D: Possible Future Enhancements**","lastModifiedDate":"2024-04-15"},{"lineNumber":730,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":731,"author":{"gitId":"triciiaaa"},"content":"### Display more specific error messages","lastModifiedDate":"2024-04-10"},{"lineNumber":732,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":733,"author":{"gitId":"triciiaaa"},"content":"Currently, BandBook only displays generic error messages. This is not ideal as users will need to scrutinise their","lastModifiedDate":"2024-04-10"},{"lineNumber":734,"author":{"gitId":"triciiaaa"},"content":"input to figure out what is causing the error. In the future, we hope to enhance BandBook by displaying more specific","lastModifiedDate":"2024-04-10"},{"lineNumber":735,"author":{"gitId":"triciiaaa"},"content":"error messages to help users understand what went wrong, improving their speed and efficiency when using BandBook.","lastModifiedDate":"2024-04-10"},{"lineNumber":736,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":737,"author":{"gitId":"triciiaaa"},"content":"We can implement this enhancement by improving the respective command parsers to identify which part of the user input","lastModifiedDate":"2024-04-10"},{"lineNumber":738,"author":{"gitId":"triciiaaa"},"content":"is incorrect, and display an error message that is specific to that part to the user. For example, if the user enters","lastModifiedDate":"2024-04-10"},{"lineNumber":739,"author":{"gitId":"triciiaaa"},"content":"`assign 1 2 3 i/Flute` when there only exists 2 people in the list, BandBook can display an error message that says","lastModifiedDate":"2024-04-10"},{"lineNumber":740,"author":{"gitId":"triciiaaa"},"content":"the 3rd index entered is invalid. ","lastModifiedDate":"2024-04-10"},{"lineNumber":741,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":742,"author":{"gitId":"triciiaaa"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-10"},{"lineNumber":743,"author":{"gitId":"triciiaaa"},"content":"* Craft simple and clear sentences that include the specific aspect that causes the error.","lastModifiedDate":"2024-04-10"},{"lineNumber":744,"author":{"gitId":"triciiaaa"},"content":"  * **Pros**: Easy to implement.","lastModifiedDate":"2024-04-10"},{"lineNumber":745,"author":{"gitId":"triciiaaa"},"content":"  * **Cons**: Need to check to ensure the details in the error messages correspond to the actual errors.","lastModifiedDate":"2024-04-10"},{"lineNumber":746,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":747,"author":{"gitId":"triciiaaa"},"content":"### Implement stronger data validation for respective fields","lastModifiedDate":"2024-04-10"},{"lineNumber":748,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":749,"author":{"gitId":"triciiaaa"},"content":"Currently, BandBook only checks if the user input is in the correct format. However, it does not check if the data entered","lastModifiedDate":"2024-04-10"},{"lineNumber":750,"author":{"gitId":"triciiaaa"},"content":"is valid or not. This is not ideal as users may enter invalid data that may cause potential issues. In the future, we","lastModifiedDate":"2024-04-10"},{"lineNumber":751,"author":{"gitId":"triciiaaa"},"content":"intend to enhance BandBook by implementing stronger data validation for respective fields to ensure that only valid data","lastModifiedDate":"2024-04-10"},{"lineNumber":752,"author":{"gitId":"triciiaaa"},"content":"is entered into BandBook.","lastModifiedDate":"2024-04-10"},{"lineNumber":753,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":754,"author":{"gitId":"triciiaaa"},"content":"We can implement this enhancement by retrieving the valid values for various fields such as email domains and instruments","lastModifiedDate":"2024-04-10"},{"lineNumber":755,"author":{"gitId":"triciiaaa"},"content":"possibly through an API or a reference list and validating the user input against these values. If the user input does","lastModifiedDate":"2024-04-10"},{"lineNumber":756,"author":{"gitId":"triciiaaa"},"content":"not match any of the valid values, BandBook will display an error message to inform the user that the data entered is","lastModifiedDate":"2024-04-10"},{"lineNumber":757,"author":{"gitId":"triciiaaa"},"content":"invalid. For example, if the user enters an invalid string `xxx` for the instrument field, BandBook can display an error","lastModifiedDate":"2024-04-10"},{"lineNumber":758,"author":{"gitId":"triciiaaa"},"content":"message that says the instrument entered is invalid, and display the valid instruments that the user can choose from.","lastModifiedDate":"2024-04-10"},{"lineNumber":759,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":760,"author":{"gitId":"triciiaaa"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-10"},{"lineNumber":761,"author":{"gitId":"triciiaaa"},"content":"* Maintain a list of valid values for each field.","lastModifiedDate":"2024-04-10"},{"lineNumber":762,"author":{"gitId":"triciiaaa"},"content":"  * **Pros**: Eliminates the possibility of entering erroneous data.","lastModifiedDate":"2024-04-10"},{"lineNumber":763,"author":{"gitId":"triciiaaa"},"content":"  * **Cons**: Need to use an appropriate API, otherwise, need to update the list of valid values whenever there are changes.","lastModifiedDate":"2024-04-10"},{"lineNumber":764,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":765,"author":{"gitId":"brennalaurentan"},"content":"### Implement stronger check criterion for duplicate contacts","lastModifiedDate":"2024-04-15"},{"lineNumber":766,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":767,"author":{"gitId":"brennalaurentan"},"content":"Currently, BandBook only checks if the user is trying to add a duplicate contact based on the name field. This is not","lastModifiedDate":"2024-04-15"},{"lineNumber":768,"author":{"gitId":"brennalaurentan"},"content":"ideal as there can be multiple people with the same name. Additionally, other fields such as email and phone number","lastModifiedDate":"2024-04-15"},{"lineNumber":769,"author":{"gitId":"brennalaurentan"},"content":"should not be the same for contacts with different names. In the future, we hope to enhance BandBook by implementing","lastModifiedDate":"2024-04-15"},{"lineNumber":770,"author":{"gitId":"brennalaurentan"},"content":"a multi-field check criterion for duplicate contacts instead.","lastModifiedDate":"2024-04-15"},{"lineNumber":771,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":772,"author":{"gitId":"brennalaurentan"},"content":"We can implement this enhancement by checking if the user is trying to add a contact with the same name, email, and phone","lastModifiedDate":"2024-04-15"},{"lineNumber":773,"author":{"gitId":"brennalaurentan"},"content":"number as an existing contact. If this is the case, BandBook will display an error message to inform the user that the","lastModifiedDate":"2024-04-15"},{"lineNumber":774,"author":{"gitId":"brennalaurentan"},"content":"specified contact details are already in contact list. Otherwise, it will add the new contact to the contact list successfully.","lastModifiedDate":"2024-04-15"},{"lineNumber":775,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":776,"author":{"gitId":"brennalaurentan"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-15"},{"lineNumber":777,"author":{"gitId":"brennalaurentan"},"content":"* Use multi-field check criterion such as name, email, and phone number to check for duplicate contacts.","lastModifiedDate":"2024-04-15"},{"lineNumber":778,"author":{"gitId":"brennalaurentan"},"content":"  * **Pros**: More realistic and eliminates the possibility of adding duplicate contacts.","lastModifiedDate":"2024-04-15"},{"lineNumber":779,"author":{"gitId":"brennalaurentan"},"content":"  * **Cons**: Need to identify which field is incorrect and update the UI to display the error message accordingly.","lastModifiedDate":"2024-04-15"},{"lineNumber":780,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":781,"author":{"gitId":"triciiaaa"},"content":"### Allow each person to be assigned at least one to possibly multiple instruments","lastModifiedDate":"2024-04-10"},{"lineNumber":782,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":783,"author":{"gitId":"triciiaaa"},"content":"Currently, BandBook only allows each person to be assigned to one instrument. While the person need not be assigned an","lastModifiedDate":"2024-04-10"},{"lineNumber":784,"author":{"gitId":"triciiaaa"},"content":"instrument upon the addition of the contact details, it is compulsory for the person has to be assigned an instrument","lastModifiedDate":"2024-04-10"},{"lineNumber":785,"author":{"gitId":"triciiaaa"},"content":"for subsequent edits once he/she is assigned to the first instrument. This is not ideal as some people may be able to","lastModifiedDate":"2024-04-10"},{"lineNumber":786,"author":{"gitId":"triciiaaa"},"content":"play multiple instruments within the band while others may not be proficient enough to be assigned an instrument.","lastModifiedDate":"2024-04-10"},{"lineNumber":787,"author":{"gitId":"triciiaaa"},"content":"In the future, we hope to enhance BandBook by allowing each person to be assigned to at least one to possibly multiple","lastModifiedDate":"2024-04-10"},{"lineNumber":788,"author":{"gitId":"triciiaaa"},"content":"instruments.","lastModifiedDate":"2024-04-10"},{"lineNumber":789,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":790,"author":{"gitId":"triciiaaa"},"content":"We can implement this enhancement by modifying `Instrument` to be a set of strings instead of a single string. Similar","lastModifiedDate":"2024-04-10"},{"lineNumber":791,"author":{"gitId":"triciiaaa"},"content":"to `Tag`, this will allows users to store multiple instruments for each person using the command `edit 1 i/Flute i/Clarinet`.","lastModifiedDate":"2024-04-10"},{"lineNumber":792,"author":{"gitId":"triciiaaa"},"content":"Additionally, we can modify the `Instrument` field to be optional, allowing users to remove any instruments assigned by","lastModifiedDate":"2024-04-10"},{"lineNumber":793,"author":{"gitId":"triciiaaa"},"content":"using the command `edit 1 i/`.","lastModifiedDate":"2024-04-10"},{"lineNumber":794,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":795,"author":{"gitId":"triciiaaa"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-10"},{"lineNumber":796,"author":{"gitId":"triciiaaa"},"content":"* Change the `Instrument` field to be a set of strings.","lastModifiedDate":"2024-04-10"},{"lineNumber":797,"author":{"gitId":"triciiaaa"},"content":"  * **Pros**: Allows users to store multiple instruments for each person.","lastModifiedDate":"2024-04-10"},{"lineNumber":798,"author":{"gitId":"triciiaaa"},"content":"  * **Cons**: Need to update the UI to display multiple instruments for each person.","lastModifiedDate":"2024-04-10"},{"lineNumber":799,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":800,"author":{"gitId":"triciiaaa"},"content":"### Allow user to copy link to User Guide automatically upon entering help command","lastModifiedDate":"2024-04-10"},{"lineNumber":801,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":802,"author":{"gitId":"triciiaaa"},"content":"Currently, BandBook only displays the help window when the user enters the `help` command. Users will need to click on","lastModifiedDate":"2024-04-10"},{"lineNumber":803,"author":{"gitId":"triciiaaa"},"content":"the Copy Link button to retrieve the link to our User Guide. This is not ideal as BandBook is optimised for users who","lastModifiedDate":"2024-04-10"},{"lineNumber":804,"author":{"gitId":"triciiaaa"},"content":"are more proficient in using the Command Line Interface (CLI) and prefer typing to mouse interactions. In the future,","lastModifiedDate":"2024-04-10"},{"lineNumber":805,"author":{"gitId":"triciiaaa"},"content":"we hope to enhance BandBook by integrating automatic copying of the User Guide link to the user\u0027s clipboard upon","lastModifiedDate":"2024-04-10"},{"lineNumber":806,"author":{"gitId":"triciiaaa"},"content":"entering the `help` command.","lastModifiedDate":"2024-04-10"},{"lineNumber":807,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":808,"author":{"gitId":"triciiaaa"},"content":"We can implement this enhancement by modifying the `HelpCommand` to automatically copy the link to the User Guide","lastModifiedDate":"2024-04-10"},{"lineNumber":809,"author":{"gitId":"triciiaaa"},"content":"instead of displaying the help window. This will allow users to retrieve the link to the User Guide more efficiently.","lastModifiedDate":"2024-04-10"},{"lineNumber":810,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":811,"author":{"gitId":"triciiaaa"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-10"},{"lineNumber":812,"author":{"gitId":"triciiaaa"},"content":"* Integrate automatic copying of the link to clipboard.","lastModifiedDate":"2024-04-10"},{"lineNumber":813,"author":{"gitId":"brennalaurentan"},"content":"  * **Pros**: Easy to implement.","lastModifiedDate":"2024-04-15"},{"lineNumber":814,"author":{"gitId":"brennalaurentan"},"content":"  * **Cons**: None.","lastModifiedDate":"2024-04-15"},{"lineNumber":815,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":816,"author":{"gitId":"triciiaaa"},"content":"### Allow user to find person(s) by all other fields","lastModifiedDate":"2024-04-10"},{"lineNumber":817,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":818,"author":{"gitId":"triciiaaa"},"content":"Currently, BandBook only allows users to find person(s) by name and instrument. This is not ideal as users may want to","lastModifiedDate":"2024-04-10"},{"lineNumber":819,"author":{"gitId":"triciiaaa"},"content":"find person(s) by other fields (i.e. phone, email, address, matriculation year, birthday, tag, and attendance). In the","lastModifiedDate":"2024-04-10"},{"lineNumber":820,"author":{"gitId":"triciiaaa"},"content":"future, we hope to enhance BandBook by delivering the same implementation of finding person(s) by name and instrument","lastModifiedDate":"2024-04-10"},{"lineNumber":821,"author":{"gitId":"triciiaaa"},"content":"to other fields.","lastModifiedDate":"2024-04-10"},{"lineNumber":822,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":823,"author":{"gitId":"triciiaaa"},"content":"We can implement this enhancement by modifying the `FindCommand` to allow users to find person(s) by all other fields.","lastModifiedDate":"2024-04-10"},{"lineNumber":824,"author":{"gitId":"triciiaaa"},"content":"For example, users can find person(s) by tag using the command `find t/friend`, which returns all person(s) who are","lastModifiedDate":"2024-04-10"},{"lineNumber":825,"author":{"gitId":"triciiaaa"},"content":"given a \u0027friend\u0027 tag. ","lastModifiedDate":"2024-04-10"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":827,"author":{"gitId":"triciiaaa"},"content":"#### Design Consideration","lastModifiedDate":"2024-04-10"},{"lineNumber":828,"author":{"gitId":"triciiaaa"},"content":"* Extend the `FindCommand` to allow users to find person(s) by all other fields.","lastModifiedDate":"2024-04-10"},{"lineNumber":829,"author":{"gitId":"brennalaurentan"},"content":"  * **Pros**: Easy to implement.","lastModifiedDate":"2024-04-15"},{"lineNumber":830,"author":{"gitId":"brennalaurentan"},"content":"  * **Cons**: None.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"casaarlai":12,"triciiaaa":405,"-":308,"brennalaurentan":105}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"# BandBook User Guide","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"## Introduction \u0026 Product Information","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"**Welcome to BandBook: Your Ultimate Band Management Software!**","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"BandBook is your all-in-one software designed to streamline the management of band members\u0027 contact details and","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"attendance. It offers a user-friendly platform to **add, edit and delete members\u0027 contact information**,","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"along with optional fields such as **tag, birthday, matriculation year and instrument information**.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"Moreover, you can **assign instruments** to your members and **find your members by their name and/or instrument","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"assigned**. You may also **indicate and view the attendance history of your members**, ensuring that they stay on","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"track with the band\u0027s activities.","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"Optimised for use via a Command Line Interface (CLI), BandBook can assist you in managing your members\u0027 details","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"faster than traditional Graphical User Interface (GUI) apps.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"## Purpose of this user guide and how you should use it","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"The objective of this user guide is for you to learn how to use BandBook effectively and efficiently. We will guide","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"you through step-by-step (with examples!) on how to use BandBook\u0027s features, along with the various commands available","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"to you.","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"We suggest that you start by installing BandBook with the [Quick start](#quick-start) section. Afterwards go through","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"the [Features](#features) section top-down. This section details the most fundamental operations first, before","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"continuing with more advanced features that aim to provide a higher level of efficiency in your work. If you","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"continue to have questions about BandBook, do check out the [FAQ](#faq) section.","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"Or if you would like just a quick and easy-to-read summary of BandBook\u0027s commands, go over to","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"the [Command summary](#command-summary)!","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"To aid in your understanding of the features and commands of BandBook, we have also included examples as well as","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"screenshots of the program throughout the guide.","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"Come on board and unlock BandBook\u0027s full potential today!","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"## Target User","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"BandBook is specifically designed for administrators managing large musical ensembles, particularly bands consisting of","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"20 or more musicians. This includes band managers, music directors, and administrative personnel who are responsible for","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"coordinating schedules, managing communications, and overseeing logistical arrangements for their groups.","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"We assume that our primary users have a basic understanding of band operations and are familiar with the complexities","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"involved in managing large groups. Users are likely accustomed to utilising software solutions for organisational tasks","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"but may vary in their technical proficiency. Therefore, BandBook is engineered to be user-friendly, providing intuitive","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"navigation and comprehensive features that cater to both novice and experienced software users.","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"As our product is developed around the use of a CLI, we envision that our primary users are able to type and carry","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"operations faster than if they were to use a GUI.","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"## Quick Start","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"2. Download the latest `bandbook.jar` from [here](https://github.com/AY2324S2-CS2103T-T15-3/tp/releases).","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for BandBook.","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar bandbook.jar`","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"   command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"   \u003cbr\u003e A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"   \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"       \u003cimg src\u003d\"images/Ui.png\" width\u003d\"600\" height\u003d\"600\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"   \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"   \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"   open the help window.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to BandBook.","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"### Parameter Constraints","lastModifiedDate":"2024-04-09"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"#### NAME: `n/`","lastModifiedDate":"2024-04-09"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **name** of the person.","lastModifiedDate":"2024-04-09"},{"lineNumber":140,"author":{"gitId":"triciiaaa"},"content":"* Only accepts alphanumeric characters and spaces.","lastModifiedDate":"2024-04-09"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"* Non-alphanumeric symbols and characters are not allowed.","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"triciiaaa"},"content":"* Case sensitive, i.e. John Doe ≠ john doe.","lastModifiedDate":"2024-04-09"},{"lineNumber":143,"author":{"gitId":"brennalaurentan"},"content":"* No two persons can have the exact same name. It is recommended to enter full contact names to avoid this duplication error.","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"triciiaaa"},"content":"* Leading and trailing spaces are automatically removed.","lastModifiedDate":"2024-04-09"},{"lineNumber":145,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":146,"author":{"gitId":"triciiaaa"},"content":"#### PHONE_NUMBER: `p/`","lastModifiedDate":"2024-04-09"},{"lineNumber":147,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **phone number** of the person.","lastModifiedDate":"2024-04-09"},{"lineNumber":148,"author":{"gitId":"triciiaaa"},"content":"* Only accepts numbers.","lastModifiedDate":"2024-04-09"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"* Alphabets, symbols (+, #) and any other non-numeric characters are not allowed.","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"brennalaurentan"},"content":"* Must be at least 3 digits long with no spaces.","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"brennalaurentan"},"content":"* All valid phone number lengths (any country) are accepted, country code included.","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":153,"author":{"gitId":"triciiaaa"},"content":"#### EMAIL: `e/`","lastModifiedDate":"2024-04-09"},{"lineNumber":154,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **email** of the person.","lastModifiedDate":"2024-04-09"},{"lineNumber":155,"author":{"gitId":"triciiaaa"},"content":"* Must follow the format \u0027local-part@domain\u0027.","lastModifiedDate":"2024-04-09"},{"lineNumber":156,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"#### ADDRESS: `a/`","lastModifiedDate":"2024-04-09"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **address** of the person.","lastModifiedDate":"2024-04-09"},{"lineNumber":159,"author":{"gitId":"triciiaaa"},"content":"* Accepts any characters.","lastModifiedDate":"2024-04-09"},{"lineNumber":160,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":161,"author":{"gitId":"triciiaaa"},"content":"#### BIRTHDAY: `b/`","lastModifiedDate":"2024-04-09"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **birthday** of the person.","lastModifiedDate":"2024-04-09"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"* Must be a valid date in the format YYYY-MM-DD.","lastModifiedDate":"2024-04-09"},{"lineNumber":164,"author":{"gitId":"brennalaurentan"},"content":"* All dates from 0001-01-01 to the current date (inclusive) are accepted.","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":166,"author":{"gitId":"brennalaurentan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"#### MATRICULATION_YEAR: `my/`","lastModifiedDate":"2024-04-09"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **matriculation year** of the person.","lastModifiedDate":"2024-04-09"},{"lineNumber":170,"author":{"gitId":"brennalaurentan"},"content":"* Must be in the format YYYY.","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"brennalaurentan"},"content":"* All years from 0001 to the current year (inclusive) are accepted.","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":173,"author":{"gitId":"triciiaaa"},"content":"#### INSTRUMENT: `i/`","lastModifiedDate":"2024-04-09"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **instrument** assigned to the person.","lastModifiedDate":"2024-04-09"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"* Only accepts alphanumeric characters and spaces.","lastModifiedDate":"2024-04-09"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"* Stores only one instrument per person.","lastModifiedDate":"2024-04-09"},{"lineNumber":177,"author":{"gitId":"triciiaaa"},"content":"* Once a person has an instrument assigned, subsequent edits will require the instrument field to be filled.","lastModifiedDate":"2024-04-09"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":179,"author":{"gitId":"triciiaaa"},"content":"#### TAG: `t/`","lastModifiedDate":"2024-04-09"},{"lineNumber":180,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **tag(s)** used to categorise the person.","lastModifiedDate":"2024-04-09"},{"lineNumber":181,"author":{"gitId":"triciiaaa"},"content":"* Only accepts alphanumeric characters.","lastModifiedDate":"2024-04-09"},{"lineNumber":182,"author":{"gitId":"triciiaaa"},"content":"* Case sensitive, i.e. NUS ≠ nus.","lastModifiedDate":"2024-04-11"},{"lineNumber":183,"author":{"gitId":"triciiaaa"},"content":"* A person can have any number of tags (including 0).","lastModifiedDate":"2024-04-09"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"* Multiple tags can be specified. For example, `t/friend t/colleague`.","lastModifiedDate":"2024-04-09"},{"lineNumber":185,"author":{"gitId":"triciiaaa"},"content":"* Tags are coloured according to a hash function, which assigns the tag a colour among 5 colours in BandBook\u0027s colour palette.","lastModifiedDate":"2024-04-09"},{"lineNumber":186,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":187,"author":{"gitId":"triciiaaa"},"content":"#### DATE: `d/`","lastModifiedDate":"2024-04-09"},{"lineNumber":188,"author":{"gitId":"triciiaaa"},"content":"\u003e It refers to the **date** of attendance.","lastModifiedDate":"2024-04-09"},{"lineNumber":189,"author":{"gitId":"triciiaaa"},"content":"* Must be a valid date in the format YYYY-MM-DD.","lastModifiedDate":"2024-04-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"brennalaurentan"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Format: `help` ","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":199,"author":{"gitId":"triciiaaa"},"content":"\u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"triciiaaa"},"content":"   \u003cimg src\u003d\"images/helpMessage.png\" width\u003d\"650\" height\u003d\"80\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":201,"author":{"gitId":"triciiaaa"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":203,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"brennalaurentan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"triciiaaa"},"content":"Adds a person to BandBook.","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"brennalaurentan"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [b/BIRTHDAY] [my/MATRICULATION_YEAR] [i/INSTRUMENT] [t/TAG]…​`","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"triciiaaa"},"content":"**Tip:**\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":216,"author":{"gitId":"triciiaaa"},"content":"All parameter constraints listed above apply. Click [here](#parameter-constraints) for the list of parameter constraints.","lastModifiedDate":"2024-04-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`  ","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/addCommandInput1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/addCommandResult1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":231,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":233,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"triciiaaa"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Brown Street p/1234567 t/neighbour`","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e\u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/addCommandInput2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"triciiaaa"},"content":"  ","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/addCommandResult2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":246,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":248,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"triciiaaa"},"content":"* `add n/Sally Jane p/1234567 e/sallyjane@example.com a/Blk 123 Smith Street b/2001-02-02`","lastModifiedDate":"2024-04-11"},{"lineNumber":251,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e\u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/addCommandInput3.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":254,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":256,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/addCommandResult3.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"brennalaurentan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"triciiaaa"},"content":"Shows a list of all persons in BandBook.","lastModifiedDate":"2024-03-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"triciiaaa"},"content":"**Expected output**\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"triciiaaa"},"content":"\u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/listCommandResult.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"triciiaaa"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":276,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":277,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"triciiaaa"},"content":"Edits an existing person in BandBook.","lastModifiedDate":"2024-03-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"triciiaaa"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [my/MATRICULATION_YEAR] [i/INSTRUMENT] [t/TAG]…​`","lastModifiedDate":"2024-04-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"triciiaaa"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2024-04-09"},{"lineNumber":289,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":290,"author":{"gitId":"triciiaaa"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":291,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":292,"author":{"gitId":"triciiaaa"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":293,"author":{"gitId":"triciiaaa"},"content":"Command is only effective on the currently displayed list. Ensure that the index you have called is relative to the list that is currently displayed.","lastModifiedDate":"2024-04-11"},{"lineNumber":294,"author":{"gitId":"triciiaaa"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"brennalaurentan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"triciiaaa"},"content":"* `edit 7 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 7th person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-04-11"},{"lineNumber":300,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":301,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":302,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":303,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/editCommandInput1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":304,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":305,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":308,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/editCommandResult1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":309,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":311,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":314,"author":{"gitId":"triciiaaa"},"content":"* `edit 8 n/Betsy Crower t/` Edits the name of the 8th person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-04-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":316,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/editCommandInput2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":319,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":320,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/editCommandResult2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":324,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":327,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":328,"author":{"gitId":"casaarlai"},"content":"### Finding person(s) by name and/or instrument: `find`","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"triciiaaa"},"content":"Finds persons whose name and/or instrument fields contain any of the given keywords.","lastModifiedDate":"2024-04-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"triciiaaa"},"content":"Format: `find [n/KEYWORD [MORE_KEYWORDS]] [i/KEYWORD [MORE_KEYWORDS]]`","lastModifiedDate":"2024-04-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"triciiaaa"},"content":"* The contact detail field searched is based on the prefix provided.","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"casaarlai"},"content":"* If a search yields 0 results, no persons will be listed.","lastModifiedDate":"2024-04-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"triciiaaa"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"triciiaaa"},"content":"* `find n/alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2024-04-04"},{"lineNumber":345,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":346,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":347,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":348,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/findCommandInput1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":349,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":350,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":351,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":353,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":355,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/findCommandResult1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":356,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":357,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":358,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":360,"author":{"gitId":"triciiaaa"},"content":"* `find n/alex david i/flute` returns `Alex Yeoh`, `David Li` and other persons who play the flute.","lastModifiedDate":"2024-04-02"},{"lineNumber":361,"author":{"gitId":"triciiaaa"},"content":"* `find i/clarinet flute` returns all persons who play the clarinet or flute.","lastModifiedDate":"2024-04-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":364,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":365,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"triciiaaa"},"content":"Deletes the specified person from BandBook.","lastModifiedDate":"2024-03-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-10"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":377,"author":{"gitId":"triciiaaa"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":378,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":379,"author":{"gitId":"triciiaaa"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":380,"author":{"gitId":"triciiaaa"},"content":"Command is only effective on the currently displayed list. Ensure that the index you have called is relative to the list that is currently displayed.","lastModifiedDate":"2024-04-11"},{"lineNumber":381,"author":{"gitId":"triciiaaa"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"casaarlai"},"content":"* Entering `list`, followed by `delete 2` deletes the 2nd person in BandBook.","lastModifiedDate":"2024-04-09"},{"lineNumber":385,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":386,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/deleteCommandInput1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":393,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":394,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":395,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/deleteCommandResult1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":396,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":397,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":400,"author":{"gitId":"casaarlai"},"content":"* Entering `find n/Betsy`, followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2024-04-09"},{"lineNumber":401,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":402,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":403,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":404,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/deleteCommandInput2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":405,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":406,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":407,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":408,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":409,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":410,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":411,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/deleteCommandResult2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":412,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":415,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":416,"author":{"gitId":"casaarlai"},"content":"### Deleting person(s) by matriculation year: `delete my/[MATRICULATION_YEAR]`","lastModifiedDate":"2024-04-04"},{"lineNumber":417,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":418,"author":{"gitId":"casaarlai"},"content":"Deletes persons with the specified matriculation year from BandBook.","lastModifiedDate":"2024-04-04"},{"lineNumber":419,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":420,"author":{"gitId":"brennalaurentan"},"content":"Format: `delete my/[MATRICULATION_YEAR]`","lastModifiedDate":"2024-04-03"},{"lineNumber":421,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":422,"author":{"gitId":"triciiaaa"},"content":"* Deletes all persons who matriculated in year `MATRICULATION_YEAR`","lastModifiedDate":"2024-04-09"},{"lineNumber":423,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":424,"author":{"gitId":"triciiaaa"},"content":"Examples:","lastModifiedDate":"2024-04-11"},{"lineNumber":425,"author":{"gitId":"brennalaurentan"},"content":"* `delete my/2005` deletes all person(s) in BandBook who matriculated in 2005.","lastModifiedDate":"2024-04-03"},{"lineNumber":426,"author":{"gitId":"triciiaaa"},"content":"* `delete my/2009` deletes all person(s) in BandBook who matriculated in 2009.","lastModifiedDate":"2024-04-11"},{"lineNumber":427,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":428,"author":{"gitId":"brennalaurentan"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":429,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":430,"author":{"gitId":"casaarlai"},"content":"### Marking attendance of person(s): `att`","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":432,"author":{"gitId":"casaarlai"},"content":"Marks the attendance the specified person(s) in BandBook.","lastModifiedDate":"2024-04-04"},{"lineNumber":433,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":434,"author":{"gitId":"casaarlai"},"content":"Format: `att INDEX_1 [INDEX_2]... d/DATE`","lastModifiedDate":"2024-04-04"},{"lineNumber":435,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":436,"author":{"gitId":"casaarlai"},"content":"* Marks the attendance of the person at the specified `INDEX`. The index refer to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-04-04"},{"lineNumber":437,"author":{"gitId":"brennalaurentan"},"content":"* At least one index must be provided.","lastModifiedDate":"2024-04-03"},{"lineNumber":438,"author":{"gitId":"casaarlai"},"content":"* To specify multiple persons to mark an attendance for, specify each index with a space separating them apart.","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"casaarlai"},"content":"* Each index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":440,"author":{"gitId":"brennalaurentan"},"content":"* The person\u0027s contact will be updated with a tag containing the attendance date marked.","lastModifiedDate":"2024-04-03"},{"lineNumber":441,"author":{"gitId":"casaarlai"},"content":"* Duplicate entries of an attendance date for the same person are not supported.","lastModifiedDate":"2024-04-04"},{"lineNumber":442,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":443,"author":{"gitId":"triciiaaa"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":444,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":445,"author":{"gitId":"triciiaaa"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":446,"author":{"gitId":"triciiaaa"},"content":"Command is only effective on the currently displayed list. Ensure that the index you have called is relative to the list that is currently displayed.","lastModifiedDate":"2024-04-11"},{"lineNumber":447,"author":{"gitId":"triciiaaa"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":448,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":449,"author":{"gitId":"brennalaurentan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":450,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":451,"author":{"gitId":"triciiaaa"},"content":"Examples:","lastModifiedDate":"2024-04-11"},{"lineNumber":452,"author":{"gitId":"casaarlai"},"content":"* Entering `list`, followed by `att 1 2 d/2024-02-02` marks the attendance of the persons at the 1st and 2nd indexes of BandBook, on 2024-02-02.","lastModifiedDate":"2024-04-09"},{"lineNumber":453,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":454,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":455,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":456,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/attCommandInput1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":457,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":458,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":459,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":460,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":461,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/attCommandResult1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":462,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":463,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":464,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":465,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":466,"author":{"gitId":"triciiaaa"},"content":"* Entering `find n/David`, followed by `att 1 d/2024-02-02` marks the attendance of the person at the 1st index of the results of the `find` command, on 2024-02-02.","lastModifiedDate":"2024-04-11"},{"lineNumber":467,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":468,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":469,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":470,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/attCommandInput2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":471,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":472,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":474,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":475,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/attCommandResult2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":476,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":477,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":478,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":479,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":480,"author":{"gitId":"casaarlai"},"content":"### Unmarking attendance of person(s): `attd`","lastModifiedDate":"2024-04-04"},{"lineNumber":481,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":482,"author":{"gitId":"casaarlai"},"content":"Unmarks the attendance of the specified person(s) in BandBook.","lastModifiedDate":"2024-04-04"},{"lineNumber":483,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":484,"author":{"gitId":"casaarlai"},"content":"Format: `attd INDEX_1 [INDEX_2]... d/DATE`","lastModifiedDate":"2024-04-04"},{"lineNumber":485,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":486,"author":{"gitId":"brennalaurentan"},"content":"* Unmarks the attendance of the person(s) at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-10"},{"lineNumber":487,"author":{"gitId":"brennalaurentan"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-04-10"},{"lineNumber":488,"author":{"gitId":"brennalaurentan"},"content":"* At least one index must be provided.","lastModifiedDate":"2024-04-03"},{"lineNumber":489,"author":{"gitId":"casaarlai"},"content":"* To specify multiple persons to unmark an attendance for, specify each index with a space separating them apart.","lastModifiedDate":"2024-04-04"},{"lineNumber":490,"author":{"gitId":"brennalaurentan"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-03"},{"lineNumber":491,"author":{"gitId":"brennalaurentan"},"content":"* The person must have already been marked present on the attendance date provided.","lastModifiedDate":"2024-04-03"},{"lineNumber":492,"author":{"gitId":"brennalaurentan"},"content":"* The person\u0027s contact will be updated with the tag containing the date specified, removed.","lastModifiedDate":"2024-04-03"},{"lineNumber":493,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":494,"author":{"gitId":"triciiaaa"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":495,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":496,"author":{"gitId":"triciiaaa"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":497,"author":{"gitId":"triciiaaa"},"content":"Command is only effective on the currently displayed list. Ensure that the index you have called is relative to the list that is currently displayed.","lastModifiedDate":"2024-04-11"},{"lineNumber":498,"author":{"gitId":"triciiaaa"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":499,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":500,"author":{"gitId":"triciiaaa"},"content":"Examples:","lastModifiedDate":"2024-04-11"},{"lineNumber":501,"author":{"gitId":"casaarlai"},"content":"* Entering `list`, followed by `attd 1 2 d/2024-02-02` unmarks the attendance of the persons at the 1st and 2nd indexes of BandBook, on 2024-02-02.","lastModifiedDate":"2024-04-09"},{"lineNumber":502,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":503,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":504,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":505,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/attdCommandInput1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":506,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":507,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":508,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":509,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":510,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":511,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":512,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/attdCommandResult1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":513,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":514,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":515,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":516,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":517,"author":{"gitId":"triciiaaa"},"content":"* Entering `find n/David`, followed by `attd 1 d/2024-02-02` unmarks the attendance of the person at the 1st index of the results of the `find` command, on 2024-02-02.","lastModifiedDate":"2024-04-11"},{"lineNumber":518,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":519,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":520,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/attdCommandInput2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":522,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":524,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":525,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":526,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":527,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/attdCommandResult2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":530,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":531,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":532,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":533,"author":{"gitId":"casaarlai"},"content":"### Assigning an instrument to person(s): `assign`","lastModifiedDate":"2024-04-04"},{"lineNumber":534,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":535,"author":{"gitId":"casaarlai"},"content":"Assigns an instrument to an existing person(s) in BandBook.","lastModifiedDate":"2024-04-04"},{"lineNumber":536,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":537,"author":{"gitId":"casaarlai"},"content":"Format: `assign INDEX_1 [INDEX_2]... i/INSTRUMENT​`","lastModifiedDate":"2024-04-04"},{"lineNumber":538,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":539,"author":{"gitId":"brennalaurentan"},"content":"* Assigns an instrument to the person(s) at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-10"},{"lineNumber":540,"author":{"gitId":"brennalaurentan"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-10"},{"lineNumber":541,"author":{"gitId":"triciiaaa"},"content":"* At least one index must be provided.","lastModifiedDate":"2024-03-27"},{"lineNumber":542,"author":{"gitId":"casaarlai"},"content":"* To specify multiple persons to assign an instrument to, specify each index with a space separating them apart.","lastModifiedDate":"2024-04-04"},{"lineNumber":543,"author":{"gitId":"brennalaurentan"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-03"},{"lineNumber":544,"author":{"gitId":"triciiaaa"},"content":"* The instrument field will be updated with the input instrument which cannot be empty.","lastModifiedDate":"2024-04-09"},{"lineNumber":545,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":546,"author":{"gitId":"triciiaaa"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":547,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":548,"author":{"gitId":"triciiaaa"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":549,"author":{"gitId":"triciiaaa"},"content":"Command is only effective on the currently displayed list. Ensure that the index you have called is relative to the list that is currently displayed.","lastModifiedDate":"2024-04-11"},{"lineNumber":550,"author":{"gitId":"triciiaaa"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":551,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":552,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-27"},{"lineNumber":555,"author":{"gitId":"brennalaurentan"},"content":"* `assign 1 i/Flute` Assigns the 1st person with the Flute instrument.","lastModifiedDate":"2024-04-03"},{"lineNumber":556,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":557,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":558,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/assignCommandInput1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":560,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":561,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":562,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":563,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":564,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/assignCommandResult1.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":565,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":566,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":567,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":568,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":569,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":570,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":571,"author":{"gitId":"triciiaaa"},"content":"* `assign 2 3 i/Clarinet` Assigns the 2nd and 3rd person with the Clarinet instrument.","lastModifiedDate":"2024-04-11"},{"lineNumber":572,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":573,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Command input**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":574,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":575,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/assignCommandInput2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":576,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":578,"author":{"gitId":"triciiaaa"},"content":"  \u003cbr\u003e**Expected output**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"triciiaaa"},"content":"  \u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"brennalaurentan"},"content":"    \u003cimg src\u003d\"images/assignCommandResult2.png\" width\u003d\"565\" height\u003d\"450\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"triciiaaa"},"content":"  \u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":583,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":584,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":585,"author":{"gitId":"brennalaurentan"},"content":"  \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":587,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"triciiaaa"},"content":"Clears all entries from BandBook.","lastModifiedDate":"2024-03-15"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":594,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":595,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":602,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":603,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"triciiaaa"},"content":"BandBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-15"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":609,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":611,"author":{"gitId":"triciiaaa"},"content":"BandBook data is saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-13"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":613,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":615,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":616,"author":{"gitId":"triciiaaa"},"content":"If your changes to the data file makes its format invalid, BandBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":617,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":618,"author":{"gitId":"triciiaaa"},"content":"Furthermore, certain edits can cause the BandBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-15"},{"lineNumber":619,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":621,"author":{"gitId":"triciiaaa"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":622,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":623,"author":{"gitId":"brennalaurentan"},"content":"### View Rehearsal Schedule `[coming in v2.0]`","lastModifiedDate":"2024-04-03"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"brennalaurentan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":630,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":631,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2024-04-13"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"triciiaaa"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2024-04-11"},{"lineNumber":635,"author":{"gitId":"triciiaaa"},"content":"the data of your previous BandBook home folder.","lastModifiedDate":"2024-04-11"},{"lineNumber":636,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":637,"author":{"gitId":"triciiaaa"},"content":"**Q**: What is considered as duplicated data?\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":638,"author":{"gitId":"triciiaaa"},"content":"**A**: In our current implementation, two contacts with the exact same name (while being case sensitive) are considered","lastModifiedDate":"2024-04-11"},{"lineNumber":639,"author":{"gitId":"triciiaaa"},"content":"as duplicated data. As such, it is recommended to enter full contact names of band members to avoid this duplication","lastModifiedDate":"2024-04-11"},{"lineNumber":640,"author":{"gitId":"triciiaaa"},"content":"error.","lastModifiedDate":"2024-04-11"},{"lineNumber":641,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":642,"author":{"gitId":"triciiaaa"},"content":"**Q**: What values are considered valid for different fields?\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":643,"author":{"gitId":"triciiaaa"},"content":"**A**: Refer to the [Parameter Constraints](#parameter-constraints) section for the list of valid values for each field.","lastModifiedDate":"2024-04-11"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"triciiaaa"},"content":"## Known Issues","lastModifiedDate":"2024-04-13"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":649,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":650,"author":{"gitId":"brennalaurentan"},"content":"   \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":651,"author":{"gitId":"brennalaurentan"},"content":"2. **BandBook currently does not support users adding two contacts with the exact same name**. As such, it is recommended to enter full contact names to avoid running into this duplication error. Alternatively, modify the capitalisation of characters in the name to make them nonidentical (e.g `John Doe` \u0026 `john doe`).","lastModifiedDate":"2024-04-10"},{"lineNumber":652,"author":{"gitId":"brennalaurentan"},"content":"   \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":653,"author":{"gitId":"brennalaurentan"},"content":"3. **There is currently no data validation in place to verify that a contact\u0027s matriculation year comes after their birth year.** As such, do proceed with caution when entering data to ensure that it is entered accurately.  ","lastModifiedDate":"2024-04-10"},{"lineNumber":654,"author":{"gitId":"brennalaurentan"},"content":"   \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2024-04-10"},{"lineNumber":655,"author":{"gitId":"brennalaurentan"},"content":"   We are currently working to resolve the above-mentioned issues, and expect to have fixes rolled out in the coming iterations of BandBook. We seek your kind understanding, and thank you for your continued support as we work towards better meeting your band administrator needs!","lastModifiedDate":"2024-04-10"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":657,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":659,"author":{"gitId":"triciiaaa"},"content":"## Command Summary","lastModifiedDate":"2024-04-13"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":663,"author":{"gitId":"triciiaaa"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [b/BIRTHDAY] [i/INSTRUMENT] [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2024-03-27"},{"lineNumber":664,"author":{"gitId":"casaarlai"},"content":"**Assign**  | `assign INDEX_1 [INDEX_2]... i/INSTRUMENT` \u003cbr\u003e e.g. `assign 1 2 i/Flute`","lastModifiedDate":"2024-04-04"},{"lineNumber":665,"author":{"gitId":"casaarlai"},"content":"**Attendance: Mark**  | `att INDEX_1 [INDEX_2]... d/DATE_IN_YYYY-MM-DD` e.g. `att 1 2 d/ 2024-02-02`","lastModifiedDate":"2024-04-04"},{"lineNumber":666,"author":{"gitId":"casaarlai"},"content":"**Attendance: Unmark**  | `attd INDEX_1 [INDEX_2]... d/DATE_IN_YYYY-MM-DD` \u003cbr\u003e e.g., `attd 1 2 d/2024-02-02`","lastModifiedDate":"2024-04-04"},{"lineNumber":667,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"brennalaurentan"},"content":"**Delete by INDEX** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2024-04-03"},{"lineNumber":669,"author":{"gitId":"brennalaurentan"},"content":"**Delete by MATRICULATION YEAR** | `delete my/MATRICULATION_YEAR` \u003cbr\u003e e.g., `delete my/2005`","lastModifiedDate":"2024-04-03"},{"lineNumber":670,"author":{"gitId":"triciiaaa"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [i/INSTRUMENT] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-03-27"},{"lineNumber":671,"author":{"gitId":"brennalaurentan"},"content":"**Exit**   | `exit`","lastModifiedDate":"2024-04-03"},{"lineNumber":672,"author":{"gitId":"triciiaaa"},"content":"**Find**   | `find [n/KEYWORD [MORE_KEYWORDS]] [i/KEYWORD [MORE_KEYWORDS]]`\u003cbr\u003e e.g., `find n/James Jake i/flute clarinet`","lastModifiedDate":"2024-04-02"},{"lineNumber":673,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":676,"author":{"gitId":"brennalaurentan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":677,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":678,"author":{"gitId":"triciiaaa"},"content":"## Glossary","lastModifiedDate":"2024-04-13"},{"lineNumber":679,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":680,"author":{"gitId":"triciiaaa"},"content":"### CLI (Command Line Interface)","lastModifiedDate":"2024-04-13"},{"lineNumber":681,"author":{"gitId":"triciiaaa"},"content":"A text-based interface used to interact with software applications. Users input commands into the CLI to execute functions and operations.","lastModifiedDate":"2024-04-13"},{"lineNumber":682,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":683,"author":{"gitId":"triciiaaa"},"content":"### Command","lastModifiedDate":"2024-04-13"},{"lineNumber":684,"author":{"gitId":"triciiaaa"},"content":"A text input entered by the user into the command input box to instruct the software to perform a specific action.","lastModifiedDate":"2024-04-13"},{"lineNumber":685,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":686,"author":{"gitId":"triciiaaa"},"content":"### GUI (Graphical User Interface)","lastModifiedDate":"2024-04-13"},{"lineNumber":687,"author":{"gitId":"triciiaaa"},"content":"A visual interface that allows users to interact with software applications through graphical elements such as windows, buttons, and icons.","lastModifiedDate":"2024-04-13"},{"lineNumber":688,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":689,"author":{"gitId":"triciiaaa"},"content":"### JSON (JavaScript Object Notation)","lastModifiedDate":"2024-04-13"},{"lineNumber":690,"author":{"gitId":"triciiaaa"},"content":"A lightweight data-interchange format that is easy for humans to read and write and easy for machines to parse and generate.","lastModifiedDate":"2024-04-13"},{"lineNumber":691,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":692,"author":{"gitId":"triciiaaa"},"content":"### Parameter","lastModifiedDate":"2024-04-13"},{"lineNumber":693,"author":{"gitId":"triciiaaa"},"content":"A value that is passed to a command or function by the user.","lastModifiedDate":"2024-04-13"},{"lineNumber":694,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":695,"author":{"gitId":"triciiaaa"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-13"},{"lineNumber":696,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":697,"author":{"gitId":"triciiaaa"},"content":"## Acknowledgements","lastModifiedDate":"2024-04-04"},{"lineNumber":698,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":699,"author":{"gitId":"triciiaaa"},"content":"BandBook is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-04-04"},{"lineNumber":700,"author":{"gitId":"triciiaaa"},"content":"It is a project under the CS2103T module, School of Computing, National University of Singapore.","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"casaarlai":50,"triciiaaa":354,"-":175,"brennalaurentan":121}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eBandBook\u003c/a\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S2-CS2103T-T15-3/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"  * [Introduction \u0026 Product Information]({{ baseUrl }}/UserGuide.html#introduction-and-amp-product-information)","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"  * [Purpose of User Guide]({{ baseUrl }}/UserGuide.html#purpose-of-this-user-guide-and-how-you-should-use-it)","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"  * [Target User]({{ baseUrl }}/UserGuide.html#target-user)","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"  * [Known Issues]({{ baseUrl }}/UserGuide.html#known-issues)","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#command-summary)","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"  * [Glossary]({{ baseUrl }}/UserGuide.html#glossary)","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"  * [Acknowledgements]({{ baseUrl }}/UserGuide.html#acknowledgements)","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"  * [Appendix A: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-a-requirements)","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"  * [Appendix B: Instructions for Manual Testing]({{ baseUrl }}/DeveloperGuide.html#appendix-b-instructions-for-manual-testing)","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"  * [Appendix C: Effort]({{ baseUrl }}/DeveloperGuide.html#appendix-c-effort)","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"  * [Appendix D: Possible Future Enhancements]({{ baseUrl }}/DeveloperGuide.html#appendix-d-possible-future-enhancements)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"triciiaaa":12,"-":63}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"AddressBook *-down-\u003e \"1\" UniqueTagList","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"AddressBook *-down-\u003e \"1\" UniqueAttendanceList","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"UniqueAttendanceList -right-\u003e \"*\" Attendance","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"Person -up-\u003e \"*\" Attendance","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"Person *--\u003e Birthday","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"Person *--\u003e MatriculationYear","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"Person *--\u003e Instrument","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"casaarlai":5,"triciiaaa":3,"-":20}},{"path":"docs/diagrams/EditUser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"Participant \":Ui\" as ui UI_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"Participant \"logicManager:LogicManager\" as logicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"Participant \"addressBookParser:AddressBookParser\" as addressBookParser MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"Participant \":EditCommandParser\" as editCommandParser STORAGE_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"Participant \":EditCommand\" as editCommand UI_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"Participant \":CommandResult\" as commandResult LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"user -[USER_COLOR]\u003e ui : \"edit 1 b/2000-01-01\"","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"activate ui UI_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"ref over logicManager, ui : process user input","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"activate logicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"logicManager -[USER_COLOR]\u003e addressBookParser : parseCommand(\"edit 1 b/2000-01-01\")","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"activate addressBookParser MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"addressBookParser -[USER_COLOR]\u003e editCommandParser ** : EditCommandParser()","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"activate editCommandParser STORAGE_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"editCommandParser -[USER_COLOR]\u003e editCommandParser : parse(...)","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"activate editCommandParser STORAGE_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"editCommandParser -[USER_COLOR]\u003e editCommand ** : EditCommand(...)","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"activate editCommand UI_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"editCommand -[USER_COLOR]-\u003e editCommandParser : :EditCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"deactivate editCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"editCommandParser -[USER_COLOR]-\u003e editCommandParser : :EditCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"deactivate editCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"editCommandParser -[USER_COLOR]-\u003e addressBookParser : :EditCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"deactivate editCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"addressBookParser -[USER_COLOR]-\u003e logicManager : :EditCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"deactivate addressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"logicManager -[USER_COLOR]\u003e editCommand : execute(...)","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"activate editCommand UI_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"editCommand -[USER_COLOR]\u003e commandResult ** : CommandResult()","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"activate commandResult LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"commandResult -[USER_COLOR]-\u003e editCommand : :CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"deactivate commandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"editCommand -[USER_COLOR]-\u003e logicManager: :CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"deactivate editCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"ref over logicManager, ui : process command result","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"deactivate logicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"ui -[USER_COLOR]-\u003e user : \"Edited Person: ...\"","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"deactivate ui","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"triciiaaa":4,"brennalaurentan":57}},{"path":"docs/diagrams/MarkAttendance.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"!include style.puml","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"Participant \":Ui\" as ui UI_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"Participant \"logicManager:LogicManager\" as logicManager LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"Participant \"addressBookParser:AddressBookParser\" as addressBookParser MODEL_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"Participant \":AttendanceCommandParser\" as attendanceCommandParser STORAGE_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"Participant \":AttendanceCommand\" as attendanceCommand UI_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"Participant \":CommandResult\" as commandResult LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"user -[USER_COLOR]\u003e ui : \"att 1 2 d/2024-02-12\"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"activate ui UI_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"ref over logicManager, ui : process user input","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"activate logicManager LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"logicManager -[USER_COLOR]\u003e addressBookParser : parseCommand(\"att 1 2 d/2024-02-12\")","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"activate addressBookParser MODEL_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"addressBookParser -[USER_COLOR]\u003e attendanceCommandParser ** : AttendanceCommandParser()","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"activate attendanceCommandParser STORAGE_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"attendanceCommandParser -[USER_COLOR]\u003e attendanceCommandParser : parse(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"activate attendanceCommandParser STORAGE_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"attendanceCommandParser -[USER_COLOR]\u003e attendanceCommand ** : AttendanceCommand(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"activate attendanceCommand UI_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"attendanceCommand -[USER_COLOR]-\u003e attendanceCommandParser : :AttendanceCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"deactivate attendanceCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"attendanceCommandParser -[USER_COLOR]-\u003e attendanceCommandParser : :AttendanceCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"deactivate attendanceCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"attendanceCommandParser -[USER_COLOR]-\u003e addressBookParser : :AttendanceCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"deactivate attendanceCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"addressBookParser -[USER_COLOR]-\u003e logicManager : :AttendanceCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"deactivate addressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"logicManager -[USER_COLOR]\u003e attendanceCommand : execute(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"activate attendanceCommand UI_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"attendanceCommand -[USER_COLOR]\u003e commandResult ** : CommandResult()","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"activate commandResult LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"commandResult -[USER_COLOR]-\u003e attendanceCommand : :CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"deactivate commandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"attendanceCommand -[USER_COLOR]-\u003e logicManager: :CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"deactivate attendanceCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"ref over logicManager, ui : process command result","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"deactivate logicManager","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"ui -[USER_COLOR]-\u003e user : \"Edited Persons: [...]\"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"deactivate ui","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"casaarlai":61}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"Class Birthday","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"Class MatriculationYear","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"Class Instrument","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"Class Attendance","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"Person *--\u003e Birthday","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"Person *--\u003e MatriculationYear","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"Person *--\u003e Instrument","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"Person *--\u003e \"*\" Attendance","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"casaarlai":2,"triciiaaa":6,"-":54}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"# BandBook","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T15-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T15-3/tp/actions)","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T15-3/tp/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2324S2-CS2103T-T15-3/tp)","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"**BandBook is a desktop application for managing your contact details of band members and taking attendance**","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"during events and training sessions. While it has a GUI, most of the user interactions happen using a CLI","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"(Command Line Interface).","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"* If you are interested in using BandBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"* If you are interested about developing BandBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"triciiaaa":6,"-":15,"brennalaurentan":2}},{"path":"docs/team/triciiaaa.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"---","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"  layout: default.md","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"  title: \"Tricia Ang\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"---","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"### Project: BandBook","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"BandBook is a desktop band contact and attendance management application optimised for CLI users. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 5-6 kLoC.","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"* **Code Contributed**: [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003dt15-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtriciiaaa\u0026tabRepo\u003dAY2324S2-CS2103T-T15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"* **New Feature**: Added the ability to assign an instrument to a person.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"  * What it does: allows the band administrator to assign an instrument to one or more people in one command. ","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"  * Justification: This feature improves the product significantly because it allows the band administrator to easily manage the band members\u0027 instruments and coordinate performance rehearsals.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"  * Highlights: This enhancement also utilises the instrument field `i/` to assign instruments to people.","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"  * Credits: This feature was built upon the existing `edit` command.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"* **Enhancements to Existing Features**:","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"  * User Interface:","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    * Updated GUI styling and color scheme: [\\#32](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/32)","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"  * Logic:","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    * Updated `add` and `edit` command to account for the instrument field: [\\#46](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/46), [\\#58](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/58)","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    * Updated `find` command to allow the user to find people by name and/or instrument: [\\#51](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/51)","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"  * Tests:","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    * Updated existing test cases to account for the `add`, `edit` and `assign` feature: [\\#46](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/46), [\\#58](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/58)","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    * Updated existing test cases to account for the `find` features: [\\#51](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/51)","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"  * Java Documentation:","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    * Added JavaDoc for all relevant classes and methods in codebase: [\\#121](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/121)","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"* **Project Management**:","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"  * Set up the GitHub product website on MarkBind","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"  * Set up and maintained the GitHub milestone and issue trackers for [`v1.1`](https://github.com/AY2324S2-CS2103T-T15-3/tp/milestone/2), [`v1.2`](https://github.com/AY2324S2-CS2103T-T15-3/tp/milestone/1), [`v1.3`](https://github.com/AY2324S2-CS2103T-T15-3/tp/milestone/3), [`v1.3b`](https://github.com/AY2324S2-CS2103T-T15-3/tp/milestone/6), [`v1.4`](https://github.com/AY2324S2-CS2103T-T15-3/tp/milestone/4)","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"  * Managed release [`v1.3.1`](https://github.com/AY2324S2-CS2103T-T15-3/tp/releases/tag/v1.3.1) on GitHub with comprehensive release notes","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"* **Documentation**:","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"  * Product Website:","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"    * Maintained navigation bar links: [\\#119](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/119)","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"    * Created UI mockups for BandBook: [Figma link](https://www.figma.com/file/de7k6pNLjPLG218pgx1HpW/CS2103T-Ui-Mockup?type\u003ddesign\u0026node-id\u003d0%3A1\u0026mode\u003ddesign\u0026t\u003dxSVBcKEOFTByA8iO-1)","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"  * Index:","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"    * Updated project name references: [\\#47](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/47), [\\#53](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/53)","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"  * About Us:","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    * Updated team members\u0027 profile images, GitHub links, roles and responsibilities: [\\#11](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/11), [\\#18](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/18), [\\#53](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/53)","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"  * README","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"    * Updated latest information about the project: [\\#13](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/13), [\\#18](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/18), [\\#118](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/118)","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"  * User Guide:","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    * Updated project name references: [\\#30](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/30), [\\#46](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/46)","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"    * Updated Introduction section: [\\#65](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/65)","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"    * Updated documentation for the `add`, `edit` and `find` feature: [\\#46](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/46), [\\#53](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/53)","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"    * Updated FAQ section with more questions: [\\#116](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/116)","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"    * Added documentation for the `assign` feature: [\\#46](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/46)","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"    * Added Parameters Constraints section: [\\#103](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/103)","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"    * Added UI screenshots for various features: [\\#59](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/59), [\\#116](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/116)","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    * Added Glossary section: [\\#123](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/123)","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"    * Added Acknowledgement section: [\\#57](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/57)","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"  * Developer Guide:","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"    * Updated project name references: [\\#47](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/47)","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"    * Updated UML Diagrams: [\\#37](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/37), [\\#60](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/60)","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"    * Updated User Stories section: [\\#47](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/47)","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"    * Updated Use Cases section: [\\#47](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/47), [\\#60](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/60)","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    * Updated Non-Functional Requirements section: [\\#47](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/47)","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"    * Updated Glossary section: [\\#126](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/126)","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    * Updated Appendix B: Instructions for Manual Testing: [\\#60](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/60), [\\#126](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/126)","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"    * Added Implementation Details section for `assign` and `find` feature: [\\#110](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/110)","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"    * Added Appendix C: Possible Future Enhancements section: [\\#110](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/110), [\\#126](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/126)","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"* **Community**:","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#38](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/38), [\\#44](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/44), [\\#52](https://github.com/AY2324S2-CS2103T-T15-3/tp/pull/52)","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"triciiaaa":74}},{"path":"src/main/java/seedu/address/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     * @param parameters The application parameters.","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed application parameters in the form of an {@code AppParameters} object.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * Checks if both AppParameters have the same configPath.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the object is the same as other AppParameters object or both AppParameters have the same","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     *         configPath.","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"triciiaaa":10,"-":73}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":41,"brennalaurentan":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, false);","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing BandBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Storage object to read address book data from.","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"     * @param userPrefs UserPrefs object to use for the model.","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     * @return ModelManager object with the data from the address book and user prefs.","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"                        + \" populated with a sample BandBook.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"                    + \" Will be starting with an empty BandBook.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"     * @param configFilePath Path to the config file to use.","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"     * @return Config object using the specified config file.","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"     * @param storage UserPrefsStorage object to read user prefs data from.","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"     * @return UserPrefs object using the specified user prefs file.","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"casaarlai"},"content":"        logger.info(\"Starting BandBook \" + MainApp.VERSION);","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"casaarlai"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping BandBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"casaarlai":6,"triciiaaa":10,"-":180}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"triciiaaa":2,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":" * Represents the main LogicManager of the app.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @param model Model of the app.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Storage of the app.","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * Executes the command text and returns the result.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * @param commandText Command text to be executed.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @return Result of the command.","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"triciiaaa":12,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"    public static final String MESSAGE_DUPLICATE_INSTRUMENT \u003d \"This instrument has already been assigned to %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @param duplicatePrefixes The duplicate prefixes.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     * @return The error message in the form of a string.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     * @param person The person to be formatted.","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * @return The formatted string.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"                .append(\"; Birthday: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"                .append(person.getBirthday())","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"                .append(\"; Matriculation Year: \")","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"                .append(person.getMatriculationYear())","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"                .append(\"; Instrument: \")","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"                .append(person.getInstrument())","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":8,"-":51,"brennalaurentan":6}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY_DATE;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that adds a person to the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"            + \"[\" + PREFIX_BIRTHDAY_DATE + \"BIRTHDAY] \"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"            + \"[\" + PREFIX_MATRICULATION_YEAR + \"MATRICULATION_YEAR] \"","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"            + \"[\" + PREFIX_INSTRUMENT + \"INSTRUMENT] \"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"            + PREFIX_BIRTHDAY_DATE + \"2000-01-02 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"            + PREFIX_MATRICULATION_YEAR + \"2004 \"","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"            + PREFIX_INSTRUMENT + \"Flute \"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an AddCommand to add the specified person.","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     * @param person The person to add.","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     * Executes the AddCommand to add the specified person.","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result with the success message of specific person added.","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     * @throws CommandException If the person already exists in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the person to add is equal to the other person to add.","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare.","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the person to add is equal to the other person to add.","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the AddCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the AddCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"casaarlai":1,"triciiaaa":25,"-":82,"brennalaurentan":5}},{"path":"src/main/java/seedu/address/logic/commands/AttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that marks a person\u0027s attendance in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"public class AttendanceCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Indexes: %1$d, Date: %2$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"    public static final String COMMAND_WORD \u003d \"att\";","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"            + \": Adds the attendance date to the persons identified \"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"            + \"by the index numbers used in the last person listing. \\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"            + \"Parameters: INDEXES (must be positive integers separated by a whitespace) \"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"            + \"d/[DATE] (YYYY-MM-DD)\\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 \"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"            + \"d/2024-02-02\";","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_MARK_ATTENDANCE_SUCCESS \u003d \"Marked attendance for Persons: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_DUPLICATE_ATTENDANCE \u003d \"This attendance has already been marked for %1$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"    private final Set\u003cIndex\u003e indexes;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an AttendanceCommand to add the specified date to the persons identified by indexes.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * @param indexes Set of indexes of the persons to mark attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @param date Date of attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"    public AttendanceCommand(Set\u003cIndex\u003e indexes, LocalDate date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"        requireAllNonNull(indexes, date);","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * Executes the AttendanceCommand and marks the attendance of the persons identified by the indexes.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result that indicates the attendance has been marked successfully.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @throws CommandException If the index is invalid or the attendance has already been marked.","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"        Set\u003cName\u003e editedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"        for (Index index : this.indexes) {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"            requireNonNull(model);","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"            Attendance attendance \u003d new Attendance(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, attendance);","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"            editedNames.add(editedPerson.getName());","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"            if (personToEdit.getAttendances().contains(attendance)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"                throw new CommandException(String.format(MESSAGE_DUPLICATE_ATTENDANCE, personToEdit.getName()));","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"casaarlai"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"casaarlai"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_ATTENDANCE_SUCCESS, editedNames));","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     * Creates and returns a person with the updated attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"     * @param personToEdit The person to be edited with the updated attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"     * @param attendance The attendance to be added to the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"     * @return A person with the updated attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"casaarlai"},"content":"    private static Person createEditedPerson(Person personToEdit, Attendance attendance) {","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"casaarlai"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"casaarlai"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"casaarlai"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"casaarlai"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"casaarlai"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"        Birthday updatedBirthday \u003d personToEdit.getBirthday();","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear updatedMatriculationYear \u003d personToEdit.getMatriculationYear();","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"        Instrument updatedInstrument \u003d personToEdit.getInstrument();","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"casaarlai"},"content":"        Set\u003cAttendance\u003e updatedAttendances \u003d new HashSet\u003c\u003e(personToEdit.getAttendances());","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"        updatedAttendances.add(attendance);","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"                updatedBirthday, updatedMatriculationYear, updatedInstrument, updatedTags, updatedAttendances);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the AttendanceCommand is equal to another object.","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both AttendanceCommands have the same indexes and date.","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"casaarlai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"casaarlai"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"casaarlai"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"casaarlai"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"casaarlai"},"content":"        if (!(other instanceof AttendanceCommand)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"casaarlai"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"casaarlai"},"content":"        AttendanceCommand e \u003d (AttendanceCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"casaarlai"},"content":"        return indexes.equals(e.indexes)","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"casaarlai"},"content":"                \u0026\u0026 date.equals(e.date);","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"casaarlai":105,"triciiaaa":25,"brennalaurentan":11}},{"path":"src/main/java/seedu/address/logic/commands/AttendanceDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that unmarks a person\u0027s attendance in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"public class AttendanceDeleteCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Indexes: %1$d, Date: %2$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"    public static final String COMMAND_WORD \u003d \"attd\";","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"            + \": Deletes the attendance date for the persons identified \"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"            + \"by the index numbers used in the last person listing. \\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"            + \"Parameters: INDEXES (must be positive integers separated by a whitespace) \"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"            + \"d/[DATE] (YYYY-MM-DD)\\n\"","lastModifiedDate":"2024-04-09"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 \"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"            + \"d/2024-02-02\";","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_UNMARK_ATTENDANCE_SUCCESS \u003d \"Unmarked attendance for Persons: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_MISSING_ATTENDANCE \u003d \"This attendance is not marked for %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"    private final Set\u003cIndex\u003e indexes;","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an AttendanceDeleteCommand to remove the specified date from the persons identified by the indexes.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * @param indexes The indexes of the persons in the filtered person list to remove the attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @param date The date to remove from the persons\u0027 attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"    public AttendanceDeleteCommand(Set\u003cIndex\u003e indexes, LocalDate date) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"        requireAllNonNull(indexes, date);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * Executes the command to remove the specified date from the persons identified by the indexes.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result that indicates the attendance has been unmarked successfully.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @throws CommandException If the index is invalid or if the attendance date is missing.","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"        Set\u003cName\u003e editedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"        for (Index index : this.indexes) {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"            requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"casaarlai"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"casaarlai"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"            Attendance attendance \u003d new Attendance(date);","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, attendance);","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"            editedNames.add(editedPerson.getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"            if (!personToEdit.getAttendances().contains(attendance)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"                throw new CommandException(String.format(MESSAGE_MISSING_ATTENDANCE, personToEdit.getName()));","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"casaarlai"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"casaarlai"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_ATTENDANCE_SUCCESS, editedNames));","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     * Creates and returns a person with the updated attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"     * @param personToEdit The person to be edited with the updated attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"     * @param attendance The attendance to be removed to the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"     * @return A person with the updated attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"casaarlai"},"content":"    private static Person createEditedPerson(Person personToEdit, Attendance attendance) {","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"casaarlai"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"casaarlai"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"casaarlai"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"casaarlai"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"casaarlai"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"casaarlai"},"content":"        Birthday updatedBirthday \u003d personToEdit.getBirthday();","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear updatedMatriculationYear \u003d personToEdit.getMatriculationYear();","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"        Instrument updatedInstrument \u003d personToEdit.getInstrument();","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"casaarlai"},"content":"        Set\u003cAttendance\u003e updatedAttendances \u003d new HashSet\u003c\u003e(personToEdit.getAttendances());","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"        updatedAttendances.remove(attendance);","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"casaarlai"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"                updatedBirthday, updatedMatriculationYear, updatedInstrument, updatedTags, updatedAttendances);","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the AttendanceDeleteCommand is equal to another object.","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both AttendanceDeleteCommands have the same indexes and date.","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"casaarlai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"casaarlai"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"casaarlai"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"casaarlai"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"casaarlai"},"content":"        if (!(other instanceof AttendanceDeleteCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"casaarlai"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"casaarlai"},"content":"        AttendanceDeleteCommand e \u003d (AttendanceDeleteCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"casaarlai"},"content":"        return indexes.equals(e.indexes)","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"casaarlai"},"content":"                \u0026\u0026 date.equals(e.date);","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"casaarlai":113,"triciiaaa":25,"brennalaurentan":3}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that clears the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     * Executes the ClearCommand and clears the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result that indicates the address book has been cleared successfully.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":7,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     * @return Feedback message of the operation result for display.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a CommandResult with the specified fields.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * @param feedbackToUser Feedback to be shown to the user.","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @param showHelp Whether to show help information.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @param exit Whether the application should exit.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a CommandResult with the specified field and other fields set to their default value.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @param feedbackToUser Feedback to be shown to the user.","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the CommandResult is equal to another object.","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both CommandResults have the same feedback, showHelp and exit.","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"     * Returns the hash code of the CommandResult.","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     * @return Hash code of the CommandResult.","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the CommandResult.","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the CommandResult.","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":24,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that deletes a person identified using its displayed index from the address book. It is also","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":" * able to delete multiple persons identified by their matriculation year.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"            + \": Deletes the person identified by the index number or their matriculation year used in the \"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"            + \"displayed person list.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"            + \"Parameters: INDEX (must be a positive integer) or \"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"            + PREFIX_MATRICULATION_YEAR + \"MATRICULATION_YEAR \\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"            + \"Example: \" + COMMAND_WORD + \" my/2003 \\n\";","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_DELETE_PERSONS_SUCCESS \u003d \"Deleted Persons: %1$s\";","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"    private final MatriculationYear matriculationYear;","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a DeleteCommand to delete the person at the specified index.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * @param targetIndex The index of the person in the filtered person list to delete.","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"        this.matriculationYear \u003d new MatriculationYear(MatriculationYear.DEFAULT_MATRICULATION_YEAR);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a DeleteCommand to delete the persons with the specified matriculation year.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * @param year The matriculation year used to identify the persons to be deleted in the filtered person list.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"    public DeleteCommand(MatriculationYear year) {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"        this.matriculationYear \u003d year;","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * Executes the DeleteCommand to delete the person at the specified index or the persons with the specified","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * matriculation year.","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result that indicates that the person has been deleted successfully.","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @throws CommandException If the index is invalid or the matriculation year is not provided.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"        if (!this.matriculationYear.equals(new MatriculationYear(MatriculationYear.DEFAULT_MATRICULATION_YEAR))) {","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"            model.updateFilteredPersonList(person -\u003e person.getMatriculationYear().equals(this.matriculationYear));","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"            List\u003cPerson\u003e toDelete \u003d new ArrayList\u003c\u003e(model.getFilteredPersonList());","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"            StringBuilder deletedPersonsList \u003d new StringBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"            toDelete.forEach(personToDelete -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"                model.deletePerson(personToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"                deletedPersonsList.append(\"\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"                deletedPersonsList.append(Messages.format(personToDelete));","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"            });","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"            model.updateFilteredPersonList(person -\u003e true);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSONS_SUCCESS, deletedPersonsList));","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the DeleteCommand is equal to another object.","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both DeleteCommands have the same index.","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"        return targetIndex !\u003d null","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"casaarlai"},"content":"                ? targetIndex.equals(otherDeleteCommand.targetIndex)","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"                : matriculationYear.equals(otherDeleteCommand.matriculationYear);","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"     * Returns the string representation of the DeleteCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"     * @return The string representation of the DeleteCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"casaarlai":32,"triciiaaa":27,"-":63,"brennalaurentan":6}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY_DATE;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that edits the details of an existing person in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"            + \"[\" + PREFIX_BIRTHDAY_DATE + \"BIRTHDAY] \"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"            + \"[\" + PREFIX_MATRICULATION_YEAR + \"MATRICULATION YEAR] \"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"            + \"[\" + PREFIX_INSTRUMENT + \"INSTRUMENT] \"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an EditCommand to edit the person at the specified index and editPersonDescriptor.","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     * @param index Index of the person in the filtered person list to edit.","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"     * @param editPersonDescriptor Details to edit the person with.","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     * Executes the command to edit the details of the person at the specified index.","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result that indicates the person has been edited successfully.","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"     * @throws CommandException If the index is invalid or the person to edit already contains the same details.","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"     * Creates and returns a person with the updated details.","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"     * @param personToEdit The person to be edited with the updated details.","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"     * @param editPersonDescriptor The details to edit the person with.","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"     * @return A person with the updated details.","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear updatedMatriculationYear \u003d editPersonDescriptor.getMatriculationYear()","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"                .orElse(personToEdit.getMatriculationYear());","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"        Instrument updatedInstrument \u003d editPersonDescriptor.getInstrument().orElse(personToEdit.getInstrument());","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"casaarlai"},"content":"        Set\u003cAttendance\u003e updatedAttendances \u003d editPersonDescriptor.getAttendances().orElse(","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"casaarlai"},"content":"                personToEdit.getAttendances());","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"                updatedBirthday, updatedMatriculationYear, updatedInstrument, updatedTags, updatedAttendances);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the EditCommand is equal to another object.","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both EditCommands have the same index and editPersonDescriptor.","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the EditCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the EditCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"brennalaurentan"},"content":"        private Birthday birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"brennalaurentan"},"content":"        private MatriculationYear matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"triciiaaa"},"content":"        private Instrument instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"casaarlai"},"content":"        private Set\u003cAttendance\u003e attendances;","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":196,"author":{"gitId":"brennalaurentan"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"brennalaurentan"},"content":"            setMatriculationYear(toCopy.matriculationYear);","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"triciiaaa"},"content":"            setInstrument(toCopy.instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"casaarlai"},"content":"            setAttendances(toCopy.attendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"brennalaurentan"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, birthday, matriculationYear, instrument,","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"brennalaurentan"},"content":"                    tags);","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"brennalaurentan"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2024-03-20"},{"lineNumber":244,"author":{"gitId":"brennalaurentan"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":247,"author":{"gitId":"brennalaurentan"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"brennalaurentan"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"brennalaurentan"},"content":"        public void setMatriculationYear(MatriculationYear matriculationYear) {","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"brennalaurentan"},"content":"            this.matriculationYear \u003d matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":255,"author":{"gitId":"brennalaurentan"},"content":"        public Optional\u003cMatriculationYear\u003e getMatriculationYear() {","lastModifiedDate":"2024-03-27"},{"lineNumber":256,"author":{"gitId":"brennalaurentan"},"content":"            return Optional.ofNullable(matriculationYear);","lastModifiedDate":"2024-03-27"},{"lineNumber":257,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"triciiaaa"},"content":"        public void setInstrument(Instrument instrument) {","lastModifiedDate":"2024-03-27"},{"lineNumber":260,"author":{"gitId":"triciiaaa"},"content":"            this.instrument \u003d instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":263,"author":{"gitId":"triciiaaa"},"content":"        public Optional\u003cInstrument\u003e getInstrument() {","lastModifiedDate":"2024-03-27"},{"lineNumber":264,"author":{"gitId":"triciiaaa"},"content":"            return Optional.ofNullable(instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":265,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":266,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"casaarlai"},"content":"        /**","lastModifiedDate":"2024-03-16"},{"lineNumber":285,"author":{"gitId":"casaarlai"},"content":"         * Sets {@code attendances} to this object\u0027s {@code attendances}.","lastModifiedDate":"2024-03-16"},{"lineNumber":286,"author":{"gitId":"casaarlai"},"content":"         * A defensive copy of {@code attendances} is used internally.","lastModifiedDate":"2024-03-16"},{"lineNumber":287,"author":{"gitId":"casaarlai"},"content":"         */","lastModifiedDate":"2024-03-16"},{"lineNumber":288,"author":{"gitId":"casaarlai"},"content":"        public void setAttendances(Set\u003cAttendance\u003e attendances) {","lastModifiedDate":"2024-03-16"},{"lineNumber":289,"author":{"gitId":"casaarlai"},"content":"            this.attendances \u003d (attendances !\u003d null) ? new HashSet\u003c\u003e(attendances) : null;","lastModifiedDate":"2024-03-16"},{"lineNumber":290,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":291,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":292,"author":{"gitId":"casaarlai"},"content":"        /**","lastModifiedDate":"2024-03-16"},{"lineNumber":293,"author":{"gitId":"casaarlai"},"content":"         * Returns an unmodifiable attendance set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-16"},{"lineNumber":294,"author":{"gitId":"casaarlai"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-16"},{"lineNumber":295,"author":{"gitId":"casaarlai"},"content":"         * Returns {@code Optional#empty()} if {@code attendances} is null.","lastModifiedDate":"2024-03-16"},{"lineNumber":296,"author":{"gitId":"casaarlai"},"content":"         */","lastModifiedDate":"2024-03-16"},{"lineNumber":297,"author":{"gitId":"casaarlai"},"content":"        public Optional\u003cSet\u003cAttendance\u003e\u003e getAttendances() {","lastModifiedDate":"2024-03-16"},{"lineNumber":298,"author":{"gitId":"casaarlai"},"content":"            return (attendances !\u003d null) ? Optional.of(Collections.unmodifiableSet(attendances)) : Optional.empty();","lastModifiedDate":"2024-03-16"},{"lineNumber":299,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":300,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":317,"author":{"gitId":"brennalaurentan"},"content":"                    \u0026\u0026 Objects.equals(birthday, otherEditPersonDescriptor.birthday)","lastModifiedDate":"2024-03-20"},{"lineNumber":318,"author":{"gitId":"brennalaurentan"},"content":"                    \u0026\u0026 Objects.equals(matriculationYear, otherEditPersonDescriptor.matriculationYear)","lastModifiedDate":"2024-03-27"},{"lineNumber":319,"author":{"gitId":"triciiaaa"},"content":"                    \u0026\u0026 Objects.equals(instrument, otherEditPersonDescriptor.instrument)","lastModifiedDate":"2024-03-27"},{"lineNumber":320,"author":{"gitId":"casaarlai"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-16"},{"lineNumber":321,"author":{"gitId":"casaarlai"},"content":"                    \u0026\u0026 Objects.equals(attendances, otherEditPersonDescriptor.attendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":331,"author":{"gitId":"brennalaurentan"},"content":"                    .add(\"birthday\", birthday)","lastModifiedDate":"2024-03-20"},{"lineNumber":332,"author":{"gitId":"brennalaurentan"},"content":"                    .add(\"matriculation year\", matriculationYear)","lastModifiedDate":"2024-03-27"},{"lineNumber":333,"author":{"gitId":"triciiaaa"},"content":"                    .add(\"instrument\", instrument)","lastModifiedDate":"2024-03-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":335,"author":{"gitId":"casaarlai"},"content":"                    .add(\"attendances\", attendances)","lastModifiedDate":"2024-03-16"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"casaarlai":25,"triciiaaa":44,"-":234,"brennalaurentan":36}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that terminates the program.","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     * Executes the command that terminates the program.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result that the program has terminated successfully.","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"triciiaaa":7,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.InstrumentContainsKeywordsPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that finds and lists all persons in address book whose name and/or instrument contains any","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":" * of the argument keywords. Keyword matching is case-insensitive.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose specified contact detail \"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"            + \"field contains any of the specified keywords (case-insensitive) and displays them as a list with \"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"            + \"index numbers.\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"            + PREFIX_NAME + \"NAME_KEYWORD [MORE_KEYWORDS] and/or \"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"            + PREFIX_INSTRUMENT + \"INSTRUMENT_KEYWORD [MORE_KEYWORDS] \\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"alice bob charlie\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_INSTRUMENT + \"clarinet flute\\n\";;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    private final InstrumentContainsKeywordsPredicate instrumentPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a FindCommand to find persons with the specified name keywords and/or instrument keywords.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param namePredicate Keywords to filter persons by name.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @param instrumentPredicate Keywords to filter persons by instrument.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    public FindCommand(","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"            NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"            InstrumentContainsKeywordsPredicate instrumentPredicate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        this.instrumentPredicate \u003d instrumentPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     * Executes the command to find and list all persons in address book whose name and/or instrument contains","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     * any of the argument keywords.","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result with all persons whose name and/or instrument contains any of the argument keywords.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"        model.updateFilteredPersonList(namePredicate.or(instrumentPredicate));","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the FindCommand is equal to the other object.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the FindCommand is equal to the other object.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"        return namePredicate.equals(otherFindCommand.namePredicate)","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"                || instrumentPredicate.equals(otherFindCommand.instrumentPredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the FindCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the FindCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"                .add(\"namePredicate\", namePredicate)","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"                .add(\"instrumentPredicate\", instrumentPredicate)","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"triciiaaa":49,"-":46}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that fFormat full help instructions for every command for display.","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     * Executes the HelpCommand and display the help window.","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result with the success message of showing help window.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":7,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/InstrumentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that Assigns an instrument to a person in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"public class InstrumentCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Indexes: %1$d, Instrument: %2$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"            + \": Assigns an instrument to the persons identified \"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"            + \"by the index numbers used in the last person listing. \\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"            + \"Parameters: INDEXES (must be positive integers separated by a whitespace) \"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"            + \"i/[INSTRUMENT] (only alphanumeric characters)\\n\"","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 \"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"            + \"i/Flute\";","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Persons: %1$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"    private final Set\u003cIndex\u003e indexes;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"    private final Instrument instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an InstrumentCommand to add the specified instrument to the persons identified by the indexes.","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * @param indexes Set of indexes of the persons to be assigned the instrument.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     * @param instrument Instrument to be assigned to the persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    public InstrumentCommand(Set\u003cIndex\u003e indexes, Instrument instrument) {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"        requireAllNonNull(indexes, instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"        this.instrument \u003d instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * Executes the InstrumentCommand to assign the instrument to the persons identified by the indexes.","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result with the success message of instrument assigned.","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @throws CommandException If the index is invalid or the instrument is already assigned to the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"        Set\u003cName\u003e editedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"        for (Index index : this.indexes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"            requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"            editedNames.add(editedPerson.getName());","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"            if (personToEdit.getInstrument().equals(instrument)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_DUPLICATE_INSTRUMENT,","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"                        personToEdit.getName()));","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedNames));","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     * Creates and returns a person with the updated instrument.","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"     * @param personToEdit The person to be edited.","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"     * @param instrument The instrument to be assigned to the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"     * @return A person with the updated instrument.","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"    private static Person createEditedPerson(Person personToEdit, Instrument instrument) {","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"        Birthday updatedBirthday \u003d personToEdit.getBirthday();","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear updatedMatriculationYear \u003d personToEdit.getMatriculationYear();","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"        Instrument updatedInstrument \u003d instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"        Set\u003cAttendance\u003e updatedAttendances \u003d personToEdit.getAttendances();","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"                updatedBirthday, updatedMatriculationYear, updatedInstrument, updatedTags, updatedAttendances);","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the InstrumentCommand is equal to another object.","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both InstrumentCommands have the same indexes and instrument.","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"        if (!(other instanceof InstrumentCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"triciiaaa"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"        InstrumentCommand e \u003d (InstrumentCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"        return indexes.equals(e.indexes)","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"                \u0026\u0026 instrument.equals(e.instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"casaarlai":1,"triciiaaa":132,"brennalaurentan":6}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":" * Represents a command that lists all persons in the address book to the user.","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     * Executes the ListCommand and lists all persons in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * @param model The model which the command should operate on.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * @return A command result with the success message of listing all persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":7,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a CommandException with the specified message.","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message The message to be stored in the CommandException.","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a CommandException with the specified message and cause.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     * @param message The message to be stored in the CommandException.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * @param cause The cause of the CommandException.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"triciiaaa":9,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY_DATE;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":" * Represents a parser that parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * Parses the given string of arguments in the context of the AddCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @param args String of arguments to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     * @return AddCommand object for execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"                        PREFIX_ADDRESS, PREFIX_BIRTHDAY_DATE, PREFIX_MATRICULATION_YEAR, PREFIX_INSTRUMENT,","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"                PREFIX_ADDRESS, PREFIX_BIRTHDAY_DATE, PREFIX_MATRICULATION_YEAR, PREFIX_INSTRUMENT);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"        Birthday birthday \u003d ParserUtil.parseBirthday(argMultimap.getOptionalBirthday(PREFIX_BIRTHDAY_DATE).get());","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear matriculationYear \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"                ParserUtil.parseMatriculationYear(argMultimap","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"                        .getOptionalMatriculationYear(PREFIX_MATRICULATION_YEAR).get());","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"        Instrument instrument \u003d ParserUtil.parseInstrument(argMultimap.getOptionalInstrument(PREFIX_INSTRUMENT).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"casaarlai"},"content":"        Set\u003cAttendance\u003e attendances \u003d ParserUtil.parseAttendances(argMultimap.getAllValues(PREFIX_ATTENDANCE));","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"        Person person \u003d new Person(name, phone, email, address, birthday, matriculationYear, instrument, tagList,","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"                attendances);","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"     * Checks if none of the prefixes contains empty optional values in the given ArgumentMultimap.","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     * @param argumentMultimap ArgumentMultimap to be checked.","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"     * @param prefixes Prefixes to be checked.","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     * @return True if none of the prefixes contains empty optional values.","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"casaarlai":3,"triciiaaa":14,"-":53,"brennalaurentan":15}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.logic.commands.AttendanceCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.commands.AttendanceDeleteCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.logic.commands.InstrumentCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":" * Represents a parser that parses user input.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @param userInput Full user input string.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"        case AttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"            return new AttendanceCommandParser().parse(arguments);","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"casaarlai"},"content":"        case AttendanceDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"casaarlai"},"content":"            return new AttendanceDeleteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"        case InstrumentCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"            return new InstrumentCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"casaarlai":7,"triciiaaa":8,"-":82,"brennalaurentan":1}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.model.person.Birthday.DEFAULT_BIRTHDAY;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.model.person.Instrument.DEFAULT_INSTRUMENT;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.model.person.MatriculationYear.DEFAULT_MATRICULATION_YEAR;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     * Associates the specified argument value with prefix key in this map.","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated.","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @param argValue Argument value to be associated with the specified prefix key.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * Returns the last value of the given prefix. If the prefix does not exist or has no values, this will return an","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * empty {@code Optional}.","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @param prefix Prefix key with which the specified argument value is to be associated.","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     * Returns the last value  of the given prefix. If the prefix does not exist or has no values, this will return an","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     * {@code Optional} with the default birthday value.","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     * @param prefix Prefix key with which the specified argument value is to be associated.","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"    public Optional\u003cString\u003e getOptionalBirthday(Prefix prefix) {","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"        return values.isEmpty() ? Optional.of(DEFAULT_BIRTHDAY) : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * Returns the last value  of the given prefix. If the prefix does not exist or has no values, this will return an","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * {@code Optional} with the default matriculation year value.","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     * @param prefix Prefix key with which the specified argument value is to be associated.","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"    public Optional\u003cString\u003e getOptionalMatriculationYear(Prefix prefix) {","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"        return values.isEmpty() ? Optional.of(DEFAULT_MATRICULATION_YEAR)","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"                : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     * Returns the last value  of the given prefix. If the prefix does not exist or has no values, this will return an","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"     * {@code Optional} with the default instrument value.","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"     * @param prefix Prefix key with which the specified argument value is to be associated.","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"    public Optional\u003cString\u003e getOptionalInstrument(Prefix prefix) {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"        return values.isEmpty() ? Optional.of(DEFAULT_INSTRUMENT) : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"     * Returns all values of the given prefix.","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"     * @param prefix Prefix key with which the specified argument value is to be associated.","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     * @return List of values associated with the specified prefix key.","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"     * @return Preamble text.","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"     * Checks if there are any duplicate prefixes in the ArgumentMultimap.","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"     * @param prefixes Prefixes to check for duplicates.","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If there are duplicate prefixes.","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"triciiaaa":37,"-":72,"brennalaurentan":17}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * @param prefixes   Prefixes to find in the arguments string.","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @return           List of zero-based prefix positions in the given arguments string.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}.","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}.","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments.","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"     * Extracts the values of the arguments and trims the argument in the arguments string specified by the","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"     * given parameters.","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"     * @param argsString            Arguments string.","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"     * @param currentPrefixPosition Prefix position of the current argument whose value is to be extracted.","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"     * @param nextPrefixPosition    Prefix position of the next argument.","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"triciiaaa":15,"-":137}},{"path":"src/main/java/seedu/address/logic/parser/AttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_DATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.commands.AttendanceCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":" * Represents a parser that parses input arguments and creates a new AttendanceCommand object.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"public class AttendanceCommandParser implements Parser\u003cAttendanceCommand\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"     * Parses the given {@code String} of arguments in the context of the AttendanceCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"     * and returns a AttendanceCommand object for execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @param args String of arguments to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     * @return AttendanceCommand object for execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    public AttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"                PREFIX_ATTENDANCE_DATE);","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        Set\u003cIndex\u003e indexes;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"            indexes \u003d ParserUtil.parseIndexes(List.of(argMultimap.getPreamble().split(\" \")));","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"            LocalDate date \u003d LocalDate.parse(argMultimap.getValue(PREFIX_ATTENDANCE_DATE).orElse(\"\"),","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"            return new AttendanceCommand(indexes, date);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-04-09"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-09"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"                    AttendanceCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-04-09"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"                    AttendanceCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"casaarlai":47,"triciiaaa":5}},{"path":"src/main/java/seedu/address/logic/parser/AttendanceDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_DATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.commands.AttendanceDeleteCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":" * Parses input arguments and creates a new AttendanceDeleteCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"public class AttendanceDeleteCommandParser implements Parser\u003cAttendanceDeleteCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * Parses the given string of arguments in the context of the AttendanceDeleteCommand","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"     * and returns a AttendanceDeleteCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @param args String of arguments to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     * @return AttendanceDeleteCommand object for execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    public AttendanceDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"                PREFIX_ATTENDANCE_DATE);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        Set\u003cIndex\u003e indexes;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"            indexes \u003d ParserUtil.parseIndexes(List.of(argMultimap.getPreamble().split(\" \")));","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"            LocalDate date \u003d LocalDate.parse(argMultimap.getValue(PREFIX_ATTENDANCE_DATE).orElse(\"\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"            return new AttendanceDeleteCommand(indexes, date);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-04-09"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-09"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"                    AttendanceDeleteCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-04-09"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"                    AttendanceDeleteCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-04-09"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-04-09"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"casaarlai":47,"triciiaaa":5}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands.","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"    public static final Prefix PREFIX_ATTENDANCE \u003d new Prefix(\"att/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"    public static final Prefix PREFIX_ATTENDANCE_DELETE \u003d new Prefix(\"attd/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    public static final Prefix PREFIX_ATTENDANCE_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"    public static final Prefix PREFIX_BIRTHDAY_DATE \u003d new Prefix(\"b/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"    public static final Prefix PREFIX_MATRICULATION_YEAR \u003d new Prefix(\"my/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    public static final Prefix PREFIX_INSTRUMENT \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"casaarlai":3,"triciiaaa":2,"-":13,"brennalaurentan":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":" * Represents a parser that parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * @param args String of arguments to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * @return DeleteCommand object for execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MATRICULATION_YEAR);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"            MatriculationYear matriculationYear \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"                    ParserUtil.parseMatriculationYear(argMultimap","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"                            .getOptionalMatriculationYear(PREFIX_MATRICULATION_YEAR).get());","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"            if (!matriculationYear.equals(new MatriculationYear(MatriculationYear.DEFAULT_MATRICULATION_YEAR))) {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"                if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"                    throw new ParseException(\"User entered both the index and matriculation year!\");","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"                return new DeleteCommand(matriculationYear);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"            } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"casaarlai":15,"triciiaaa":5,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY_DATE;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":" * Represents a parser that parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param args String of arguments to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @return EditCommand object for execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"                        PREFIX_BIRTHDAY_DATE, PREFIX_MATRICULATION_YEAR, PREFIX_INSTRUMENT, PREFIX_TAG,","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"                        PREFIX_ATTENDANCE);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY_DATE).isPresent()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"                    argMultimap.getValue(PREFIX_BIRTHDAY_DATE).get())","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"            );","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"        if (argMultimap.getValue(PREFIX_MATRICULATION_YEAR).isPresent()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"            editPersonDescriptor.setMatriculationYear(ParserUtil.parseMatriculationYear(","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"                    argMultimap.getValue(PREFIX_MATRICULATION_YEAR).get()","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"            ));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"        if (argMultimap.getValue(PREFIX_INSTRUMENT).isPresent()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"            editPersonDescriptor.setInstrument(ParserUtil.parseInstrument(argMultimap","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"                    .getValue(PREFIX_INSTRUMENT).get()));","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"        parseAttendancesForEdit(argMultimap.getAllValues(PREFIX_ATTENDANCE))","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"casaarlai"},"content":"                .ifPresent(editPersonDescriptor::setAttendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"     * @param tags Collection of tags to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"     * @return Set of tags parsed from the input.","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the input does not conform to the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"casaarlai"},"content":"     * Parses {@code Collection\u003cString\u003e attendances} into a {@code Set\u003cAttendance\u003e} if {@code attendances} is non-empty.","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"casaarlai"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"casaarlai"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"     * @param attendances Collection of attendances to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"     * @return Set of attendances parsed from the input.","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the input does not conform to the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"casaarlai"},"content":"    private Optional\u003cSet\u003cAttendance\u003e\u003e parseAttendancesForEdit(Collection\u003cString\u003e attendances) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"casaarlai"},"content":"        assert attendances !\u003d null;","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"casaarlai"},"content":"        if (attendances.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"casaarlai"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"casaarlai"},"content":"        Collection\u003cString\u003e attendanceSet \u003d attendances.size() \u003d\u003d 1 \u0026\u0026 attendances.contains(\"\") ? Collections.emptySet()","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"casaarlai"},"content":"                : attendances;","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"casaarlai"},"content":"        return Optional.of(ParserUtil.parseAttendances(attendanceSet));","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"casaarlai":19,"triciiaaa":18,"-":81,"brennalaurentan":15}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.InstrumentContainsKeywordsPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":" * Represents a parser that parses input arguments and creates a new FindCommand object.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * @param args String of arguments to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @return FindCommand object for execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_INSTRUMENT);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"        String[] nameKeywords \u003d new String[0];","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"        String[] instrumentKeywords \u003d new String[0];","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_INSTRUMENT);","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INSTRUMENT)","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"            nameKeywords \u003d ParserUtil.parseFindString(argMultimap.getValue(PREFIX_NAME).get(), PREFIX_NAME);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"        if (argMultimap.getValue(PREFIX_INSTRUMENT).isPresent()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"            instrumentKeywords \u003d ParserUtil.parseFindString(","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"                    argMultimap.getValue(PREFIX_INSTRUMENT).get(), PREFIX_INSTRUMENT);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"        return new FindCommand(","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)),","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"                new InstrumentContainsKeywordsPredicate(Arrays.asList(instrumentKeywords)));","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the prefixes are present in the given ArgumentMultimap.","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * @param argumentMultimap ArgumentMultimap to be checked.","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     * @param prefixes Prefixes to be checked.","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @return True if at least one of the prefixes does not contain empty {@code Optional} values.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"triciiaaa":41,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/InstrumentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.logic.commands.InstrumentCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":" * Represents a parser that parses input arguments and creates a new InstrumentCommand object.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"public class InstrumentCommandParser implements Parser\u003cInstrumentCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * Parses the given {@code String} of arguments in the context of the InstrumentCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * and returns a InstrumentCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * @param args String of arguments to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @return InstrumentCommand object for execution.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    public InstrumentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"                PREFIX_INSTRUMENT);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"        Set\u003cIndex\u003e indexes;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"            indexes \u003d ParserUtil.parseIndexes(List.of(argMultimap.getPreamble().split(\" \")));","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"            String instrument \u003d argMultimap.getValue(PREFIX_INSTRUMENT).orElse(\"\");","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"            return new InstrumentCommand(indexes, new Instrument(instrument));","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"                    InstrumentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"                    InstrumentCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"casaarlai":6,"triciiaaa":43}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * @param userInput User input string.","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"triciiaaa":2,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    public static final String MESSAGE_INVALID_FIND_STRING \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"            \" should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    public static final String FIND_STRING_VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @param oneBasedIndex The string index to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed index in the form of an Index object.","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"     * Parses {@code indexes} into a {@code Set\u003cIndex\u003e} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"     * trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     * @param indexes The string of indexes to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed indexes in the form of a Set of Index objects.","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the specified indexes are invalid (not non-zero unsigned integer).","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"    public static Set\u003cIndex\u003e parseIndexes(Collection\u003cString\u003e indexes) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"        final Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"        for (String index : indexes) {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"            indexSet.add(parseIndex(index));","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"        return indexSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String name} into a {@code Name}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     * @param name The string name to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed name in the form of a Name object.","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code name} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String phone} into a {@code Phone}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     * @param phone The string phone number to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed phone number in the form of a Phone object.","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code phone} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String address} into an {@code Address}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"     * @param address The string address to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed address in the form of an Address object.","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code address} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String email} into an {@code Email}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"     * @param email The string email to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed email in the form of an Email object.","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code email} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String birthday} into an {@code Birthday}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"     * @param birthday The string birthday to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed birthday in the form of a Birthday object.","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code birthday} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"brennalaurentan"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"brennalaurentan"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"brennalaurentan"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"brennalaurentan"},"content":"        if (!Birthday.isValidBirthday(trimmedBirthday)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"brennalaurentan"},"content":"        return new Birthday(trimmedBirthday);","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String matriculationYear} into an {@code MatriculationYear}. Leading and trailing whitespaces","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"triciiaaa"},"content":"     * will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"triciiaaa"},"content":"     * @param matriculationYear The string matriculation year to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed matriculation year in the form of a MatriculationYear object.","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code matriculationYear} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"brennalaurentan"},"content":"    public static MatriculationYear parseMatriculationYear(String matriculationYear) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"brennalaurentan"},"content":"        requireNonNull(matriculationYear);","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"brennalaurentan"},"content":"        String trimmedMatriculationYear \u003d matriculationYear.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"brennalaurentan"},"content":"        if (!MatriculationYear.isValidMatriculationYear(trimmedMatriculationYear)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"brennalaurentan"},"content":"            throw new ParseException(MatriculationYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"brennalaurentan"},"content":"        return new MatriculationYear(trimmedMatriculationYear);","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String instrument} into an {@code Instrument}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"     * @param instrument The string instrument to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed instrument in the form of an Instrument object.","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code instrument} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"triciiaaa"},"content":"    public static Instrument parseInstrument(String instrument) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"triciiaaa"},"content":"        requireNonNull(instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"triciiaaa"},"content":"        String trimmedInstrument \u003d instrument.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"triciiaaa"},"content":"        if (!Instrument.isValidInstrument(trimmedInstrument)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"            throw new ParseException(Instrument.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"        return new Instrument(trimmedInstrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String tag} into a {@code Tag}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"triciiaaa"},"content":"     * @param tag The string tag to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":183,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed tag in the form of a Tag object.","lastModifiedDate":"2024-04-13"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code tag} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":197,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":198,"author":{"gitId":"triciiaaa"},"content":"     * @param tags The collection of tags to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":199,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed tags in the form of a Set of Tag objects.","lastModifiedDate":"2024-04-13"},{"lineNumber":200,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code tags} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":210,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String attendance} into an {@code Attendance}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-13"},{"lineNumber":213,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"triciiaaa"},"content":"     * @param attendance The string attendance to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":215,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed attendance in the form of an Attendance object.","lastModifiedDate":"2024-04-13"},{"lineNumber":216,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code attendance} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":217,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"casaarlai"},"content":"    public static Attendance parseAttendance(String attendance) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"casaarlai"},"content":"        requireNonNull(attendance);","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"casaarlai"},"content":"        String trimmedAttendance \u003d attendance.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":221,"author":{"gitId":"casaarlai"},"content":"        if (!Attendance.isValidAttendanceDate(trimmedAttendance)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":222,"author":{"gitId":"casaarlai"},"content":"            throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":223,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"casaarlai"},"content":"        return new Attendance(LocalDate.parse(trimmedAttendance));","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":227,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":228,"author":{"gitId":"casaarlai"},"content":"     * Parses {@code Collection\u003cString\u003e attendances} into a {@code Set\u003cAttendance\u003e}.","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":230,"author":{"gitId":"triciiaaa"},"content":"     * @param attendances The collection of attendances to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":231,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed attendances in the form of a Set of Attendance objects.","lastModifiedDate":"2024-04-13"},{"lineNumber":232,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException If the given {@code attendances} is invalid.","lastModifiedDate":"2024-04-13"},{"lineNumber":233,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"casaarlai"},"content":"    public static Set\u003cAttendance\u003e parseAttendances(Collection\u003cString\u003e attendances) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"casaarlai"},"content":"        requireNonNull(attendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":236,"author":{"gitId":"casaarlai"},"content":"        final Set\u003cAttendance\u003e attendanceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":237,"author":{"gitId":"casaarlai"},"content":"        for (String attendance : attendances) {","lastModifiedDate":"2024-03-16"},{"lineNumber":238,"author":{"gitId":"casaarlai"},"content":"            attendanceSet.add(parseAttendance(attendance));","lastModifiedDate":"2024-03-16"},{"lineNumber":239,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":240,"author":{"gitId":"casaarlai"},"content":"        return attendanceSet;","lastModifiedDate":"2024-03-16"},{"lineNumber":241,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"triciiaaa"},"content":"     * Parses a {@code String findString} into a {@code String[]} and ensures check validation.","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"triciiaaa"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"triciiaaa"},"content":"     * @param findString The string findString to be parsed.","lastModifiedDate":"2024-04-13"},{"lineNumber":248,"author":{"gitId":"triciiaaa"},"content":"     * @param prefix The prefix of the findString.","lastModifiedDate":"2024-04-13"},{"lineNumber":249,"author":{"gitId":"triciiaaa"},"content":"     * @return The parsed findString in the form of a String[].","lastModifiedDate":"2024-04-13"},{"lineNumber":250,"author":{"gitId":"triciiaaa"},"content":"     * @throws ParseException if the given {@code string} is invalid.","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"triciiaaa"},"content":"    public static String[] parseFindString(String findString, Prefix prefix) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"triciiaaa"},"content":"        requireNonNull(findString);","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"triciiaaa"},"content":"        String trimmedFindString \u003d findString.trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"triciiaaa"},"content":"        if (!trimmedFindString.matches(FIND_STRING_VALIDATION_REGEX)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"triciiaaa"},"content":"            throw new ParseException(prefix + MESSAGE_INVALID_FIND_STRING);","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"triciiaaa"},"content":"        return findString.split(\"\\\\s+\");","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"casaarlai":38,"triciiaaa":86,"-":112,"brennalaurentan":24}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a ParseException with the specified detail message.","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     * @param message The detail message to be stored in the ParseException.","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a ParseException with the specified detail message and cause.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * @param message The detail message to be stored in the ParseException.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @param cause The cause of the ParseException.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"triciiaaa":11,"-":17}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param toBeCopied ReadOnlyAddressBook object to be copied","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * @param persons List of persons to replace the current list.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"     * @param newData ReadOnlyAddressBook object to replace the current data.","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     * @param person Person to check for existence in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the person exists in the address book, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     * Adds a person to the address book. The person must not already exist in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"     * @param p Person to be added to the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"     * @param target Person to be replaced.","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     * @param editedPerson Person to replace the target.","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"     * @param key Person to be removed from the address book.","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"     * Checks if both address books have the same persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"     * @param other Other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both address books have the same persons, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"triciiaaa":26,"-":122}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this UserPrefs object.","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same UserPrefs object or has the same GUI settings and address book","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     *         file path.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"triciiaaa":7,"-":88}},{"path":"src/main/java/seedu/address/model/attendance/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":" * Represents an attendance entry in the address book.","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":" * Guarantees: immutable;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"public class Attendance {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Attendance entry should follow the format YYYY-MM-DD\";","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    public final LocalDate attendanceDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"     * Constructs a {@code Attendance}.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"     * @param attendanceDate A valid attendance date.","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    public Attendance(LocalDate attendanceDate) {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"        requireNonNull(attendanceDate);","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"        this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this Attendance object.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is an instance of Attendance and has the same attendance date.","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"        if (!(other instanceof Attendance)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"        Attendance otherAttendance \u003d (Attendance) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"        return attendanceDate.equals(otherAttendance.attendanceDate);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given string is a valid attendance date.","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid attendance date.","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"    public static boolean isValidAttendanceDate(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"        return attendanceDate.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Attendance object.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     * @return A string representation of the Attendance object.","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"        return \u0027[\u0027 + attendanceDate.toString() + \u0027]\u0027;","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"casaarlai":60,"triciiaaa":13}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given string is a valid address.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param test String to be tested.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid address.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this Address object.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same Address object or has the same address value.","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":10,"-":64}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.model.util.DateValidatorUtil.isValidDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.util.DateValidatorUtil;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":" * Represents a Person\u0027s birthday in the address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"public class Birthday {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"            \"Birthday should be today or prior in YYYY-MM-DD format\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"9999-01-01\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"    public final String value;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        checkArgument(isValidBirthday(birthday), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"        this.value \u003d birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"     * Returns true if a given string is a valid birthday.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @param test String to be tested.","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid birthday.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"    public static boolean isValidBirthday(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate dateEntered;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"            dateEntered \u003d LocalDate.parse(test, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"            boolean isToday \u003d DateValidatorUtil.isToday(dateEntered);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"            boolean isBeforeToday \u003d DateValidatorUtil.isBeforeToday(dateEntered);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"            boolean isDefaultBirthday \u003d test.equals(DEFAULT_BIRTHDAY);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"            return isValidDate(test) \u0026\u0026 (isToday || isBeforeToday || isDefaultBirthday);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"    public boolean hasNoInfo() {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"        return value.equals(DEFAULT_BIRTHDAY);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"        return value;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this Birthday object.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same Birthday object or has the same birthday value.","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"                || (other instanceof Birthday // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"                \u0026\u0026 value.equals(((Birthday) other).value)); // state check","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"triciiaaa":9,"brennalaurentan":71}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given string is a valid email.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * @param test String to test.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid email.","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this Email object.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same Email object or has the same email value.","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":11,"-":78}},{"path":"src/main/java/seedu/address/model/person/Instrument.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" * Represents a Person\u0027s assigned instrument in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"public class Instrument {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Instrument name should be alphanumeric\";","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"    public static final String DEFAULT_INSTRUMENT \u003d \"None\";","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    public final String value;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a {@code Instrument}.","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * @param instrument A valid instrument name.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    public Instrument(String instrument) {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"        requireNonNull(instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"        checkArgument(isValidInstrument(instrument), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"        this.value \u003d instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given string is a valid instrument.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid instrument.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    public static boolean isValidInstrument(String test) {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this Instrument object.","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same Instrument object or has the same instrument value.","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"        if (!(other instanceof Instrument)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"        Instrument otherInstrument \u003d (Instrument) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"        return value.equals(otherInstrument.value);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"    public boolean hasNoInfo() {","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"        return value.equals(DEFAULT_INSTRUMENT);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"        return value;","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"triciiaaa":70,"brennalaurentan":6}},{"path":"src/main/java/seedu/address/model/person/InstrumentContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":" * Tests that a {@code Person}\u0027s {@code Instrument} matches any of the keywords given.","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"public class InstrumentContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    public InstrumentContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * Tests that a {@code Person}\u0027s {@code Instrument} matches any of the keywords given.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * @param person The person to test.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the person\u0027s instrument matches any of the keywords given, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"        return keywords.stream()","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getInstrument().value, keyword));","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this InstrumentContainsKeywordsPredicate object.","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same InstrumentContainsKeywordsPredicate object or has the same","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     *         keywords.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"        if (!(other instanceof InstrumentContainsKeywordsPredicate)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        InstrumentContainsKeywordsPredicate otherInstrumentContainsKeywordsPredicate \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"                (InstrumentContainsKeywordsPredicate) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"        return keywords.equals(otherInstrumentContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"triciiaaa":58}},{"path":"src/main/java/seedu/address/model/person/MatriculationYear.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import java.time.Year;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":" * Represents a Person\u0027s matriculation year in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":" * Guarantees: immutable; is always valid (year is a string of a year that is on or before the current year)","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"public class MatriculationYear {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"            \"Matriculation year should be this year or prior in YYYY format\";","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"    public static final String DEFAULT_MATRICULATION_YEAR \u003d \"0000\";","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"    public final String value;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"     * Constructs a {@code MatriculationYear}.","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"     * @param matriculationYear A valid matriculation year.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"    public MatriculationYear(String matriculationYear) {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"        requireNonNull(matriculationYear);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"        checkArgument(isValidMatriculationYear(matriculationYear), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"        this.value \u003d matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"     * Returns true if a given string is a valid matriculation year.","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     * @param test String to test.","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid matriculation year.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"    public static boolean isValidMatriculationYear(String test) {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        boolean formatIsCorrect \u003d test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"        if (!formatIsCorrect) {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        Year thisYear \u003d Year.now();","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        Year yearEntered \u003d Year.parse(test);","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"        boolean yearIsValid \u003d (yearEntered.equals(thisYear)) || (yearEntered.isBefore(thisYear));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"        if (!yearIsValid) {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"        return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"    public boolean hasNoInfo() {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"        return value.equals(DEFAULT_MATRICULATION_YEAR);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"        return value;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this MatriculationYear object.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same MatriculationYear object or has the same matriculation year value.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"                || (other instanceof MatriculationYear // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"                \u0026\u0026 value.equals(((MatriculationYear) other).value)); // state check","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"triciiaaa":9,"brennalaurentan":69}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @param test String to be tested.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid name.","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this Name object.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same Name object or has the same name value.","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":9,"-":67}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * @param person The person to test.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the person\u0027s name matches any of the keywords given, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this NameContainsKeywordsPredicate object.","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same NameContainsKeywordsPredicate object or has the same","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     *         keywords.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"triciiaaa":13,"-":44}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"    private final Birthday birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"    private final MatriculationYear matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    private final Instrument instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    private final Set\u003cAttendance\u003e attendances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a {@code Person} with the specified details. Every field must be present and not null.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param name The name of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @param phone The phone number of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @param email The email address of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @param address The address of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     * @param birthday The birthday of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * @param matriculationYear The matriculation year of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     * @param instrument The instrument of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * @param tags The tags of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * @param attendances The attendances of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Birthday birthday,","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"                MatriculationYear matriculationYear, Instrument instrument, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"                Set\u003cAttendance\u003e attendances) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        requireAllNonNull(name, phone, email, address, birthday, instrument, tags, attendances);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"        this.matriculationYear \u003d matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"        this.instrument \u003d instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"        this.attendances.addAll(attendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"        return birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"    public boolean hasBirthdayInfo() {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"        return !birthday.hasNoInfo();","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"brennalaurentan"},"content":"    public MatriculationYear getMatriculationYear() {","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"brennalaurentan"},"content":"        return matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"    public boolean hasMatriculationYearInfo() {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"        return !matriculationYear.hasNoInfo();","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"    public Instrument getInstrument() {","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"        return instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"brennalaurentan"},"content":"    public boolean hasInstrumentInfo() {","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"brennalaurentan"},"content":"        return !instrument.hasNoInfo();","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"casaarlai"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"casaarlai"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"casaarlai"},"content":"    public Set\u003cAttendance\u003e getAttendances() {","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"        return Collections.unmodifiableSet(attendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"     * Checks if both persons have the same name. This defines a weaker notion of equality between two persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     * @param otherPerson The other person to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both persons have the same name.","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"     * Returns true if both persons have the same identity and data fields. This defines a stronger notion","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"     * of equality between two persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both persons have the same identity and data fields.","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"brennalaurentan"},"content":"                \u0026\u0026 birthday.equals(otherPerson.birthday)","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"brennalaurentan"},"content":"                \u0026\u0026 matriculationYear.equals(otherPerson.matriculationYear)","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"                \u0026\u0026 instrument.equals(otherPerson.instrument)","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"casaarlai"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"casaarlai"},"content":"                \u0026\u0026 attendances.equals(otherPerson.attendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"     * Returns the hash code of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"     * @return Hash code of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"brennalaurentan"},"content":"        return Objects.hash(name, phone, email, address, birthday, matriculationYear, instrument, tags, attendances);","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":177,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"brennalaurentan"},"content":"                .add(\"birthday\", birthday)","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"brennalaurentan"},"content":"                .add(\"matriculation year\", matriculationYear)","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"triciiaaa"},"content":"                .add(\"instrument\", instrument)","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"casaarlai"},"content":"                .add(\"attendances\", attendances)","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"casaarlai":14,"triciiaaa":39,"-":110,"brennalaurentan":31}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * @param test The string to test.","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid phone number.","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this Phone object.","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same Phone object or has the same phone number value.","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":10,"-":60}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the list contains an equivalent person as the given argument.","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @param toCheck Person to check.","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the list contains an equivalent person.","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * Adds a person to the list. The person must not already exist in the list.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     * @param toAdd Person to add.","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @throws DuplicatePersonException If the person already exists in the list.","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}. {@code target} must exist in the list.","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * @param target Person to replace.","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     * @param editedPerson Person to replace with.","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @throws PersonNotFoundException If the target person does not exist in the list.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"     * Removes the equivalent person from the list. The person must exist in the list.","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     * @param toRemove Person to remove.","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     * @throws PersonNotFoundException If the person does not exist in the list.","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     * Replaces the contents of this list with {@code persons}. {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     * @param replacement UniquePersonList to replace with.","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"     * Replaces the contents of this list with {@code persons}. {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"     * @param persons List of persons to replace with.","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"     * @throws DuplicatePersonException If the list contains duplicate persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"     * Checks if both UniquePersonList have the same internal list.","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"triciiaaa"},"content":"     * @param other Other object to compare.","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"     * @return True if both UniquePersonList have the same internal list.","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"     * @param persons List of persons to check.","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"     * @return True if {@code persons} contains only unique persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":35,"-":141}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     * @param test String to test.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the string is a valid tag name.","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * Checks if a given object is the same as this Tag object.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the other object is the same Tag object or has the same tag value.","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Tag object.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the Tag object.","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"triciiaaa":12,"-":61}},{"path":"src/main/java/seedu/address/model/util/DateValidatorUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":" * Utility class performing date-checking functions.","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"public class DateValidatorUtil {","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_JANUARY \u003d 1;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_FEBRUARY \u003d 2;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_MARCH \u003d 3;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_APRIL \u003d 4;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_MAY \u003d 5;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_JUNE \u003d 6;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_JULY \u003d 7;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_AUGUST \u003d 8;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_SEPTEMBER \u003d 9;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_OCTOBER \u003d 10;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_NOVEMBER \u003d 11;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"    public static final int MONTH_DECEMBER \u003d 12;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"     * Checks if the date entered is the same as the current date (today\u0027s date).","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * @param dateEntered Date provided by user.","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the date entered is the same as today\u0027s date, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"    public static boolean isToday(LocalDate dateEntered) {","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"        return dateEntered.isEqual(todayDate);","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the date entered is before the current date (before today\u0027s date).","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param dateEntered Date provided by user.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the date entered is before today\u0027s date, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"    public static boolean isBeforeToday(LocalDate dateEntered) {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"        return dateEntered.isBefore(todayDate);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"     * Checks if the date entered is a valid date according to the number of days each month should have.","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"     * Also checks for valid leap year.","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     * @param dateEntered Date provided by user.","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the date entered is valid, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"    public static boolean isValidDate(String dateEntered) {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"        String[] splitDate \u003d dateEntered.split(\"-\");","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"        int monthEntered \u003d Integer.parseInt(splitDate[1]);","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        int dayEntered \u003d Integer.parseInt(splitDate[2]);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"        if (monthEntered \u003d\u003d MONTH_FEBRUARY) { // 28 or 29 days max","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"            if (dayEntered \u003e 29) {","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"                return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"            } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"                // between 1 and 29 (inclusive)","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"                if (dayEntered \u003e 28 \u0026\u0026 !isValidLeapYear(dateEntered)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"                    return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"                }","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"        } else if (monthEntered \u003d\u003d MONTH_APRIL || monthEntered \u003d\u003d MONTH_JUNE || monthEntered \u003d\u003d MONTH_SEPTEMBER","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"                || monthEntered \u003d\u003d MONTH_NOVEMBER) { // 30 days max","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"            // 30 days max","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"            if (dayEntered \u003e 30) {","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"                return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"        return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"     * Checks if the date entered is the 29th of February.","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"     * @param dateEntered Date entered by user.","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the date entered is the 29th of February, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"    public static boolean isTwentyNineFeb(String dateEntered) {","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"        boolean isTwentyNineFeb \u003d false;","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"        String[] splitDate \u003d dateEntered.split(\"-\");","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"        int monthEntered \u003d Integer.parseInt(splitDate[1]);","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"brennalaurentan"},"content":"        int dayEntered \u003d Integer.parseInt(splitDate[2]);","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"brennalaurentan"},"content":"        if (dayEntered \u003d\u003d 29 \u0026\u0026 monthEntered \u003d\u003d 2) {","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"            return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"        return isTwentyNineFeb;","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"     * Checks if year is a leap year (is leap year if year is divisible by 4 with no remainder).","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     * @param dateEntered Date entered by user.","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the year entered is a leap year, false otherwise.","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"brennalaurentan"},"content":"    public static boolean isValidLeapYear(String dateEntered) {","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"brennalaurentan"},"content":"        boolean isValidLeapYear;","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"brennalaurentan"},"content":"        String[] splitDate \u003d dateEntered.split(\"-\");","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"brennalaurentan"},"content":"        int yearEntered \u003d Integer.parseInt(splitDate[0]);","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"brennalaurentan"},"content":"        if (yearEntered % 4 \u003d\u003d 0) {","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"brennalaurentan"},"content":"            isValidLeapYear \u003d true;","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"brennalaurentan"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"brennalaurentan"},"content":"            isValidLeapYear \u003d false;","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"        return isValidLeapYear;","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"triciiaaa":16,"brennalaurentan":93}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Birthday(\"2000-02-02\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"                    new MatriculationYear(\"2000\"), new Instrument(\"Flute\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"                    getTagSet(\"friends\"), getAttendanceSet()),","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Birthday(\"2000-02-02\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"                    new MatriculationYear(\"2001\"), new Instrument(\"Clarinet\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"                    getTagSet(\"colleagues\", \"friends\"), getAttendanceSet()),","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Birthday(\"2000-02-02\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"                    new MatriculationYear(\"2002\"), new Instrument(\"Saxophone\"), getTagSet(\"neighbours\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"                    getAttendanceSet()),","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Birthday(\"2000-02-02\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"                    new MatriculationYear(\"2003\"), new Instrument(\"Flute\"), getTagSet(\"family\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"                    getAttendanceSet()),","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Birthday(\"2000-02-02\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"                    new MatriculationYear(\"2004\"), new Instrument(\"Clarinet\"), getTagSet(\"classmates\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"                    getAttendanceSet()),","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Birthday(\"2000-02-02\"),","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"                    new MatriculationYear(\"2005\"), new Instrument(\"Saxophone\"), getTagSet(\"colleagues\"),","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"                    getAttendanceSet())","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"     * Returns an attendance set containing the list of strings given.","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"    public static Set\u003cAttendance\u003e getAttendanceSet(String... strings) {","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"                .map(LocalDate::parse)","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"                .map(Attendance::new)","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"casaarlai":11,"triciiaaa":1,"-":48,"brennalaurentan":26}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * @throws DataLoadingException If loading the data from storage failed.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param addressBook Cannot be null.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there was any problem writing to the file.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"triciiaaa":4,"-":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"class JsonAdaptedAttendance {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    private final String attendanceDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"     * Constructs a {@code JsonAdaptedAttendance} with the given {@code attendanceDate}.","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @param attendanceDate The date of the attendance.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    public JsonAdaptedAttendance(String attendanceDate) {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"        this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"     * Converts a given {@code Attendance} into this class for Jackson use.","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     * @param source The attendance object to be converted.","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    public JsonAdaptedAttendance(Attendance source) {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"        attendanceDate \u003d source.attendanceDate.toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"    @JsonValue","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"casaarlai"},"content":"    public String getAttendanceDate() {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"        return attendanceDate;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"     * Converts this Jackson-friendly adapted attendance object into the model\u0027s {@code Attendance} object.","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     * @return The converted Attendance object.","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted tag.","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"    public Attendance toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"        if (!Attendance.isValidAttendanceDate(attendanceDate)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"        return new Attendance(LocalDate.parse(attendanceDate));","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"casaarlai":51,"triciiaaa":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"    private final String birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"    private final String matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"    private final String instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"    private final List\u003cJsonAdaptedAttendance\u003e attendances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * @param name Name of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     * @param phone Phone number of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @param email Email of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     * @param address Address of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     * @param birthday Birthday of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * @param matriculationYear Matriculation year of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     * @param instrument Instrument of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * @param tags Tags of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @param attendances Attendances of the person.","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"                             @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"                             @JsonProperty(\"matriculationYear\") String matriculationYear,","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"                             @JsonProperty(\"instrument\") String instrument,","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"                             @JsonProperty(\"attendances\") List\u003cJsonAdaptedAttendance\u003e attendances) {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"        this.matriculationYear \u003d matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"        this.instrument \u003d instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"        if (attendances !\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"            this.attendances.addAll(attendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"     * @param source Person object to be converted.","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"        birthday \u003d source.getBirthday().value;","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"        matriculationYear \u003d source.getMatriculationYear().value;","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"        instrument \u003d source.getInstrument().value;","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"        attendances.addAll(source.getAttendances().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"casaarlai"},"content":"                .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"     * @return Person object converted from this adapted person object.","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted person.","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"casaarlai"},"content":"        final List\u003cAttendance\u003e personAttendances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"casaarlai"},"content":"        for (JsonAdaptedAttendance attendance : attendances) {","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"            personAttendances.add(attendance.toModelType());","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"brennalaurentan"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"brennalaurentan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"                    Birthday.class.getSimpleName()));","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"brennalaurentan"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"brennalaurentan"},"content":"        if (matriculationYear \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"brennalaurentan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"brennalaurentan"},"content":"                    MatriculationYear.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"brennalaurentan"},"content":"        if (!MatriculationYear.isValidMatriculationYear(matriculationYear)) {","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"brennalaurentan"},"content":"            throw new IllegalValueException(MatriculationYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"brennalaurentan"},"content":"        final MatriculationYear modelMatriculationYear \u003d new MatriculationYear(matriculationYear);","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"        if (instrument \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"                    Instrument.class.getSimpleName()));","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"        if (!Instrument.isValidInstrument(instrument)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"triciiaaa"},"content":"            throw new IllegalValueException(Instrument.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"triciiaaa"},"content":"        final Instrument modelInstrument \u003d new Instrument(instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"casaarlai"},"content":"        final Set\u003cAttendance\u003e modelAttendances \u003d new HashSet\u003c\u003e(personAttendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"brennalaurentan"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelBirthday,","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"brennalaurentan"},"content":"                modelMatriculationYear, modelInstrument, modelTags, modelAttendances);","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"casaarlai":16,"triciiaaa":32,"-":106,"brennalaurentan":27}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     * @param tagName The name of the tag.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     * @param source The tag to be converted.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * @return The converted Tag object.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted tag.","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"triciiaaa":6,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * @throws DataLoadingException If loading the data from storage failed.","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     * Saves the given ReadOnlyAddressBook to the storage.","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @param addressBook Cannot be null.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If saving the data to storage failed.","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"     * @param addressBook Cannot be null.","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If saving the data to storage failed.","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"triciiaaa":10,"-":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     * @param persons List of persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @param source Future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     * @return AddressBook object.","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * @throws IllegalValueException If there were any data constraints violated.","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"triciiaaa":5,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param prefsFilePath Location of the data. Cannot be null.","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @throws DataLoadingException If the file format is not as expected.","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"triciiaaa":3,"-":45}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @param addressBookStorage {@code AddressBookStorage} object.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @param userPrefsStorage {@code UserPrefsStorage} object.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"triciiaaa":4,"-":77}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * Returns UserPrefs data from storage. Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * @throws DataLoadingException If the loading of data from preference file failed.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     * @param userPrefs Cannot be null.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there was any problem writing to the file.","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"triciiaaa":5,"-":31}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @param commandExecutor CommandExecutor to execute the command.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"triciiaaa":2,"-":85}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t15-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"triciiaaa":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     * @param primaryStage The stage to use as the primary stage for the window.","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     * @param logic The logic to use for handling user commands.","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     * @param menuItem The MenuItem to set the accelerator for.","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"     * @param keyCombination The KeyCombination value of the accelerator.","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"     * @param guiSettings The {@code GuiSettings} to use to set the window size.","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"triciiaaa":8,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    private static final Map\u003cInteger, String\u003e tagMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"    @FXML","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"    private Label remark;","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"    private Label birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"    private Label matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    private Label instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"    private FlowPane attendances;","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     * @param person The person to display.","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @param displayedIndex The index of the person to display.","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"        id.setText(displayedIndex + \"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"        birthday.setText(person.hasBirthdayInfo()","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"casaarlai"},"content":"                ? person.getBirthday().value","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"                : \"No birthday information.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"        matriculationYear.setText(person.hasMatriculationYearInfo()","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"                ? \"Matriculated in: \" + person.getMatriculationYear().value","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"                : \"No matriculation year information.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"        instrument.setText(person.hasInstrumentInfo()","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"                ? person.getInstrument().value","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"                : \"No instrument information.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"                    Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"                    label.getStyleClass().add(getStyleClassForTag(tag.tagName));","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"                    tags.getChildren().add(label);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"                });","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"casaarlai"},"content":"        person.getAttendances().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"casaarlai"},"content":"                .sorted(Comparator.comparing(attendance -\u003e attendance.attendanceDate))","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"casaarlai"},"content":"                .forEach(attendance -\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"casaarlai"},"content":"                    String formattedDate \u003d attendance.attendanceDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"casaarlai"},"content":"                    attendances.getChildren().add(new Label(formattedDate));","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"casaarlai"},"content":"                });","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"    // set a custom tag list to follow style class","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"    static {","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"        tagMap.put(0, \"tag1\");","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"        tagMap.put(1, \"tag2\");","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"        tagMap.put(2, \"tag3\");","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"        tagMap.put(3, \"tag4\");","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"        tagMap.put(4, \"tag5\");","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"     * Retrieves and returns the tag name for custom tag colour.","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"     * @param tagName The name of the tag assigned to the Person.","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the hashed tag.","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"    private String getStyleClassForTag(String tagName) {","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"        int hash \u003d Math.abs(tagName.hashCode()) % 5;","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"        return tagMap.get(hash);","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"casaarlai":10,"triciiaaa":34,"-":56,"brennalaurentan":15}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @param personList List of persons to display.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"triciiaaa":3,"-":48}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":" * A UI for the status bar that is displayed at the header of the application.","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a {@code ResultDisplay} with the given {@code result}.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"triciiaaa":4,"-":27}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":" * A UI for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @param saveLocation The save location of the data file.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"triciiaaa":4,"-":26}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/bandbook_single_logo.png\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     * @param logic The logic of the application.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     * @param owner The owner stage of the alert dialog.","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     * @param type The type of the alert dialog.","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     * @param title The title of the alert dialog.","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     * @param headerText The header text of the alert dialog.","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"     * @param contentText The content text of the alert dialog.","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"     * @param title The title of the alert dialog.","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"     * @param e The exception to be shown in the alert dialog.","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"triciiaaa":13,"-":86}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @param fxmlFileUrl URL of the FXML file.","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     * @param fxmlFileUrl URL of the FXML file.","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @return Root object of the scene graph.","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"     * @param fxmlFileName FXML file name.","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"triciiaaa":12,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"@font-face {","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"    font-family: \"Product Sans Light\";","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"    src: url(\"../fonts/Product-Sans-Light.ttf\");","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"@font-face {","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"    font-family: \"Product Sans\";","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"    src: url(\"../fonts/Product-Sans-Regular.ttf\");","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"@font-face {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"    font-family: \"Product Sans Medium\";","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"    src: url(\"../fonts/Product-Sans-Medium.ttf\");","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    background-color: white; /* Used in the default.html file */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans Medium\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans Medium\";","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans\";","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans\";","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"    -fx-base: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    -fx-control-inner-background: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans Light\";","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #F8F8F8;","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #F9FDFF;","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-color: #89C1DD;","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans Medium\";","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans\";","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"     -fx-background-color: #F8F8F8;","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"     -fx-background-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":156,"author":{"gitId":"triciiaaa"},"content":"     -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"     -fx-border-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #ECF7FF;","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #ECF7FF;","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans Light\";","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans Light\";","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":200,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #F8F8F8;","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans Light\";","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"triciiaaa"},"content":".menu:hover,","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"triciiaaa"},"content":".menu:pressed,","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"triciiaaa"},"content":".menu:selected {","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #C7C7C7;","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"triciiaaa"},"content":".menu-item:hover,","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"triciiaaa"},"content":".menu-item:pressed,","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"triciiaaa"},"content":".menu-item:selected {","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #C7C7C7;","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":249,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2024-03-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"triciiaaa"},"content":"  -fx-text-fill: #F8F8F8;","lastModifiedDate":"2024-03-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #C7C7C7;","lastModifiedDate":"2024-03-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #595959;","lastModifiedDate":"2024-03-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: transparent white transparent white;","lastModifiedDate":"2024-03-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans\";","lastModifiedDate":"2024-03-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: #595959;","lastModifiedDate":"2024-03-18"},{"lineNumber":354,"author":{"gitId":"triciiaaa"},"content":"    -fx-padding: 15 15 15 15; /* top, right, bottom, left */","lastModifiedDate":"2024-03-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":358,"author":{"gitId":"triciiaaa"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2024-03-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #ECF7FF;","lastModifiedDate":"2024-03-18"},{"lineNumber":363,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"triciiaaa"},"content":".tag1 { /*green*/","lastModifiedDate":"2024-03-18"},{"lineNumber":372,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: #52723E;","lastModifiedDate":"2024-03-18"},{"lineNumber":373,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #E7F4DF;","lastModifiedDate":"2024-03-18"},{"lineNumber":374,"author":{"gitId":"triciiaaa"},"content":"    -fx-padding: 3 10 3 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":375,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":376,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":377,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-18"},{"lineNumber":378,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":379,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":380,"author":{"gitId":"triciiaaa"},"content":".tag2 { /*purple*/","lastModifiedDate":"2024-03-18"},{"lineNumber":381,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: #553B7E;","lastModifiedDate":"2024-03-18"},{"lineNumber":382,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #EFE9FA;","lastModifiedDate":"2024-03-18"},{"lineNumber":383,"author":{"gitId":"triciiaaa"},"content":"    -fx-padding: 3 10 3 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":384,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":385,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":386,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-18"},{"lineNumber":387,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":388,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":389,"author":{"gitId":"triciiaaa"},"content":".tag3 { /*yellow*/","lastModifiedDate":"2024-03-18"},{"lineNumber":390,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: #7A6D44;","lastModifiedDate":"2024-03-18"},{"lineNumber":391,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #FFF4E4;","lastModifiedDate":"2024-03-18"},{"lineNumber":392,"author":{"gitId":"triciiaaa"},"content":"    -fx-padding: 3 10 3 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":393,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":394,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":395,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-18"},{"lineNumber":396,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":397,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":398,"author":{"gitId":"triciiaaa"},"content":".tag4 { /*red*/","lastModifiedDate":"2024-03-18"},{"lineNumber":399,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: #5A2121;","lastModifiedDate":"2024-03-18"},{"lineNumber":400,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #FFEAEA;","lastModifiedDate":"2024-03-18"},{"lineNumber":401,"author":{"gitId":"triciiaaa"},"content":"    -fx-padding: 3 10 3 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":402,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":403,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":404,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-18"},{"lineNumber":405,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":406,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":407,"author":{"gitId":"triciiaaa"},"content":".tag5 { /*blue*/","lastModifiedDate":"2024-03-18"},{"lineNumber":408,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: #1A5F68;","lastModifiedDate":"2024-03-18"},{"lineNumber":409,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #D8EEF1;","lastModifiedDate":"2024-03-18"},{"lineNumber":410,"author":{"gitId":"triciiaaa"},"content":"    -fx-padding: 3 10 3 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":411,"author":{"gitId":"triciiaaa"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":412,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":415,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":416,"author":{"gitId":"casaarlai"},"content":"#attendances {","lastModifiedDate":"2024-03-16"},{"lineNumber":417,"author":{"gitId":"casaarlai"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-16"},{"lineNumber":418,"author":{"gitId":"casaarlai"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-03-16"},{"lineNumber":419,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":420,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":421,"author":{"gitId":"casaarlai"},"content":"#attendances .label {","lastModifiedDate":"2024-03-16"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-16"},{"lineNumber":423,"author":{"gitId":"casaarlai"},"content":"    -fx-background-color: #3e7ee1;","lastModifiedDate":"2024-03-16"},{"lineNumber":424,"author":{"gitId":"casaarlai"},"content":"    -fx-padding: 3 10 3 10;","lastModifiedDate":"2024-04-04"},{"lineNumber":425,"author":{"gitId":"casaarlai"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-04-04"},{"lineNumber":426,"author":{"gitId":"casaarlai"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-04-04"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-16"},{"lineNumber":428,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":429,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":430,"author":{"gitId":"triciiaaa"},"content":".justify-space-between \u003e Label {","lastModifiedDate":"2024-03-18"},{"lineNumber":431,"author":{"gitId":"triciiaaa"},"content":"    -fx-alignment: baseline-left; /* Align label to the left */","lastModifiedDate":"2024-03-18"},{"lineNumber":432,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":433,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":434,"author":{"gitId":"triciiaaa"},"content":".justify-space-between \u003e FlowPane {","lastModifiedDate":"2024-03-18"},{"lineNumber":435,"author":{"gitId":"triciiaaa"},"content":"    -fx-alignment: baseline-right; /* Align flow pane to the right */","lastModifiedDate":"2024-03-18"},{"lineNumber":436,"author":{"gitId":"triciiaaa"},"content":"    -fx-hgrow: ALWAYS;","lastModifiedDate":"2024-03-18"},{"lineNumber":437,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"casaarlai":26,"triciiaaa":129,"-":282}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"    -fx-background: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"triciiaaa":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"@font-face {","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"    font-family: \"Product Sans\";","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"    src: url(\"../fonts/Product-Sans-Regular.ttf\");","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans\";","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: #1A5F68;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #D8EEF1;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #CCE4E8;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: #A7D3D9;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    -fx-padding: 15 30 15 30;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"#helpMessageContainer \u003e Label {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    -fx-font-family: \"Product Sans\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"casaarlai":5,"triciiaaa":14,"-":14}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"              \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"triciiaaa":1,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"         title\u003d\"BandBook\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    \u003cImage url\u003d\"@/images/bandbook_single_logo.png\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"logoPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"          \u003cImageView fitWidth\u003d\"140\" fitHeight\u003d\"40\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"            \u003cImage url\u003d\"@/images/bandbook_full_logo.png\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"triciiaaa":12,"-":58}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"        \u003cInsets top\u003d\"20\" right\u003d\"20\" bottom\u003d\"20\" left\u003d\"40\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"      \u003cHBox spacing\u003d\"50\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        \u003cVBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"          \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"            \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"              \u003cminWidth\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"              \u003c/minWidth\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"          \u003cVBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"casaarlai"},"content":"            \u003cVBox spacing\u003d\"4\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"                \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"              \u003cHBox spacing\u003d\"6\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"                \u003cImageView fitHeight\u003d\"20\" fitWidth\u003d\"20\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"casaarlai"},"content":"                    \u003cImage url\u003d\"/images/cake.png\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"casaarlai"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"casaarlai"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\" fx:id\u003d\"birthday\" text\u003d\"\\$birthday\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"casaarlai"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"casaarlai"},"content":"              \u003cHBox spacing\u003d\"6\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"casaarlai"},"content":"                \u003cImageView fitHeight\u003d\"20\" fitWidth\u003d\"20\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"casaarlai"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"casaarlai"},"content":"                    \u003cImage url\u003d\"/images/academic-cap.png\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"casaarlai"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"casaarlai"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"casaarlai"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\" fx:id\u003d\"matriculationYear\" text\u003d\"\\$matriculationYear\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"casaarlai"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"casaarlai"},"content":"              \u003cHBox spacing\u003d\"6\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"casaarlai"},"content":"                \u003cImageView fitHeight\u003d\"20\" fitWidth\u003d\"20\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"casaarlai"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"casaarlai"},"content":"                    \u003cImage url\u003d\"/images/musical-note.png\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"casaarlai"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"casaarlai"},"content":"                \u003cLabel styleClass\u003d\"cell_small_label\" fx:id\u003d\"instrument\" text\u003d\"\\$instrument\" /\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"casaarlai"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"          \u003cFlowPane fx:id\u003d\"attendances\" prefWrapLength\u003d\"400\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"casaarlai":31,"triciiaaa":17,"-":33}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"    public void hashCode_symmetric() {","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"        AppParameters x \u003d new AppParameters();","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"        x.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"        AppParameters y \u003d new AppParameters();","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"        y.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":89,"brennalaurentan":11}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(defaultConfig.equals(1));","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"    public void hashCode_symmetric() {","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"        Config x \u003d new Config();","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"        Config y \u003d new Config();","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":27,"brennalaurentan":14}},{"path":"src/test/java/seedu/address/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2019-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"        double newWindowWidth \u003d Math.random();","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"        double newWindowHeight \u003d Math.random();","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"        int newXPosition \u003d (int) (Math.random() * 10);","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"        int newYPosition \u003d (int) (Math.random() * 10);","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"        GuiSettings newGuiSettings \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"                new GuiSettings(newWindowWidth, newWindowHeight, newXPosition, newYPosition);","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(guiSettings.equals(new GuiSettings()));","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(guiSettings.equals(guiSettings));","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(guiSettings.equals(null));","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(guiSettings.equals(1));","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(guiSettings.equals(newGuiSettings));","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"    public void hashCode_symmetric() {","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"        GuiSettings x \u003d new GuiSettings();","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"        GuiSettings y \u003d new GuiSettings();","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"-":16,"brennalaurentan":38}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"brennalaurentan"},"content":"        Version versionOne \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"brennalaurentan"},"content":"        Version versionTwo \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(versionOne.equals(new Version(100, 100, 100, true)));","lastModifiedDate":"2024-04-13"},{"lineNumber":144,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(versionOne.equals(versionOne));","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(versionOne.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(versionOne.equals(1));","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"brennalaurentan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(versionOne.equals(versionTwo));","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":157,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"brennalaurentan"},"content":"    public void compareTo_sameVersion_same() {","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"brennalaurentan"},"content":"        Version versionOne \u003d new Version(100, 100, 100, false);","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"brennalaurentan"},"content":"        Version versionTwo \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(versionOne.compareTo(versionTwo), 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":135,"brennalaurentan":30}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INSTRUMENT_DESC_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRICULATION_YEAR_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"import java.awt.Point;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"    private StorageManager storage;","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"    public void getAddressBook_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"        ReadOnlyAddressBook actualAddressBook \u003d logic.getAddressBook();","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"brennalaurentan"},"content":"        ReadOnlyAddressBook expectedAddressBook \u003d model.getAddressBook();","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(actualAddressBook, expectedAddressBook);","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"brennalaurentan"},"content":"    public void getAddressBookFilePath_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"brennalaurentan"},"content":"        Path actualAddressBookFilePath \u003d logic.getAddressBookFilePath();","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"        Path expectedAddressBookFilePath \u003d model.getAddressBookFilePath();","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(actualAddressBookFilePath, expectedAddressBookFilePath);","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"brennalaurentan"},"content":"    public void getGuiSettings_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"        GuiSettings actualGuiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"brennalaurentan"},"content":"        GuiSettings expectedGuiSettings \u003d model.getGuiSettings();","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(actualGuiSettings, expectedGuiSettings);","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"brennalaurentan"},"content":"    public void setGuiSettings_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"brennalaurentan"},"content":"        double expectedNewWindowWidth \u003d Math.random();","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"brennalaurentan"},"content":"        double expectedNewWindowHeight \u003d Math.random();","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"brennalaurentan"},"content":"        int expectedNewXPosition \u003d (int) (Math.random() * 10);","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"        int expectedNewYPosition \u003d (int) (Math.random() * 10);","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"        GuiSettings expectedNewGuiSettings \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"                new GuiSettings(expectedNewWindowWidth, expectedNewWindowHeight,","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"brennalaurentan"},"content":"                        expectedNewXPosition, expectedNewYPosition);","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"brennalaurentan"},"content":"        logic.setGuiSettings(expectedNewGuiSettings);","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"brennalaurentan"},"content":"        GuiSettings actualGuiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"        double actualWindowWidth \u003d actualGuiSettings.getWindowWidth();","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"        double actualWindowHeight \u003d actualGuiSettings.getWindowHeight();","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"brennalaurentan"},"content":"        Point actualWindowCoordinates \u003d actualGuiSettings.getWindowCoordinates();","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"brennalaurentan"},"content":"        int actualXPosition \u003d (int) actualWindowCoordinates.getX();","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"brennalaurentan"},"content":"        int actualYPosition \u003d (int) actualWindowCoordinates.getY();","lastModifiedDate":"2024-04-12"},{"lineNumber":136,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(actualWindowWidth, expectedNewWindowWidth);","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(actualWindowHeight, expectedNewWindowHeight);","lastModifiedDate":"2024-04-12"},{"lineNumber":139,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(actualXPosition, expectedNewXPosition);","lastModifiedDate":"2024-04-12"},{"lineNumber":140,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(actualYPosition, expectedNewYPosition);","lastModifiedDate":"2024-04-12"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":222,"author":{"gitId":"brennalaurentan"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY + MATRICULATION_YEAR_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"brennalaurentan"},"content":"                + INSTRUMENT_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"triciiaaa":1,"-":172,"brennalaurentan":56}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":203,"brennalaurentan":1}},{"path":"src/test/java/seedu/address/logic/commands/AttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-11"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.testutil.TypicalIndexes;","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"public class AttendanceCommandTest {","lastModifiedDate":"2024-04-11"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"    private static final String VALID_ATTENDANCE \u003d \"2024-02-02\";","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_unfilteredList_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        // ensure that BandBook list has at least one person (first person index is valid)","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(INDEX_FIRST_PERSON.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        // create validAttendanceCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithValidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"        setWithValidIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(VALID_ATTENDANCE);","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand validAttendanceCommand \u003d new AttendanceCommand(setWithValidIndex, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"        Person personToEdit \u003d model.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).addAttendances(VALID_ATTENDANCE).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"        Name editedPersonName \u003d editedPerson.getName();","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cName\u003e editedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"        editedNames.add(editedPersonName);","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(AttendanceCommand.MESSAGE_MARK_ATTENDANCE_SUCCESS, editedNames);","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedModel","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandSuccess(validAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"        // create AttendanceCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithValidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"        setWithValidIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(VALID_ATTENDANCE);","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand validAttendanceComand \u003d new AttendanceCommand(setWithValidIndex, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).addAttendances(VALID_ATTENDANCE).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"        Name editedPersonName \u003d editedPerson.getName();","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cName\u003e editedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"        editedNames.add(editedPersonName);","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(AttendanceCommand.MESSAGE_MARK_ATTENDANCE_SUCCESS, editedNames);","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedModel","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandSuccess(validAttendanceComand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_duplicateAttendanceUnfilteredList_failure() {","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"        // create validAttendanceCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithValidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"        setWithValidIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(VALID_ATTENDANCE);","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand validAttendanceCommand \u003d new AttendanceCommand(setWithValidIndex, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"        // create modelCopy with first person having VALID_ATTENDANCE","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"brennalaurentan"},"content":"        Model modelCopy \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"brennalaurentan"},"content":"        Person personToEdit \u003d modelCopy.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"brennalaurentan"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).withAttendances(VALID_ATTENDANCE).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"brennalaurentan"},"content":"        modelCopy.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"brennalaurentan"},"content":"        Name personToEditName \u003d personToEdit.getName();","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(AttendanceCommand.MESSAGE_DUPLICATE_ATTENDANCE, personToEditName);","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(validAttendanceCommand, modelCopy, expectedMessage);","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_duplicateAttendanceFilteredList_failure() {","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"brennalaurentan"},"content":"        // create validAttendanceCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithValidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"        setWithValidIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(VALID_ATTENDANCE);","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand validAttendanceCommand \u003d new AttendanceCommand(setWithValidIndex, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"        // create modelCopy with first person having VALID_ATTENDANCE","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"        Model modelCopy \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"brennalaurentan"},"content":"        Person personToEdit \u003d modelCopy.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"brennalaurentan"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).withAttendances(VALID_ATTENDANCE).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"brennalaurentan"},"content":"        modelCopy.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"        Name personToEditName \u003d personToEdit.getName();","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(AttendanceCommand.MESSAGE_DUPLICATE_ATTENDANCE, personToEditName);","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(validAttendanceCommand, modelCopy, expectedMessage);","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithInvalidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"brennalaurentan"},"content":"        setWithInvalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(VALID_ATTENDANCE);","lastModifiedDate":"2024-04-12"},{"lineNumber":136,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand invalidAttendanceCommand \u003d new AttendanceCommand(setWithInvalidIndex, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(invalidAttendanceCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":139,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":140,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"brennalaurentan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":143,"author":{"gitId":"brennalaurentan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-12"},{"lineNumber":144,"author":{"gitId":"brennalaurentan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithInvalidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"brennalaurentan"},"content":"        setWithInvalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2024-04-12"},{"lineNumber":148,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(VALID_ATTENDANCE);","lastModifiedDate":"2024-04-12"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand invalidAttendanceCommand \u003d new AttendanceCommand(setWithInvalidIndex, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":150,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(invalidAttendanceCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-12"},{"lineNumber":151,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":152,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":153,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":154,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-11"},{"lineNumber":155,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e indexSetWithFirstPerson \u003d TypicalIndexes.INDEX_FIRST_PERSON_SET;","lastModifiedDate":"2024-04-11"},{"lineNumber":156,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e indexSetWithSecondPerson \u003d TypicalIndexes.INDEX_SECOND_PERSON_SET;","lastModifiedDate":"2024-04-11"},{"lineNumber":157,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(\"2024-02-02\");","lastModifiedDate":"2024-04-11"},{"lineNumber":158,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand addAttendanceToFirstIndexCommand \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":159,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceCommand(indexSetWithFirstPerson, validAttendanceDate);","lastModifiedDate":"2024-04-11"},{"lineNumber":160,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand addAttendanceToSecondIndexCommand \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":161,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceCommand(indexSetWithSecondPerson, validAttendanceDate);","lastModifiedDate":"2024-04-11"},{"lineNumber":162,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":163,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-11"},{"lineNumber":164,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(addAttendanceToFirstIndexCommand.equals(addAttendanceToFirstIndexCommand));","lastModifiedDate":"2024-04-11"},{"lineNumber":165,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":166,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-11"},{"lineNumber":167,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand addAttendanceToFirstIndexCommandCopy \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":168,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceCommand(indexSetWithFirstPerson, validAttendanceDate);","lastModifiedDate":"2024-04-11"},{"lineNumber":169,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(addAttendanceToFirstIndexCommand.equals(addAttendanceToFirstIndexCommandCopy));","lastModifiedDate":"2024-04-11"},{"lineNumber":170,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":171,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-11"},{"lineNumber":172,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(addAttendanceToFirstIndexCommand.equals(1));","lastModifiedDate":"2024-04-11"},{"lineNumber":173,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":174,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-11"},{"lineNumber":175,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(addAttendanceToFirstIndexCommand.equals(null));","lastModifiedDate":"2024-04-11"},{"lineNumber":176,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":177,"author":{"gitId":"brennalaurentan"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-11"},{"lineNumber":178,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(addAttendanceToFirstIndexCommand.equals(addAttendanceToSecondIndexCommand));","lastModifiedDate":"2024-04-11"},{"lineNumber":179,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":180,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"brennalaurentan":180}},{"path":"src/test/java/seedu/address/logic/commands/AttendanceDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.testutil.TypicalIndexes;","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"public class AttendanceDeleteCommandTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"    private static final String VALID_ATTENDANCE_1 \u003d \"2024-02-02\";","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"    private static final String VALID_ATTENDANCE_2 \u003d \"2024-03-03\";","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_unfilteredList_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"        // ensure that BandBook list has at least one person (first person index is valid)","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(INDEX_FIRST_PERSON.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"        // set attendances of person at first index","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        Model modelCopy \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        Person firstPerson \u003d modelCopy.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"        Person editedFirstPerson \u003d new PersonBuilder(firstPerson).withAttendances(VALID_ATTENDANCE_1).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"        modelCopy.setPerson(model.getFilteredPersonList().get(0), editedFirstPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"        // create validAttendanceDeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithValidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"        setWithValidIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDateToDelete \u003d LocalDate.parse(VALID_ATTENDANCE_1);","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand validAttendanceDeleteCommand \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(setWithValidIndex, validAttendanceDateToDelete);","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"        Name editedPersonName \u003d editedFirstPerson.getName();","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cName\u003e editedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"        editedNames.add(editedPersonName);","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(AttendanceDeleteCommand.MESSAGE_UNMARK_ATTENDANCE_SUCCESS, editedNames);","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedModel","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"        Person firstPersonWithNoAttendances \u003d new PersonBuilder(firstPerson).withAttendances().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), firstPersonWithNoAttendances);","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandSuccess(validAttendanceDeleteCommand, modelCopy, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"        // set attendances of person at first index","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"        Model modelCopy \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"        Person firstPerson \u003d modelCopy.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"        Person editedFirstPerson \u003d new PersonBuilder(firstPerson).withAttendances(VALID_ATTENDANCE_1).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"        modelCopy.setPerson(model.getFilteredPersonList().get(0), editedFirstPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"        showPersonAtIndex(modelCopy, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"        // create validAttendanceDeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithValidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"        setWithValidIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDateToDelete \u003d LocalDate.parse(VALID_ATTENDANCE_1);","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand validAttendanceDeleteCommand \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(setWithValidIndex, validAttendanceDateToDelete);","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"        Name editedPersonName \u003d editedFirstPerson.getName();","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cName\u003e editedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"        editedNames.add(editedPersonName);","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(AttendanceDeleteCommand.MESSAGE_UNMARK_ATTENDANCE_SUCCESS, editedNames);","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedModel","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"        Person firstPersonWithNoAttendances \u003d new PersonBuilder(firstPerson).withAttendances().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"brennalaurentan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), firstPersonWithNoAttendances);","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandSuccess(validAttendanceDeleteCommand, modelCopy, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_attendanceNotMarkedUnfilteredList_failure() {","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"brennalaurentan"},"content":"        // ensure that BandBook list has at least one person (first person index is valid)","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(INDEX_FIRST_PERSON.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"brennalaurentan"},"content":"        // set attendances of person at first index","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"brennalaurentan"},"content":"        Model modelCopy \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"        Person firstPerson \u003d modelCopy.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"        Person editedFirstPerson \u003d new PersonBuilder(firstPerson).withAttendances().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"        modelCopy.setPerson(model.getFilteredPersonList().get(0), editedFirstPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"brennalaurentan"},"content":"        // create validAttendanceDeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithValidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"        setWithValidIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDateToDelete \u003d LocalDate.parse(VALID_ATTENDANCE_1);","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand invalidAttendanceDeleteCommand \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(setWithValidIndex, validAttendanceDateToDelete);","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"brennalaurentan"},"content":"        Name personToEditName \u003d editedFirstPerson.getName();","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(AttendanceDeleteCommand.MESSAGE_MISSING_ATTENDANCE, personToEditName);","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(invalidAttendanceDeleteCommand, modelCopy, expectedMessage);","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_attendanceNotMarkedFilteredList_failure() {","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"brennalaurentan"},"content":"        // set attendances of person at first index","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"brennalaurentan"},"content":"        Model modelCopy \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"brennalaurentan"},"content":"        Person firstPerson \u003d modelCopy.getAddressBook().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"brennalaurentan"},"content":"        Person editedFirstPerson \u003d new PersonBuilder(firstPerson).withAttendances().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"        modelCopy.setPerson(model.getFilteredPersonList().get(0), editedFirstPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"brennalaurentan"},"content":"        showPersonAtIndex(modelCopy, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"brennalaurentan"},"content":"        // create validAttendanceDeleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":136,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithValidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"brennalaurentan"},"content":"        setWithValidIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDateToDelete \u003d LocalDate.parse(VALID_ATTENDANCE_1);","lastModifiedDate":"2024-04-12"},{"lineNumber":139,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand invalidAttendanceDeleteCommand \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":140,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(setWithValidIndex, validAttendanceDateToDelete);","lastModifiedDate":"2024-04-12"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":143,"author":{"gitId":"brennalaurentan"},"content":"        Name personToEditName \u003d editedFirstPerson.getName();","lastModifiedDate":"2024-04-12"},{"lineNumber":144,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(AttendanceDeleteCommand.MESSAGE_MISSING_ATTENDANCE, personToEditName);","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(invalidAttendanceDeleteCommand, modelCopy, expectedMessage);","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":148,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":150,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2024-04-12"},{"lineNumber":151,"author":{"gitId":"brennalaurentan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-12"},{"lineNumber":152,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithInvalidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":153,"author":{"gitId":"brennalaurentan"},"content":"        setWithInvalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2024-04-12"},{"lineNumber":154,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(VALID_ATTENDANCE_1);","lastModifiedDate":"2024-04-12"},{"lineNumber":155,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand invalidAttendanceDeleteCommand \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":156,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(setWithInvalidIndex, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":157,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(invalidAttendanceDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-12"},{"lineNumber":158,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":159,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":160,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":161,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-04-12"},{"lineNumber":162,"author":{"gitId":"brennalaurentan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-12"},{"lineNumber":163,"author":{"gitId":"brennalaurentan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-12"},{"lineNumber":164,"author":{"gitId":"brennalaurentan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-04-12"},{"lineNumber":165,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-04-12"},{"lineNumber":166,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e setWithInvalidIndex \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":167,"author":{"gitId":"brennalaurentan"},"content":"        setWithInvalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2024-04-12"},{"lineNumber":168,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(VALID_ATTENDANCE_1);","lastModifiedDate":"2024-04-12"},{"lineNumber":169,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand invalidAttendanceDeleteCommand \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":170,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(setWithInvalidIndex, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":171,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(invalidAttendanceDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-12"},{"lineNumber":172,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":173,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":174,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":175,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-12"},{"lineNumber":176,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e indexSetWithFirstPerson \u003d TypicalIndexes.INDEX_FIRST_PERSON_SET;","lastModifiedDate":"2024-04-12"},{"lineNumber":177,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e indexSetWithSecondPerson \u003d TypicalIndexes.INDEX_SECOND_PERSON_SET;","lastModifiedDate":"2024-04-12"},{"lineNumber":178,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate validAttendanceDate \u003d LocalDate.parse(\"2024-02-02\");","lastModifiedDate":"2024-04-12"},{"lineNumber":179,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":180,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand deleteAttendanceFromFirstIndexCommand \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":181,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(indexSetWithFirstPerson, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":182,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand deleteAttendanceFromSecondIndexCommand \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":183,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(indexSetWithSecondPerson, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":184,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":185,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":186,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(deleteAttendanceFromFirstIndexCommand.equals(deleteAttendanceFromFirstIndexCommand));","lastModifiedDate":"2024-04-12"},{"lineNumber":187,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":188,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":189,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand deleteAttendanceFromFirstIndexCommandCopy \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":190,"author":{"gitId":"brennalaurentan"},"content":"                new AttendanceDeleteCommand(indexSetWithFirstPerson, validAttendanceDate);","lastModifiedDate":"2024-04-12"},{"lineNumber":191,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(deleteAttendanceFromFirstIndexCommand.equals(deleteAttendanceFromFirstIndexCommandCopy));","lastModifiedDate":"2024-04-12"},{"lineNumber":192,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":193,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":194,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(deleteAttendanceFromFirstIndexCommand.equals(1));","lastModifiedDate":"2024-04-12"},{"lineNumber":195,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":196,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":197,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(deleteAttendanceFromFirstIndexCommand.equals(null));","lastModifiedDate":"2024-04-12"},{"lineNumber":198,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":199,"author":{"gitId":"brennalaurentan"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":200,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(deleteAttendanceFromFirstIndexCommand.equals(deleteAttendanceFromSecondIndexCommand));","lastModifiedDate":"2024-04-12"},{"lineNumber":201,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":202,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"brennalaurentan":202}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY_DATE;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"import java.time.Year;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"2000-01-01\";","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"2001-02-02\";","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"    public static final String VALID_INSTRUMENT_AMY \u003d \"Flute\";","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"    public static final String VALID_INSTRUMENT_BOB \u003d \"Clarinet\";","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"    public static final String VALID_MATRICULATION_YEAR_AMY \u003d \"2010\";","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"    public static final String VALID_MATRICULATION_YEAR_BOB \u003d \"2012\";","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"    public static final String VALID_ATTENDANCE_DATE \u003d \"2024-01-05\";","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"9999-99-99\";","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    public static final String DEFAULT_INSTRUMENT \u003d \"None\";","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY_DATE + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY_DATE + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"    public static final String MATRICULATION_YEAR_DESC_AMY \u003d \" \" + PREFIX_MATRICULATION_YEAR","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"            + VALID_MATRICULATION_YEAR_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"    public static final String MATRICULATION_YEAR_DESC_BOB \u003d \" \" + PREFIX_MATRICULATION_YEAR","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"            + VALID_MATRICULATION_YEAR_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    public static final String INSTRUMENT_DESC_AMY \u003d \" \" + PREFIX_INSTRUMENT + VALID_INSTRUMENT_AMY;","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"    public static final String INSTRUMENT_DESC_BOB \u003d \" \" + PREFIX_INSTRUMENT + VALID_INSTRUMENT_BOB;","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"    public static final String ATTENDANCE_DATE_DESC \u003d \" \" + PREFIX_ATTENDANCE + VALID_ATTENDANCE_DATE;","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY_DATE + \"a\"; // wrong format for birthday","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"    public static final String INVALID_MATRICULATION_YEAR_DESC \u003d \" \" + PREFIX_MATRICULATION_YEAR","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"            + Year.now().plusYears(1); // invalid year","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"    public static final String INVALID_INSTRUMENT_DESC \u003d \" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"            + PREFIX_INSTRUMENT + \"Flute*\"; // \u0027*\u0027 not allowed in instrument","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"                .withBirthday(VALID_BIRTHDAY_AMY).withMatriculationYear(VALID_MATRICULATION_YEAR_AMY)","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"brennalaurentan"},"content":"                .withInstrument(VALID_INSTRUMENT_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"brennalaurentan"},"content":"                .withBirthday(VALID_BIRTHDAY_BOB).withMatriculationYear(VALID_MATRICULATION_YEAR_BOB)","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"brennalaurentan"},"content":"                .withInstrument(VALID_INSTRUMENT_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"casaarlai":3,"triciiaaa":8,"-":126,"brennalaurentan":21}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_validMatriculationYearUnfilteredList_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        // set matriculation year of all to 2024","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"        Model modelCopy \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"        List\u003cPerson\u003e personsInModelCopy \u003d modelCopy.getAddressBook().getPersonList();","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        for (Person person : personsInModelCopy) {","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"            Person editedPerson \u003d new PersonBuilder(person).withMatriculationYear(\"2024\").build();","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"            modelCopy.deletePerson(person);","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"            modelCopy.addPerson(editedPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"        List\u003cPerson\u003e personsInExpectedModel \u003d expectedModel.getAddressBook().getPersonList();","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"        for (Person person : personsInExpectedModel) {","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"            Person editedPerson \u003d new PersonBuilder(person).withMatriculationYear(\"2024\").build();","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"            expectedModel.deletePerson(person);","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"            expectedModel.addPerson(editedPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"        // set matriculation year of person at first index to 2023 in modelCopy and expectedModel","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"        Person personToDelete \u003d modelCopy.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"        Person editedPersonToDelete \u003d new PersonBuilder(personToDelete).withMatriculationYear(\"2023\").build();","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"        modelCopy.setPerson(modelCopy.getFilteredPersonList().get(0), editedPersonToDelete);","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"        expectedModel.setPerson(expectedModel.getFilteredPersonList().get(0), editedPersonToDelete);","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"        // delete person at first index in expectedModel","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"        Person personToDeleteFromExpectedModel \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"                expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"        expectedModel.deletePerson(personToDeleteFromExpectedModel);","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"        // create deletedPersonsList containing first person in expectedModel","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"        StringBuilder expectedDeletedPersonsList \u003d new StringBuilder();","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"        expectedDeletedPersonsList.append(\"\\n\");","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"        expectedDeletedPersonsList.append(Messages.format(personToDeleteFromExpectedModel));","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"        // create deleteCommand","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear matriculationYearToDelete \u003d new MatriculationYear(\"2023\");","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"brennalaurentan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(matriculationYearToDelete);","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"        // create expectedMessage","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"                String.format(DeleteCommand.MESSAGE_DELETE_PERSONS_SUCCESS, expectedDeletedPersonsList);","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandSuccess(deleteCommand, modelCopy, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"brennalaurentan"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":121,"brennalaurentan":50}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRICULATION_YEAR_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"        // different birthday -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"        // different matriculation year -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withMatriculationYear(VALID_MATRICULATION_YEAR_BOB)","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"                .build();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"                + editPersonDescriptor.getBirthday().orElse(null) + \", birthday\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"                + editPersonDescriptor.getMatriculationYear().orElse(null) + \", matriculation year\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"                + editPersonDescriptor.getInstrument().orElse(null) + \", instrument\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", attendances\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"                + editPersonDescriptor.getAttendances().orElse(null) + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"casaarlai":2,"triciiaaa":1,"-":70,"brennalaurentan":13}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.InstrumentContainsKeywordsPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"        InstrumentContainsKeywordsPredicate firstInstrumentPredicate \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"                new InstrumentContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        InstrumentContainsKeywordsPredicate secondInstrumentPredicate \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"                new InstrumentContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstNamePredicate, firstInstrumentPredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondNamePredicate, secondInstrumentPredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstNamePredicate, firstInstrumentPredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"        InstrumentContainsKeywordsPredicate instrumentPredicate \u003d prepareInstrumentPredicate(\" \");","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, instrumentPredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.or(instrumentPredicate));","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"    public void execute_multipleNameKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"        InstrumentContainsKeywordsPredicate instrumentPredicate \u003d prepareInstrumentPredicate(\" \");","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, instrumentPredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.or(instrumentPredicate));","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"    public void execute_multipleInstrumentKeywords_multiplePersonsFound() {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"        InstrumentContainsKeywordsPredicate instrumentPredicate \u003d prepareInstrumentPredicate(\"Clarinet Flute\");","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, instrumentPredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.or(instrumentPredicate));","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"        InstrumentContainsKeywordsPredicate instrumentPredicate \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"                new InstrumentContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"        FindCommand findCommand \u003d new FindCommand(namePredicate, instrumentPredicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{namePredicate\u003d\" + namePredicate","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"                + \", instrumentPredicate\u003d\" + instrumentPredicate + \"}\";","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"     * Parses {@code userInput} into a {@code InstrumentContainsKeywordsPredicate}.","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"    private InstrumentContainsKeywordsPredicate prepareInstrumentPredicate(String userInput) {","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"        return new InstrumentContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"triciiaaa":48,"-":74,"brennalaurentan":1}},{"path":"src/test/java/seedu/address/logic/commands/InstrumentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSTRUMENT_AMY;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSTRUMENT_BOB;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.InstrumentCommand.MESSAGE_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"public class InstrumentCommandTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        Index sampleIndexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"        Index sampleIndexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e indexSetWithOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"        indexSetWithOne.add(sampleIndexOne);","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e indexSetWithTwo \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        indexSetWithTwo.add(sampleIndexTwo);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand amyInstrumentCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(indexSetWithOne, new Instrument(VALID_INSTRUMENT_AMY));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand bobInstrumentCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(indexSetWithOne, new Instrument(VALID_INSTRUMENT_BOB));","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(amyInstrumentCommand.equals(amyInstrumentCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand amyInstrumentCommandCopy \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(indexSetWithOne, new Instrument(VALID_INSTRUMENT_AMY));","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(amyInstrumentCommand.equals(amyInstrumentCommandCopy));","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(amyInstrumentCommand.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(amyInstrumentCommand.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"        // different index number -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand amyInstrumentCommandDifferentIndexNum \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(indexSetWithTwo, new Instrument(VALID_INSTRUMENT_AMY));","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(amyInstrumentCommand.equals(amyInstrumentCommandDifferentIndexNum));","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"        // different index base -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"        Index sampleIndexOneDiffBase \u003d Index.fromZeroBased(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e indexSetWithOneUsingZeroBase \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"        indexSetWithOneUsingZeroBase.add(sampleIndexOneDiffBase);","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand amyInstrumentCommandDifferentIndexBase \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(indexSetWithOneUsingZeroBase, new Instrument(VALID_INSTRUMENT_AMY));","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(amyInstrumentCommand.equals(amyInstrumentCommandDifferentIndexBase));","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"        // different instrument -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(amyInstrumentCommand.equals(bobInstrumentCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"     * Create instrument command with valid parameters","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"        Index aliceIndex \u003d Index.fromOneBased(1); // alice\u0027s index in TypicalPersons.java","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"brennalaurentan"},"content":"        Name aliceName \u003d new Name(\"Alice Pauline\");","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e aliceIndexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"        aliceIndexSet.add(aliceIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cName\u003e aliceNameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"        aliceNameSet.add(aliceName);","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand validAliceInstrumentCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(aliceIndexSet, new Instrument(VALID_INSTRUMENT_BOB));","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"brennalaurentan"},"content":"        String aliceSuccessMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, aliceNameSet);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandSuccess(validAliceInstrumentCommand, model, aliceSuccessMessage, model);","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"     * Create instrument command where index is larger than size of list (invalid)","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"brennalaurentan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e invalidIndexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"brennalaurentan"},"content":"        invalidIndexSet.add(outOfBoundIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand invalidInstrumentCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(invalidIndexSet, new Instrument(VALID_INSTRUMENT_AMY));","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(invalidInstrumentCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"brennalaurentan"},"content":"     * Create instrument command which assigns an instrument which is already assigned (invalid because duplicate)","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"    public void execute_duplicateInstrument_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"        Index aliceIndex \u003d Index.fromOneBased(1); // alice\u0027s index in TypicalPersons.java","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"        Person alice \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"brennalaurentan"},"content":"        Name aliceName \u003d alice.getName();","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"brennalaurentan"},"content":"        Instrument aliceInstrument \u003d alice.getInstrument();","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"        String aliceInstrumentStr \u003d aliceInstrument.toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"brennalaurentan"},"content":"        Instrument aliceInstrumentCopy \u003d new Instrument(aliceInstrumentStr);","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cIndex\u003e aliceIndexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"        aliceIndexSet.add(aliceIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand aliceInstrumentCommandSameInstrumentCopyObject \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(aliceIndexSet, aliceInstrumentCopy);","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand aliceInstrumentCommandSameInstrumentSameObject \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentCommand(aliceIndexSet, aliceInstrument);","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"        String aliceFailureMessage \u003d String.format(Messages.MESSAGE_DUPLICATE_INSTRUMENT, aliceName);","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"brennalaurentan"},"content":"        // new instrument object created using same string -\u003e fails as it counts as duplicate","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(aliceInstrumentCommandSameInstrumentCopyObject, model,","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"brennalaurentan"},"content":"                aliceFailureMessage);","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"        // same existing instrument object added to user -\u003e fails as it counts as duplicate","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"        assertCommandFailure(aliceInstrumentCommandSameInstrumentSameObject, model,","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"brennalaurentan"},"content":"                aliceFailureMessage);","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"brennalaurentan":135}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEFAULT_INSTRUMENT;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INSTRUMENT_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INSTRUMENT_DESC_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INSTRUMENT_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MATRICULATION_YEAR_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRICULATION_YEAR_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRICULATION_YEAR_DESC_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY_DATE;","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + MATRICULATION_YEAR_DESC_BOB + INSTRUMENT_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"                        + MATRICULATION_YEAR_DESC_BOB + INSTRUMENT_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"                + BIRTHDAY_DESC_BOB + MATRICULATION_YEAR_DESC_BOB + INSTRUMENT_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"        // multiple birthdays","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, BIRTHDAY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY_DATE));","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"brennalaurentan"},"content":"        // multiple matriculation years","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, MATRICULATION_YEAR_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRICULATION_YEAR));","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"        // multiple instruments","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, INSTRUMENT_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INSTRUMENT));","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"brennalaurentan"},"content":"                        + BIRTHDAY_DESC_AMY + MATRICULATION_YEAR_DESC_AMY + INSTRUMENT_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"brennalaurentan"},"content":"                        PREFIX_BIRTHDAY_DATE, PREFIX_MATRICULATION_YEAR, PREFIX_INSTRUMENT));","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"brennalaurentan"},"content":"        // invalid birthday","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, INVALID_BIRTHDAY_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY_DATE));","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"brennalaurentan"},"content":"        // invalid matriculation year","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, INVALID_MATRICULATION_YEAR_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRICULATION_YEAR));","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"brennalaurentan"},"content":"        // invalid instrument","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, INVALID_INSTRUMENT_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INSTRUMENT));","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"brennalaurentan"},"content":"        // invalid birthday","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_BIRTHDAY_DESC,","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY_DATE));","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"brennalaurentan"},"content":"        // invalid matriculation year","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_MATRICULATION_YEAR_DESC,","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRICULATION_YEAR));","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"brennalaurentan"},"content":"        // invalid instrument","lastModifiedDate":"2024-03-30"},{"lineNumber":185,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_INSTRUMENT_DESC,","lastModifiedDate":"2024-03-30"},{"lineNumber":186,"author":{"gitId":"brennalaurentan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_INSTRUMENT));","lastModifiedDate":"2024-03-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":191,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2024-03-30"},{"lineNumber":193,"author":{"gitId":"brennalaurentan"},"content":"        Person expectedPersonNoTag \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":194,"author":{"gitId":"brennalaurentan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"brennalaurentan"},"content":"                + BIRTHDAY_DESC_AMY + MATRICULATION_YEAR_DESC_AMY + INSTRUMENT_DESC_AMY,","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"brennalaurentan"},"content":"                new AddCommand(expectedPersonNoTag));","lastModifiedDate":"2024-03-30"},{"lineNumber":197,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"brennalaurentan"},"content":"        // zero birthday","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"brennalaurentan"},"content":"        Person expectedPersonNoBirthday \u003d new PersonBuilder(AMY).withBirthday().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"brennalaurentan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":201,"author":{"gitId":"brennalaurentan"},"content":"                + MATRICULATION_YEAR_DESC_AMY + INSTRUMENT_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-30"},{"lineNumber":202,"author":{"gitId":"brennalaurentan"},"content":"                new AddCommand(expectedPersonNoBirthday));","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":204,"author":{"gitId":"brennalaurentan"},"content":"        // zero matriculation year","lastModifiedDate":"2024-03-30"},{"lineNumber":205,"author":{"gitId":"brennalaurentan"},"content":"        Person expectedPersonNoMatriculationYear \u003d new PersonBuilder(AMY).withMatriculationYear().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":206,"author":{"gitId":"brennalaurentan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"brennalaurentan"},"content":"                + BIRTHDAY_DESC_AMY + INSTRUMENT_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-30"},{"lineNumber":208,"author":{"gitId":"brennalaurentan"},"content":"                new AddCommand(expectedPersonNoMatriculationYear));","lastModifiedDate":"2024-03-30"},{"lineNumber":209,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"brennalaurentan"},"content":"        // zero instrument","lastModifiedDate":"2024-03-30"},{"lineNumber":211,"author":{"gitId":"brennalaurentan"},"content":"        Person expectedPersonNoInstrument \u003d new PersonBuilder(AMY).withInstrument(DEFAULT_INSTRUMENT).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"brennalaurentan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"brennalaurentan"},"content":"                + BIRTHDAY_DESC_AMY + MATRICULATION_YEAR_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-30"},{"lineNumber":214,"author":{"gitId":"brennalaurentan"},"content":"                new AddCommand(expectedPersonNoInstrument));","lastModifiedDate":"2024-03-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2024-03-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":260,"author":{"gitId":"brennalaurentan"},"content":"        // invalid birthday","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"brennalaurentan"},"content":"                + INVALID_BIRTHDAY_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":264,"author":{"gitId":"brennalaurentan"},"content":"        // invalid matriculation year","lastModifiedDate":"2024-03-30"},{"lineNumber":265,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":266,"author":{"gitId":"brennalaurentan"},"content":"                + BIRTHDAY_DESC_BOB + INVALID_MATRICULATION_YEAR_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-30"},{"lineNumber":267,"author":{"gitId":"brennalaurentan"},"content":"                MatriculationYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":268,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":269,"author":{"gitId":"brennalaurentan"},"content":"        // invalid instrument","lastModifiedDate":"2024-03-30"},{"lineNumber":270,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":271,"author":{"gitId":"brennalaurentan"},"content":"                + INVALID_INSTRUMENT_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Instrument.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":272,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2024-03-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-30"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-30"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-30"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":188,"brennalaurentan":98}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_DATE;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.logic.commands.AttendanceCommand;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.logic.commands.AttendanceDeleteCommand;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.logic.commands.InstrumentCommand;","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.InstrumentContainsKeywordsPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"                FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"                        + PREFIX_NAME + keywords.stream().collect(Collectors.joining(\" \")) + \" \"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"                        + PREFIX_INSTRUMENT + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"        assertEquals(","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"                new FindCommand(","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"                        new NameContainsKeywordsPredicate(keywords), new InstrumentContainsKeywordsPredicate(keywords)),","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"                command);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"brennalaurentan"},"content":"    public void parseCommand_attendance() throws Exception {","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceCommand command \u003d (AttendanceCommand) parser.parseCommand(","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"brennalaurentan"},"content":"                AttendanceCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"                        + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"                        + PREFIX_ATTENDANCE_DATE + \"2024-02-02\"","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"        );","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(command instanceof AttendanceCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"brennalaurentan"},"content":"    public void parseCommand_attendanceDelete() throws Exception {","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"        AttendanceDeleteCommand command \u003d (AttendanceDeleteCommand) parser.parseCommand(","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"                AttendanceDeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"                + PREFIX_ATTENDANCE_DATE + \"2024-02-02\"","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"brennalaurentan"},"content":"        );","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(command instanceof AttendanceDeleteCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"    public void parseCommand_instrument() throws Exception {","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"        String instrument \u003d \"Tuba\";","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentCommand command \u003d (InstrumentCommand) parser.parseCommand(","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"brennalaurentan"},"content":"                InstrumentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"brennalaurentan"},"content":"                        + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"brennalaurentan"},"content":"                        + PREFIX_INSTRUMENT + instrument);","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(command instanceof InstrumentCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"triciiaaa":10,"-":99,"brennalaurentan":34}},{"path":"src/test/java/seedu/address/logic/parser/AttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SECOND_PERSONS;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.commands.AttendanceCommand;","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"public class AttendanceCommandParserTest {","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    private AttendanceCommandParser parser \u003d new AttendanceCommandParser();","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"    public void parse_validArgs_returnsAttendanceCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"        LocalDate date \u003d LocalDate.parse(\"2024-03-03\");","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"        assertParseSuccess(parser, \"1 2 d/2024-03-03\", new AttendanceCommand(INDEX_FIRST_SECOND_PERSONS,","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"                date));","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    public void parse_invalidIndexArg_throwsParseException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"        assertParseFailure(parser, \"-11 d/2024-03-03\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"                AttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"    public void parse_invalidDateArgs_throwsParseException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"        assertParseFailure(parser, \"1 d/03-03-2024\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"                AttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"casaarlai":36}},{"path":"src/test/java/seedu/address/logic/parser/AttendanceDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SECOND_PERSONS;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.commands.AttendanceDeleteCommand;","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"public class AttendanceDeleteCommandParserTest {","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    private AttendanceDeleteCommandParser parser \u003d new AttendanceDeleteCommandParser();","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"    public void parse_validArgs_returnsAttendanceDeleteCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"        LocalDate date \u003d LocalDate.parse(\"2024-03-03\");","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"        assertParseSuccess(parser, \"1 2 d/2024-03-03\", new AttendanceDeleteCommand(INDEX_FIRST_SECOND_PERSONS,","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"                date));","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    public void parse_invalidIndexArg_throwsParseException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"        assertParseFailure(parser, \"-11 d/2024-03-03\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"                AttendanceDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"    public void parse_invalidDateArgs_throwsParseException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"        assertParseFailure(parser, \"1 d/03-03-2024\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"                AttendanceDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"casaarlai":36}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    public void parse_validIndex_returnsDeleteCommand() {","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"    public void parse_validMatriculationYear_returnsDeleteCommand() {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"        assertParseSuccess(parser, \" my/2024\", new DeleteCommand(new MatriculationYear(\"2024\")));","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        // not index or matriculation year -\u003e invalid","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"        // both index and matriculation year -\u003e invalid","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        assertParseFailure(parser, \"1 my/2000\",","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"casaarlai":8,"-":31,"brennalaurentan":4}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ATTENDANCE_DATE_DESC;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ATTENDANCE_DATE;","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"        assertParseFailure(parser, \"1 x/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"casaarlai"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + ATTENDANCE_DATE_DESC;","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"casaarlai"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withAttendances(VALID_ATTENDANCE_DATE).build();","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"casaarlai":4,"triciiaaa":1,"-":205}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.InstrumentContainsKeywordsPredicate;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice Bob\".split(\"\\\\s+\"))),","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"                        new InstrumentContainsKeywordsPredicate(Arrays.asList(\"\".split(\"\\\\s+\"))));","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"        // assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"triciiaaa":5,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/InstrumentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"casaarlai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SECOND_PERSONS;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"casaarlai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"casaarlai"},"content":"import seedu.address.logic.commands.InstrumentCommand;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"casaarlai"},"content":"public class InstrumentCommandParserTest {","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    private InstrumentCommandParser parser \u003d new InstrumentCommandParser();","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"casaarlai"},"content":"    public void parse_validArgs_returnsInstrumentCommand() {","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"casaarlai"},"content":"        Instrument instrument \u003d new Instrument(\"flute\");","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"casaarlai"},"content":"        assertParseSuccess(parser, \"1 2 i/flute\", new InstrumentCommand(INDEX_FIRST_SECOND_PERSONS,","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"casaarlai"},"content":"                instrument));","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"casaarlai"},"content":"    public void parse_invalidIndexArg_throwsParseException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"casaarlai"},"content":"        assertParseFailure(parser, \"-11 i/flute\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"casaarlai"},"content":"                InstrumentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"casaarlai"},"content":"    public void parse_invalidInstrumentArg_throwsParseException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"casaarlai"},"content":"        assertParseFailure(parser, \"1 i/!!!\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"casaarlai"},"content":"                InstrumentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"casaarlai":36}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"    private static final String INVALID_ATTENDANCE \u003d \"02-02-2024\"; // invalid format","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"    private static final String INVALID_FIND_INSTRUMENT_STRING \u003d \"tu!ba\"; // symbols not allowed","lastModifiedDate":"2024-04-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"    private static final String VALID_ATTENDANCE_1 \u003d \"2023-02-02\";","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"    private static final String VALID_ATTENDANCE_2 \u003d \"2024-03-03\";","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":203,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":204,"author":{"gitId":"brennalaurentan"},"content":"    public void parseAttendance_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-11"},{"lineNumber":205,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAttendance(null));","lastModifiedDate":"2024-04-11"},{"lineNumber":206,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":207,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":208,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":209,"author":{"gitId":"brennalaurentan"},"content":"    public void parseAttendance_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-11"},{"lineNumber":210,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAttendance(INVALID_ATTENDANCE));","lastModifiedDate":"2024-04-11"},{"lineNumber":211,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":212,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":213,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":214,"author":{"gitId":"brennalaurentan"},"content":"    public void parseAttendances_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-11"},{"lineNumber":215,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAttendances(null));","lastModifiedDate":"2024-04-11"},{"lineNumber":216,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":217,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":218,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":219,"author":{"gitId":"brennalaurentan"},"content":"    public void parseAttendances_collectionWithInvalidAttendances_throwsParseException() {","lastModifiedDate":"2024-04-11"},{"lineNumber":220,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAttendances(","lastModifiedDate":"2024-04-11"},{"lineNumber":221,"author":{"gitId":"brennalaurentan"},"content":"                Arrays.asList(VALID_ATTENDANCE_1, INVALID_ATTENDANCE))","lastModifiedDate":"2024-04-11"},{"lineNumber":222,"author":{"gitId":"brennalaurentan"},"content":"        );","lastModifiedDate":"2024-04-11"},{"lineNumber":223,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":224,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":225,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":226,"author":{"gitId":"brennalaurentan"},"content":"    public void parseAttendances_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2024-04-11"},{"lineNumber":227,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2024-04-11"},{"lineNumber":228,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":229,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":230,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":231,"author":{"gitId":"brennalaurentan"},"content":"    public void parseAttendances_collectionWithValidAttendances_returnsAttendanceSet() throws Exception {","lastModifiedDate":"2024-04-11"},{"lineNumber":232,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cAttendance\u003e actualAttendanceSet \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":233,"author":{"gitId":"brennalaurentan"},"content":"                ParserUtil.parseAttendances(Arrays.asList(VALID_ATTENDANCE_1, VALID_ATTENDANCE_2));","lastModifiedDate":"2024-04-11"},{"lineNumber":234,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cAttendance\u003e expectedAttendanceSet \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":235,"author":{"gitId":"brennalaurentan"},"content":"                new HashSet\u003cAttendance\u003e(Arrays.asList(","lastModifiedDate":"2024-04-11"},{"lineNumber":236,"author":{"gitId":"brennalaurentan"},"content":"                        new Attendance(LocalDate.parse(VALID_ATTENDANCE_1)),","lastModifiedDate":"2024-04-11"},{"lineNumber":237,"author":{"gitId":"brennalaurentan"},"content":"                        new Attendance(LocalDate.parse(VALID_ATTENDANCE_2)))","lastModifiedDate":"2024-04-11"},{"lineNumber":238,"author":{"gitId":"brennalaurentan"},"content":"                );","lastModifiedDate":"2024-04-11"},{"lineNumber":239,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":240,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":241,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":242,"author":{"gitId":"brennalaurentan"},"content":"    public void parseFindString_invalidNameString_throwsParseException() {","lastModifiedDate":"2024-04-11"},{"lineNumber":243,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFindString(INVALID_NAME, CliSyntax.PREFIX_NAME));","lastModifiedDate":"2024-04-11"},{"lineNumber":244,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":245,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":246,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-11"},{"lineNumber":247,"author":{"gitId":"brennalaurentan"},"content":"    public void parseFindString_invalidInstrumentString_throwsParseException() {","lastModifiedDate":"2024-04-11"},{"lineNumber":248,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFindString(","lastModifiedDate":"2024-04-11"},{"lineNumber":249,"author":{"gitId":"brennalaurentan"},"content":"                INVALID_FIND_INSTRUMENT_STRING, CliSyntax.PREFIX_INSTRUMENT)","lastModifiedDate":"2024-04-11"},{"lineNumber":250,"author":{"gitId":"brennalaurentan"},"content":"        );","lastModifiedDate":"2024-04-11"},{"lineNumber":251,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":196,"brennalaurentan":56}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"        AddressBook addressBookOne \u003d new AddressBook(getTypicalAddressBook());","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"brennalaurentan"},"content":"        AddressBook addressBookTwo \u003d new AddressBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(addressBookOne.equals(addressBookOne));","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"        AddressBook addressBookOneCopy \u003d new AddressBook(getTypicalAddressBook());","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(addressBookOne.equals(addressBookOneCopy));","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(addressBookOne.equals(1));","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(addressBookOne.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"brennalaurentan"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(addressBookOne.equals(addressBookTwo));","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"    public void hashCode_symmetric() {","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"        AddressBook x \u003d new AddressBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"brennalaurentan"},"content":"        AddressBook y \u003d new AddressBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":108,"brennalaurentan":30}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(userPrefs.equals(userPrefs));","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(userPrefs.equals(1));","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"    public void hashCode_symmetric() {","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        UserPrefs x \u003d new UserPrefs();","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        UserPrefs y \u003d new UserPrefs();","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":21,"brennalaurentan":21}},{"path":"src/test/java/seedu/address/model/attendance/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"public class AttendanceTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate sampleDateOne \u003d LocalDate.parse(\"2024-02-02\");","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"        Attendance attendanceOne \u003d new Attendance(sampleDateOne);","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate sampleDateTwo \u003d LocalDate.parse(\"2024-05-05\");","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"        Attendance attendanceTwo \u003d new Attendance(sampleDateTwo);","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(attendanceOne.equals(new Attendance(LocalDate.parse(\"2024-02-02\"))));","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(attendanceOne.equals(attendanceOne));","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(attendanceOne.equals(null));","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(attendanceOne.equals(\"2023-02-02\"));","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(attendanceOne.equals(attendanceTwo));","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"brennalaurentan":34}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"    public void testHashCode_symmetric() {","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"        Address x \u003d new Address(\"5 Haig Road\");","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"        Address y \u003d new Address(\"5 Haig Road\");","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":56,"brennalaurentan":9}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.model.person.Birthday.DEFAULT_BIRTHDAY;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"public class BirthdayTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"    public void constructor_invalidBirthday_thorwsIllegalArgumentException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"        String invalidBirthday \u003d \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Birthday(invalidBirthday));","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"        // null birthday","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidBirthday(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"        // invalid birthdays","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\"\")); // empty birthday","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\" \")); // spaces only","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\"0000-00-00\")); // is not a valid date","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\"0000-01-01\")); // year is not valid","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\"2000-00-01\")); // month is not valid","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\"2000-01-00\")); // day is not valid","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\"01-01-2000\")); // wrong format (should be yyyy-mm-dd)","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\"1 Jan 2000\")); // wrong format (should be yyyy-mm-dd)","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Birthday.isValidBirthday(\"3000-01-01\")); // date is after today","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        // valid birthdays","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(Birthday.isValidBirthday(\"2000-01-01\")); // correct format and valid date (before today)","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(Birthday.isValidBirthday(\"2024-02-29\")); // valid leap year","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"        Birthday birthday \u003d new Birthday(\"2022-01-01\");","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(birthday.equals(new Birthday(\"2022-01-01\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(birthday.equals(birthday));","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(birthday.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(birthday.equals(\"2022-01-01\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(birthday.equals(new Birthday(\"2004-03-03\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"    public void testHashCode_symmetric() {","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"        Birthday x \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"        Birthday y \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"brennalaurentan":72}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"    public void testHashCode_symmetric() {","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"        Email x \u003d new Email(\"someone@gmail.com\");","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"        Email y \u003d new Email(\"someone@gmail.com\");","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":88,"brennalaurentan":9}},{"path":"src/test/java/seedu/address/model/person/InstrumentContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"public class InstrumentContainsKeywordsPredicateTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"        List\u003cString\u003e keywordsOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"        keywordsOne.add(\"apple\");","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"        List\u003cString\u003e keywordsTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"        keywordsTwo.add(\"banana\");","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentContainsKeywordsPredicate instrumentContainsKeywordsPredicateOne \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentContainsKeywordsPredicate(keywordsOne);","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentContainsKeywordsPredicate instrumentContainsKeywordsPredicateTwo \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentContainsKeywordsPredicate(keywordsTwo);","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(instrumentContainsKeywordsPredicateOne.equals(instrumentContainsKeywordsPredicateOne));","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"        InstrumentContainsKeywordsPredicate instrumentContainsKeywordsPredicateOneCopy \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"                new InstrumentContainsKeywordsPredicate(keywordsOne);","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(instrumentContainsKeywordsPredicateOne.equals(instrumentContainsKeywordsPredicateOneCopy));","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(instrumentContainsKeywordsPredicateOne.equals(1));","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(instrumentContainsKeywordsPredicateOne.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(instrumentContainsKeywordsPredicateOne.equals(instrumentContainsKeywordsPredicateTwo));","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"brennalaurentan":42}},{"path":"src/test/java/seedu/address/model/person/InstrumentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.model.person.Instrument.DEFAULT_INSTRUMENT;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"public class InstrumentTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Instrument(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"    public void constructor_invalidInstrument_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"        String invalidInstrument \u003d \"!!!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Instrument(invalidInstrument));","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"    public void isValidInstrument() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"        // null instrument","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Instrument.isValidInstrument(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"        // invalid instruments","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Instrument.isValidInstrument(\"\")); // empty string","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Instrument.isValidInstrument(\" \")); // spaces only","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Instrument.isValidInstrument(\"!\")); // not alphanumeric","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(Instrument.isValidInstrument(\"Clari_net\")); // contains symbol","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"        // valid instruments","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(Instrument.isValidInstrument(\"Tuba\")); // is alphanumeric","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(Instrument.isValidInstrument(\"Clarinet1\")); // is alphanumeric","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        Instrument instrument \u003d new Instrument(\"Clarinet\");","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(instrument.equals(new Instrument(\"Clarinet\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(instrument.equals(instrument));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(instrument.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(instrument.equals(\"Clarinet\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"        // different valees -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(instrument.equals(new Instrument(\"Tuba\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"    public void testHashCode_symmetric() {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"        Instrument x \u003d new Instrument(DEFAULT_INSTRUMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"        Instrument y \u003d new Instrument(DEFAULT_INSTRUMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"brennalaurentan":69}},{"path":"src/test/java/seedu/address/model/person/MatriculationYearTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.model.person.MatriculationYear.DEFAULT_MATRICULATION_YEAR;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import java.time.Year;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"public class MatriculationYearTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MatriculationYear(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"    public void constructor_invalidBirthday_thorwsIllegalArgumentException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"        String invalidMatriculationYear \u003d \"\";","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MatriculationYear(invalidMatriculationYear));","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"    public void isValidMatriculationYear() {","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"        // null matriculation year","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e MatriculationYear.isValidMatriculationYear(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"        // invalid matriculation years","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(MatriculationYear.isValidMatriculationYear(\"\")); // empty birthday","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(MatriculationYear.isValidMatriculationYear(\" \")); // spaces only","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(MatriculationYear.isValidMatriculationYear(\"-5\")); // negative year not allowed","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(MatriculationYear.isValidMatriculationYear(\"55555\")); // should not be 5 digits","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"        // valid matriculation years","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(MatriculationYear.isValidMatriculationYear(\"2000\")); // correct format and before this year","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(MatriculationYear.isValidMatriculationYear(Year.now().toString())); // valid year","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear matriculationYear \u003d new MatriculationYear(\"2023\");","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"        // same valies -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(matriculationYear.equals(new MatriculationYear(\"2023\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(matriculationYear.equals(matriculationYear));","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(matriculationYear.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(matriculationYear.equals(\"2024\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(matriculationYear.equals(new MatriculationYear(\"2022\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"    public void testHashCode_symmetric() {","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear x \u003d new MatriculationYear(DEFAULT_MATRICULATION_YEAR);","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"        MatriculationYear y \u003d new MatriculationYear(DEFAULT_MATRICULATION_YEAR);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"brennalaurentan":68}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":84,"brennalaurentan":1}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRICULATION_YEAR_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"        // different birthday -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"        // different matriculation year -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"brennalaurentan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMatriculationYear(VALID_MATRICULATION_YEAR_BOB).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"brennalaurentan"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"brennalaurentan"},"content":"                + ALICE.getPhone()","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"                + \", birthday\u003d\" + ALICE.getBirthday() + \", matriculation year\u003d\" + ALICE.getMatriculationYear()","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"                + \", instrument\u003d\" + ALICE.getInstrument() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"                + \", attendances\u003d\" + ALICE.getAttendances() + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"brennalaurentan"},"content":"    public void hasBirthdayInfo() {","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"brennalaurentan"},"content":"        Person personEmptyBirthday \u003d new PersonBuilder().withBirthday().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"        // empty birthday field -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(personEmptyBirthday.hasBirthdayInfo());","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"    public void hasMatriculationYearInfo() {","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"        Person personEmptyMatriculationYear \u003d new PersonBuilder().withMatriculationYear().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"brennalaurentan"},"content":"        // empty matriculation year field -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(personEmptyMatriculationYear.hasMatriculationYearInfo());","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"    public void hasInstrumentInfo() {","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"        Person personEmptyInstrument \u003d new PersonBuilder().withInstrument().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"brennalaurentan"},"content":"        // empty instrument field -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(personEmptyInstrument.hasInstrumentInfo());","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"brennalaurentan"},"content":"    public void testHashCode_symmetric() {","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"brennalaurentan"},"content":"        Person x \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"        Person y \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":97,"brennalaurentan":49}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"    public void testHashCode_symmetric() {","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"        Phone x \u003d new Phone(\"99999999\");","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"        Phone y \u003d new Phone(\"99999999\");","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":60,"brennalaurentan":9}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"brennalaurentan"},"content":"        UniquePersonList x \u003d new UniquePersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"brennalaurentan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(x.equals(\"something\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"brennalaurentan"},"content":"    public void testHashCode_symmetric() {","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"brennalaurentan"},"content":"        UniquePersonList x \u003d new UniquePersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"brennalaurentan"},"content":"        UniquePersonList y \u003d new UniquePersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.equals(y) \u0026\u0026 y.equals(x));","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(x.hashCode() \u003d\u003d y.hashCode());","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"brennalaurentan"},"content":"    public void iterator() {","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"brennalaurentan"},"content":"        UniquePersonList x \u003d new UniquePersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"brennalaurentan"},"content":"        UniquePersonList y \u003d new UniquePersonList();","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"brennalaurentan"},"content":"        Iterator\u003cPerson\u003e xIterator1 \u003d x.iterator();","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"brennalaurentan"},"content":"        Iterator\u003cPerson\u003e xIterator2 \u003d x.iterator();","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"brennalaurentan"},"content":"        assertNotEquals(xIterator1, xIterator2);","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":175,"brennalaurentan":32}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"    private static final String SAMPLE_STRING_1 \u003d \"apple\";","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"    private static final String SAMPLE_STRING_2 \u003d \"banana\";","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        Tag tagOne \u003d new Tag(SAMPLE_STRING_1);","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"        Tag tagTwo \u003d new Tag(SAMPLE_STRING_2);","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(tagOne.equals(tagOne));","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        Tag tagOneCopy \u003d new Tag(SAMPLE_STRING_1);","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(tagOne.equals(tagOneCopy));","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(tagOne.equals(1));","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(tagOne.equals(null));","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(tagOne.equals(tagTwo));","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":26,"brennalaurentan":27}},{"path":"src/test/java/seedu/address/model/util/DateValidatorUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"public class DateValidatorUtilTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"    public void isToday() {","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(DateValidatorUtil.isToday(todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"    public void isBeforeToday() {","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"        LocalDate dayBeforeToday \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(DateValidatorUtil.isBeforeToday(dayBeforeToday));","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"    public void isValidDate_febMoreThan29Days_false() {","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"        String invalidFebDate \u003d \"2024-02-30\"; // no february has more than 29 days","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DateValidatorUtil.isValidDate(invalidFebDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"    public void isValidDate_febDate29OnNonLeapYear_false() {","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"        String invalidLeapYearDate \u003d \"2023-02-29\"; // 2023 is not a leap year, 29 Feb 2023 is invalid","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DateValidatorUtil.isValidDate(invalidLeapYearDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"    public void isValidDate_aprilJuneSeptemberNovemberMoreThan30Days_false() {","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"        String invalidAprilDate \u003d \"2023-04-31\";","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        String invalidJuneDate \u003d \"2023-06-31\";","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        String invalidSeptemberDate \u003d \"2023-09-31\";","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"        String invalidNovemberDate \u003d \"2023-11-31\";","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DateValidatorUtil.isValidDate(invalidAprilDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DateValidatorUtil.isValidDate(invalidJuneDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DateValidatorUtil.isValidDate(invalidSeptemberDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DateValidatorUtil.isValidDate(invalidNovemberDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"    public void isTwentyNineFeb_trueInput_true() {","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"brennalaurentan"},"content":"        String twentyNineFebDate \u003d \"2023-02-29\";","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(DateValidatorUtil.isTwentyNineFeb(twentyNineFebDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"    public void isTwentyNineFeb_falseInput_false() {","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"brennalaurentan"},"content":"        String nonTwentyNineFebDate \u003d \"2023-02-28\";","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DateValidatorUtil.isTwentyNineFeb(nonTwentyNineFebDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"brennalaurentan"},"content":"    public void isValidLeapYear_leapYearInput_true() {","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"        String leapYearInput \u003d \"2024-02-29\";","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"        assertTrue(DateValidatorUtil.isValidLeapYear(leapYearInput));","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"    public void isValidLeapYear_nonLeapYearInput_false() {","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"        String nonLeapYearInput \u003d \"2023-02-29\";","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"        assertFalse(DateValidatorUtil.isValidLeapYear(nonLeapYearInput));","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"brennalaurentan":72}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brennalaurentan"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"brennalaurentan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.model.util.SampleDataUtil.getSamplePersons;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"brennalaurentan"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"brennalaurentan"},"content":"    public void getSamplePersons_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"brennalaurentan"},"content":"        Person[] actualPersonArray \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"brennalaurentan"},"content":"        Person actualFirstPerson \u003d actualPersonArray[0];","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"        // data copied and pasted from SampleDataUtil","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"        Person expectedFirstPerson \u003d new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"                new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"brennalaurentan"},"content":"                new Birthday(\"2000-02-02\"), new MatriculationYear(\"2000\"), new Instrument(\"Flute\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"                SampleDataUtil.getTagSet(\"friends\"), SampleDataUtil.getAttendanceSet());","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"        // verify that first person in both arrays is the same","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(actualFirstPerson, expectedFirstPerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"    public void getSampleAddressBook_success() {","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"        AddressBook sampleAddressBookActual \u003d new AddressBook();","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"brennalaurentan"},"content":"            sampleAddressBookActual.addPerson(samplePerson);","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"        ReadOnlyAddressBook sampleAddressBookExpected \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"brennalaurentan"},"content":"        assertEquals(sampleAddressBookActual, sampleAddressBookExpected);","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"brennalaurentan"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"brennalaurentan":48}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import java.time.Year;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"casaarlai"},"content":"    private static final String INVALID_ATTENDANCE \u003d \"202-01-01\";","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"brennalaurentan"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"24th of April\"; // incorrect format, should be YYYY-MM-DD","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"brennalaurentan"},"content":"    private static final String INVALID_MATRICULATION_YEAR \u003d Year.now().plusYears(1).toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    private static final String INVALID_INSTRUMENT \u003d \"#Flute\";","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"brennalaurentan"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"brennalaurentan"},"content":"    private static final String VALID_MATRICULATION_YEAR \u003d BENSON.getMatriculationYear().toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    private static final String VALID_INSTRUMENT \u003d BENSON.getInstrument().toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"casaarlai"},"content":"    private static final List\u003cJsonAdaptedAttendance\u003e VALID_ATTENDANCES \u003d BENSON.getAttendances().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"casaarlai"},"content":"            .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"casaarlai"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"brennalaurentan"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"brennalaurentan"},"content":"                VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_BIRTHDAY, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"brennalaurentan"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"                VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_BIRTHDAY, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"brennalaurentan"},"content":"                VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_BIRTHDAY, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"brennalaurentan"},"content":"                VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_BIRTHDAY, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"brennalaurentan"},"content":"    public void toModelType_invalidBirthday_throwsIllegalValueException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_BIRTHDAY,","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"        String expectedMessage \u003d Birthday.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"brennalaurentan"},"content":"    public void toModelType_nullBirthday_throwsIllegalValueException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"brennalaurentan"},"content":"                null, VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName());","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"    public void toModelType_invalidMatriculationYear_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"brennalaurentan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"brennalaurentan"},"content":"                        INVALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d MatriculationYear.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"brennalaurentan"},"content":"    public void toModelType_nullMatriculationYear_throwsIllegalValueException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"brennalaurentan"},"content":"                VALID_BIRTHDAY, null, VALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MatriculationYear.class.getSimpleName());","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"    public void toModelType_invalidInstrument_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"triciiaaa"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"triciiaaa"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, INVALID_INSTRUMENT, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"        String expectedMessage \u003d Instrument.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"brennalaurentan"},"content":"    public void toModelType_nullInstrument_throwsIllegalValueException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"brennalaurentan"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"brennalaurentan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, null, VALID_TAGS, VALID_ATTENDANCES);","lastModifiedDate":"2024-04-13"},{"lineNumber":171,"author":{"gitId":"brennalaurentan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Instrument.class.getSimpleName());","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"brennalaurentan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-04-13"},{"lineNumber":173,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"brennalaurentan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, invalidTags, VALID_ATTENDANCES);","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":184,"author":{"gitId":"casaarlai"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"casaarlai"},"content":"    public void toModelType_invalidAttendances_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"casaarlai"},"content":"        List\u003cJsonAdaptedAttendance\u003e invalidAttendances \u003d new ArrayList\u003c\u003e(VALID_ATTENDANCES);","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"casaarlai"},"content":"        invalidAttendances.add(new JsonAdaptedAttendance(INVALID_ATTENDANCE));","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"casaarlai"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"brennalaurentan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_BIRTHDAY,","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"brennalaurentan"},"content":"                        VALID_MATRICULATION_YEAR, VALID_INSTRUMENT, VALID_TAGS, invalidAttendances);","lastModifiedDate":"2024-03-30"},{"lineNumber":191,"author":{"gitId":"casaarlai"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"casaarlai":11,"triciiaaa":13,"-":102,"brennalaurentan":67}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"brennalaurentan"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"brennalaurentan"},"content":"    public void getUserPrefsFilePath() {","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"brennalaurentan"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"brennalaurentan":4}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"brennalaurentan"},"content":"        descriptor.setMatriculationYear(person.getMatriculationYear());","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        descriptor.setInstrument(person.getInstrument());","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"        descriptor.setAttendances(person.getAttendances());","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"     * Sets the {@code Birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"brennalaurentan"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"     * Sets the {@code MatriculationYear} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"    public EditPersonDescriptorBuilder withMatriculationYear(String matriculationYear) {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"brennalaurentan"},"content":"        descriptor.setMatriculationYear(new MatriculationYear(matriculationYear));","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"     * Sets the {@code instrument} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"    public EditPersonDescriptorBuilder withInstrument(String instrument) {","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"        descriptor.setInstrument(new Instrument(instrument));","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"casaarlai"},"content":"     * Parses the {@code attendances} into a {@code Set\u003cAttendance\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"casaarlai"},"content":"     * that we are building.","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"casaarlai"},"content":"    public EditPersonDescriptorBuilder withAttendances(String... attendances) {","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"casaarlai"},"content":"        Set\u003cAttendance\u003e attendanceSet \u003d Stream.of(attendances).map(a -\u003e {","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"casaarlai"},"content":"            if (Attendance.isValidAttendanceDate(a)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"casaarlai"},"content":"                return new Attendance(LocalDate.parse(a));","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"casaarlai"},"content":"            return null;","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"casaarlai"},"content":"        }).collect(Collectors.toSet());","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"casaarlai"},"content":"        descriptor.setAttendances(attendanceSet);","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"casaarlai"},"content":"        return this;","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"casaarlai":18,"triciiaaa":10,"-":87,"brennalaurentan":20}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import seedu.address.model.person.Instrument;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"import seedu.address.model.person.MatriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"brennalaurentan"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d Birthday.DEFAULT_BIRTHDAY;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"brennalaurentan"},"content":"    public static final String DEFAULT_MATRICULATION_YEAR \u003d MatriculationYear.DEFAULT_MATRICULATION_YEAR;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"brennalaurentan"},"content":"    public static final String DEFAULT_INSTRUMENT \u003d Instrument.DEFAULT_INSTRUMENT;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"brennalaurentan"},"content":"    private Birthday birthday;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"brennalaurentan"},"content":"    private MatriculationYear matriculationYear;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"    private Instrument instrument;","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"casaarlai"},"content":"    private Set\u003cAttendance\u003e attendances;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"brennalaurentan"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"        matriculationYear \u003d new MatriculationYear(DEFAULT_MATRICULATION_YEAR);","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"        instrument \u003d new Instrument(DEFAULT_INSTRUMENT);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"casaarlai"},"content":"        attendances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"        matriculationYear \u003d personToCopy.getMatriculationYear();","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"        instrument \u003d personToCopy.getInstrument();","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"casaarlai"},"content":"        attendances \u003d new HashSet\u003c\u003e(personToCopy.getAttendances());","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"brennalaurentan"},"content":"     * Sets the {@code attendances} of the {@code Person} to no attendances.","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"brennalaurentan"},"content":"    public PersonBuilder withAttendances() {","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"brennalaurentan"},"content":"        this.attendances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"casaarlai"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"casaarlai"},"content":"     * Parses the {@code attendances} into a {@code Set\u003cAttendance\u003e} and set it to the {@code Person} that we are","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"casaarlai"},"content":"     * building.","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"casaarlai"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"casaarlai"},"content":"    public PersonBuilder withAttendances(String ... attendances) {","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"casaarlai"},"content":"        this.attendances \u003d SampleDataUtil.getAttendanceSet(attendances);","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"casaarlai"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"casaarlai"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"brennalaurentan"},"content":"     * Parses the {@code attendances} into a {@code Set\u003cAttendance\u003e} and adds it to the existing attendances of the","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"brennalaurentan"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"brennalaurentan"},"content":"    public PersonBuilder addAttendances(String ... attendances) {","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"brennalaurentan"},"content":"        Set\u003cAttendance\u003e attendancesToAdd \u003d SampleDataUtil.getAttendanceSet(attendances);","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"brennalaurentan"},"content":"        this.attendances.addAll(attendancesToAdd);","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":138,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"brennalaurentan"},"content":"     * Sets the {@code Birthday} of the {@code Person} to the default value.","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"brennalaurentan"},"content":"    public PersonBuilder withBirthday() {","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"brennalaurentan"},"content":"        this.birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"brennalaurentan"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"brennalaurentan"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"brennalaurentan"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"brennalaurentan"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"brennalaurentan"},"content":"    public PersonBuilder withMatriculationYear() {","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"brennalaurentan"},"content":"        this.matriculationYear \u003d new MatriculationYear(DEFAULT_MATRICULATION_YEAR);","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"brennalaurentan"},"content":"     * Sets the {@code MatriculationYear} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"brennalaurentan"},"content":"    public PersonBuilder withMatriculationYear(String matriculationYear) {","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"brennalaurentan"},"content":"        this.matriculationYear \u003d new MatriculationYear(matriculationYear);","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"brennalaurentan"},"content":"     * Sets the {@code Instrument} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"brennalaurentan"},"content":"    public PersonBuilder withInstrument() {","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"brennalaurentan"},"content":"        this.instrument \u003d new Instrument(DEFAULT_INSTRUMENT);","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"brennalaurentan"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"brennalaurentan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"triciiaaa"},"content":"     * Sets the {@code Instrument} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"triciiaaa"},"content":"    public PersonBuilder withInstrument(String instrument) {","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"triciiaaa"},"content":"        this.instrument \u003d new Instrument(instrument);","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"triciiaaa"},"content":"        return this;","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"brennalaurentan"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"brennalaurentan"},"content":"     * Builds a Person object.","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"brennalaurentan"},"content":"     * @return the Person object","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"brennalaurentan"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"brennalaurentan"},"content":"        return new Person(name, phone, email, address, birthday, matriculationYear, instrument, tags, attendances);","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"casaarlai":13,"triciiaaa":12,"-":95,"brennalaurentan":74}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY_DATE;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUMENT;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRICULATION_YEAR;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"casaarlai"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"        sb.append(PREFIX_BIRTHDAY_DATE + person.getBirthday().value + \" \");","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"brennalaurentan"},"content":"        sb.append(PREFIX_MATRICULATION_YEAR + person.getMatriculationYear().value + \" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        sb.append(PREFIX_INSTRUMENT + person.getInstrument().value + \" \");","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"casaarlai"},"content":"        person.getAttendances().stream().forEach(","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"casaarlai"},"content":"                s -\u003e sb.append(PREFIX_ATTENDANCE + s.attendanceDate.toString() + \" \")","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"casaarlai"},"content":"        );","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"brennalaurentan"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY_DATE)","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"brennalaurentan"},"content":"                .append(birthday.value).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"brennalaurentan"},"content":"        descriptor.getMatriculationYear().ifPresent(matriculationYear -\u003e sb.append(PREFIX_MATRICULATION_YEAR)","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"brennalaurentan"},"content":"                .append(matriculationYear.value).append(\" \"));","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"        descriptor.getInstrument().ifPresent(instrument -\u003e sb.append(PREFIX_INSTRUMENT)","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"                .append(instrument.value).append(\" \"));","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"casaarlai"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"casaarlai"},"content":"        if (descriptor.getAttendances().isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"casaarlai"},"content":"            Set\u003cAttendance\u003e attendances \u003d descriptor.getAttendances().get();","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"casaarlai"},"content":"            if (attendances.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"casaarlai"},"content":"                sb.append(PREFIX_ATTENDANCE);","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"casaarlai"},"content":"            } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"casaarlai"},"content":"                attendances.forEach(s -\u003e sb.append(PREFIX_ATTENDANCE).append(s.attendanceDate).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"casaarlai"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"casaarlai"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"casaarlai":14,"triciiaaa":4,"-":61,"brennalaurentan":8}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"casaarlai"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"casaarlai"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"brennalaurentan"},"content":"    public static final Set\u003cIndex\u003e INDEX_FIRST_PERSON_SET \u003d Set.of(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"brennalaurentan"},"content":"    public static final Set\u003cIndex\u003e INDEX_SECOND_PERSON_SET \u003d Set.of(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"casaarlai"},"content":"    public static final Set\u003cIndex\u003e INDEX_FIRST_SECOND_PERSONS \u003d Set.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"brennalaurentan"},"content":"    public static final Set\u003cIndex\u003e INDEX_SECOND_THIRD_PERSONS \u003d Set.of(INDEX_SECOND_PERSON, INDEX_THIRD_PERSON);","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"casaarlai":3,"-":12,"brennalaurentan":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSTRUMENT_AMY;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSTRUMENT_BOB;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRICULATION_YEAR_AMY;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"brennalaurentan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRICULATION_YEAR_BOB;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"brennalaurentan"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withBirthday(\"2000-01-01\")","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"brennalaurentan"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\")","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"            .withMatriculationYear(\"2003\").withInstrument(\"Flute\").withTags(\"friends\")","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"casaarlai"},"content":"            .withAttendances(\"2024-01-01\", \"2024-01-10\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"brennalaurentan"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withBirthday(\"2001-02-02\")","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"            .withInstrument(\"Flute\").withTags(\"owesMoney\", \"friends\").withMatriculationYear(\"2005\")","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"casaarlai"},"content":"            .withAttendances(\"2024-01-01\", \"2024-01-10\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"brennalaurentan"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withBirthday(\"2000-03-03\")","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"            .withMatriculationYear(\"0000\").withInstrument(\"Clarinet\").build();","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"brennalaurentan"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withBirthday(\"2000-04-04\")","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"            .withMatriculationYear(\"0000\").withInstrument(\"Clarinet\").withTags(\"friends\").build();","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822245\")","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"brennalaurentan"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withBirthday(\"2000-05-05\")","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"            .withMatriculationYear(\"2005\").withInstrument(\"Saxophone\").build();","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94824275\")","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"brennalaurentan"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withBirthday(\"2000-06-06\")","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"            .withMatriculationYear(\"2007\").withInstrument(\"Saxophone\").build();","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94824425\")","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"brennalaurentan"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withBirthday(\"2000-07-07\")","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"            .withMatriculationYear(\"2010\").withInstrument(\"Saxophone\").build();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824245\")","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821315\")","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"    public static final Person JENNY \u003d new PersonBuilder().withName(\"Jenny Parker\").withPhone(\"82617293\")","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"            .withEmail(\"jenny@example.com\").withAddress(\"farrer road\").withInstrument(\"Flute\").build();","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    public static final Person KEITH \u003d new PersonBuilder().withName(\"Keith Jacobs\").withPhone(\"92817393\")","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"            .withEmail(\"keith@example.com\").withAddress(\"chinatown\").withInstrument(\"Clarinet\").build();","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"brennalaurentan"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"brennalaurentan"},"content":"            .withMatriculationYear(VALID_MATRICULATION_YEAR_AMY).withInstrument(VALID_INSTRUMENT_AMY)","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"brennalaurentan"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"brennalaurentan"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"brennalaurentan"},"content":"            .withMatriculationYear(VALID_MATRICULATION_YEAR_BOB).withInstrument(VALID_INSTRUMENT_BOB)","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"brennalaurentan"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"brennalaurentan"},"content":"    public static final Person AMY_WITHOUT_OPTIONAL_FIELDS \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"brennalaurentan"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"brennalaurentan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"brennalaurentan"},"content":"    public static final Person BOB_WITHOUT_OPTIONAL_FIELDS \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"brennalaurentan"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"casaarlai":2,"triciiaaa":18,"-":59,"brennalaurentan":25}}]
